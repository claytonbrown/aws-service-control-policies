{
    "iam_actions": {
        "actions": {},
        "alexaforbusiness": {
            "actions": {
                "list": {
                    "ListSkills": {
                        "access-level": "list",
                        "actions": "ListSkills",
                        "description": "Lists skills."
                    },
                    "SearchDevices": {
                        "access-level": "list",
                        "actions": "SearchDevices",
                        "description": "Search for devices."
                    },
                    "SearchProfiles": {
                        "access-level": "list",
                        "actions": "SearchProfiles",
                        "description": "Search for profiles."
                    },
                    "SearchRooms": {
                        "access-level": "list",
                        "actions": "SearchRooms",
                        "description": "Search for rooms."
                    },
                    "SearchSkillGroups": {
                        "access-level": "list",
                        "actions": "SearchSkillGroups",
                        "description": "Search for skill groups."
                    },
                    "SearchUsers": {
                        "access-level": "list",
                        "actions": "SearchUsers",
                        "description": "Search for users."
                    }
                },
                "read": {
                    "GetDevice": {
                        "access-level": "read",
                        "actions": "GetDevice",
                        "description": "Get device details.",
                        "resource-types": "device*"
                    },
                    "GetProfile": {
                        "access-level": "read",
                        "actions": "GetProfile",
                        "description": "Gets profile when provided with Profile ARN",
                        "resource-types": "profile*"
                    },
                    "GetRoom": {
                        "access-level": "read",
                        "actions": "GetRoom",
                        "description": "Get room details.",
                        "resource-types": "room*"
                    },
                    "GetRoomSkillParameter": {
                        "access-level": "read",
                        "actions": "GetRoomSkillParameter",
                        "description": "Get an existing parameter that has been set for a skill and room.",
                        "resource-types": "room*"
                    },
                    "GetSkillGroup": {
                        "access-level": "read",
                        "actions": "GetSkillGroup",
                        "description": "Gets skill group details with skill group ARN. Skillgroup ARN must be specified",
                        "resource-types": "skillgroup*"
                    },
                    "ListTags": {
                        "access-level": "read",
                        "actions": "ListTags",
                        "description": "Lists all tags on a resource"
                    },
                    "ResolveRoom": {
                        "access-level": "read",
                        "actions": "ResolveRoom",
                        "description": "Returns resolved room information"
                    }
                },
                "tagging": {
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "description": "Adds metadata tags to a resource."
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "Removes metadata tags from a resource."
                    }
                },
                "write": {
                    "AssociateDeviceWithRoom": {
                        "access-level": "write",
                        "actions": "AssociateDeviceWithRoom",
                        "description": "Associates device with given room",
                        "resource-types": "device*"
                    },
                    "AssociateSkillGroupWithRoom": {
                        "access-level": "write",
                        "actions": "AssociateSkillGroupWithRoom",
                        "description": "Associates the skill group with given room. SkillGroup ARN and Room ARN must be specified.",
                        "resource-types": "room*"
                    },
                    "CreateProfile": {
                        "access-level": "write",
                        "actions": "CreateProfile",
                        "description": "Creates a new profile."
                    },
                    "CreateRoom": {
                        "access-level": "write",
                        "actions": "CreateRoom",
                        "description": "Create room with given details.",
                        "resource-types": "profile*"
                    },
                    "CreateSkillGroup": {
                        "access-level": "write",
                        "actions": "CreateSkillGroup",
                        "description": "Creates a skill group with given name and description."
                    },
                    "CreateUser": {
                        "access-level": "write",
                        "actions": "CreateUser",
                        "description": "Creates a user"
                    },
                    "DeleteProfile": {
                        "access-level": "write",
                        "actions": "DeleteProfile",
                        "description": "Delete profile by profile ARN",
                        "resource-types": "profile*"
                    },
                    "DeleteRoom": {
                        "access-level": "write",
                        "actions": "DeleteRoom",
                        "description": "Delete room.",
                        "resource-types": "room*"
                    },
                    "DeleteRoomSkillParameter": {
                        "access-level": "write",
                        "actions": "DeleteRoomSkillParameter",
                        "description": "Delete a parameter from a skill and room.",
                        "resource-types": "room*"
                    },
                    "DeleteSkillGroup": {
                        "access-level": "write",
                        "actions": "DeleteSkillGroup",
                        "description": "Deletes skill group with skill group ARN. Skillgroup ARN must be specified.",
                        "resource-types": "skillgroup*"
                    },
                    "DeleteUser": {
                        "access-level": "write",
                        "actions": "DeleteUser",
                        "description": "Delete a user",
                        "resource-types": "user*"
                    },
                    "DisassociateDeviceFromRoom": {
                        "access-level": "write",
                        "actions": "DisassociateDeviceFromRoom",
                        "description": "Disassociates device from its current room",
                        "resource-types": "device*"
                    },
                    "DisassociateSkillGroupFromRoom": {
                        "access-level": "write",
                        "actions": "DisassociateSkillGroupFromRoom",
                        "description": "Disassociates the skill group from given room. SkillGroup ARN and Room ARN must be specified.",
                        "resource-types": "room*"
                    },
                    "PutRoomSkillParameter": {
                        "access-level": "write",
                        "actions": "PutRoomSkillParameter",
                        "description": "Put a room specific parameter for a skill.",
                        "resource-types": "room*"
                    },
                    "RevokeInvitation": {
                        "access-level": "write",
                        "actions": "RevokeInvitation",
                        "description": "Revoke an invitation.",
                        "resource-types": "user*"
                    },
                    "SendInvitation": {
                        "access-level": "write",
                        "actions": "SendInvitation",
                        "description": "Send an invitation to a user.",
                        "resource-types": "user*"
                    },
                    "StartDeviceSync": {
                        "access-level": "write",
                        "actions": "StartDeviceSync",
                        "description": "Restore the device and its account to its known, default settings by clearing all information and settings set by its previous users"
                    },
                    "UpdateDevice": {
                        "access-level": "write",
                        "actions": "UpdateDevice",
                        "description": "Updates device name.",
                        "resource-types": "device*"
                    },
                    "UpdateProfile": {
                        "access-level": "write",
                        "actions": "UpdateProfile",
                        "description": "Updates an existing profile.",
                        "resource-types": "profile*"
                    },
                    "UpdateRoom": {
                        "access-level": "write",
                        "actions": "UpdateRoom",
                        "description": "Update room details.",
                        "resource-types": "room*"
                    },
                    "UpdateSkillGroup": {
                        "access-level": "write",
                        "actions": "UpdateSkillGroup",
                        "description": "Updates skill group details with skill group ARN. Skillgroup ARN must be specified.",
                        "resource-types": "skillgroup*"
                    },
                    "room*": {
                        "access-level": "write",
                        "actions": "room*"
                    },
                    "skillgroup*": {
                        "access-level": "write",
                        "actions": "skillgroup*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "device": {
                    "arn": "arn:${Partition}:a4b:${Region}:${Account}:device/${Resource_id}",
                    "resource-types": "device"
                },
                "profile": {
                    "arn": "arn:${Partition}:a4b:${Region}:${Account}:profile/${Resource_id}",
                    "resource-types": "profile"
                },
                "room": {
                    "arn": "arn:${Partition}:a4b:${Region}:${Account}:room/${Resource_id}",
                    "resource-types": "room"
                },
                "skillgroup": {
                    "arn": "arn:${Partition}:a4b:${Region}:${Account}:skill-group/${Resource_id}",
                    "resource-types": "skillgroup"
                },
                "user": {
                    "arn": "arn:${Partition}:a4b:${Region}:${Account}:user/${Resource_id}",
                    "resource-types": "user"
                }
            }
        },
        "amplify": {
            "actions": {
                "list": {
                    "ListApps": {
                        "access-level": "list",
                        "actions": "ListApps",
                        "description": "Lists existing Aemilia Apps."
                    },
                    "ListBranches": {
                        "access-level": "list",
                        "actions": "ListBranches",
                        "description": "Lists branches for an Aemilia App.",
                        "resource-types": "apps*"
                    },
                    "ListDomainAssociations": {
                        "access-level": "list",
                        "actions": "ListDomainAssociations",
                        "description": "List domains with an app",
                        "resource-types": "apps*"
                    },
                    "ListJobs": {
                        "access-level": "list",
                        "actions": "ListJobs",
                        "description": "List Jobs for a branch, part of an Aemilia App.",
                        "resource-types": "branches*"
                    }
                },
                "read": {
                    "GetApp": {
                        "access-level": "read",
                        "actions": "GetApp",
                        "description": "Retrieves an existing Aemilia App by appId.",
                        "resource-types": "apps*"
                    },
                    "GetBranch": {
                        "access-level": "read",
                        "actions": "GetBranch",
                        "description": "Retrieves a branch for an Aemilia App.",
                        "resource-types": "branches*"
                    },
                    "GetDomainAssociation": {
                        "access-level": "read",
                        "actions": "GetDomainAssociation",
                        "description": "Retrieves domain info that corresponds to an appId and domainName.",
                        "resource-types": "domains*"
                    },
                    "GetJob": {
                        "access-level": "read",
                        "actions": "GetJob",
                        "description": "Get a job for a branch, part of an Aemilia App.",
                        "resource-types": "jobs*"
                    }
                },
                "write": {
                    "CreateApp": {
                        "access-level": "write",
                        "actions": "CreateApp",
                        "description": "Creates a new Aemilia App."
                    },
                    "CreateBranch": {
                        "access-level": "write",
                        "actions": "CreateBranch",
                        "description": "Creates a new Branch for an Aemilia App.",
                        "resource-types": "apps*"
                    },
                    "CreateDomainAssociation": {
                        "access-level": "write",
                        "actions": "CreateDomainAssociation",
                        "description": "Create a new DomainAssociation on an App",
                        "resource-types": "apps*"
                    },
                    "DeleteApp": {
                        "access-level": "write",
                        "actions": "DeleteApp",
                        "description": "Delete an existing Aemilia App by appId.",
                        "resource-types": "apps*"
                    },
                    "DeleteBranch": {
                        "access-level": "write",
                        "actions": "DeleteBranch",
                        "description": "Deletes a branch for an Aemilia App.",
                        "resource-types": "branches*"
                    },
                    "DeleteDomainAssociation": {
                        "access-level": "write",
                        "actions": "DeleteDomainAssociation",
                        "description": "Deletes a DomainAssociation.",
                        "resource-types": "domains*"
                    },
                    "DeleteJob": {
                        "access-level": "write",
                        "actions": "DeleteJob",
                        "description": "Delete a job, for an Aemilia branch, part of Aemilia App.",
                        "resource-types": "jobs*"
                    },
                    "StartJob": {
                        "access-level": "write",
                        "actions": "StartJob",
                        "description": "Starts a new job for a branch, part of an Aemilia App.",
                        "resource-types": "jobs*"
                    },
                    "StopJob": {
                        "access-level": "write",
                        "actions": "StopJob",
                        "description": "Stop a job that is in progress, for an Aemilia branch, part of Aemilia App.",
                        "resource-types": "jobs*"
                    },
                    "UpdateApp": {
                        "access-level": "write",
                        "actions": "UpdateApp",
                        "description": "Updates an existing Aemilia App.",
                        "resource-types": "apps*"
                    },
                    "UpdateBranch": {
                        "access-level": "write",
                        "actions": "UpdateBranch",
                        "description": "Updates a branch for an Aemilia App.",
                        "resource-types": "branches*"
                    },
                    "UpdateDomainAssociation": {
                        "access-level": "write",
                        "actions": "UpdateDomainAssociation",
                        "description": "Update a DomainAssociation on an App.",
                        "resource-types": "domains*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "apps": {
                    "arn": "arn:${Partition}:amplify:${Region}:${Account}:apps/${AppId}",
                    "resource-types": "apps"
                },
                "branches": {
                    "arn": "arn:${Partition}:amplify:${Region}:${Account}:apps/${AppId}/branches/${BranchName}",
                    "resource-types": "branches"
                },
                "domains": {
                    "arn": "arn:${Partition}:amplify:${Region}:${Account}:apps/${AppId}/domainss/${DomainName}",
                    "resource-types": "domains"
                },
                "jobs": {
                    "arn": "arn:${Partition}:amplify:${Region}:${Account}:apps/${AppId}/branches/${BranchName}/jobs/${JobId}",
                    "resource-types": "jobs"
                }
            }
        },
        "apigateway": {
            "actions": {
                "write": {
                    "InvalidateCache": {
                        "access-level": "write",
                        "actions": "InvalidateCache",
                        "description": "Used to invalidate API cache upon a client request",
                        "resource-types": "execute-api-general*"
                    },
                    "Invoke": {
                        "access-level": "write",
                        "actions": "Invoke",
                        "description": "Used to invoke an API upon a client request",
                        "resource-types": "execute-api-general*"
                    }
                }
            }
        },
        "applicationautoscaling": {
            "actions": {
                "read": {
                    "DescribeScalableTargets": {
                        "access-level": "read",
                        "actions": "DescribeScalableTargets",
                        "description": "Provides descriptive information for scalable targets with a specified service namespace."
                    },
                    "DescribeScalingActivities": {
                        "access-level": "read",
                        "actions": "DescribeScalingActivities",
                        "description": "Provides descriptive information for scaling activities with a specified service namespace for the previous six weeks."
                    },
                    "DescribeScalingPolicies": {
                        "access-level": "read",
                        "actions": "DescribeScalingPolicies",
                        "description": "Provides descriptive information for scaling policies with a specified service namespace."
                    },
                    "DescribeScheduledActions": {
                        "access-level": "read",
                        "actions": "DescribeScheduledActions",
                        "description": "Provides descriptive information for scheduled actions with a specified service namespace."
                    }
                },
                "write": {
                    "DeleteScalingPolicy": {
                        "access-level": "write",
                        "actions": "DeleteScalingPolicy",
                        "description": "Deletes an Application Auto Scaling scaling policy that was previously created."
                    },
                    "DeleteScheduledAction": {
                        "access-level": "write",
                        "actions": "DeleteScheduledAction",
                        "description": "Deletes an Application Auto Scaling scheduled action that was previously created."
                    },
                    "DeregisterScalableTarget": {
                        "access-level": "write",
                        "actions": "DeregisterScalableTarget",
                        "description": "Deregisters a scalable target that was previously registered."
                    },
                    "PutScalingPolicy": {
                        "access-level": "write",
                        "actions": "PutScalingPolicy",
                        "description": "Creates or updates a policy for an existing Application Auto Scaling scalable target."
                    },
                    "PutScheduledAction": {
                        "access-level": "write",
                        "actions": "PutScheduledAction",
                        "description": "Creates or updates a scheduled action for an existing Application Auto Scaling scalable target."
                    },
                    "RegisterScalableTarget": {
                        "access-level": "write",
                        "actions": "RegisterScalableTarget",
                        "description": "Registers or updates a scalable target. A scalable target is a resource that can be scaled out or in with Application Auto Scaling."
                    }
                }
            }
        },
        "applicationdiscovery": {
            "actions": {
                "list": {
                    "ListConfigurations": {
                        "access-level": "list",
                        "actions": "ListConfigurations",
                        "description": "Retrieves a list of configuration items according to criteria you specify in a filter. The filter criteria identify relationship requirements."
                    },
                    "ListServerNeighbors": {
                        "access-level": "list",
                        "actions": "ListServerNeighbors",
                        "description": "Retrieves a list of servers which are one network hop away from a specified server."
                    }
                },
                "read": {
                    "DescribeAgents": {
                        "access-level": "read",
                        "actions": "DescribeAgents",
                        "description": "Lists agents or the Connector by ID or lists all agents/Connectors associated with your user account if you did not specify an ID."
                    },
                    "DescribeConfigurations": {
                        "access-level": "read",
                        "actions": "DescribeConfigurations",
                        "description": "Retrieves attributes for a list of configuration item IDs. All of the supplied IDs must be for the same asset type (server, application, process, or connection). Output fields are specific to the asset type selected. For example, the output for a server configuration item includes a list of attributes about the server, such as host name, operating system, and number of network cards."
                    },
                    "DescribeExportConfigurations": {
                        "access-level": "read",
                        "actions": "DescribeExportConfigurations",
                        "description": "Retrieves the status of a given export process. You can retrieve status from a maximum of 100 processes."
                    },
                    "DescribeTags": {
                        "access-level": "read",
                        "actions": "DescribeTags",
                        "description": "Retrieves a list of configuration items that are tagged with a specific tag. Or retrieves a list of all tags assigned to a specific configuration item."
                    },
                    "GetDiscoverySummary": {
                        "access-level": "read",
                        "actions": "GetDiscoverySummary",
                        "description": "Retrieves a short summary of discovered assets."
                    }
                },
                "tagging": {
                    "CreateTags": {
                        "access-level": "tagging",
                        "actions": "CreateTags",
                        "description": "Creates one or more tags for configuration items. Tags are metadata that help you categorize IT assets. This API accepts a list of multiple configuration items."
                    },
                    "DeleteTags": {
                        "access-level": "tagging",
                        "actions": "DeleteTags",
                        "description": "Deletes the association between configuration items and one or more tags. This API accepts a list of multiple configuration items."
                    }
                },
                "write": {
                    "AssociateConfigurationItemsToApplication": {
                        "access-level": "write",
                        "actions": "AssociateConfigurationItemsToApplication",
                        "description": "Associates one or more configuration items with an application."
                    },
                    "CreateApplication": {
                        "access-level": "write",
                        "actions": "CreateApplication",
                        "description": "Creates an application with the given name and description."
                    },
                    "DeleteApplications": {
                        "access-level": "write",
                        "actions": "DeleteApplications",
                        "description": "Deletes a list of applications and their associations with configuration items."
                    },
                    "DisassociateConfigurationItemsFromApplication": {
                        "access-level": "write",
                        "actions": "DisassociateConfigurationItemsFromApplication",
                        "description": "Disassociates one or more configuration items from an application."
                    },
                    "ExportConfigurations": {
                        "access-level": "write",
                        "actions": "ExportConfigurations",
                        "description": "Exports all discovered configuration data to an Amazon S3 bucket or an application that enables you to view and evaluate the data. Data includes tags and tag associations, processes, connections, servers, and system performance."
                    },
                    "StartDataCollectionByAgentIds": {
                        "access-level": "write",
                        "actions": "StartDataCollectionByAgentIds",
                        "description": "Instructs the specified agents or Connectors to start collecting data."
                    },
                    "StartExportTask": {
                        "access-level": "write",
                        "actions": "StartExportTask",
                        "description": "Export the configuration data about discovered configuration items and relationships to an S3 bucket in a specified format."
                    },
                    "StopDataCollectionByAgentIds": {
                        "access-level": "write",
                        "actions": "StopDataCollectionByAgentIds",
                        "description": "Instructs the specified agents or Connectors to stop collecting data."
                    },
                    "UpdateApplication": {
                        "access-level": "write",
                        "actions": "UpdateApplication",
                        "description": "Updates metadata about an application."
                    }
                }
            }
        },
        "appstream2.0": {
            "actions": {
                "read": {
                    "DescribeDirectoryConfigs": {
                        "access-level": "read",
                        "actions": "DescribeDirectoryConfigs",
                        "description": "Grants permission to retrieve a list that describes one or more specified Directory Config objects for AppStream 2.0, if the names for these objects are provided. Otherwise, all Directory Config objects in the account are described. This object includes the information required to join streaming instances to an Active Directory domain."
                    },
                    "DescribeFleets": {
                        "access-level": "read",
                        "actions": "DescribeFleets",
                        "description": "Grants permission to retrieve a list that describes one or more specified fleets, if the fleet names are provided. Otherwise, all fleets in the account are described.",
                        "resource-types": "fleet"
                    },
                    "DescribeImageBuilders": {
                        "access-level": "read",
                        "actions": "DescribeImageBuilders",
                        "description": "Grants permission to retrieve a list that describes one or more specified image builders, if the image builder names are provided. Otherwise, all image builders in the account are described.",
                        "resource-types": "image-builder"
                    },
                    "DescribeImagePermissions": {
                        "access-level": "read",
                        "actions": "DescribeImagePermissions",
                        "description": "Grants permission to retrieve a list that describes the permissions for shared AWS account IDs on a private image that you own.",
                        "resource-types": "image*"
                    },
                    "DescribeImages": {
                        "access-level": "read",
                        "actions": "DescribeImages",
                        "description": "Grants permission to retrieve a list that describes one or more specified images, if the image names are provided. Otherwise, all images in the account are described.",
                        "resource-types": "image"
                    },
                    "DescribeSessions": {
                        "access-level": "read",
                        "actions": "DescribeSessions",
                        "description": "Grants permission to retrieve a list that describes the streaming sessions for the specified stack and fleet. If a user ID is provided for the stack and fleet, only the streaming sessions for that user are described."
                    },
                    "DescribeStacks": {
                        "access-level": "read",
                        "actions": "DescribeStacks",
                        "description": "Grants permission to retrieve a list that describes one or more specified stacks, if the stack names are provided. Otherwise, all stacks in the account are described.",
                        "resource-types": "stack"
                    },
                    "DescribeUserStackAssociations": {
                        "access-level": "read",
                        "actions": "DescribeUserStackAssociations",
                        "description": "Grants permission to retrieve a list that describes the UserStackAssociation objects."
                    },
                    "DescribeUsers": {
                        "access-level": "read",
                        "actions": "DescribeUsers",
                        "description": "Grants permission to retrieve a list that describes users in the user pool."
                    },
                    "ListAssociatedFleets": {
                        "access-level": "read",
                        "actions": "ListAssociatedFleets",
                        "description": "Grants permission to retrieve the name of the fleet associated with the specified stack",
                        "resource-types": "stack*"
                    },
                    "ListAssociatedStacks": {
                        "access-level": "read",
                        "actions": "ListAssociatedStacks",
                        "description": "Grants permission to retrieve the name of the stack with which the specified fleet is associated.",
                        "resource-types": "fleet*"
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "condition-keys": [
                            "Grants",
                            "permission",
                            "to",
                            "retrieve",
                            "a",
                            "list",
                            "of",
                            "all",
                            "tags",
                            "for",
                            "the",
                            "specified",
                            "AppStream",
                            "2.0",
                            "resource.",
                            "The",
                            "following",
                            "resources",
                            "can",
                            "be",
                            "tagged:",
                            "Image",
                            "builders,",
                            "images,",
                            "fleets,",
                            "and",
                            "stacks."
                        ]
                    }
                },
                "tagging": {
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "condition-keys": [
                            "Grants",
                            "permission",
                            "to",
                            "add",
                            "or",
                            "overwrite",
                            "one",
                            "or",
                            "more",
                            "tags",
                            "for",
                            "the",
                            "specified",
                            "AppStream",
                            "2.0",
                            "resource.",
                            "The",
                            "following",
                            "resources",
                            "can",
                            "be",
                            "tagged:",
                            "Image",
                            "builders,",
                            "images,",
                            "fleets,",
                            "and",
                            "stacks."
                        ]
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "Grants permission to disassociate one or more tags from the specified AppStream 2.0 resource."
                    }
                },
                "write": {
                    "AssociateFleet": {
                        "access-level": "write",
                        "actions": "AssociateFleet",
                        "description": "Grants permission to associate the specified fleet with the specified stack.",
                        "resource-types": "fleet*"
                    },
                    "BatchAssociateUserStack": {
                        "access-level": "write",
                        "actions": "BatchAssociateUserStack",
                        "description": "Grants permission to associate the specified users with the specified stacks."
                    },
                    "BatchDisassociateUserStack": {
                        "access-level": "write",
                        "actions": "BatchDisassociateUserStack",
                        "description": "Grants permission to disassociate the specified users from the specified stacks."
                    },
                    "CopyImage": {
                        "access-level": "write",
                        "actions": "CopyImage",
                        "description": "Grants permission to copy the specified image within the same region or to a new region within the same AWS account.",
                        "resource-types": "image*"
                    },
                    "CreateDirectoryConfig": {
                        "access-level": "write",
                        "actions": "CreateDirectoryConfig",
                        "description": "Grants permission to create a Directory Config object in AppStream 2.0. This object includes the information required to join streaming instances to an Active Directory domain."
                    },
                    "CreateFleet": {
                        "access-level": "write",
                        "actions": "CreateFleet",
                        "description": "Grants permission to create a fleet. A fleet consists of streaming instances that run a specified image.",
                        "resource-types": "fleet*"
                    },
                    "CreateImageBuilder": {
                        "access-level": "write",
                        "actions": "CreateImageBuilder",
                        "description": "Grants permission to create an image builder. An image builder is a virtual machine that is used to create an image.",
                        "resource-types": "image-builder*"
                    },
                    "CreateImageBuilderStreamingURL": {
                        "access-level": "write",
                        "actions": "CreateImageBuilderStreamingURL",
                        "description": "Grants permission to create a URL to start an image builder streaming session.",
                        "resource-types": "image-builder*"
                    },
                    "CreateStack": {
                        "access-level": "write",
                        "actions": "CreateStack",
                        "description": "Grants permission to create a stack to start streaming applications to users. A stack consists of an associated fleet, user access policies, and storage configurations.",
                        "resource-types": "stack*"
                    },
                    "CreateStreamingURL": {
                        "access-level": "write",
                        "actions": "CreateStreamingURL",
                        "description": "Grants permission to create a temporary URL to start an AppStream 2.0 streaming session for a user. A streaming URL enables application streaming to be tested without user setup.",
                        "resource-types": "fleet*"
                    },
                    "CreateUser": {
                        "access-level": "write",
                        "actions": "CreateUser",
                        "description": "Grants permission to create a new user in the user pool."
                    },
                    "DeleteDirectoryConfig": {
                        "access-level": "write",
                        "actions": "DeleteDirectoryConfig",
                        "description": "Grants permission to delete the specified Directory Config object from AppStream 2.0. This object includes the information required to join streaming instances to an Active Directory domain."
                    },
                    "DeleteFleet": {
                        "access-level": "write",
                        "actions": "DeleteFleet",
                        "description": "Grants permission to delete the specified fleet.",
                        "resource-types": "fleet*"
                    },
                    "DeleteImage": {
                        "access-level": "write",
                        "actions": "DeleteImage",
                        "description": "Grants permission to delete the specified image. An image cannot be deleted when it is in use.",
                        "resource-types": "image*"
                    },
                    "DeleteImageBuilder": {
                        "access-level": "write",
                        "actions": "DeleteImageBuilder",
                        "description": "Grants permission to delete the specified image builder and release capacity.",
                        "resource-types": "image-builder*"
                    },
                    "DeleteImagePermissions": {
                        "access-level": "write",
                        "actions": "DeleteImagePermissions",
                        "description": "Grants permission to delete permissions for the specified private image.",
                        "resource-types": "image*"
                    },
                    "DeleteStack": {
                        "access-level": "write",
                        "actions": "DeleteStack",
                        "description": "Grants permission to delete the specified stack. After the stack is deleted, the application streaming environment provided by the stack is no longer available to users. Also, any reservations made for application streaming sessions for the stack are released.",
                        "resource-types": "stack*"
                    },
                    "DeleteUser": {
                        "access-level": "write",
                        "actions": "DeleteUser",
                        "description": "Grants permission to delete a user from the user pool."
                    },
                    "DisableUser": {
                        "access-level": "write",
                        "actions": "DisableUser",
                        "description": "Grants permission to disable the specified user in the user pool."
                    },
                    "DisassociateFleet": {
                        "access-level": "write",
                        "actions": "DisassociateFleet",
                        "description": "Grants permission to disassociate the specified fleet from the specified stack.",
                        "resource-types": "fleet*"
                    },
                    "EnableUser": {
                        "access-level": "write",
                        "actions": "EnableUser",
                        "description": "Grants permission to enable a user in the user pool."
                    },
                    "ExpireSession": {
                        "access-level": "write",
                        "actions": "ExpireSession",
                        "description": "Grants permission to immediately stop the specified streaming session."
                    },
                    "StartFleet": {
                        "access-level": "write",
                        "actions": "StartFleet",
                        "description": "Grants permission to start the specified fleet.",
                        "resource-types": "fleet*"
                    },
                    "StartImageBuilder": {
                        "access-level": "write",
                        "actions": "StartImageBuilder",
                        "description": "Grants permission to start the specified image builder.",
                        "resource-types": "image-builder*"
                    },
                    "StopFleet": {
                        "access-level": "write",
                        "actions": "StopFleet",
                        "description": "Grants permission to stop the specified fleet.",
                        "resource-types": "fleet*"
                    },
                    "StopImageBuilder": {
                        "access-level": "write",
                        "actions": "StopImageBuilder",
                        "description": "Grants permission to stop the specified image builder.",
                        "resource-types": "image-builder*"
                    },
                    "Stream": {
                        "access-level": "write",
                        "actions": "Stream",
                        "condition-keys": [
                            "appstream:userId"
                        ],
                        "description": "Grants permission to federated users to sign in by using their existing credentials and stream applications from the specified stack.",
                        "resource-types": "stack*"
                    },
                    "UpdateDirectoryConfig": {
                        "access-level": "write",
                        "actions": "UpdateDirectoryConfig",
                        "description": "Grants permission to update the specified Directory Config object in AppStream 2.0. This object includes the information required to join streaming instances to an Active Directory domain."
                    },
                    "UpdateFleet": {
                        "access-level": "write",
                        "actions": "UpdateFleet",
                        "description": "Grants permission to update the specified fleet. All attributes except the fleet name can be updated when the fleet is in the STOPPED state.",
                        "resource-types": "fleet*"
                    },
                    "UpdateImagePermissions": {
                        "access-level": "write",
                        "actions": "UpdateImagePermissions",
                        "description": "Grants permission to add or update permissions for the specified private image.",
                        "resource-types": "image*"
                    },
                    "UpdateStack": {
                        "access-level": "write",
                        "actions": "UpdateStack",
                        "description": "Grants permission to update the specified fields for the specified stack.",
                        "resource-types": "stack*"
                    },
                    "stack*": {
                        "access-level": "write",
                        "actions": "stack*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "fleet": {
                    "arn": "arn:${Partition}:appstream:${Region}:${Account}:fleet/${FleetName}",
                    "resource-types": "fleet"
                },
                "image": {
                    "arn": "arn:${Partition}:appstream:${Region}:${Account}:image/${ImageName}",
                    "resource-types": "image"
                },
                "image-builder": {
                    "arn": "arn:${Partition}:appstream:${Region}:${Account}:image-builder/${ImageBuilderName}",
                    "resource-types": "image-builder"
                },
                "stack": {
                    "arn": "arn:${Partition}:appstream:${Region}:${Account}:stack/${StackName}",
                    "resource-types": "stack"
                }
            }
        },
        "appsync": {
            "actions": {
                "list": {
                    "ListApiKeys": {
                        "access-level": "list",
                        "actions": "ListApiKeys",
                        "description": "Lists the API keys for a given API."
                    },
                    "ListDataSources": {
                        "access-level": "list",
                        "actions": "ListDataSources",
                        "description": "Lists the data sources for a given API."
                    },
                    "ListFunctions": {
                        "access-level": "list",
                        "actions": "ListFunctions",
                        "description": "Lists the functions for a given API."
                    },
                    "ListGraphqlApis": {
                        "access-level": "list",
                        "actions": "ListGraphqlApis",
                        "description": "Lists your GraphQL APIs."
                    },
                    "ListResolvers": {
                        "access-level": "list",
                        "actions": "ListResolvers",
                        "description": "Lists the resolvers for a given API and type."
                    },
                    "ListTypes": {
                        "access-level": "list",
                        "actions": "ListTypes",
                        "description": "Lists the types for a given API."
                    }
                },
                "read": {
                    "GetDataSource": {
                        "access-level": "read",
                        "actions": "GetDataSource",
                        "description": "Retrieves a DataSource object."
                    },
                    "GetFunction": {
                        "access-level": "read",
                        "actions": "GetFunction",
                        "description": "Retrieves a Function object."
                    },
                    "GetGraphqlApi": {
                        "access-level": "read",
                        "actions": "GetGraphqlApi",
                        "description": "Retrieves a GraphqlApi object."
                    },
                    "GetIntrospectionSchema": {
                        "access-level": "read",
                        "actions": "GetIntrospectionSchema",
                        "description": "Retrieves the introspection schema for a GraphQL API."
                    },
                    "GetResolver": {
                        "access-level": "read",
                        "actions": "GetResolver",
                        "description": "Retrieves a Resolver object."
                    },
                    "GetSchemaCreationStatus": {
                        "access-level": "read",
                        "actions": "GetSchemaCreationStatus",
                        "description": "Retrieves the current status of a schema creation operation."
                    },
                    "GetType": {
                        "access-level": "read",
                        "actions": "GetType",
                        "description": "Retrieves a Type object."
                    }
                },
                "write": {
                    "CreateApiKey": {
                        "access-level": "write",
                        "actions": "CreateApiKey",
                        "description": "Creates a unique key that you can distribute to clients who are executing your API."
                    },
                    "CreateDataSource": {
                        "access-level": "write",
                        "actions": "CreateDataSource",
                        "description": "Creates a DataSource object."
                    },
                    "CreateFunction": {
                        "access-level": "write",
                        "actions": "CreateFunction",
                        "description": "Create a new Function object."
                    },
                    "CreateGraphqlApi": {
                        "access-level": "write",
                        "actions": "CreateGraphqlApi",
                        "description": "Creates a GraphqlApi object, which is the top level AppSync resource."
                    },
                    "CreateResolver": {
                        "access-level": "write",
                        "actions": "CreateResolver",
                        "description": "Creates a Resolver object. A resolver converts incoming requests into a format that a data source can understand, and converts the data source\\'s responses into GraphQL."
                    },
                    "CreateType": {
                        "access-level": "write",
                        "actions": "CreateType",
                        "description": "Creates a Type object."
                    },
                    "DeleteApiKey": {
                        "access-level": "write",
                        "actions": "DeleteApiKey",
                        "description": "Deletes an API key."
                    },
                    "DeleteDataSource": {
                        "access-level": "write",
                        "actions": "DeleteDataSource",
                        "description": "Deletes a DataSource object."
                    },
                    "DeleteFunction": {
                        "access-level": "write",
                        "actions": "DeleteFunction",
                        "description": "Deletes a Function object."
                    },
                    "DeleteGraphqlApi": {
                        "access-level": "write",
                        "actions": "DeleteGraphqlApi",
                        "description": "Deletes a GraphqlApi object. This will also clean up every AppSync resource below that API."
                    },
                    "DeleteResolver": {
                        "access-level": "write",
                        "actions": "DeleteResolver",
                        "description": "Deletes a Resolver object."
                    },
                    "DeleteType": {
                        "access-level": "write",
                        "actions": "DeleteType",
                        "description": "Deletes a Type object."
                    },
                    "GraphQL": {
                        "access-level": "write",
                        "actions": "GraphQL",
                        "description": "Sends a GraphQL query to a GraphQL API.",
                        "resource-types": "field*"
                    },
                    "StartSchemaCreation": {
                        "access-level": "write",
                        "actions": "StartSchemaCreation",
                        "description": "Adds a new schema to your GraphQL API. This operation is asynchronous - GetSchemaCreationStatus can show when it has completed."
                    },
                    "UpdateApiKey": {
                        "access-level": "write",
                        "actions": "UpdateApiKey",
                        "description": "Updates an API key for a given API."
                    },
                    "UpdateDataSource": {
                        "access-level": "write",
                        "actions": "UpdateDataSource",
                        "description": "Updates a DataSource object."
                    },
                    "UpdateFunction": {
                        "access-level": "write",
                        "actions": "UpdateFunction",
                        "description": "Updates an existing Function object."
                    },
                    "UpdateGraphqlApi": {
                        "access-level": "write",
                        "actions": "UpdateGraphqlApi",
                        "description": "Updates a GraphqlApi object."
                    },
                    "UpdateResolver": {
                        "access-level": "write",
                        "actions": "UpdateResolver",
                        "description": "Updates a Resolver object."
                    },
                    "UpdateType": {
                        "access-level": "write",
                        "actions": "UpdateType",
                        "description": "Updates a Type object."
                    },
                    "graphqlapi*": {
                        "access-level": "write",
                        "actions": "graphqlapi*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "datasource": {
                    "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}/datasources/${DatasourceName}",
                    "resource-types": "datasource"
                },
                "field": {
                    "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}/types/${TypeName}/fields/${FieldName}",
                    "resource-types": "field"
                },
                "function": {
                    "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}/functions/${FunctionId}",
                    "resource-types": "function"
                },
                "graphqlapi": {
                    "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}",
                    "resource-types": "graphqlapi"
                },
                "type": {
                    "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}/types/${TypeName}",
                    "resource-types": "type"
                }
            }
        },
        "artifact": {
            "actions": {
                "read": {
                    "DownloadAgreement": {
                        "access-level": "read",
                        "actions": "DownloadAgreement",
                        "description": "Grants permission to download an AWS agreement that has not yet been accepted or a customer agreement that has been accepted by the customer account.",
                        "resource-types": "agreement"
                    },
                    "Get": {
                        "access-level": "read",
                        "actions": "Get",
                        "description": "Grants permission to download an AWS compliance report package.",
                        "resource-types": "report-package*"
                    },
                    "customer-agreement": {
                        "access-level": "read",
                        "actions": "customer-agreement"
                    }
                },
                "write": {
                    "AcceptAgreement": {
                        "access-level": "write",
                        "actions": "AcceptAgreement",
                        "description": "Grants permission to accept an AWS agreement that has not yet been accepted by the customer account.",
                        "resource-types": "agreement*"
                    },
                    "TerminateAgreement": {
                        "access-level": "write",
                        "actions": "TerminateAgreement",
                        "description": "Grants permission to terminate a customer agreement that was previously accepted by the customer account.",
                        "resource-types": "customer-agreement*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "agreement": {
                    "arn": "arn:${Partition}:artifact:::agreement/*",
                    "resource-types": "agreement"
                },
                "customer-agreement": {
                    "arn": "arn:${Partition}:artifact::${Account}:customer-agreement/*",
                    "resource-types": "customer-agreement"
                },
                "report-package": {
                    "arn": "arn:${Partition}:artifact:::report-package/*",
                    "resource-types": "report-package"
                }
            }
        },
        "athena": {
            "actions": {
                "list": {
                    "ListNamedQueries": {
                        "access-level": "list",
                        "actions": "ListNamedQueries",
                        "description": "Grants permissions to return a list of named queries in Amazon Athena for the specified AWS account."
                    },
                    "ListQueryExecutions": {
                        "access-level": "list",
                        "actions": "ListQueryExecutions",
                        "description": "Grants permissions to return a list of query executions for the specified AWS account."
                    },
                    "ListWorkGroups": {
                        "access-level": "list",
                        "actions": "ListWorkGroups",
                        "description": "Grants permissions to return a list of workgroups for the specified AWS account."
                    }
                },
                "read": {
                    "BatchGetNamedQuery": {
                        "access-level": "read",
                        "actions": "BatchGetNamedQuery",
                        "description": "Grants permissions to get information about one or more named queries."
                    },
                    "BatchGetQueryExecution": {
                        "access-level": "read",
                        "actions": "BatchGetQueryExecution",
                        "description": "Grants permissions to get information about one or more query executions."
                    },
                    "GetCatalogs": {
                        "access-level": "read",
                        "actions": "GetCatalogs",
                        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to databases and tables."
                    },
                    "GetExecutionEngine": {
                        "access-level": "read",
                        "actions": "GetExecutionEngine",
                        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to the specified database and table."
                    },
                    "GetExecutionEngines": {
                        "access-level": "read",
                        "actions": "GetExecutionEngines",
                        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to databases and tables."
                    },
                    "GetNamedQuery": {
                        "access-level": "read",
                        "actions": "GetNamedQuery",
                        "description": "Grants permissions to get information about the specified named query."
                    },
                    "GetNamespace": {
                        "access-level": "read",
                        "actions": "GetNamespace",
                        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to the specified database and table."
                    },
                    "GetNamespaces": {
                        "access-level": "read",
                        "actions": "GetNamespaces",
                        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to databases and tables."
                    },
                    "GetQueryExecution": {
                        "access-level": "read",
                        "actions": "GetQueryExecution",
                        "description": "Grants permissions to get information about the specified query execution."
                    },
                    "GetQueryExecutions": {
                        "access-level": "read",
                        "actions": "GetQueryExecutions",
                        "description": "Deprecated. Applies only to AWS services and principals that use Athena JDBC driver earlier than 1.1.0. Use ListQueryExecutions otherwise."
                    },
                    "GetQueryResults": {
                        "access-level": "read",
                        "actions": "GetQueryResults",
                        "description": "Grants permissions to get the query results."
                    },
                    "GetQueryResultsStream": {
                        "access-level": "read",
                        "actions": "GetQueryResultsStream",
                        "description": "Grants permissions to get the query results stream."
                    },
                    "GetTable": {
                        "access-level": "read",
                        "actions": "GetTable",
                        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to the specified table."
                    },
                    "GetTables": {
                        "access-level": "read",
                        "actions": "GetTables",
                        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to tables."
                    },
                    "GetWorkGroup": {
                        "access-level": "read",
                        "actions": "GetWorkGroup",
                        "description": "Grants permissions to get a workgroup."
                    }
                },
                "write": {
                    "CancelQueryExecution": {
                        "access-level": "write",
                        "actions": "CancelQueryExecution",
                        "description": "Deprecated. Applies only to AWS services and principals that use Athena JDBC driver earlier than 1.1.0. Use StopQueryExecution otherwise."
                    },
                    "CreateNamedQuery": {
                        "access-level": "write",
                        "actions": "CreateNamedQuery",
                        "description": "Grants permissions to create a named query."
                    },
                    "CreateWorkGroup": {
                        "access-level": "write",
                        "actions": "CreateWorkGroup",
                        "description": "Grants permissions to create a workgroup."
                    },
                    "DeleteNamedQuery": {
                        "access-level": "write",
                        "actions": "DeleteNamedQuery",
                        "description": "Grants permissions to delete a named query specified."
                    },
                    "DeleteWorkGroup": {
                        "access-level": "write",
                        "actions": "DeleteWorkGroup",
                        "description": "Grants permissions to delete a workgroup."
                    },
                    "RunQuery": {
                        "access-level": "write",
                        "actions": "RunQuery",
                        "description": "Deprecated. Applies only to AWS services and principals that use Athena JDBC driver earlier than 1.1.0. Use StartQueryExecution otherwise."
                    },
                    "StartQueryExecution": {
                        "access-level": "write",
                        "actions": "StartQueryExecution",
                        "description": "Grants permissions to start a query execution using an SQL query provided as a string."
                    },
                    "StopQueryExecution": {
                        "access-level": "write",
                        "actions": "StopQueryExecution",
                        "description": "Grants permissions to stop the specified query execution."
                    },
                    "UpdateWorkGroup": {
                        "access-level": "write",
                        "actions": "UpdateWorkGroup",
                        "description": "Grants permissions to update a workgroup."
                    }
                }
            }
        },
        "autoscaling": {
            "actions": {
                "read": {
                    "DescribeScalingPlanResources": {
                        "access-level": "read",
                        "actions": "DescribeScalingPlanResources",
                        "description": "Describes the scalable resources in the specified scaling plan."
                    },
                    "DescribeScalingPlans": {
                        "access-level": "read",
                        "actions": "DescribeScalingPlans",
                        "description": "Describes the specified scaling plans or all of your scaling plans."
                    },
                    "GetScalingPlanResourceForecastData": {
                        "access-level": "read",
                        "actions": "GetScalingPlanResourceForecastData",
                        "description": "Retrieves the forecast data for a scalable resource."
                    }
                },
                "write": {
                    "CreateScalingPlan": {
                        "access-level": "write",
                        "actions": "CreateScalingPlan",
                        "description": "Creates a scaling plan."
                    },
                    "DeleteScalingPlan": {
                        "access-level": "write",
                        "actions": "DeleteScalingPlan",
                        "description": "Deletes the specified scaling plan."
                    },
                    "UpdateScalingPlan": {
                        "access-level": "write",
                        "actions": "UpdateScalingPlan",
                        "description": "Updates a scaling plan."
                    }
                }
            }
        },
        "backup": {
            "actions": {
                "list": {
                    "DescribeBackupJob": {
                        "access-level": "list",
                        "actions": "DescribeBackupJob",
                        "description": "Describes a backup job"
                    },
                    "ListBackupJobs": {
                        "access-level": "list",
                        "actions": "ListBackupJobs",
                        "description": "Lists backup jobs."
                    },
                    "ListBackupPlanTemplates": {
                        "access-level": "list",
                        "actions": "ListBackupPlanTemplates",
                        "description": "Lists backup plan templates provided by AWS Backup."
                    },
                    "ListBackupPlanVersions": {
                        "access-level": "list",
                        "actions": "ListBackupPlanVersions",
                        "description": "Lists backup plan versions."
                    },
                    "ListBackupPlans": {
                        "access-level": "list",
                        "actions": "ListBackupPlans",
                        "description": "Lists backup plans."
                    },
                    "ListBackupSelections": {
                        "access-level": "list",
                        "actions": "ListBackupSelections",
                        "description": "Lists resource assignments for a specific backup plan."
                    },
                    "ListBackupVaults": {
                        "access-level": "list",
                        "actions": "ListBackupVaults",
                        "description": "Lists backup vaults."
                    },
                    "ListProtectedResources": {
                        "access-level": "list",
                        "actions": "ListProtectedResources",
                        "description": "Lists protected resources by AWS Backup."
                    },
                    "ListRecoveryPointsByBackupVault": {
                        "access-level": "list",
                        "actions": "ListRecoveryPointsByBackupVault",
                        "description": "Lists recovery points inside a backup vault.",
                        "resource-types": "backupVault*"
                    },
                    "ListRecoveryPointsByResource": {
                        "access-level": "list",
                        "actions": "ListRecoveryPointsByResource",
                        "description": "Lists recovery points for a resource."
                    },
                    "ListRestoreJobs": {
                        "access-level": "list",
                        "actions": "ListRestoreJobs",
                        "description": "Lists restore jobs.",
                        "resource-types": "backupVault*"
                    },
                    "ListTags": {
                        "access-level": "list",
                        "actions": "ListTags",
                        "description": "Lists tags for a resource."
                    }
                },
                "read": {
                    "DescribeBackupVault": {
                        "access-level": "read",
                        "actions": "DescribeBackupVault",
                        "description": "Creates a new backup vault with the specified name.",
                        "resource-types": "backupVault*"
                    },
                    "DescribeProtectedResource": {
                        "access-level": "read",
                        "actions": "DescribeProtectedResource",
                        "description": "Describes a protected resource."
                    },
                    "DescribeRecoveryPoint": {
                        "access-level": "read",
                        "actions": "DescribeRecoveryPoint",
                        "description": "Describes a recovery point.",
                        "resource-types": "backupVault*"
                    },
                    "DescribeRestoreJob": {
                        "access-level": "read",
                        "actions": "DescribeRestoreJob",
                        "description": "Describes a restore job.",
                        "resource-types": "backupVault*"
                    },
                    "ExportBackupPlanTemplate": {
                        "access-level": "read",
                        "actions": "ExportBackupPlanTemplate",
                        "description": "Exports a backup plan as a JSON."
                    },
                    "GetBackupPlan": {
                        "access-level": "read",
                        "actions": "GetBackupPlan",
                        "description": "Gets a backup plan."
                    },
                    "GetBackupPlanFromJSON": {
                        "access-level": "read",
                        "actions": "GetBackupPlanFromJSON",
                        "description": "Transforms a JSON to a backup plan."
                    },
                    "GetBackupPlanFromTemplate": {
                        "access-level": "read",
                        "actions": "GetBackupPlanFromTemplate",
                        "description": "Transforms a template to a backup plan."
                    },
                    "GetBackupSelection": {
                        "access-level": "read",
                        "actions": "GetBackupSelection",
                        "description": "Gets a backup plan resource assignment.",
                        "resource-types": "backupVault*"
                    },
                    "GetBackupVaultAccessPolicy": {
                        "access-level": "read",
                        "actions": "GetBackupVaultAccessPolicy",
                        "description": "Gets backup vault access policy.",
                        "resource-types": "backupVault*"
                    },
                    "GetBackupVaultNotifications": {
                        "access-level": "read",
                        "actions": "GetBackupVaultNotifications",
                        "description": "Gets backup vault notifications.",
                        "resource-types": "backupVault*"
                    },
                    "GetRecoveryPointRestoreMetadata": {
                        "access-level": "read",
                        "actions": "GetRecoveryPointRestoreMetadata",
                        "description": "Gets recovery point restore metadata.",
                        "resource-types": "backupVault*"
                    },
                    "GetSupportedResourceTypes": {
                        "access-level": "read",
                        "actions": "GetSupportedResourceTypes",
                        "description": "Gets supported resource types."
                    }
                },
                "write": {
                    "CreateBackupPlan": {
                        "access-level": "write",
                        "actions": "CreateBackupPlan",
                        "description": "Creates a new backup plan",
                        "resource-types": "backupVault*"
                    },
                    "CreateBackupSelection": {
                        "access-level": "write",
                        "actions": "CreateBackupSelection",
                        "description": "Creates a new resource assignment in a backup plan."
                    },
                    "CreateBackupVault": {
                        "access-level": "write",
                        "actions": "CreateBackupVault",
                        "description": "Creates a new backup vault.",
                        "resource-types": "backupVault*"
                    },
                    "DeleteBackupPlan": {
                        "access-level": "write",
                        "actions": "DeleteBackupPlan",
                        "description": "Deletes a backup plan."
                    },
                    "DeleteBackupSelection": {
                        "access-level": "write",
                        "actions": "DeleteBackupSelection",
                        "description": "Deletes a resource assignment from a backup plan."
                    },
                    "DeleteBackupVault": {
                        "access-level": "write",
                        "actions": "DeleteBackupVault",
                        "description": "Deletes a backup vault.",
                        "resource-types": "backupVault*"
                    },
                    "DeleteBackupVaultAccessPolicy": {
                        "access-level": "write",
                        "actions": "DeleteBackupVaultAccessPolicy",
                        "description": "Deletes backup vault access policy.",
                        "resource-types": "backupVault*"
                    },
                    "DeleteBackupVaultNotifications": {
                        "access-level": "write",
                        "actions": "DeleteBackupVaultNotifications",
                        "description": "Remove notifications from backup vault.",
                        "resource-types": "backupVault*"
                    },
                    "DeleteRecoveryPoint": {
                        "access-level": "write",
                        "actions": "DeleteRecoveryPoint",
                        "description": "Deletes a recovery point from a backup vault.",
                        "resource-types": "backupVault*"
                    },
                    "PutBackupVaultAccessPolicy": {
                        "access-level": "write",
                        "actions": "PutBackupVaultAccessPolicy",
                        "description": "Adds an access policy to the backup vault.",
                        "resource-types": "backupVault*"
                    },
                    "PutBackupVaultNotifications": {
                        "access-level": "write",
                        "actions": "PutBackupVaultNotifications",
                        "description": "Adds an SNS topic to the backup vault.",
                        "resource-types": "backupVault*"
                    },
                    "StartBackupJob": {
                        "access-level": "write",
                        "actions": "StartBackupJob",
                        "description": "Starts a new backup job.",
                        "resource-types": "backupVault*"
                    },
                    "StartRestoreJob": {
                        "access-level": "write",
                        "actions": "StartRestoreJob",
                        "description": "Starts a new restore job.",
                        "resource-types": "backupVault*"
                    },
                    "StopBackupJob": {
                        "access-level": "write",
                        "actions": "StopBackupJob",
                        "description": "Stops a backup job.",
                        "resource-types": "backupVault*"
                    },
                    "TagResource": {
                        "access-level": "write",
                        "actions": "TagResource",
                        "description": "Tags a resource."
                    },
                    "UntagResource": {
                        "access-level": "write",
                        "actions": "UntagResource",
                        "description": "Untags a resource."
                    },
                    "UpdateBackupPlan": {
                        "access-level": "write",
                        "actions": "UpdateBackupPlan",
                        "description": "Updates a backup plan."
                    },
                    "UpdateRecoveryPointLifecycle": {
                        "access-level": "write",
                        "actions": "UpdateRecoveryPointLifecycle",
                        "description": "Updates the lifecycle of the recovery point.",
                        "resource-types": "backupVault*"
                    }
                }
            }
        },
        "batch": {
            "actions": {
                "list": {
                    "ListJobs": {
                        "access-level": "list",
                        "actions": "ListJobs",
                        "description": "Returns a list of task jobs for a specified job queue."
                    }
                },
                "read": {
                    "DescribeComputeEnvironments": {
                        "access-level": "read",
                        "actions": "DescribeComputeEnvironments",
                        "description": "Describes one or more of your compute environments."
                    },
                    "DescribeJobDefinitions": {
                        "access-level": "read",
                        "actions": "DescribeJobDefinitions",
                        "description": "Describes a list of job definitions."
                    },
                    "DescribeJobQueues": {
                        "access-level": "read",
                        "actions": "DescribeJobQueues",
                        "description": "Describes one or more of your job queues."
                    },
                    "DescribeJobs": {
                        "access-level": "read",
                        "actions": "DescribeJobs",
                        "description": "Describes a list of AWS Batch jobs."
                    }
                },
                "write": {
                    "CancelJob": {
                        "access-level": "write",
                        "actions": "CancelJob",
                        "description": "Cancels jobs in an AWS Batch job queue."
                    },
                    "CreateComputeEnvironment": {
                        "access-level": "write",
                        "actions": "CreateComputeEnvironment",
                        "description": "Creates an AWS Batch compute environment."
                    },
                    "CreateJobQueue": {
                        "access-level": "write",
                        "actions": "CreateJobQueue",
                        "description": "Creates an AWS Batch job queue."
                    },
                    "DeleteComputeEnvironment": {
                        "access-level": "write",
                        "actions": "DeleteComputeEnvironment",
                        "description": "Deletes an AWS Batch compute environment."
                    },
                    "DeleteJobQueue": {
                        "access-level": "write",
                        "actions": "DeleteJobQueue",
                        "description": "Deletes the specified job queue."
                    },
                    "DeregisterJobDefinition": {
                        "access-level": "write",
                        "actions": "DeregisterJobDefinition",
                        "description": "Deregisters an AWS Batch job definition.",
                        "resource-types": "job-definition*"
                    },
                    "RegisterJobDefinition": {
                        "access-level": "write",
                        "actions": "RegisterJobDefinition",
                        "condition-keys": [
                            "batch:User",
                            "batch:Privileged",
                            "batch:Image"
                        ],
                        "description": "Registers an AWS Batch job definition.",
                        "resource-types": "job-definition*"
                    },
                    "SubmitJob": {
                        "access-level": "write",
                        "actions": "SubmitJob",
                        "description": "Submits an AWS Batch job from a job definition.",
                        "resource-types": "job-definition*"
                    },
                    "TerminateJob": {
                        "access-level": "write",
                        "actions": "TerminateJob",
                        "description": "Terminates jobs in a job queue."
                    },
                    "UpdateComputeEnvironment": {
                        "access-level": "write",
                        "actions": "UpdateComputeEnvironment",
                        "description": "Updates an AWS Batch compute environment."
                    },
                    "UpdateJobQueue": {
                        "access-level": "write",
                        "actions": "UpdateJobQueue",
                        "description": "Updates a job queue."
                    },
                    "job-queue*": {
                        "access-level": "write",
                        "actions": "job-queue*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "job-definition": {
                    "arn": "arn:${Partition}:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}",
                    "resource-types": "job-definition"
                },
                "job-queue": {
                    "arn": "arn:${Partition}:batch:${Region}:${Account}:job-queue/${JobQueueName}",
                    "resource-types": "job-queue"
                }
            }
        },
        "billing": {
            "actions": {
                "read": {
                    "ViewAccount": {
                        "access-level": "read",
                        "actions": "ViewAccount",
                        "description": "Allow or deny IAM users permission to view account settings."
                    },
                    "ViewBilling": {
                        "access-level": "read",
                        "actions": "ViewBilling",
                        "description": "Allow or deny IAM users permission to view billing pages in the console."
                    },
                    "ViewPaymentMethods": {
                        "access-level": "read",
                        "actions": "ViewPaymentMethods",
                        "description": "Allow or deny IAM users permission to view payment methods."
                    },
                    "ViewUsage": {
                        "access-level": "read",
                        "actions": "ViewUsage",
                        "description": "Allow or deny IAM users permission to view AWS usage reports."
                    }
                },
                "write": {
                    "ModifyAccount": {
                        "access-level": "write",
                        "actions": "ModifyAccount",
                        "description": "Allow or deny IAM users permission to modify Account Settings."
                    },
                    "ModifyBilling": {
                        "access-level": "write",
                        "actions": "ModifyBilling",
                        "description": "Allow or deny IAM users permission to modify billing settings."
                    },
                    "ModifyPaymentMethods": {
                        "access-level": "write",
                        "actions": "ModifyPaymentMethods",
                        "description": "Allow or deny IAM users permission to modify payment methods."
                    }
                }
            }
        },
        "budgetservice": {
            "actions": {
                "read": {
                    "ViewBudget": {
                        "access-level": "read",
                        "actions": "ViewBudget",
                        "description": "View budgets and budget details",
                        "resource-types": "budget*"
                    }
                },
                "write": {
                    "ModifyBudget": {
                        "access-level": "write",
                        "actions": "ModifyBudget",
                        "description": "Modify budgets and budget details",
                        "resource-types": "budget*"
                    }
                }
            }
        },
        "certificatemanager": {
            "actions": {
                "list": {
                    "ListCertificates": {
                        "access-level": "list",
                        "actions": "ListCertificates",
                        "description": "Retrieves a list of the certificate ARNs and the domain name for each ARN."
                    }
                },
                "read": {
                    "DescribeCertificate": {
                        "access-level": "read",
                        "actions": "DescribeCertificate",
                        "description": "Returns a list of the fields contained in the specified certificate.",
                        "resource-types": "certificate*"
                    },
                    "ExportCertificate": {
                        "access-level": "read",
                        "actions": "ExportCertificate",
                        "description": "Exports a private certificate issued by a private certificate authority (CA) for use anywhere.",
                        "resource-types": "certificate*"
                    },
                    "GetCertificate": {
                        "access-level": "read",
                        "actions": "GetCertificate",
                        "description": "Retrieves a certificate and certificate chain for the certificate specified by an ARN.",
                        "resource-types": "certificate*"
                    },
                    "ListTagsForCertificate": {
                        "access-level": "read",
                        "actions": "ListTagsForCertificate",
                        "description": "Lists the tags that have been applied to the certificate."
                    }
                },
                "tagging": {
                    "AddTagsToCertificate": {
                        "access-level": "tagging",
                        "actions": "AddTagsToCertificate",
                        "description": "Adds one or more tags to a certificate.",
                        "resource-types": "certificate*"
                    },
                    "RemoveTagsFromCertificate": {
                        "access-level": "tagging",
                        "actions": "RemoveTagsFromCertificate",
                        "description": "Remove one or more tags from a certificate. A tag consists of a key-value pair",
                        "resource-types": "certificate*"
                    }
                },
                "write": {
                    "DeleteCertificate": {
                        "access-level": "write",
                        "actions": "DeleteCertificate",
                        "description": "Deletes a certificate and its associated private key.",
                        "resource-types": "certificate*"
                    },
                    "ImportCertificate": {
                        "access-level": "write",
                        "actions": "ImportCertificate",
                        "description": "Imports a 3rd party SSL/TLS certificate into AWS Certificate Manager (ACM).",
                        "resource-types": "certificate*"
                    },
                    "RequestCertificate": {
                        "access-level": "write",
                        "actions": "RequestCertificate",
                        "description": "Requests a public or private certificate."
                    },
                    "ResendValidationEmail": {
                        "access-level": "write",
                        "actions": "ResendValidationEmail",
                        "description": "Resends an email to request domain ownership validation.",
                        "resource-types": "certificate*"
                    },
                    "UpdateCertificateOptions": {
                        "access-level": "write",
                        "actions": "UpdateCertificateOptions",
                        "description": "Updates a certificate. Use to specify whether to opt in to or out of certificate transparency logging.",
                        "resource-types": "certificate*"
                    }
                }
            }
        },
        "certificatemanagerprivatecertificateauthority": {
            "actions": {
                "list": {
                    "ListCertificateAuthorities": {
                        "access-level": "list",
                        "actions": "ListCertificateAuthorities",
                        "description": "Retrieves a list of the ACM Private CA certificate authority ARNs, and a summary of the status of each CA in the calling account."
                    }
                },
                "read": {
                    "DescribeCertificateAuthority": {
                        "access-level": "read",
                        "actions": "DescribeCertificateAuthority",
                        "description": "Returns a list of the configuration and status fields contained in the specified ACM Private CA.",
                        "resource-types": "certificate-authority*"
                    },
                    "DescribeCertificateAuthorityAuditReport": {
                        "access-level": "read",
                        "actions": "DescribeCertificateAuthorityAuditReport",
                        "description": "Returns the status and information about an ACM Private CA audit report.",
                        "resource-types": "certificate-authority*"
                    },
                    "GetCertificate": {
                        "access-level": "read",
                        "actions": "GetCertificate",
                        "description": "Retrieves an ACM Private CA certificate and certificate chain for the certificate authority specified by an ARN.",
                        "resource-types": "certificate-authority*"
                    },
                    "GetCertificateAuthorityCertificate": {
                        "access-level": "read",
                        "actions": "GetCertificateAuthorityCertificate",
                        "description": "Retrieves an ACM Private CA certificate and certificate chain for the certificate authority specified by an ARN.",
                        "resource-types": "certificate-authority*"
                    },
                    "GetCertificateAuthorityCsr": {
                        "access-level": "read",
                        "actions": "GetCertificateAuthorityCsr",
                        "description": "Retrieves an ACM Private CA certificate signing request (CSR) for the certificate-authority specified by an ARN.",
                        "resource-types": "certificate-authority*"
                    },
                    "ListTags": {
                        "access-level": "read",
                        "actions": "ListTags",
                        "description": "Lists the tags that have been applied to the ACM Private CA certificate authority.",
                        "resource-types": "certificate-authority*"
                    }
                },
                "tagging": {
                    "TagCertificateAuthority": {
                        "access-level": "tagging",
                        "actions": "TagCertificateAuthority",
                        "description": "Adds one or more tags to an ACM Private CA.",
                        "resource-types": "certificate-authority*"
                    },
                    "UntagCertificateAuthority": {
                        "access-level": "tagging",
                        "actions": "UntagCertificateAuthority",
                        "description": "Remove one or more tags from an ACM Private CA.",
                        "resource-types": "certificate-authority*"
                    }
                },
                "write": {
                    "CreateCertificateAuthority": {
                        "access-level": "write",
                        "actions": "CreateCertificateAuthority",
                        "description": "Creates an ACM Private CA and its associated private key and configuration."
                    },
                    "CreateCertificateAuthorityAuditReport": {
                        "access-level": "write",
                        "actions": "CreateCertificateAuthorityAuditReport",
                        "description": "Creates an audit report for an ACM Private CA.",
                        "resource-types": "certificate-authority*"
                    },
                    "DeleteCertificateAuthority": {
                        "access-level": "write",
                        "actions": "DeleteCertificateAuthority",
                        "description": "Deletes an ACM Private CA and its associated private key and configuration.",
                        "resource-types": "certificate-authority*"
                    },
                    "ImportCertificateAuthorityCertificate": {
                        "access-level": "write",
                        "actions": "ImportCertificateAuthorityCertificate",
                        "description": "Imports an SSL/TLS certificate into ACM Private CA for use as the CA certificate of an ACM Private CA.",
                        "resource-types": "certificate-authority*"
                    },
                    "IssueCertificate": {
                        "access-level": "write",
                        "actions": "IssueCertificate",
                        "description": "Issues an ACM Private CA certificate.",
                        "resource-types": "certificate-authority*"
                    },
                    "RestoreCertificateAuthority": {
                        "access-level": "write",
                        "actions": "RestoreCertificateAuthority",
                        "description": "Restores an ACM Private CA from the deleted state to the state it was in when deleted.",
                        "resource-types": "certificate-authority*"
                    },
                    "RevokeCertificate": {
                        "access-level": "write",
                        "actions": "RevokeCertificate",
                        "description": "Revokes a certificate issued by an ACM Private CA.",
                        "resource-types": "certificate-authority*"
                    },
                    "UpdateCertificateAuthority": {
                        "access-level": "write",
                        "actions": "UpdateCertificateAuthority",
                        "description": "Updates the configuration of an ACM Private CA.",
                        "resource-types": "certificate-authority*"
                    }
                }
            }
        },
        "chime": {
            "actions": {
                "list": {
                    "ListAccountUsageReportData": {
                        "access-level": "list",
                        "actions": "ListAccountUsageReportData",
                        "description": "Lists Amazon Chime account usage reporting data"
                    },
                    "ListAccounts": {
                        "access-level": "list",
                        "actions": "ListAccounts",
                        "description": "Lists the Amazon Chime accounts associated with your AWS account"
                    },
                    "ListApiKeys": {
                        "access-level": "list",
                        "actions": "ListApiKeys",
                        "description": "Lists the SCIM access keys defined for your Amazon Chime account and Okta configuration"
                    },
                    "ListCDRBucket": {
                        "access-level": "list",
                        "actions": "ListCDRBucket",
                        "dependent-actions": "s3:ListAllMyBuckets s3:ListBucket",
                        "description": "Lists Call Detail Record S3 buckets"
                    },
                    "ListDelegates": {
                        "access-level": "list",
                        "actions": "ListDelegates",
                        "description": "Lists account delegate information associated with your Amazon Chime account"
                    },
                    "ListDirectories": {
                        "access-level": "list",
                        "actions": "ListDirectories",
                        "description": "Lists active Active Directories hosted in the Directory Service of your AWS account"
                    },
                    "ListDomains": {
                        "access-level": "list",
                        "actions": "ListDomains",
                        "description": "Lists domains associated with your Amazon Chime account"
                    },
                    "ListGroups": {
                        "access-level": "list",
                        "actions": "ListGroups",
                        "description": "Lists Active Directory or Okta user groups associated with your Amazon Chime enterprise account"
                    },
                    "ListMeetingEvents": {
                        "access-level": "list",
                        "actions": "ListMeetingEvents",
                        "description": "Lists all events that occurred for a meeting"
                    },
                    "ListMeetingsReportData": {
                        "access-level": "list",
                        "actions": "ListMeetingsReportData",
                        "description": "Lists meetings ended during the date range"
                    },
                    "ListUsers": {
                        "access-level": "list",
                        "actions": "ListUsers",
                        "description": "Lists the users in an Amazon Chime account"
                    },
                    "RetrieveDataExports": {
                        "access-level": "list",
                        "actions": "RetrieveDataExports",
                        "description": "Downloads the file containing links to all user attachments returned as part of the \"Request attachments\" action."
                    }
                },
                "read": {
                    "GetAccount": {
                        "access-level": "read",
                        "actions": "GetAccount",
                        "description": "Gets the account details for an Amazon Chime account"
                    },
                    "GetAccountResource": {
                        "access-level": "read",
                        "actions": "GetAccountResource",
                        "description": "Shows the details of the account resource associated with your Amazon Chime account"
                    },
                    "GetAccountSettings": {
                        "access-level": "read",
                        "actions": "GetAccountSettings",
                        "description": "Shows your Amazon Chime account settings"
                    },
                    "GetAccountWithOpenIdConfig": {
                        "access-level": "read",
                        "actions": "GetAccountWithOpenIdConfig",
                        "description": "Gets the account details and OpenIdConfig attributes for your Amazon Chime account"
                    },
                    "GetCDRBucket": {
                        "access-level": "read",
                        "actions": "GetCDRBucket",
                        "dependent-actions": "s3:GetBucketAcl s3:GetBucketLocation s3:GetBucketLogging s3:GetBucketVersioning s3:GetBucketWebsite",
                        "description": "Gets the details of a Call Detail Record S3 bucket associated with your Amazon Chime account"
                    },
                    "GetDomain": {
                        "access-level": "read",
                        "actions": "GetDomain",
                        "description": "Shows domain details for a domain associated with your Amazon Chime account"
                    },
                    "GetMeetingDetail": {
                        "access-level": "read",
                        "actions": "GetMeetingDetail",
                        "description": "Shows attendee, connection and other details for a meeting."
                    },
                    "GetUser": {
                        "access-level": "read",
                        "actions": "GetUser",
                        "description": "Gets the user details for an Amazon Chime user"
                    },
                    "GetUserActivityReportData": {
                        "access-level": "read",
                        "actions": "GetUserActivityReportData",
                        "description": "Shows summary of user activity on the user details page"
                    },
                    "GetUserByEmail": {
                        "access-level": "read",
                        "actions": "GetUserByEmail",
                        "description": "Gets user details for an Amazon Chime user based on the email address in an Amazon Chime enterprise or team account"
                    },
                    "ValidateAccountResource": {
                        "access-level": "read",
                        "actions": "ValidateAccountResource",
                        "description": "Validates the account resource in your Amazon Chime account"
                    }
                },
                "write": {
                    "AcceptDelegate": {
                        "access-level": "write",
                        "actions": "AcceptDelegate",
                        "description": "Accepts the delegate invitation to share management of an Amazon Chime account with another AWS Account"
                    },
                    "ActivateUsers": {
                        "access-level": "write",
                        "actions": "ActivateUsers",
                        "description": "Activates users in an Amazon Chime enterprise account"
                    },
                    "AddDomain": {
                        "access-level": "write",
                        "actions": "AddDomain",
                        "description": "Adds a domain to your Amazon Chime account"
                    },
                    "AddOrUpdateGroups": {
                        "access-level": "write",
                        "actions": "AddOrUpdateGroups",
                        "description": "Adds new or updates existing Active Directory or Okta user groups associated with your Amazon Chime enterprise account"
                    },
                    "AuthorizeDirectory": {
                        "access-level": "write",
                        "actions": "AuthorizeDirectory",
                        "description": "Authorize an Active Directory to your Amazon Chime enterprise account"
                    },
                    "BatchSuspendUser": {
                        "access-level": "write",
                        "actions": "BatchSuspendUser",
                        "description": "Suspends multiple users"
                    },
                    "BatchUnsuspendUser": {
                        "access-level": "write",
                        "actions": "BatchUnsuspendUser",
                        "description": "Removes the suspension of multiple users"
                    },
                    "BatchUpdateUser": {
                        "access-level": "write",
                        "actions": "BatchUpdateUser",
                        "description": "Updates details for multiple users"
                    },
                    "ConnectDirectory": {
                        "access-level": "write",
                        "actions": "ConnectDirectory",
                        "dependent-actions": "ds:ConnectDirectory",
                        "description": "Connects an Active Directory to your Amazon Chime enterprise account"
                    },
                    "CreateAccount": {
                        "access-level": "write",
                        "actions": "CreateAccount",
                        "description": "Creates a new Amazon Chime account"
                    },
                    "CreateApiKey": {
                        "access-level": "write",
                        "actions": "CreateApiKey",
                        "description": "Generates a new SCIM access key for your Amazon Chime account and Okta configuration"
                    },
                    "CreateCDRBucket": {
                        "access-level": "write",
                        "actions": "CreateCDRBucket",
                        "dependent-actions": "s3:CreateBucket s3:ListAllMyBuckets",
                        "description": "Creates a new Call Detail Record S3 bucket"
                    },
                    "DeleteAccount": {
                        "access-level": "write",
                        "actions": "DeleteAccount",
                        "description": "Deletes an Amazon Chime account"
                    },
                    "DeleteAccountOpenIdConfig": {
                        "access-level": "write",
                        "actions": "DeleteAccountOpenIdConfig",
                        "description": "Deletes the OpenIdConfig attributes from your Amazon Chime account"
                    },
                    "DeleteApiKey": {
                        "access-level": "write",
                        "actions": "DeleteApiKey",
                        "description": "Deletes the specified SCIM access key associated with your Amazon Chime account and Okta configuration"
                    },
                    "DeleteCDRBucket": {
                        "access-level": "write",
                        "actions": "DeleteCDRBucket",
                        "dependent-actions": "s3:DeleteBucket",
                        "description": "Deletes a Call Detail Record S3 bucket from your Amazon Chime account"
                    },
                    "DeleteDelegate": {
                        "access-level": "write",
                        "actions": "DeleteDelegate",
                        "description": "Deletes delegated AWS account management from your Amazon Chime account"
                    },
                    "DeleteDomain": {
                        "access-level": "write",
                        "actions": "DeleteDomain",
                        "description": "Deletes a domain from your Amazon Chime account"
                    },
                    "DeleteGroups": {
                        "access-level": "write",
                        "actions": "DeleteGroups",
                        "description": "Deletes Active Directory or Okta user groups from your Amazon Chime enterprise account"
                    },
                    "DisconnectDirectory": {
                        "access-level": "write",
                        "actions": "DisconnectDirectory",
                        "description": "Disconnects the Active Directory from your Amazon Chime enterprise account"
                    },
                    "InviteDelegate": {
                        "access-level": "write",
                        "actions": "InviteDelegate",
                        "description": "Sends an invitation to accept a request for AWS account delegation for an Amazon Chime account"
                    },
                    "InviteUsers": {
                        "access-level": "write",
                        "actions": "InviteUsers",
                        "description": "Invites new users to an Amazon Chime account"
                    },
                    "LogoutUser": {
                        "access-level": "write",
                        "actions": "LogoutUser",
                        "description": "Spike an Amazon Chime user device"
                    },
                    "RenameAccount": {
                        "access-level": "write",
                        "actions": "RenameAccount",
                        "description": "Modifies the account name for your Amazon Chime enterprise or team account"
                    },
                    "RenewDelegate": {
                        "access-level": "write",
                        "actions": "RenewDelegate",
                        "description": "Renews the delegation request associated with an Amazon Chime account"
                    },
                    "ResetAccountResource": {
                        "access-level": "write",
                        "actions": "ResetAccountResource",
                        "description": "Resets the account resource in your Amazon Chime account"
                    },
                    "ResetPersonalPin": {
                        "access-level": "write",
                        "actions": "ResetPersonalPin",
                        "description": "Resets the personal meeting PIN for an Amazon Chime user"
                    },
                    "StartDataExport": {
                        "access-level": "write",
                        "actions": "StartDataExport",
                        "description": "Submits the \"Request attachments\" request."
                    },
                    "SubmitSupportRequest": {
                        "access-level": "write",
                        "actions": "SubmitSupportRequest",
                        "description": "Submits a customer service support request"
                    },
                    "SuspendUsers": {
                        "access-level": "write",
                        "actions": "SuspendUsers",
                        "description": "Suspend users from an Amazon Chime enterprise account"
                    },
                    "UnauthorizeDirectory": {
                        "access-level": "write",
                        "actions": "UnauthorizeDirectory",
                        "description": "Unauthorize an Active Directory to your Amazon Chime enterprise account"
                    },
                    "UpdateAccount": {
                        "access-level": "write",
                        "actions": "UpdateAccount",
                        "description": "Updates an existing account\\'s details"
                    },
                    "UpdateAccountOpenIdConfig": {
                        "access-level": "write",
                        "actions": "UpdateAccountOpenIdConfig",
                        "description": "Updates the OpenIdConfig attributes for your Amazon Chime account"
                    },
                    "UpdateAccountResource": {
                        "access-level": "write",
                        "actions": "UpdateAccountResource",
                        "description": "Updates the account resource in your Amazon Chime account"
                    },
                    "UpdateAccountSettings": {
                        "access-level": "write",
                        "actions": "UpdateAccountSettings",
                        "description": "Modifies your Amazon Chime account settings"
                    },
                    "UpdateCDRBucket": {
                        "access-level": "write",
                        "actions": "UpdateCDRBucket",
                        "dependent-actions": "s3:CreateBucket s3:DeleteBucket s3:ListAllMyBuckets",
                        "description": "Updates your Call Detail Record S3 bucket"
                    },
                    "UpdateSupportedLicenses": {
                        "access-level": "write",
                        "actions": "UpdateSupportedLicenses",
                        "description": "Updates the supported license tiers available for users in your Amazon Chime account"
                    },
                    "UpdateUser": {
                        "access-level": "write",
                        "actions": "UpdateUser",
                        "description": "Updates an existing user\\'s details"
                    },
                    "UpdateUserLicenses": {
                        "access-level": "write",
                        "actions": "UpdateUserLicenses",
                        "description": "Manages the licenses for your Amazon Chime users"
                    }
                }
            }
        },
        "cloud9": {
            "actions": {
                "read": {
                    "DescribeEnvironmentMemberships": {
                        "access-level": "read",
                        "actions": "DescribeEnvironmentMemberships",
                        "condition-keys": [
                            "cloud9:UserArn",
                            "cloud9:EnvironmentId"
                        ],
                        "description": "Gets information about environment members for an AWS Cloud9 development environment."
                    },
                    "DescribeEnvironmentStatus": {
                        "access-level": "read",
                        "actions": "DescribeEnvironmentStatus",
                        "description": "Gets status information for an AWS Cloud9 development environment."
                    },
                    "DescribeEnvironments": {
                        "access-level": "read",
                        "actions": "DescribeEnvironments",
                        "description": "Gets information about AWS Cloud9 development environments.",
                        "resource-types": "environment*"
                    },
                    "GetUserPublicKey": {
                        "access-level": "read",
                        "actions": "GetUserPublicKey",
                        "description": "Gets the public key of the logged in user. Only used in the AWS Cloud9 console."
                    },
                    "ListEnvironments": {
                        "access-level": "read",
                        "actions": "ListEnvironments",
                        "description": "Gets a list of AWS Cloud9 development environment identifiers."
                    }
                },
                "write": {
                    "CreateEnvironmentEC2": {
                        "access-level": "write",
                        "actions": "CreateEnvironmentEC2",
                        "condition-keys": [
                            "cloud9:EnvironmentName",
                            "cloud9:InstanceType",
                            "cloud9:SubnetId",
                            "cloud9:UserArn"
                        ],
                        "dependent-actions": "ec2:DescribeSubnets ec2:DescribeVpcs iam:CreateServiceLinkedRole",
                        "description": "Creates an AWS Cloud9 development environment, launches an Amazon Elastic Compute Cloud (Amazon EC2) instance, and then hosts the environment on the instance."
                    },
                    "CreateEnvironmentMembership": {
                        "access-level": "write",
                        "actions": "CreateEnvironmentMembership",
                        "condition-keys": [
                            "cloud9:UserArn",
                            "cloud9:EnvironmentId",
                            "cloud9:Permissions"
                        ],
                        "description": "Adds an environment member to an AWS Cloud9 development environment."
                    },
                    "CreateEnvironmentSSH": {
                        "access-level": "write",
                        "actions": "CreateEnvironmentSSH",
                        "condition-keys": [
                            "cloud9:EnvironmentName"
                        ],
                        "description": "Creates an AWS Cloud9 development environment, which is connected to a remote SSH server."
                    },
                    "DeleteEnvironment": {
                        "access-level": "write",
                        "actions": "DeleteEnvironment",
                        "dependent-actions": "iam:CreateServiceLinkedRole",
                        "description": "Deletes an AWS Cloud9 development environment. If the environment is hosted on an Amazon Elastic Compute Cloud (Amazon EC2) instance, also terminates the instance.",
                        "resource-types": "environment*"
                    },
                    "DeleteEnvironmentMembership": {
                        "access-level": "write",
                        "actions": "DeleteEnvironmentMembership",
                        "description": "Deletes an environment member from an AWS Cloud9 development environment."
                    },
                    "UpdateEnvironment": {
                        "access-level": "write",
                        "actions": "UpdateEnvironment",
                        "description": "Changes the settings of an existing AWS Cloud9 development environment.",
                        "resource-types": "environment*"
                    },
                    "UpdateEnvironmentMembership": {
                        "access-level": "write",
                        "actions": "UpdateEnvironmentMembership",
                        "condition-keys": [
                            "cloud9:UserArn",
                            "cloud9:EnvironmentId",
                            "cloud9:Permissions"
                        ],
                        "description": "Changes the settings of an existing environment member for an AWS Cloud9 development environment."
                    },
                    "ValidateEnvironmentName": {
                        "access-level": "write",
                        "actions": "ValidateEnvironmentName",
                        "description": "Checks checks whether the passed in environment is valid. Only used in the AWS Cloud9 console."
                    }
                }
            }
        },
        "clouddirectory": {
            "actions": {
                "list": {
                    "ListAppliedSchemaArns": {
                        "access-level": "list",
                        "actions": "ListAppliedSchemaArns",
                        "description": "Lists schemas applied to a directory.",
                        "resource-types": "directory*"
                    },
                    "ListDevelopmentSchemaArns": {
                        "access-level": "list",
                        "actions": "ListDevelopmentSchemaArns",
                        "description": "Retrieves the ARNs of schemas in the development state."
                    },
                    "ListDirectories": {
                        "access-level": "list",
                        "actions": "ListDirectories",
                        "description": "Lists directories created within an account."
                    },
                    "ListPublishedSchemaArns": {
                        "access-level": "list",
                        "actions": "ListPublishedSchemaArns",
                        "description": "Retrieves published schema ARNs."
                    }
                },
                "read": {
                    "BatchRead": {
                        "access-level": "read",
                        "actions": "BatchRead",
                        "description": "Performs all the read operations in a batch. Each individual operation inside BatchRead needs to be granted permissions explicitly.",
                        "resource-types": "directory*"
                    },
                    "GetDirectory": {
                        "access-level": "read",
                        "actions": "GetDirectory",
                        "description": "Retrieves metadata about a directory.",
                        "resource-types": "directory*"
                    },
                    "GetFacet": {
                        "access-level": "read",
                        "actions": "GetFacet",
                        "description": "Gets details of the Facet, such as Facet Name, Attributes, Rules, or ObjectType.",
                        "resource-types": "appliedSchema*"
                    },
                    "GetLinkAttributes": {
                        "access-level": "read",
                        "actions": "GetLinkAttributes",
                        "description": "Retrieves attributes that are associated with a typed link.",
                        "resource-types": "directory*"
                    },
                    "GetObjectAttributes": {
                        "access-level": "read",
                        "actions": "GetObjectAttributes",
                        "description": "Retrieves attributes within a facet that are associated with an object.",
                        "resource-types": "directory*"
                    },
                    "GetObjectInformation": {
                        "access-level": "read",
                        "actions": "GetObjectInformation",
                        "description": "Retrieves metadata about an object.",
                        "resource-types": "directory*"
                    },
                    "GetSchemaAsJson": {
                        "access-level": "read",
                        "actions": "GetSchemaAsJson",
                        "description": "Retrieves a JSON representation of the schema.",
                        "resource-types": "appliedSchema*"
                    },
                    "GetTypedLinkFacetInformation": {
                        "access-level": "read",
                        "actions": "GetTypedLinkFacetInformation",
                        "description": "Returns identity attributes order information associated with a given typed link facet.",
                        "resource-types": "appliedSchema*"
                    },
                    "ListAttachedIndices": {
                        "access-level": "read",
                        "actions": "ListAttachedIndices",
                        "description": "Lists indices attached to an object.",
                        "resource-types": "directory*"
                    },
                    "ListFacetAttributes": {
                        "access-level": "read",
                        "actions": "ListFacetAttributes",
                        "description": "Retrieves attributes attached to the facet.",
                        "resource-types": "appliedSchema*"
                    },
                    "ListFacetNames": {
                        "access-level": "read",
                        "actions": "ListFacetNames",
                        "description": "Retrieves the names of facets that exist in a schema.",
                        "resource-types": "appliedSchema*"
                    },
                    "ListIncomingTypedLinks": {
                        "access-level": "read",
                        "actions": "ListIncomingTypedLinks",
                        "description": "Returns a paginated list of all incoming TypedLinks for a given object.",
                        "resource-types": "directory*"
                    },
                    "ListIndex": {
                        "access-level": "read",
                        "actions": "ListIndex",
                        "description": "Lists objects attached to the specified index.",
                        "resource-types": "directory*"
                    },
                    "ListObjectAttributes": {
                        "access-level": "read",
                        "actions": "ListObjectAttributes",
                        "description": "Lists all attributes associated with an object.",
                        "resource-types": "directory*"
                    },
                    "ListObjectChildren": {
                        "access-level": "read",
                        "actions": "ListObjectChildren",
                        "description": "Returns a paginated list of child objects associated with a given object.",
                        "resource-types": "directory*"
                    },
                    "ListObjectParentPaths": {
                        "access-level": "read",
                        "actions": "ListObjectParentPaths",
                        "description": "Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects.",
                        "resource-types": "directory*"
                    },
                    "ListObjectParents": {
                        "access-level": "read",
                        "actions": "ListObjectParents",
                        "description": "Lists parent objects associated with a given object in pagination fashion.",
                        "resource-types": "directory*"
                    },
                    "ListObjectPolicies": {
                        "access-level": "read",
                        "actions": "ListObjectPolicies",
                        "description": "Returns policies attached to an object in pagination fashion.",
                        "resource-types": "directory*"
                    },
                    "ListOutgoingTypedLinks": {
                        "access-level": "read",
                        "actions": "ListOutgoingTypedLinks",
                        "description": "Returns a paginated list of all outgoing TypedLinks for a given object.",
                        "resource-types": "directory*"
                    },
                    "ListPolicyAttachments": {
                        "access-level": "read",
                        "actions": "ListPolicyAttachments",
                        "description": "Returns all of the ObjectIdentifiers to which a given policy is attached.",
                        "resource-types": "directory*"
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "Returns tags for a resource.",
                        "resource-types": "directory*"
                    },
                    "ListTypedLinkFacetAttributes": {
                        "access-level": "read",
                        "actions": "ListTypedLinkFacetAttributes",
                        "description": "Returns a paginated list of attributes associated with typed link facet.",
                        "resource-types": "appliedSchema*"
                    },
                    "ListTypedLinkFacetNames": {
                        "access-level": "read",
                        "actions": "ListTypedLinkFacetNames",
                        "description": "Returns a paginated list of typed link facet names that exist in a schema.",
                        "resource-types": "appliedSchema*"
                    },
                    "LookupPolicy": {
                        "access-level": "read",
                        "actions": "LookupPolicy",
                        "description": "Lists all policies from the root of the Directory to the object specified.",
                        "resource-types": "directory*"
                    },
                    "developmentSchema*": {
                        "access-level": "read",
                        "actions": "developmentSchema*"
                    },
                    "publishedSchema*": {
                        "access-level": "read",
                        "actions": "publishedSchema*"
                    }
                },
                "tagging": {
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "description": "Adds tags to a resource.",
                        "resource-types": "directory*"
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "Removes tags from a resource.",
                        "resource-types": "directory*"
                    }
                },
                "write": {
                    "AddFacetToObject": {
                        "access-level": "write",
                        "actions": "AddFacetToObject",
                        "description": "Adds a new Facet to an object.",
                        "resource-types": "directory*"
                    },
                    "ApplySchema": {
                        "access-level": "write",
                        "actions": "ApplySchema",
                        "description": "Copies input published schema into Directory with same name and version as that of published schema.",
                        "resource-types": "directory*"
                    },
                    "AttachObject": {
                        "access-level": "write",
                        "actions": "AttachObject",
                        "description": "Attaches an existing object to another existing object.",
                        "resource-types": "directory*"
                    },
                    "AttachPolicy": {
                        "access-level": "write",
                        "actions": "AttachPolicy",
                        "description": "Attaches a policy object to any other object.",
                        "resource-types": "directory*"
                    },
                    "AttachToIndex": {
                        "access-level": "write",
                        "actions": "AttachToIndex",
                        "description": "Attaches the specified object to the specified index.",
                        "resource-types": "directory*"
                    },
                    "AttachTypedLink": {
                        "access-level": "write",
                        "actions": "AttachTypedLink",
                        "description": "Attaches a typed link b/w a source & target object reference.",
                        "resource-types": "directory*"
                    },
                    "BatchWrite": {
                        "access-level": "write",
                        "actions": "BatchWrite",
                        "description": "Performs all the write operations in a batch. Each individual operation inside BatchWrite needs to be granted permissions explicitly.",
                        "resource-types": "directory*"
                    },
                    "CreateDirectory": {
                        "access-level": "write",
                        "actions": "CreateDirectory",
                        "description": "Creates a Directory by copying the published schema into the directory.",
                        "resource-types": "publishedSchema*"
                    },
                    "CreateFacet": {
                        "access-level": "write",
                        "actions": "CreateFacet",
                        "description": "Creates a new Facet in a schema.",
                        "resource-types": "appliedSchema*"
                    },
                    "CreateIndex": {
                        "access-level": "write",
                        "actions": "CreateIndex",
                        "description": "Creates an index object.",
                        "resource-types": "directory*"
                    },
                    "CreateObject": {
                        "access-level": "write",
                        "actions": "CreateObject",
                        "description": "Creates an object in a Directory.",
                        "resource-types": "directory*"
                    },
                    "CreateSchema": {
                        "access-level": "write",
                        "actions": "CreateSchema",
                        "description": "Creates a new schema in a development state."
                    },
                    "CreateTypedLinkFacet": {
                        "access-level": "write",
                        "actions": "CreateTypedLinkFacet",
                        "description": "Creates a new Typed Link facet in a schema.",
                        "resource-types": "appliedSchema*"
                    },
                    "DeleteDirectory": {
                        "access-level": "write",
                        "actions": "DeleteDirectory",
                        "description": "Deletes a directory. Only disabled directories can be deleted.",
                        "resource-types": "directory*"
                    },
                    "DeleteFacet": {
                        "access-level": "write",
                        "actions": "DeleteFacet",
                        "description": "Deletes a given Facet. All attributes and Rules associated with the facet will be deleted.",
                        "resource-types": "developmentSchema*"
                    },
                    "DeleteObject": {
                        "access-level": "write",
                        "actions": "DeleteObject",
                        "description": "Deletes an object and its associated attributes.",
                        "resource-types": "directory*"
                    },
                    "DeleteSchema": {
                        "access-level": "write",
                        "actions": "DeleteSchema",
                        "description": "Deletes a given schema.",
                        "resource-types": "developmentSchema*"
                    },
                    "DeleteTypedLinkFacet": {
                        "access-level": "write",
                        "actions": "DeleteTypedLinkFacet",
                        "description": "Deletes a given TypedLink Facet. All attributes and Rules associated with the facet will be deleted.",
                        "resource-types": "developmentSchema*"
                    },
                    "DetachFromIndex": {
                        "access-level": "write",
                        "actions": "DetachFromIndex",
                        "description": "Detaches the specified object from the specified index.",
                        "resource-types": "directory*"
                    },
                    "DetachObject": {
                        "access-level": "write",
                        "actions": "DetachObject",
                        "description": "Detaches a given object from the parent object.",
                        "resource-types": "directory*"
                    },
                    "DetachPolicy": {
                        "access-level": "write",
                        "actions": "DetachPolicy",
                        "description": "Detaches a policy from an object.",
                        "resource-types": "directory*"
                    },
                    "DetachTypedLink": {
                        "access-level": "write",
                        "actions": "DetachTypedLink",
                        "description": "Detaches a given typed link b/w given source and target object reference.",
                        "resource-types": "directory*"
                    },
                    "DisableDirectory": {
                        "access-level": "write",
                        "actions": "DisableDirectory",
                        "description": "Disables the specified directory.",
                        "resource-types": "directory*"
                    },
                    "EnableDirectory": {
                        "access-level": "write",
                        "actions": "EnableDirectory",
                        "description": "Enables the specified directory.",
                        "resource-types": "directory*"
                    },
                    "PublishSchema": {
                        "access-level": "write",
                        "actions": "PublishSchema",
                        "description": "Publishes a development schema with a version.",
                        "resource-types": "developmentSchema*"
                    },
                    "PutSchemaFromJson": {
                        "access-level": "write",
                        "actions": "PutSchemaFromJson",
                        "description": "Allows a schema to be updated using JSON upload. Only available for development schemas."
                    },
                    "RemoveFacetFromObject": {
                        "access-level": "write",
                        "actions": "RemoveFacetFromObject",
                        "description": "Removes the specified facet from the specified object.",
                        "resource-types": "directory*"
                    },
                    "UpdateFacet": {
                        "access-level": "write",
                        "actions": "UpdateFacet",
                        "description": "Adds/Updates/Deletes existing Attributes, Rules, or ObjectType of a Facet.",
                        "resource-types": "appliedSchema*"
                    },
                    "UpdateLinkAttributes": {
                        "access-level": "write",
                        "actions": "UpdateLinkAttributes",
                        "description": "Updates a given typed link\u00e2\u20ac\u2122s attributes. Attributes to be updated must not contribute to the typed link\u00e2\u20ac\u2122s identity, as defined by its IdentityAttributeOrder.",
                        "resource-types": "directory*"
                    },
                    "UpdateObjectAttributes": {
                        "access-level": "write",
                        "actions": "UpdateObjectAttributes",
                        "description": "Updates a given object\\'s attributes.",
                        "resource-types": "directory*"
                    },
                    "UpdateSchema": {
                        "access-level": "write",
                        "actions": "UpdateSchema",
                        "description": "Updates the schema name with a new name.",
                        "resource-types": "developmentSchema*"
                    },
                    "UpdateTypedLinkFacet": {
                        "access-level": "write",
                        "actions": "UpdateTypedLinkFacet",
                        "description": "Adds/Updates/Deletes existing Attributes, Rules, identity attribute order of a TypedLink Facet.",
                        "resource-types": "developmentSchema*"
                    },
                    "developmentSchema*": {
                        "access-level": "write",
                        "actions": "developmentSchema*"
                    },
                    "publishedSchema*": {
                        "access-level": "write",
                        "actions": "publishedSchema*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "appliedschema": {
                    "arn": "arn:${Partition}:clouddirectory:${Region}:${Account}:directory/${DirectoryId}/schema/${SchemaName}/${Version}",
                    "resource-types": "appliedSchema"
                },
                "developmentschema": {
                    "arn": "arn:${Partition}:clouddirectory:${Region}:${Account}:schema/development/${SchemaName}",
                    "resource-types": "developmentSchema"
                },
                "directory": {
                    "arn": "arn:${Partition}:clouddirectory:${Region}:${Account}:directory/${DirectoryId}",
                    "resource-types": "directory"
                },
                "publishedschema": {
                    "arn": "arn:${Partition}:clouddirectory:${Region}:${Account}:schema/published/${SchemaName}/${Version}",
                    "resource-types": "publishedSchema"
                }
            }
        },
        "cloudformation": {
            "actions": {
                "list": {
                    "DescribeStacks": {
                        "access-level": "list",
                        "actions": "DescribeStacks",
                        "description": "Returns the description for the specified stack.",
                        "resource-types": "stack*"
                    },
                    "ListChangeSets": {
                        "access-level": "list",
                        "actions": "ListChangeSets",
                        "description": "Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the CREATE_IN_PROGRESS or CREATE_PENDING state.",
                        "resource-types": "stack*"
                    },
                    "ListExports": {
                        "access-level": "list",
                        "actions": "ListExports",
                        "description": "Lists all exported output values in the account and region in which you call this action."
                    },
                    "ListImports": {
                        "access-level": "list",
                        "actions": "ListImports",
                        "description": "Lists all stacks that are importing an exported output value."
                    },
                    "ListStackInstances": {
                        "access-level": "list",
                        "actions": "ListStackInstances",
                        "description": "Returns summary information about stack instances that are associated with the specified stack set.",
                        "resource-types": "stackset*"
                    },
                    "ListStackResources": {
                        "access-level": "list",
                        "actions": "ListStackResources",
                        "description": "Returns descriptions of all resources of the specified stack.",
                        "resource-types": "stack*"
                    },
                    "ListStackSetOperationResults": {
                        "access-level": "list",
                        "actions": "ListStackSetOperationResults",
                        "description": "Returns summary information about the results of a stack set operation.",
                        "resource-types": "stackset*"
                    },
                    "ListStackSetOperations": {
                        "access-level": "list",
                        "actions": "ListStackSetOperations",
                        "description": "Returns summary information about operations performed on a stack set.",
                        "resource-types": "stackset*"
                    },
                    "ListStackSets": {
                        "access-level": "list",
                        "actions": "ListStackSets",
                        "description": "Returns summary information about stack sets that are associated with the user.",
                        "resource-types": "stackset*"
                    },
                    "ListStacks": {
                        "access-level": "list",
                        "actions": "ListStacks",
                        "description": "Returns the summary information for stacks whose status matches the specified StackStatusFilter."
                    }
                },
                "permissions-management": {
                    "SetStackPolicy": {
                        "access-level": "permissions-management",
                        "actions": "SetStackPolicy",
                        "condition-keys": [
                            "cloudformation:StackPolicyUrl"
                        ],
                        "description": "Sets a stack policy for a specified stack.",
                        "resource-types": "stack*"
                    }
                },
                "read": {
                    "DescribeAccountLimits": {
                        "access-level": "read",
                        "actions": "DescribeAccountLimits",
                        "description": "Retrieves your account\\'s AWS CloudFormation limits."
                    },
                    "DescribeChangeSet": {
                        "access-level": "read",
                        "actions": "DescribeChangeSet",
                        "description": "Returns the description for the specified change set.",
                        "resource-types": "stack*"
                    },
                    "DescribeStackDriftDetectionStatus": {
                        "access-level": "read",
                        "actions": "DescribeStackDriftDetectionStatus",
                        "description": "Returns information about a stack drift detection operation."
                    },
                    "DescribeStackEvents": {
                        "access-level": "read",
                        "actions": "DescribeStackEvents",
                        "description": "Returns all stack related events for a specified stack.",
                        "resource-types": "stack*"
                    },
                    "DescribeStackInstance": {
                        "access-level": "read",
                        "actions": "DescribeStackInstance",
                        "description": "Returns the stack instance that\\'s associated with the specified stack set, AWS account, and region.",
                        "resource-types": "stackset*"
                    },
                    "DescribeStackResource": {
                        "access-level": "read",
                        "actions": "DescribeStackResource",
                        "description": "Returns a description of the specified resource in the specified stack.",
                        "resource-types": "stack*"
                    },
                    "DescribeStackResourceDrifts": {
                        "access-level": "read",
                        "actions": "DescribeStackResourceDrifts",
                        "description": "Returns drift information for the resources that have been checked for drift in the specified stack.",
                        "resource-types": "stack*"
                    },
                    "DescribeStackResources": {
                        "access-level": "read",
                        "actions": "DescribeStackResources",
                        "description": "Returns AWS resource descriptions for running and deleted stacks.",
                        "resource-types": "stack*"
                    },
                    "DescribeStackSet": {
                        "access-level": "read",
                        "actions": "DescribeStackSet",
                        "description": "Returns the description of the specified stack set.",
                        "resource-types": "stackset*"
                    },
                    "DescribeStackSetOperation": {
                        "access-level": "read",
                        "actions": "DescribeStackSetOperation",
                        "description": "Returns the description of the specified stack set operation.",
                        "resource-types": "stackset*"
                    },
                    "DetectStackDrift": {
                        "access-level": "read",
                        "actions": "DetectStackDrift",
                        "description": "Detects whether a stack\\'s actual configuration differs, or has drifted, from it\\'s expected configuration, as defined in the stack template and any values specified as template parameters.",
                        "resource-types": "stack*"
                    },
                    "DetectStackResourceDrift": {
                        "access-level": "read",
                        "actions": "DetectStackResourceDrift",
                        "description": "Returns information about whether a resource\\'s actual configuration differs, or has drifted, from it\\'s expected configuration, as defined in the stack template and any values specified as template parameters.",
                        "resource-types": "stack*"
                    },
                    "EstimateTemplateCost": {
                        "access-level": "read",
                        "actions": "EstimateTemplateCost",
                        "description": "Returns the estimated monthly cost of a template."
                    },
                    "GetStackPolicy": {
                        "access-level": "read",
                        "actions": "GetStackPolicy",
                        "description": "Returns the stack policy for a specified stack.",
                        "resource-types": "stack*"
                    },
                    "GetTemplate": {
                        "access-level": "read",
                        "actions": "GetTemplate",
                        "description": "Returns the template body for a specified stack.",
                        "resource-types": "stack*"
                    },
                    "GetTemplateSummary": {
                        "access-level": "read",
                        "actions": "GetTemplateSummary",
                        "description": "Returns information about a new or existing template."
                    }
                },
                "write": {
                    "CancelUpdateStack": {
                        "access-level": "write",
                        "actions": "CancelUpdateStack",
                        "description": "Cancels an update on the specified stack.",
                        "resource-types": "stack*"
                    },
                    "ContinueUpdateRollback": {
                        "access-level": "write",
                        "actions": "ContinueUpdateRollback",
                        "description": "For a specified stack that is in the UPDATE_ROLLBACK_FAILED state, continues rolling it back to the UPDATE_ROLLBACK_COMPLETE state.",
                        "resource-types": "stack*"
                    },
                    "CreateChangeSet": {
                        "access-level": "write",
                        "actions": "CreateChangeSet",
                        "description": "Creates a list of changes for a stack.",
                        "resource-types": "stack*"
                    },
                    "CreateStack": {
                        "access-level": "write",
                        "actions": "CreateStack",
                        "description": "Creates a stack as specified in the template.",
                        "resource-types": "stack*"
                    },
                    "CreateStackInstances": {
                        "access-level": "write",
                        "actions": "CreateStackInstances",
                        "description": "Creates stack instances for the specified accounts, within the specified regions.",
                        "resource-types": "stackset*"
                    },
                    "CreateStackSet": {
                        "access-level": "write",
                        "actions": "CreateStackSet",
                        "description": "Creates a stackset as specified in the template.",
                        "resource-types": "stackset*"
                    },
                    "CreateUploadBucket [permission only]": {
                        "access-level": "write",
                        "actions": "CreateUploadBucket [permission only]"
                    },
                    "DeleteChangeSet": {
                        "access-level": "write",
                        "actions": "DeleteChangeSet",
                        "description": "Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.",
                        "resource-types": "stack*"
                    },
                    "DeleteStack": {
                        "access-level": "write",
                        "actions": "DeleteStack",
                        "description": "Deletes a specified stack.",
                        "resource-types": "stack*"
                    },
                    "DeleteStackInstances": {
                        "access-level": "write",
                        "actions": "DeleteStackInstances",
                        "description": "Deletes stack instances for the specified accounts, in the specified regions.",
                        "resource-types": "stackset*"
                    },
                    "DeleteStackSet": {
                        "access-level": "write",
                        "actions": "DeleteStackSet",
                        "description": "Deletes a specified stackset.",
                        "resource-types": "stackset*"
                    },
                    "ExecuteChangeSet": {
                        "access-level": "write",
                        "actions": "ExecuteChangeSet",
                        "description": "Updates a stack using the input information that was provided when the specified change set was created.",
                        "resource-types": "stack*"
                    },
                    "SignalResource": {
                        "access-level": "write",
                        "actions": "SignalResource",
                        "description": "Sends a signal to the specified resource with a success or failure status.",
                        "resource-types": "stack*"
                    },
                    "StopStackSetOperation": {
                        "access-level": "write",
                        "actions": "StopStackSetOperation",
                        "description": "Stops an in-progress operation on a stack set and its associated stack instances.",
                        "resource-types": "stackset*"
                    },
                    "UpdateStack": {
                        "access-level": "write",
                        "actions": "UpdateStack",
                        "description": "Updates a stack as specified in the template.",
                        "resource-types": "stack*"
                    },
                    "UpdateStackInstances": {
                        "access-level": "write",
                        "actions": "UpdateStackInstances",
                        "description": "Updates the parameter values for stack instances for the specified accounts, within the specified regions.",
                        "resource-types": "stackset*"
                    },
                    "UpdateStackSet": {
                        "access-level": "write",
                        "actions": "UpdateStackSet",
                        "description": "Updates a stackset as specified in the template.",
                        "resource-types": "stackset*"
                    },
                    "UpdateTerminationProtection": {
                        "access-level": "write",
                        "actions": "UpdateTerminationProtection",
                        "description": "Updates termination protection for the specified stack.",
                        "resource-types": "stack*"
                    },
                    "ValidateTemplate": {
                        "access-level": "write",
                        "actions": "ValidateTemplate",
                        "description": "Validates a specified template."
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "changeset": {
                    "arn": "arn:${Partition}:cloudformation:${Region}:${Account}:changeSet/${ChangeSetName}:${Id}",
                    "resource-types": "changeset"
                },
                "stack": {
                    "arn": "arn:${Partition}:cloudformation:${Region}:${Account}:stack/${StackName}/${Id}",
                    "resource-types": "stack"
                },
                "stackset": {
                    "arn": "arn:${Partition}:cloudformation:${Region}:${Account}:stackset/${StackSetName}:${Id}",
                    "resource-types": "stackset"
                }
            }
        },
        "cloudfront": {
            "actions": {
                "list": {
                    "ListCloudFrontOriginAccessIdentities": {
                        "access-level": "list",
                        "actions": "ListCloudFrontOriginAccessIdentities",
                        "description": "List your CloudFront origin access identities (GET /2016-11-25/origin-access-identity/cloudfront?Marker=<MARKER>&MaxItems=<MAX_ITEMS>)."
                    },
                    "ListDistributions": {
                        "access-level": "list",
                        "actions": "ListDistributions",
                        "description": "List the distributions associated with your AWS account (GET /2016-11-25/distribution?Marker=<MARKER>&MaxItems=<MAX_ITEMS>)."
                    },
                    "ListDistributionsByWebACLId": {
                        "access-level": "list",
                        "actions": "ListDistributionsByWebACLId",
                        "description": "List the distributions associated with your AWS account with given AWS WAF web ACL (GET /2016-11-25/distributionsByWebACLId/<WEB_ACL_ID>?Marker=<MARKER>&MaxItems=<MAX_ITEMS>)."
                    },
                    "ListInvalidations": {
                        "access-level": "list",
                        "actions": "ListInvalidations",
                        "description": "List your invalidation batches (GET /2016-11-25/distribution/<DISTRIBUTION_ID>/invalidation?Marker=<MARKER>&MaxItems=<MAX_ITEMS>)."
                    },
                    "ListStreamingDistributions": {
                        "access-level": "list",
                        "actions": "ListStreamingDistributions",
                        "description": "List your RTMP distributions (GET /2016-11-25/streaming-distribution?Marker=<MARKER>&MaxItems=<MAX_ITEMS>)."
                    }
                },
                "read": {
                    "GetCloudFrontOriginAccessIdentity": {
                        "access-level": "read",
                        "actions": "GetCloudFrontOriginAccessIdentity",
                        "description": "Get the information about a CloudFront origin access identity (GET /2016-11-25/origin-access-identity/cloudfront/<OAI_ID>)."
                    },
                    "GetCloudFrontOriginAccessIdentityConfig": {
                        "access-level": "read",
                        "actions": "GetCloudFrontOriginAccessIdentityConfig",
                        "description": "Get the configuration information about a Cloudfront origin access identity (GET /2016-11-25/origin-access-identity/cloudfront/<OAI_ID>/config)."
                    },
                    "GetDistribution": {
                        "access-level": "read",
                        "actions": "GetDistribution",
                        "description": "Get the information about a web distribution (GET /2016-11-25/distribution/<DISTRIBUTION_ID>)."
                    },
                    "GetDistributionConfig": {
                        "access-level": "read",
                        "actions": "GetDistributionConfig",
                        "description": "Get the configuration information about a distribution (GET /2016-11-25/distribution/<DISTRIBUTION_ID>/config)."
                    },
                    "GetInvalidation": {
                        "access-level": "read",
                        "actions": "GetInvalidation",
                        "description": "Get the information about an invalidation (GET /2016-11-25/distribution/<DISTRIBUTION_ID>/invalidation/<INVALIDATION_ID>)."
                    },
                    "GetStreamingDistribution": {
                        "access-level": "read",
                        "actions": "GetStreamingDistribution",
                        "description": "Get the information about an RTMP distribution (GET /2016-11-25/streaming-distribution/<DISTRIBUTION_ID>)."
                    },
                    "GetStreamingDistributionConfig": {
                        "access-level": "read",
                        "actions": "GetStreamingDistributionConfig",
                        "description": "Get the configuration information about a streaming distribution (GET /2016-11-25/streaming-distribution/<DISTRIBUTION_ID>/config)."
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "List tags for a CloudFront resource (GET /2016-11-25/tagging?Resource=<RESOURCE>)."
                    }
                },
                "tagging": {
                    "CreateDistributionWithTags": {
                        "access-level": "tagging",
                        "actions": "CreateDistributionWithTags",
                        "description": "This action creates a new web distribution with tags (POST /2016-11-25/distribution?WithTags)."
                    },
                    "CreateStreamingDistributionWithTags": {
                        "access-level": "tagging",
                        "actions": "CreateStreamingDistributionWithTags",
                        "description": "This action creates a new RTMP distribution with tags (POST /2016-11-25/streaming-distribution?WithTags)."
                    },
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "description": "Add tags to a CloudFront resource (POST /2016-11-25/tagging?Operation=Tag?Resource=<RESOURCE>)."
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "Remove tags from a CloudFront resource (POST /2016-11-25/tagging?Operation=Untag?Resource=<RESOURCE>)."
                    }
                },
                "write": {
                    "CreateCloudFrontOriginAccessIdentity": {
                        "access-level": "write",
                        "actions": "CreateCloudFrontOriginAccessIdentity",
                        "description": "This action creates a new CloudFront origin access identity (POST /2016-11-25/origin-access-identity/cloudfront)."
                    },
                    "CreateDistribution": {
                        "access-level": "write",
                        "actions": "CreateDistribution",
                        "description": "This action creates a new web distribution (POST /2016-11-25/distribution)."
                    },
                    "CreateInvalidation": {
                        "access-level": "write",
                        "actions": "CreateInvalidation",
                        "description": "This action creates a new invalidation batch request (POST /2016-11-25/distribution/<DISTRIBUTION_ID>/invalidation)."
                    },
                    "CreateStreamingDistribution": {
                        "access-level": "write",
                        "actions": "CreateStreamingDistribution",
                        "description": "This action creates a new RTMP distribution (POST /2016-11-25/streaming-distribution)."
                    },
                    "DeleteCloudFrontOriginAccessIdentity": {
                        "access-level": "write",
                        "actions": "DeleteCloudFrontOriginAccessIdentity",
                        "description": "This action deletes a CloudFront origin access identity (DELETE /2016-11-25/origin-access-identity/cloudfront/<OAI_ID>)."
                    },
                    "DeleteDistribution": {
                        "access-level": "write",
                        "actions": "DeleteDistribution",
                        "description": "This action deletes a web distribution (DELETE /2016-11-25/distribution/<DISTRIBUTION_ID>)."
                    },
                    "DeleteStreamingDistribution": {
                        "access-level": "write",
                        "actions": "DeleteStreamingDistribution",
                        "description": "This action deletes an RTMP distribution (DELETE /2016-11-25/streaming-distribution/<DISTRIBUTION_ID>)."
                    },
                    "UpdateCloudFrontOriginAccessIdentity": {
                        "access-level": "write",
                        "actions": "UpdateCloudFrontOriginAccessIdentity",
                        "description": "This action sets the configuration for a CloudFront origin access identity (PUT /2016-11-25/origin-access-identity/cloudfront/<OAI_ID>/config)."
                    },
                    "UpdateDistribution": {
                        "access-level": "write",
                        "actions": "UpdateDistribution",
                        "description": "This action updates the configuration for a web distribution (PUT /2016-11-25/distribution/<DISTRIBUTION_ID>/config)."
                    },
                    "UpdateStreamingDistribution": {
                        "access-level": "write",
                        "actions": "UpdateStreamingDistribution",
                        "description": "This action updates the configuration for an RTMP distribution (PUT /2016-11-25/streaming-distribution/<DISTRIBUTION_ID>/config)."
                    }
                }
            }
        },
        "cloudhsm": {
            "actions": {
                "list": {
                    "ListAvailableZones": {
                        "access-level": "list",
                        "actions": "ListAvailableZones",
                        "description": "Lists the Availability Zones that have available AWS CloudHSM capacity"
                    },
                    "ListHapgs": {
                        "access-level": "list",
                        "actions": "ListHapgs",
                        "description": "Lists the high-availability partition groups for the account"
                    },
                    "ListHsms": {
                        "access-level": "list",
                        "actions": "ListHsms",
                        "description": "Retrieves the identifiers of all of the HSMs provisioned for the current customer"
                    },
                    "ListLunaClients": {
                        "access-level": "list",
                        "actions": "ListLunaClients",
                        "description": "Lists all of the clients"
                    }
                },
                "read": {
                    "DescribeBackups": {
                        "access-level": "read",
                        "actions": "DescribeBackups",
                        "description": "Gets information about backups of AWS CloudHSM clusters."
                    },
                    "DescribeClusters": {
                        "access-level": "read",
                        "actions": "DescribeClusters",
                        "description": "Gets information about AWS CloudHSM clusters."
                    },
                    "DescribeHapg": {
                        "access-level": "read",
                        "actions": "DescribeHapg",
                        "description": "Retrieves information about a high-availability partition group"
                    },
                    "DescribeHsm": {
                        "access-level": "read",
                        "actions": "DescribeHsm",
                        "description": "Retrieves information about an HSM. You can identify the HSM by its ARN or its serial number"
                    },
                    "DescribeLunaClient": {
                        "access-level": "read",
                        "actions": "DescribeLunaClient",
                        "description": "Retrieves information about an HSM client"
                    },
                    "GetConfig": {
                        "access-level": "read",
                        "actions": "GetConfig",
                        "description": "Gets the configuration files necessary to connect to all high availability partition groups the client is associated with"
                    },
                    "ListTags": {
                        "access-level": "read",
                        "actions": "ListTags",
                        "description": "Gets a list of tags for the specified AWS CloudHSM cluster."
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "Returns a list of all tags for the specified AWS CloudHSM resource"
                    }
                },
                "tagging": {
                    "AddTagsToResource": {
                        "access-level": "tagging",
                        "actions": "AddTagsToResource",
                        "description": "Adds or overwrites one or more tags for the specified AWS CloudHSM resource"
                    },
                    "RemoveTagsFromResource": {
                        "access-level": "tagging",
                        "actions": "RemoveTagsFromResource",
                        "description": "Removes one or more tags from the specified AWS CloudHSM resource"
                    },
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "description": "Adds or overwrites one or more tags for the specified AWS CloudHSM cluster."
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "Removes the specified tag or tags from the specified AWS CloudHSM cluster."
                    }
                },
                "write": {
                    "CreateCluster": {
                        "access-level": "write",
                        "actions": "CreateCluster",
                        "description": "Creates a new AWS CloudHSM cluster"
                    },
                    "CreateHapg": {
                        "access-level": "write",
                        "actions": "CreateHapg",
                        "description": "Creates a high-availability partition group"
                    },
                    "CreateHsm": {
                        "access-level": "write",
                        "actions": "CreateHsm",
                        "description": "Creates a new hardware security module (HSM) in the specified AWS CloudHSM cluster."
                    },
                    "CreateLunaClient": {
                        "access-level": "write",
                        "actions": "CreateLunaClient",
                        "description": "Creates an HSM client"
                    },
                    "DeleteCluster": {
                        "access-level": "write",
                        "actions": "DeleteCluster",
                        "description": "Deletes the specified AWS CloudHSM cluster."
                    },
                    "DeleteHapg": {
                        "access-level": "write",
                        "actions": "DeleteHapg",
                        "description": "Deletes a high-availability partition group"
                    },
                    "DeleteHsm": {
                        "access-level": "write",
                        "actions": "DeleteHsm",
                        "description": "Deletes the specified HSM."
                    },
                    "DeleteLunaClient": {
                        "access-level": "write",
                        "actions": "DeleteLunaClient",
                        "description": "Deletes a client"
                    },
                    "InitializeCluster": {
                        "access-level": "write",
                        "actions": "InitializeCluster",
                        "description": "Claims an AWS CloudHSM cluster."
                    },
                    "ModifyHapg": {
                        "access-level": "write",
                        "actions": "ModifyHapg",
                        "description": "Modifies an existing high-availability partition group"
                    },
                    "ModifyHsm": {
                        "access-level": "write",
                        "actions": "ModifyHsm",
                        "description": "Modifies an HSM"
                    },
                    "ModifyLunaClient": {
                        "access-level": "write",
                        "actions": "ModifyLunaClient",
                        "description": "Modifies the certificate used by the client"
                    }
                }
            }
        },
        "cloudmap": {
            "actions": {
                "list": {
                    "ListInstances": {
                        "access-level": "list",
                        "actions": "ListInstances",
                        "description": "Gets summary information about the instances that were registered with a specified service."
                    },
                    "ListNamespaces": {
                        "access-level": "list",
                        "actions": "ListNamespaces",
                        "description": "Gets information about the namespaces.",
                        "resource-types": "namespace*"
                    },
                    "ListOperations": {
                        "access-level": "list",
                        "actions": "ListOperations",
                        "description": "Lists operations that match the criteria that you specify."
                    },
                    "ListServices": {
                        "access-level": "list",
                        "actions": "ListServices",
                        "description": "Gets settings for all the services that match specified filters.",
                        "resource-types": "service*"
                    }
                },
                "read": {
                    "DiscoverInstances": {
                        "access-level": "read",
                        "actions": "DiscoverInstances",
                        "description": "Discovers registered instances for a specified namespace and service."
                    },
                    "GetInstance": {
                        "access-level": "read",
                        "actions": "GetInstance",
                        "description": "Gets information about a specified instance."
                    },
                    "GetInstancesHealthStatus": {
                        "access-level": "read",
                        "actions": "GetInstancesHealthStatus",
                        "description": "Gets the current health status (Healthy, Unhealthy, or Unknown) of one or more instances."
                    },
                    "GetNamespace": {
                        "access-level": "read",
                        "actions": "GetNamespace",
                        "description": "Gets information about a namespace.",
                        "resource-types": "namespace*"
                    },
                    "GetOperation": {
                        "access-level": "read",
                        "actions": "GetOperation",
                        "description": "Gets information about a specific operation."
                    },
                    "GetService": {
                        "access-level": "read",
                        "actions": "GetService",
                        "description": "Gets the settings for a specified service.",
                        "resource-types": "service*"
                    }
                },
                "write": {
                    "CreateHttpNamespace": {
                        "access-level": "write",
                        "actions": "CreateHttpNamespace",
                        "description": "Creates an HTTP namespace.",
                        "resource-types": "namespace*"
                    },
                    "CreatePrivateDnsNamespace": {
                        "access-level": "write",
                        "actions": "CreatePrivateDnsNamespace",
                        "description": "Creates a private namespace based on DNS, which will be visible only inside a specified Amazon VPC.",
                        "resource-types": "namespace*"
                    },
                    "CreatePublicDnsNamespace": {
                        "access-level": "write",
                        "actions": "CreatePublicDnsNamespace",
                        "description": "Creates a public namespace based on DNS, which will be visible on the internet.",
                        "resource-types": "namespace*"
                    },
                    "CreateService": {
                        "access-level": "write",
                        "actions": "CreateService",
                        "description": "Creates a service.",
                        "resource-types": "service*"
                    },
                    "DeleteNamespace": {
                        "access-level": "write",
                        "actions": "DeleteNamespace",
                        "description": "Deletes a specified namespace.",
                        "resource-types": "namespace*"
                    },
                    "DeleteService": {
                        "access-level": "write",
                        "actions": "DeleteService",
                        "description": "Deletes a specified service.",
                        "resource-types": "service*"
                    },
                    "DeregisterInstance": {
                        "access-level": "write",
                        "actions": "DeregisterInstance",
                        "description": "Deletes the records and the health check, if any, that Amazon Route 53 created for the specified instance.",
                        "resource-types": "service*"
                    },
                    "RegisterInstance": {
                        "access-level": "write",
                        "actions": "RegisterInstance",
                        "description": "Registers an instance based on the settings in a specified service.",
                        "resource-types": "service*"
                    },
                    "UpdateInstanceHeartbeatStatus": {
                        "access-level": "write",
                        "actions": "UpdateInstanceHeartbeatStatus",
                        "description": "Updates the current health status for an instance that has a custom health check.",
                        "resource-types": "service*"
                    },
                    "UpdateService": {
                        "access-level": "write",
                        "actions": "UpdateService",
                        "description": "Updates the settings in a specified service.",
                        "resource-types": "service*"
                    },
                    "service*": {
                        "access-level": "write",
                        "actions": "service*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "namespace": {
                    "arn": "arn:${Partition}:servicediscovery:${Region}:${Account}:stack/${NamespaceName}",
                    "resource-types": "namespace"
                },
                "service": {
                    "arn": "arn:${Partition}:servicediscovery:${Region}:${Account}:service/${ServiceName}",
                    "resource-types": "service"
                }
            }
        },
        "cloudsearch": {
            "actions": {
                "list": {
                    "DescribeDomains": {
                        "access-level": "list",
                        "actions": "DescribeDomains",
                        "description": "Gets information about the search domains owned by this account.",
                        "resource-types": "domain*"
                    },
                    "ListDomainNames": {
                        "access-level": "list",
                        "actions": "ListDomainNames",
                        "description": "Lists all search domains owned by an account.",
                        "resource-types": "domain*"
                    }
                },
                "permissions-management": {
                    "UpdateServiceAccessPolicies": {
                        "access-level": "permissions-management",
                        "actions": "UpdateServiceAccessPolicies",
                        "description": "Configures the access rules that control access to the domain\\'s document and search endpoints.",
                        "resource-types": "domain*"
                    }
                },
                "read": {
                    "DescribeAnalysisSchemes": {
                        "access-level": "read",
                        "actions": "DescribeAnalysisSchemes",
                        "description": "Gets the analysis schemes configured for a domain.",
                        "resource-types": "domain*"
                    },
                    "DescribeAvailabilityOptions": {
                        "access-level": "read",
                        "actions": "DescribeAvailabilityOptions",
                        "description": "Gets the availability options configured for a domain.",
                        "resource-types": "domain*"
                    },
                    "DescribeExpressions": {
                        "access-level": "read",
                        "actions": "DescribeExpressions",
                        "description": "Gets the expressions configured for the search domain.",
                        "resource-types": "domain*"
                    },
                    "DescribeIndexFields": {
                        "access-level": "read",
                        "actions": "DescribeIndexFields",
                        "description": "Gets information about the index fields configured for the search domain.",
                        "resource-types": "domain*"
                    },
                    "DescribeScalingParameters": {
                        "access-level": "read",
                        "actions": "DescribeScalingParameters",
                        "description": "Gets the scaling parameters configured for a domain.",
                        "resource-types": "domain*"
                    },
                    "DescribeServiceAccessPolicies": {
                        "access-level": "read",
                        "actions": "DescribeServiceAccessPolicies",
                        "description": "Gets information about the access policies that control access to the domain\\'s document and search endpoints.",
                        "resource-types": "domain*"
                    },
                    "DescribeSuggesters": {
                        "access-level": "read",
                        "actions": "DescribeSuggesters",
                        "description": "Gets the suggesters configured for a domain.",
                        "resource-types": "domain*"
                    },
                    "ListTags": {
                        "access-level": "read",
                        "actions": "ListTags",
                        "description": "Displays all of the resource tags for an Amazon CloudSearch domain.",
                        "resource-types": "domain*"
                    },
                    "search [permission only]": {
                        "access-level": "read",
                        "actions": "search [permission only]",
                        "description": "Allows access to the search operations.",
                        "resource-types": "domain"
                    },
                    "suggest [permission only]": {
                        "access-level": "read",
                        "actions": "suggest [permission only]",
                        "description": "Allows access to the suggest operations.",
                        "resource-types": "domain"
                    }
                },
                "tagging": {
                    "AddTags": {
                        "access-level": "tagging",
                        "actions": "AddTags",
                        "description": "Attaches resource tags to an Amazon CloudSearch domain.",
                        "resource-types": "domain*"
                    },
                    "RemoveTags": {
                        "access-level": "tagging",
                        "actions": "RemoveTags",
                        "description": "Removes the specified resource tags from an Amazon ES domain.",
                        "resource-types": "domain*"
                    }
                },
                "write": {
                    "BuildSuggesters": {
                        "access-level": "write",
                        "actions": "BuildSuggesters",
                        "description": "Indexes the search suggestions.",
                        "resource-types": "domain*"
                    },
                    "CreateDomain": {
                        "access-level": "write",
                        "actions": "CreateDomain",
                        "description": "Creates a new search domain.",
                        "resource-types": "domain*"
                    },
                    "DefineAnalysisScheme": {
                        "access-level": "write",
                        "actions": "DefineAnalysisScheme",
                        "description": "Configures an analysis scheme that can be applied to a text or text-array field to define language-specific text processing options.",
                        "resource-types": "domain*"
                    },
                    "DefineExpression": {
                        "access-level": "write",
                        "actions": "DefineExpression",
                        "description": "Configures an Expression for the search domain.",
                        "resource-types": "domain*"
                    },
                    "DefineIndexField": {
                        "access-level": "write",
                        "actions": "DefineIndexField",
                        "description": "Configures an IndexField for the search domain.",
                        "resource-types": "domain*"
                    },
                    "DefineSuggester": {
                        "access-level": "write",
                        "actions": "DefineSuggester",
                        "description": "Configures a suggester for a domain.",
                        "resource-types": "domain*"
                    },
                    "DeleteAnalysisScheme": {
                        "access-level": "write",
                        "actions": "DeleteAnalysisScheme",
                        "description": "Deletes an analysis scheme.",
                        "resource-types": "domain*"
                    },
                    "DeleteDomain": {
                        "access-level": "write",
                        "actions": "DeleteDomain",
                        "description": "Permanently deletes a search domain and all of its data.",
                        "resource-types": "domain*"
                    },
                    "DeleteExpression": {
                        "access-level": "write",
                        "actions": "DeleteExpression",
                        "description": "Removes an Expression from the search domain.",
                        "resource-types": "domain*"
                    },
                    "DeleteIndexField": {
                        "access-level": "write",
                        "actions": "DeleteIndexField",
                        "description": "Removes an IndexField from the search domain.",
                        "resource-types": "domain*"
                    },
                    "DeleteSuggester": {
                        "access-level": "write",
                        "actions": "DeleteSuggester",
                        "description": "Deletes a suggester.",
                        "resource-types": "domain*"
                    },
                    "IndexDocuments": {
                        "access-level": "write",
                        "actions": "IndexDocuments",
                        "description": "Tells the search domain to start indexing its documents using the latest indexing options.",
                        "resource-types": "domain*"
                    },
                    "UpdateAvailabilityOptions": {
                        "access-level": "write",
                        "actions": "UpdateAvailabilityOptions",
                        "description": "Configures the availability options for a domain.",
                        "resource-types": "domain*"
                    },
                    "UpdateScalingParameters": {
                        "access-level": "write",
                        "actions": "UpdateScalingParameters",
                        "description": "Configures scaling parameters for a domain.",
                        "resource-types": "domain*"
                    },
                    "document [permission only]": {
                        "access-level": "write",
                        "actions": "document [permission only]",
                        "description": "Allows access to the document service operations.",
                        "resource-types": "domain"
                    }
                }
            }
        },
        "cloudtrail": {
            "actions": {
                "list": {
                    "DescribeTrails": {
                        "access-level": "list",
                        "actions": "DescribeTrails",
                        "description": "Retrieves settings for the trail associated with the current region for your account"
                    },
                    "LookupEvents": {
                        "access-level": "list",
                        "actions": "LookupEvents",
                        "description": "Looks up API activity events captured by CloudTrail that create, update, or delete resources in your account."
                    }
                },
                "read": {
                    "GetTrailStatus": {
                        "access-level": "read",
                        "actions": "GetTrailStatus",
                        "description": "Returns a JSON-formatted list of information about the specified trail",
                        "resource-types": "trail*"
                    },
                    "ListPublicKeys": {
                        "access-level": "read",
                        "actions": "ListPublicKeys",
                        "description": "Returns all public keys whose private keys were used to sign the digest files within the specified time range"
                    },
                    "ListTags": {
                        "access-level": "read",
                        "actions": "ListTags",
                        "description": "Lists the tags for the trail in the current region",
                        "resource-types": "trail*"
                    }
                },
                "tagging": {
                    "AddTags": {
                        "access-level": "tagging",
                        "actions": "AddTags",
                        "description": "Adds one or more tags to a trail, up to a limit of 10",
                        "resource-types": "trail*"
                    },
                    "RemoveTags": {
                        "access-level": "tagging",
                        "actions": "RemoveTags",
                        "description": "Removes the specified tags from a trail",
                        "resource-types": "trail*"
                    }
                },
                "write": {
                    "CreateTrail": {
                        "access-level": "write",
                        "actions": "CreateTrail",
                        "dependent-actions": "s3:PutObject",
                        "description": "Creates a trail that specifies the settings for delivery of log data to an Amazon S3 bucket",
                        "resource-types": "trail*"
                    },
                    "DeleteTrail": {
                        "access-level": "write",
                        "actions": "DeleteTrail",
                        "description": "Deletes a trail",
                        "resource-types": "trail*"
                    },
                    "StartLogging": {
                        "access-level": "write",
                        "actions": "StartLogging",
                        "description": "Starts the recording of AWS API calls and log file delivery for a trail",
                        "resource-types": "trail*"
                    },
                    "StopLogging": {
                        "access-level": "write",
                        "actions": "StopLogging",
                        "description": "Suspends the recording of AWS API calls and log file delivery for the specified trail",
                        "resource-types": "trail*"
                    },
                    "UpdateTrail": {
                        "access-level": "write",
                        "actions": "UpdateTrail",
                        "description": "Updates the settings that specify delivery of log files",
                        "resource-types": "trail*"
                    }
                }
            }
        },
        "cloudwatch": {
            "actions": {
                "list": {
                    "ListDashboards": {
                        "access-level": "list",
                        "actions": "ListDashboards",
                        "description": "Returns a list of all CloudWatch dashboards in your account"
                    },
                    "ListMetrics": {
                        "access-level": "list",
                        "actions": "ListMetrics",
                        "description": "Returns a list of valid metrics stored for the AWS account owner"
                    }
                },
                "read": {
                    "DescribeAlarmHistory": {
                        "access-level": "read",
                        "actions": "DescribeAlarmHistory",
                        "description": "Retrieves history for the specified alarm"
                    },
                    "DescribeAlarms": {
                        "access-level": "read",
                        "actions": "DescribeAlarms",
                        "description": "Retrieves alarms with the specified names"
                    },
                    "DescribeAlarmsForMetric": {
                        "access-level": "read",
                        "actions": "DescribeAlarmsForMetric",
                        "description": "Retrieves all alarms for a single metric"
                    },
                    "GetDashboard": {
                        "access-level": "read",
                        "actions": "GetDashboard",
                        "description": "Displays the details of the CloudWatch dashboard you specify"
                    },
                    "GetMetricData": {
                        "access-level": "read",
                        "actions": "GetMetricData",
                        "description": "Required to retrieve batch amounts of CloudWatch metric data and perform metric math on retrieved data"
                    },
                    "GetMetricStatistics": {
                        "access-level": "read",
                        "actions": "GetMetricStatistics",
                        "description": "Gets statistics for the specified metric"
                    },
                    "GetMetricWidgetImage": {
                        "access-level": "read",
                        "actions": "GetMetricWidgetImage",
                        "description": "Required to retrieve snapshots of metric widgets"
                    }
                },
                "write": {
                    "DeleteAlarms": {
                        "access-level": "write",
                        "actions": "DeleteAlarms",
                        "description": "Deletes all specified alarms. In the event of an error, no alarms are deleted"
                    },
                    "DeleteDashboards": {
                        "access-level": "write",
                        "actions": "DeleteDashboards",
                        "description": "Deletes all CloudWatch dashboards that you specify"
                    },
                    "DisableAlarmActions": {
                        "access-level": "write",
                        "actions": "DisableAlarmActions",
                        "description": "Disables actions for the specified alarms"
                    },
                    "EnableAlarmActions": {
                        "access-level": "write",
                        "actions": "EnableAlarmActions",
                        "description": "Enables actions for the specified alarms"
                    },
                    "PutDashboard": {
                        "access-level": "write",
                        "actions": "PutDashboard",
                        "description": "Creates a CloudWatch dashboard, or updates an existing dashboard if it already exists"
                    },
                    "PutMetricAlarm": {
                        "access-level": "write",
                        "actions": "PutMetricAlarm",
                        "description": "Creates or updates an alarm and associates it with the specified Amazon CloudWatch metric"
                    },
                    "PutMetricData": {
                        "access-level": "write",
                        "actions": "PutMetricData",
                        "description": "Publishes metric data points to Amazon CloudWatch"
                    },
                    "SetAlarmState": {
                        "access-level": "write",
                        "actions": "SetAlarmState",
                        "description": "Temporarily sets the state of an alarm for testing purposes"
                    }
                }
            }
        },
        "cloudwatchevents": {
            "actions": {
                "list": {
                    "ListRuleNamesByTarget": {
                        "access-level": "list",
                        "actions": "ListRuleNamesByTarget",
                        "description": "Lists the names of the rules that the given target is put to",
                        "resource-types": "rule*"
                    },
                    "ListRules": {
                        "access-level": "list",
                        "actions": "ListRules",
                        "description": "Lists the Amazon CloudWatch Events rules in your account",
                        "resource-types": "rule*"
                    },
                    "ListTargetsByRule": {
                        "access-level": "list",
                        "actions": "ListTargetsByRule",
                        "description": "Lists of targets assigned to the rule",
                        "resource-types": "rule*"
                    }
                },
                "read": {
                    "DescribeEventBus": {
                        "access-level": "read",
                        "actions": "DescribeEventBus",
                        "description": "Displays the external AWS accounts that are permitted to write events to your account using your account\\'s event bus, and the associated policy."
                    },
                    "DescribeRule": {
                        "access-level": "read",
                        "actions": "DescribeRule",
                        "description": "Describes the details of the specified rule",
                        "resource-types": "rule*"
                    },
                    "TestEventPattern": {
                        "access-level": "read",
                        "actions": "TestEventPattern",
                        "description": "Tests whether an event pattern matches the provided event"
                    }
                },
                "write": {
                    "DeleteRule": {
                        "access-level": "write",
                        "actions": "DeleteRule",
                        "description": "Deletes a rule. You must remove all targets from a rule using RemoveTargets before you can delete the rule.",
                        "resource-types": "rule*"
                    },
                    "DisableRule": {
                        "access-level": "write",
                        "actions": "DisableRule",
                        "description": "Disables a rule. A disabled rule won\\'t match any events, and won\\'t self-trigger if it has a schedule expression.",
                        "resource-types": "rule*"
                    },
                    "EnableRule": {
                        "access-level": "write",
                        "actions": "EnableRule",
                        "description": "Enables a rule. If the rule does not exist, the operation fails",
                        "resource-types": "rule*"
                    },
                    "PutEvents": {
                        "access-level": "write",
                        "actions": "PutEvents",
                        "description": "Sends custom events to Amazon CloudWatch Events so that they can be matched to rules"
                    },
                    "PutPermission": {
                        "access-level": "write",
                        "actions": "PutPermission",
                        "description": "Running PutPermission permits the specified AWS account to put events to your account\\'s default event bus."
                    },
                    "PutRule": {
                        "access-level": "write",
                        "actions": "PutRule",
                        "condition-keys": [
                            "events:detail.userIdentity.principalId",
                            "events:detail-type",
                            "events:source",
                            "events:detail.service",
                            "events:detail.eventTypeCode"
                        ],
                        "description": "Creates or updates a rule. Rules are enabled by default, or based on value of the State parameter"
                    },
                    "PutTargets": {
                        "access-level": "write",
                        "actions": "PutTargets",
                        "condition-keys": [
                            "events:TargetArn"
                        ],
                        "description": "Adds target(s) to a rule. Targets are the resources that can be invoked when a rule is triggered"
                    },
                    "RemovePermission": {
                        "access-level": "write",
                        "actions": "RemovePermission",
                        "description": "Revokes the permission of another AWS account to be able to put events to your default event bus."
                    },
                    "RemoveTargets": {
                        "access-level": "write",
                        "actions": "RemoveTargets",
                        "description": "Removes target(s) from a rule so that when the rule is triggered, those targets will no longer be invoked",
                        "resource-types": "rule*"
                    }
                }
            }
        },
        "cloudwatchlogs": {
            "actions": {
                "list": {
                    "DescribeDestinations": {
                        "access-level": "list",
                        "actions": "DescribeDestinations",
                        "description": "Returns all the destinations that are associated with the AWS account making the request"
                    },
                    "DescribeExportTasks": {
                        "access-level": "list",
                        "actions": "DescribeExportTasks",
                        "description": "Returns all the export tasks that are associated with the AWS account making the request"
                    },
                    "DescribeLogGroups": {
                        "access-level": "list",
                        "actions": "DescribeLogGroups",
                        "description": "Returns all the log groups that are associated with the AWS account making the request",
                        "resource-types": "log-group*"
                    },
                    "DescribeLogStreams": {
                        "access-level": "list",
                        "actions": "DescribeLogStreams",
                        "description": "Returns all the log streams that are associated with the specified log group",
                        "resource-types": "log-group*"
                    },
                    "DescribeMetricFilters": {
                        "access-level": "list",
                        "actions": "DescribeMetricFilters",
                        "description": "Returns all the metrics filters associated with the specified log group",
                        "resource-types": "log-group*"
                    },
                    "DescribeQueries": {
                        "access-level": "list",
                        "actions": "DescribeQueries",
                        "description": "Returns a list of CloudWatch Logs Insights queries that are scheduled, executing, or have been executed recently in this account. You can request all queries, or limit it to queries of a specific log group or queries with a certain status."
                    },
                    "DescribeResourcePolicies": {
                        "access-level": "list",
                        "actions": "DescribeResourcePolicies",
                        "description": "Return all the resource policies in this account."
                    },
                    "DescribeSubscriptionFilters": {
                        "access-level": "list",
                        "actions": "DescribeSubscriptionFilters",
                        "description": "Returns all the subscription filters associated with the specified log group",
                        "resource-types": "log-group*"
                    },
                    "ListLogDeliveries [permission only]": {
                        "access-level": "list",
                        "actions": "ListLogDeliveries [permission only]",
                        "description": "Lists all the log deliveries for specified account and/or log source"
                    },
                    "ListTagsLogGroup": {
                        "access-level": "list",
                        "actions": "ListTagsLogGroup",
                        "description": "Lists the tags for the specified log group",
                        "resource-types": "log-group*"
                    }
                },
                "read": {
                    "FilterLogEvents": {
                        "access-level": "read",
                        "actions": "FilterLogEvents",
                        "description": "Retrieves log events, optionally filtered by a filter pattern from the specified log group",
                        "resource-types": "log-group*"
                    },
                    "GetLogDelivery [permission only]": {
                        "access-level": "read",
                        "actions": "GetLogDelivery [permission only]",
                        "description": "Gets the log delivery information for specified log delivery"
                    },
                    "GetLogEvents": {
                        "access-level": "read",
                        "actions": "GetLogEvents",
                        "description": "Retrieves log events from the specified log stream",
                        "resource-types": "log-group*"
                    },
                    "GetLogGroupFields": {
                        "access-level": "read",
                        "actions": "GetLogGroupFields",
                        "description": "Returns a list of the fields that are included in log events in the specified log group, along with the percentage of log events that contain each field. The search is limited to a time period that you specify.",
                        "resource-types": "log-group*"
                    },
                    "GetLogRecord": {
                        "access-level": "read",
                        "actions": "GetLogRecord",
                        "description": "Retrieves all the fields and values of a single log event. All fields are retrieved, even if the original query that produced the logRecordPointer retrieved only a subset of fields. Fields are returned as field name/field value pairs."
                    },
                    "GetQueryResults": {
                        "access-level": "read",
                        "actions": "GetQueryResults",
                        "description": "Returns the results from the specified query. If the query is in progress, partial results of that current execution are returned. Only the fields requested in the query are returned."
                    },
                    "StartQuery": {
                        "access-level": "read",
                        "actions": "StartQuery",
                        "description": "Schedules a query of a log group using CloudWatch Logs Insights. You specify the log group and time range to query, and the query string to use.",
                        "resource-types": "log-group*"
                    },
                    "StopQuery": {
                        "access-level": "read",
                        "actions": "StopQuery",
                        "description": "Stops a CloudWatch Logs Insights query that is in progress. If the query has already ended, the operation returns an error indicating that the specified query is not running."
                    },
                    "TestMetricFilter": {
                        "access-level": "read",
                        "actions": "TestMetricFilter",
                        "description": "Tests the filter pattern of a metric filter against a sample of log event messages"
                    },
                    "log-stream*": {
                        "access-level": "read",
                        "actions": "log-stream*"
                    }
                },
                "write": {
                    "AssociateKmsKey": {
                        "access-level": "write",
                        "actions": "AssociateKmsKey",
                        "description": "Associates the specified AWS Key Management Service (AWS KMS) customer master key (CMK) with the specified log group.",
                        "resource-types": "log-group*"
                    },
                    "CancelExportTask": {
                        "access-level": "write",
                        "actions": "CancelExportTask",
                        "description": "Cancels an export task if it is in PENDING or RUNNING state"
                    },
                    "CreateExportTask": {
                        "access-level": "write",
                        "actions": "CreateExportTask",
                        "description": "Creates an ExportTask which allows you to efficiently export data from a Log Group to your Amazon S3 bucket",
                        "resource-types": "log-group*"
                    },
                    "CreateLogDelivery [permission only]": {
                        "access-level": "write",
                        "actions": "CreateLogDelivery [permission only]",
                        "description": "Creates the log delivery"
                    },
                    "CreateLogGroup": {
                        "access-level": "write",
                        "actions": "CreateLogGroup",
                        "description": "Creates a new log group with the specified name"
                    },
                    "CreateLogStream": {
                        "access-level": "write",
                        "actions": "CreateLogStream",
                        "description": "Creates a new log stream with the specified name",
                        "resource-types": "log-group*"
                    },
                    "DeleteDestination": {
                        "access-level": "write",
                        "actions": "DeleteDestination",
                        "description": "Deletes the destination with the specified name and eventually disables all the subscription filters that publish to it"
                    },
                    "DeleteLogDelivery [permission only]": {
                        "access-level": "write",
                        "actions": "DeleteLogDelivery [permission only]",
                        "description": "Deletes the log delivery information for specified log delivery"
                    },
                    "DeleteLogGroup": {
                        "access-level": "write",
                        "actions": "DeleteLogGroup",
                        "description": "Deletes the log group with the specified name and permanently deletes all the archived log events associated with it",
                        "resource-types": "log-group*"
                    },
                    "DeleteLogStream": {
                        "access-level": "write",
                        "actions": "DeleteLogStream",
                        "description": "Deletes a log stream and permanently deletes all the archived log events associated with it",
                        "resource-types": "log-group*"
                    },
                    "DeleteMetricFilter": {
                        "access-level": "write",
                        "actions": "DeleteMetricFilter",
                        "description": "Deletes a metric filter associated with the specified log group",
                        "resource-types": "log-group*"
                    },
                    "DeleteResourcePolicy": {
                        "access-level": "write",
                        "actions": "DeleteResourcePolicy",
                        "description": "Deletes a resource policy from this account"
                    },
                    "DeleteRetentionPolicy": {
                        "access-level": "write",
                        "actions": "DeleteRetentionPolicy",
                        "description": "Deletes the retention policy of the specified log group",
                        "resource-types": "log-group*"
                    },
                    "DeleteSubscriptionFilter": {
                        "access-level": "write",
                        "actions": "DeleteSubscriptionFilter",
                        "description": "Deletes a subscription filter associated with the specified log group",
                        "resource-types": "log-group*"
                    },
                    "DisassociateKmsKey": {
                        "access-level": "write",
                        "actions": "DisassociateKmsKey",
                        "description": "Disassociates the associated AWS Key Management Service (AWS KMS) customer master key (CMK) from the specified log group",
                        "resource-types": "log-group*"
                    },
                    "PutDestination": {
                        "access-level": "write",
                        "actions": "PutDestination",
                        "description": "Creates or updates a Destination"
                    },
                    "PutDestinationPolicy": {
                        "access-level": "write",
                        "actions": "PutDestinationPolicy",
                        "description": "Creates or updates an access policy associated with an existing Destination"
                    },
                    "PutLogEvents": {
                        "access-level": "write",
                        "actions": "PutLogEvents",
                        "description": "Uploads a batch of log events to the specified log stream",
                        "resource-types": "log-group*"
                    },
                    "PutMetricFilter": {
                        "access-level": "write",
                        "actions": "PutMetricFilter",
                        "description": "Creates or updates a metric filter and associates it with the specified log group",
                        "resource-types": "log-group*"
                    },
                    "PutResourcePolicy": {
                        "access-level": "write",
                        "actions": "PutResourcePolicy",
                        "description": "Creates or updates a resource policy allowing other AWS services to put log events to this account"
                    },
                    "PutRetentionPolicy": {
                        "access-level": "write",
                        "actions": "PutRetentionPolicy",
                        "description": "Sets the retention of the specified log group",
                        "resource-types": "log-group*"
                    },
                    "PutSubscriptionFilter": {
                        "access-level": "write",
                        "actions": "PutSubscriptionFilter",
                        "description": "Creates or updates a subscription filter and associates it with the specified log group",
                        "resource-types": "log-group*"
                    },
                    "TagLogGroup": {
                        "access-level": "write",
                        "actions": "TagLogGroup",
                        "description": "Adds or updates the specified tags for the specified log group",
                        "resource-types": "log-group*"
                    },
                    "UntagLogGroup": {
                        "access-level": "write",
                        "actions": "UntagLogGroup",
                        "description": "Removes the specified tags from the specified log group",
                        "resource-types": "log-group*"
                    },
                    "UpdateLogDelivery [permission only]": {
                        "access-level": "write",
                        "actions": "UpdateLogDelivery [permission only]",
                        "description": "Updates the log delivery information for specified log delivery"
                    },
                    "log-stream*": {
                        "access-level": "write",
                        "actions": "log-stream*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "log-group": {
                    "arn": "arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}",
                    "resource-types": "log-group"
                },
                "log-stream": {
                    "arn": "arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:${LogStream}:${LogStreamName}",
                    "resource-types": "log-stream"
                }
            }
        },
        "codebuild": {
            "actions": {
                "list": {
                    "ListBuilds": {
                        "access-level": "list",
                        "actions": "ListBuilds",
                        "description": "Gets a list of build IDs, with each build ID representing a single build."
                    },
                    "ListBuildsForProject": {
                        "access-level": "list",
                        "actions": "ListBuildsForProject",
                        "description": "Gets a list of build IDs for the specified build project, with each build ID representing a single build.",
                        "resource-types": "project*"
                    },
                    "ListProjects": {
                        "access-level": "list",
                        "actions": "ListProjects",
                        "description": "Gets a list of build project names, with each build project name representing a single build project."
                    }
                },
                "read": {
                    "BatchGetBuilds": {
                        "access-level": "read",
                        "actions": "BatchGetBuilds",
                        "description": "Gets information about one or more builds.",
                        "resource-types": "project*"
                    },
                    "BatchGetProjects": {
                        "access-level": "read",
                        "actions": "BatchGetProjects",
                        "description": "Gets information about one or more build projects.",
                        "resource-types": "project*"
                    },
                    "ListConnectedOAuthAccounts": {
                        "access-level": "read",
                        "actions": "ListConnectedOAuthAccounts",
                        "description": "Lists connected third-party OAuth providers. Only used in the AWS CodeBuild console."
                    },
                    "ListCuratedEnvironmentImages": {
                        "access-level": "read",
                        "actions": "ListCuratedEnvironmentImages",
                        "description": "Gets information about Docker images that are managed by AWS CodeBuild."
                    },
                    "ListRepositories": {
                        "access-level": "read",
                        "actions": "ListRepositories",
                        "description": "Lists source code repositories from a connected third-party OAuth provider. Only used in the AWS CodeBuild console."
                    }
                },
                "write": {
                    "BatchDeleteBuilds": {
                        "access-level": "write",
                        "actions": "BatchDeleteBuilds",
                        "description": "Deletes one or more builds.",
                        "resource-types": "project*"
                    },
                    "CreateProject": {
                        "access-level": "write",
                        "actions": "CreateProject",
                        "description": "Creates a build project.",
                        "resource-types": "project*"
                    },
                    "DeleteProject": {
                        "access-level": "write",
                        "actions": "DeleteProject",
                        "description": "Deletes a build project.",
                        "resource-types": "project*"
                    },
                    "PersistOAuthToken": {
                        "access-level": "write",
                        "actions": "PersistOAuthToken",
                        "description": "Saves an OAuth token from a connected third-party OAuth provider. Only used in the AWS CodeBuild console."
                    },
                    "StartBuild": {
                        "access-level": "write",
                        "actions": "StartBuild",
                        "description": "Starts running a build.",
                        "resource-types": "project*"
                    },
                    "StopBuild": {
                        "access-level": "write",
                        "actions": "StopBuild",
                        "description": "Attempts to stop running a build.",
                        "resource-types": "project*"
                    },
                    "UpdateProject": {
                        "access-level": "write",
                        "actions": "UpdateProject",
                        "description": "Changes the settings of an existing build project.",
                        "resource-types": "project*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "build": {
                    "arn": "arn:${Partition}:codebuild:${Region}:${Account}:build/${BuildId}",
                    "resource-types": "build"
                },
                "project": {
                    "arn": "arn:${Partition}:codebuild:${Region}:${Account}:project/${ProjectName}",
                    "resource-types": "project"
                }
            }
        },
        "codecommit": {
            "actions": {
                "list": {
                    "ListBranches": {
                        "access-level": "list",
                        "actions": "ListBranches",
                        "description": "Get a list of branches in an AWS CodeCommit repository.",
                        "resource-types": "repository*"
                    },
                    "ListPullRequests": {
                        "access-level": "list",
                        "actions": "ListPullRequests",
                        "description": "Returns a list of pull requests for a specified repository. The return list can be refined by pull request status or pull request author ARN.",
                        "resource-types": "repository*"
                    },
                    "ListRepositories": {
                        "access-level": "list",
                        "actions": "ListRepositories",
                        "description": "Gets information about one or more repositories."
                    }
                },
                "read": {
                    "BatchGetPullRequests [permission only]": {
                        "access-level": "read",
                        "actions": "BatchGetPullRequests [permission only]",
                        "description": "Returns information about one or more pull requests in an AWS CodeCommit repository.",
                        "resource-types": "repository*"
                    },
                    "BatchGetRepositories": {
                        "access-level": "read",
                        "actions": "BatchGetRepositories",
                        "description": "Get information about multiple repositories.",
                        "resource-types": "repository*"
                    },
                    "CancelUploadArchive [permission only]": {
                        "access-level": "read",
                        "actions": "CancelUploadArchive [permission only]",
                        "description": "Required to cancel the uploading of an archive to a pipeline.",
                        "resource-types": "repository*"
                    },
                    "DescribePullRequestEvents": {
                        "access-level": "read",
                        "actions": "DescribePullRequestEvents",
                        "description": "Returns information about one or more pull request events.",
                        "resource-types": "repository*"
                    },
                    "GetBlob": {
                        "access-level": "read",
                        "actions": "GetBlob",
                        "description": "View the encoded content of an individual file in an AWS CodeCommit repository from the AWS CodeCommit console.",
                        "resource-types": "repository*"
                    },
                    "GetBranch": {
                        "access-level": "read",
                        "actions": "GetBranch",
                        "description": "Get details about a branch in an AWS CodeCommit repository.",
                        "resource-types": "repository*"
                    },
                    "GetComment": {
                        "access-level": "read",
                        "actions": "GetComment",
                        "description": "Returns the content of a comment made on a change, file, or commit in a repository.",
                        "resource-types": "repository*"
                    },
                    "GetCommentsForComparedCommit": {
                        "access-level": "read",
                        "actions": "GetCommentsForComparedCommit",
                        "description": "Returns information about comments made on the comparison between two commits.",
                        "resource-types": "repository*"
                    },
                    "GetCommentsForPullRequest": {
                        "access-level": "read",
                        "actions": "GetCommentsForPullRequest",
                        "description": "Returns comments made on a pull request.",
                        "resource-types": "repository*"
                    },
                    "GetCommit": {
                        "access-level": "read",
                        "actions": "GetCommit",
                        "description": "Returns information about a commit, including commit message and committer information.",
                        "resource-types": "repository*"
                    },
                    "GetCommitHistory [permission only]": {
                        "access-level": "read",
                        "actions": "GetCommitHistory [permission only]",
                        "description": "Returns information about the history of commits in a repository.",
                        "resource-types": "repository*"
                    },
                    "GetCommitsFromMergeBase [permission only]": {
                        "access-level": "read",
                        "actions": "GetCommitsFromMergeBase [permission only]",
                        "description": "Returns information about the difference between commits in the context of a potential merge.",
                        "resource-types": "repository*"
                    },
                    "GetDifferences": {
                        "access-level": "read",
                        "actions": "GetDifferences",
                        "description": "Enables the user to view information about the differences in a valid commit specifier (such as a branch, tag, HEAD, commit ID or other fully qualified reference). Results can be limited to a specified path.",
                        "resource-types": "repository*"
                    },
                    "GetFile": {
                        "access-level": "read",
                        "actions": "GetFile",
                        "description": "Returns the base-64 encoded contents of a specified file and its metadata.",
                        "resource-types": "repository*"
                    },
                    "GetFolder": {
                        "access-level": "read",
                        "actions": "GetFolder",
                        "description": "Returns the contents of a specified folder in a repository.",
                        "resource-types": "repository*"
                    },
                    "GetMergeConflicts": {
                        "access-level": "read",
                        "actions": "GetMergeConflicts",
                        "description": "Returns information about merge conflicts between the before and after commit IDs for a pull request in a repository.",
                        "resource-types": "repository*"
                    },
                    "GetObjectIdentifier [permission only]": {
                        "access-level": "read",
                        "actions": "GetObjectIdentifier [permission only]",
                        "description": "Resolve blobs, trees, and commits to their identifier.",
                        "resource-types": "repository*"
                    },
                    "GetPullRequest": {
                        "access-level": "read",
                        "actions": "GetPullRequest",
                        "description": "Gets information about a pull request in a specified repository.",
                        "resource-types": "repository*"
                    },
                    "GetReferences [permission only]": {
                        "access-level": "read",
                        "actions": "GetReferences [permission only]",
                        "description": "Get details about references in an AWS CodeCommit repository.",
                        "resource-types": "repository*"
                    },
                    "GetRepository": {
                        "access-level": "read",
                        "actions": "GetRepository",
                        "description": "Get information about a single AWS CodeCommit repository.",
                        "resource-types": "repository*"
                    },
                    "GetRepositoryTriggers": {
                        "access-level": "read",
                        "actions": "GetRepositoryTriggers",
                        "description": "Gets information about triggers configured for a repository.",
                        "resource-types": "repository*"
                    },
                    "GetTree [permission only]": {
                        "access-level": "read",
                        "actions": "GetTree [permission only]",
                        "description": "View the contents of a specified tree in an AWS CodeCommit repository from the AWS CodeCommit console.",
                        "resource-types": "repository*"
                    },
                    "GetUploadArchiveStatus [permission only]": {
                        "access-level": "read",
                        "actions": "GetUploadArchiveStatus [permission only]",
                        "condition-keys": [
                            "Required",
                            "to",
                            "determine",
                            "the",
                            "status",
                            "of",
                            "an",
                            "archive",
                            "upload:",
                            "whether",
                            "it",
                            "is",
                            "in",
                            "progress,",
                            "complete,",
                            "cancelled,",
                            "or",
                            "if",
                            "an",
                            "error",
                            "occurred."
                        ],
                        "resource-types": "repository*"
                    },
                    "GitPull [permission only]": {
                        "access-level": "read",
                        "actions": "GitPull [permission only]",
                        "description": "Pull information from an AWS CodeCommit repository to a local repo.",
                        "resource-types": "repository*"
                    }
                },
                "write": {
                    "CreateBranch": {
                        "access-level": "write",
                        "actions": "CreateBranch",
                        "description": "Create a branch in an AWS CodeCommit repository.",
                        "resource-types": "repository*"
                    },
                    "CreatePullRequest": {
                        "access-level": "write",
                        "actions": "CreatePullRequest",
                        "description": "Creates a pull request in the specified repository.",
                        "resource-types": "repository*"
                    },
                    "CreateRepository": {
                        "access-level": "write",
                        "actions": "CreateRepository",
                        "description": "Create a new AWS CodeCommit repository.",
                        "resource-types": "repository*"
                    },
                    "DeleteBranch": {
                        "access-level": "write",
                        "actions": "DeleteBranch",
                        "description": "Delete a branch in an AWS CodeCommit repository.",
                        "resource-types": "repository*"
                    },
                    "DeleteCommentContent": {
                        "access-level": "write",
                        "actions": "DeleteCommentContent",
                        "description": "Deletes the content of a comment made on a change, file, or commit in a repository.",
                        "resource-types": "repository*"
                    },
                    "DeleteFile": {
                        "access-level": "write",
                        "actions": "DeleteFile",
                        "description": "Deletes a specified file from a specified branch.",
                        "resource-types": "repository*"
                    },
                    "DeleteRepository": {
                        "access-level": "write",
                        "actions": "DeleteRepository",
                        "description": "Delete an AWS CodeCommit repository.",
                        "resource-types": "repository*"
                    },
                    "GitPush [permission only]": {
                        "access-level": "write",
                        "actions": "GitPush [permission only]",
                        "description": "Push information from a local repo to an AWS CodeCommit repository.",
                        "resource-types": "repository*"
                    },
                    "MergePullRequestByFastForward": {
                        "access-level": "write",
                        "actions": "MergePullRequestByFastForward",
                        "description": "Closes a pull request and attempts to merge the source commit of a pull request into the specified destination branch for that pull request at the specified commit using the fast-forward merge option.",
                        "resource-types": "repository*"
                    },
                    "PostCommentForComparedCommit": {
                        "access-level": "write",
                        "actions": "PostCommentForComparedCommit",
                        "description": "Posts a comment on the comparison between two commits.",
                        "resource-types": "repository*"
                    },
                    "PostCommentForPullRequest": {
                        "access-level": "write",
                        "actions": "PostCommentForPullRequest",
                        "description": "Posts a comment on a pull request.",
                        "resource-types": "repository*"
                    },
                    "PostCommentReply": {
                        "access-level": "write",
                        "actions": "PostCommentReply",
                        "description": "Posts a comment in reply to an existing comment on a comparison between commits or a pull request.",
                        "resource-types": "repository*"
                    },
                    "PutFile": {
                        "access-level": "write",
                        "actions": "PutFile",
                        "description": "Enables the user to add or update a file in a branch in an AWS CodeCommit repository, and generate a commit for the addition in the specified branch.",
                        "resource-types": "repository*"
                    },
                    "PutRepositoryTriggers": {
                        "access-level": "write",
                        "actions": "PutRepositoryTriggers",
                        "description": "Replaces all triggers for a repository. This can be used to create or delete triggers.",
                        "resource-types": "repository*"
                    },
                    "TestRepositoryTriggers": {
                        "access-level": "write",
                        "actions": "TestRepositoryTriggers",
                        "description": "Tests the functionality of repository triggers by sending information to the trigger target.",
                        "resource-types": "repository*"
                    },
                    "UpdateComment": {
                        "access-level": "write",
                        "actions": "UpdateComment",
                        "description": "Replaces the contents of a comment.",
                        "resource-types": "repository*"
                    },
                    "UpdateDefaultBranch": {
                        "access-level": "write",
                        "actions": "UpdateDefaultBranch",
                        "description": "Change the default branch in an AWS CodeCommit repository.",
                        "resource-types": "repository*"
                    },
                    "UpdatePullRequestDescription": {
                        "access-level": "write",
                        "actions": "UpdatePullRequestDescription",
                        "description": "Replaces the contents of the description of a pull request.",
                        "resource-types": "repository*"
                    },
                    "UpdatePullRequestStatus": {
                        "access-level": "write",
                        "actions": "UpdatePullRequestStatus",
                        "description": "Updates the status of a pull request.",
                        "resource-types": "repository*"
                    },
                    "UpdatePullRequestTitle": {
                        "access-level": "write",
                        "actions": "UpdatePullRequestTitle",
                        "description": "Replaces the title of a pull request.",
                        "resource-types": "repository*"
                    },
                    "UpdateRepositoryDescription": {
                        "access-level": "write",
                        "actions": "UpdateRepositoryDescription",
                        "description": "Change the description of an AWS CodeCommit repository.",
                        "resource-types": "repository*"
                    },
                    "UpdateRepositoryName": {
                        "access-level": "write",
                        "actions": "UpdateRepositoryName",
                        "description": "Change the name of an AWS CodeCommit repository.",
                        "resource-types": "repository*"
                    },
                    "UploadArchive [permission only]": {
                        "access-level": "write",
                        "actions": "UploadArchive [permission only]",
                        "description": "Allows the service role for AWS CodePipeline to upload repository changes into a pipeline.",
                        "resource-types": "repository*"
                    }
                }
            }
        },
        "codedeploy": {
            "actions": {
                "list": {
                    "GetApplication": {
                        "access-level": "list",
                        "actions": "GetApplication",
                        "description": "Get information about a single application associated with the IAM user.",
                        "resource-types": "application*"
                    },
                    "GetApplicationRevision": {
                        "access-level": "list",
                        "actions": "GetApplicationRevision",
                        "description": "Get information about a single application revision for an application associated with the IAM user.",
                        "resource-types": "application*"
                    },
                    "GetDeployment": {
                        "access-level": "list",
                        "actions": "GetDeployment",
                        "description": "Get information about a single deployment to a deployment group for an application associated with the IAM user.",
                        "resource-types": "deploymentgroup*"
                    },
                    "GetDeploymentConfig": {
                        "access-level": "list",
                        "actions": "GetDeploymentConfig",
                        "description": "Get information about a single deployment configuration associated with the IAM user.",
                        "resource-types": "deploymentconfig*"
                    },
                    "GetDeploymentGroup": {
                        "access-level": "list",
                        "actions": "GetDeploymentGroup",
                        "description": "Get information about a single deployment group for an application associated with the IAM user.",
                        "resource-types": "deploymentgroup*"
                    },
                    "GetDeploymentInstance": {
                        "access-level": "list",
                        "actions": "GetDeploymentInstance",
                        "description": "Get information about a single instance in a deployment associated with the IAM user.",
                        "resource-types": "deploymentgroup*"
                    },
                    "GetOnPremisesInstance": {
                        "access-level": "list",
                        "actions": "GetOnPremisesInstance",
                        "description": "Get information about a single on-premises instance.",
                        "resource-types": "instance*"
                    },
                    "ListApplicationRevisions": {
                        "access-level": "list",
                        "actions": "ListApplicationRevisions",
                        "description": "Get information about all application revisions for an application associated with the IAM user.",
                        "resource-types": "application*"
                    },
                    "ListApplications": {
                        "access-level": "list",
                        "actions": "ListApplications",
                        "description": "Get information about all applications associated with the IAM user."
                    },
                    "ListDeploymentConfigs": {
                        "access-level": "list",
                        "actions": "ListDeploymentConfigs",
                        "description": "Get information about all deployment configurations associated with the IAM user."
                    },
                    "ListDeploymentGroups": {
                        "access-level": "list",
                        "actions": "ListDeploymentGroups",
                        "description": "Get information about all deployment groups for an application associated with the IAM user.",
                        "resource-types": "application*"
                    },
                    "ListDeploymentInstances": {
                        "access-level": "list",
                        "actions": "ListDeploymentInstances",
                        "description": "Get information about all instances in a deployment associated with the IAM user.",
                        "resource-types": "deploymentgroup*"
                    },
                    "ListDeployments": {
                        "access-level": "list",
                        "actions": "ListDeployments",
                        "description": "Get information about all deployments to a deployment group associated with the IAM user, or to get all deployments associated with the IAM user.",
                        "resource-types": "deploymentgroup*"
                    },
                    "ListOnPremisesInstances": {
                        "access-level": "list",
                        "actions": "ListOnPremisesInstances",
                        "description": "Get a list of one or more on-premises instance names."
                    }
                },
                "read": {
                    "BatchGetApplicationRevisions": {
                        "access-level": "read",
                        "actions": "BatchGetApplicationRevisions",
                        "description": "Gets information about one or more application revisions.",
                        "resource-types": "application*"
                    },
                    "BatchGetApplications": {
                        "access-level": "read",
                        "actions": "BatchGetApplications",
                        "description": "Get information about multiple applications associated with the IAM user.",
                        "resource-types": "application*"
                    },
                    "BatchGetDeploymentGroups": {
                        "access-level": "read",
                        "actions": "BatchGetDeploymentGroups",
                        "description": "Get information about one or more deployment groups.",
                        "resource-types": "deploymentgroup*"
                    },
                    "BatchGetDeploymentInstances": {
                        "access-level": "read",
                        "actions": "BatchGetDeploymentInstances",
                        "description": "Gets information about one or more instance that are part of a deployment group.",
                        "resource-types": "deploymentgroup*"
                    },
                    "BatchGetDeployments": {
                        "access-level": "read",
                        "actions": "BatchGetDeployments",
                        "description": "Get information about multiple deployments associated with the IAM user.",
                        "resource-types": "deploymentgroup*"
                    },
                    "BatchGetOnPremisesInstances": {
                        "access-level": "read",
                        "actions": "BatchGetOnPremisesInstances",
                        "description": "Get information about one or more on-premises instances.",
                        "resource-types": "instance*"
                    }
                },
                "tagging": {
                    "AddTagsToOnPremisesInstances": {
                        "access-level": "tagging",
                        "actions": "AddTagsToOnPremisesInstances",
                        "description": "Add tags to one or more on-premises instances.",
                        "resource-types": "instance*"
                    },
                    "RemoveTagsFromOnPremisesInstances": {
                        "access-level": "tagging",
                        "actions": "RemoveTagsFromOnPremisesInstances",
                        "description": "Remove tags from one or more on-premises instances.",
                        "resource-types": "instance*"
                    }
                },
                "write": {
                    "ContinueDeployment": {
                        "access-level": "write",
                        "actions": "ContinueDeployment",
                        "description": "Starts the process of rerouting traffic from instances in the original environment to instances in thereplacement environment without waiting for a specified wait time to elapse."
                    },
                    "CreateApplication": {
                        "access-level": "write",
                        "actions": "CreateApplication",
                        "description": "Create an application associated with the IAM user.",
                        "resource-types": "application*"
                    },
                    "CreateDeployment": {
                        "access-level": "write",
                        "actions": "CreateDeployment",
                        "description": "Create a deployment for an application associated with the IAM user.",
                        "resource-types": "deploymentgroup*"
                    },
                    "CreateDeploymentConfig": {
                        "access-level": "write",
                        "actions": "CreateDeploymentConfig",
                        "description": "Create a custom deployment configuration associated with the IAM user.",
                        "resource-types": "deploymentconfig*"
                    },
                    "CreateDeploymentGroup": {
                        "access-level": "write",
                        "actions": "CreateDeploymentGroup",
                        "description": "Create a deployment group for an application associated with the IAM user.",
                        "resource-types": "deploymentgroup*"
                    },
                    "DeleteApplication": {
                        "access-level": "write",
                        "actions": "DeleteApplication",
                        "description": "Delete an application associated with the IAM user.",
                        "resource-types": "application*"
                    },
                    "DeleteDeploymentConfig": {
                        "access-level": "write",
                        "actions": "DeleteDeploymentConfig",
                        "description": "Delete a custom deployment configuration associated with the IAM user.",
                        "resource-types": "deploymentconfig*"
                    },
                    "DeleteDeploymentGroup": {
                        "access-level": "write",
                        "actions": "DeleteDeploymentGroup",
                        "description": "Delete a deployment group for an application associated with the IAM user.",
                        "resource-types": "deploymentgroup*"
                    },
                    "DeregisterOnPremisesInstance": {
                        "access-level": "write",
                        "actions": "DeregisterOnPremisesInstance",
                        "description": "Deregister an on-premises instance.",
                        "resource-types": "instance*"
                    },
                    "PutLifecycleEventHookExecutionStatus": {
                        "access-level": "write",
                        "actions": "PutLifecycleEventHookExecutionStatus",
                        "description": "Notify a lifecycle event hook execution status for associated deployment with the IAM user."
                    },
                    "RegisterApplicationRevision": {
                        "access-level": "write",
                        "actions": "RegisterApplicationRevision",
                        "description": "Register information about an application revision for an application associated with the IAM user.",
                        "resource-types": "application*"
                    },
                    "RegisterOnPremisesInstance": {
                        "access-level": "write",
                        "actions": "RegisterOnPremisesInstance",
                        "description": "Register an on-premises instance.",
                        "resource-types": "instance*"
                    },
                    "StopDeployment": {
                        "access-level": "write",
                        "actions": "StopDeployment",
                        "description": "Description for StopDeployment"
                    },
                    "UpdateApplication": {
                        "access-level": "write",
                        "actions": "UpdateApplication",
                        "description": "Description for UpdateApplication",
                        "resource-types": "application*"
                    },
                    "UpdateDeploymentGroup": {
                        "access-level": "write",
                        "actions": "UpdateDeploymentGroup",
                        "description": "Change information about a single deployment group for an application associated with the IAM user.",
                        "resource-types": "deploymentgroup*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "application": {
                    "arn": "arn:${Partition}:codedeploy:${Region}:${Account}:application:${ApplicationName}",
                    "resource-types": "application"
                },
                "deploymentconfig": {
                    "arn": "arn:${Partition}:codedeploy:${Region}:${Account}:deploymentconfig:${DeploymentConfigurationName}",
                    "resource-types": "deploymentconfig"
                },
                "deploymentgroup": {
                    "arn": "arn:${Partition}:codedeploy:${Region}:${Account}:deploymentgroup:${ApplicationName}/${DeploymentGroupName}",
                    "resource-types": "deploymentgroup"
                },
                "instance": {
                    "arn": "arn:${Partition}:codedeploy:${Region}:${Account}:instance:${InstanceName}",
                    "resource-types": "instance"
                }
            }
        },
        "codepipeline": {
            "actions": {
                "list": {
                    "ListPipelineExecutions": {
                        "access-level": "list",
                        "actions": "ListPipelineExecutions",
                        "description": "Gets a summary of the most recent executions for a pipeline.",
                        "resource-types": "pipeline*"
                    },
                    "ListPipelines": {
                        "access-level": "list",
                        "actions": "ListPipelines",
                        "description": "Get a summary of all the pipelines associated with your AWS account.",
                        "resource-types": "pipeline*"
                    },
                    "ListWebhooks": {
                        "access-level": "list",
                        "actions": "ListWebhooks",
                        "description": "Get all the webhooks associated with your AWS account.",
                        "resource-types": "webhook*"
                    }
                },
                "read": {
                    "GetJobDetails": {
                        "access-level": "read",
                        "actions": "GetJobDetails",
                        "description": "Returns information about a job"
                    },
                    "GetPipeline": {
                        "access-level": "read",
                        "actions": "GetPipeline",
                        "description": "Retrieve information about a pipeline structure.",
                        "resource-types": "pipeline*"
                    },
                    "GetPipelineExecution": {
                        "access-level": "read",
                        "actions": "GetPipelineExecution",
                        "description": "Returns information about an execution of a pipeline, including details about artifacts, the pipeline execution ID, and the name, version, and status of the pipeline",
                        "resource-types": "pipeline*"
                    },
                    "GetPipelineState": {
                        "access-level": "read",
                        "actions": "GetPipelineState",
                        "description": "Retrieve information about the current state of the stages and actions of a pipeline.",
                        "resource-types": "pipeline*"
                    },
                    "GetThirdPartyJobDetails": {
                        "access-level": "read",
                        "actions": "GetThirdPartyJobDetails",
                        "description": "Requests the details of a job for a third party action. Only used for partner actions."
                    },
                    "ListActionTypes": {
                        "access-level": "read",
                        "actions": "ListActionTypes",
                        "description": "Retrieve a summary of all the action types available for pipelines in your account.",
                        "resource-types": "actiontype*"
                    }
                },
                "write": {
                    "AcknowledgeJob": {
                        "access-level": "write",
                        "actions": "AcknowledgeJob",
                        "description": "Returns information about a specified job and whether that job has been received by the job worker."
                    },
                    "AcknowledgeThirdPartyJob": {
                        "access-level": "write",
                        "actions": "AcknowledgeThirdPartyJob",
                        "description": "Confirms a job worker has received the specified job. Only used for partner actions."
                    },
                    "CreateCustomActionType": {
                        "access-level": "write",
                        "actions": "CreateCustomActionType",
                        "description": "Create a custom action you can use in the pipelines associated with your AWS account.",
                        "resource-types": "actiontype*"
                    },
                    "CreatePipeline": {
                        "access-level": "write",
                        "actions": "CreatePipeline",
                        "description": "Create a uniquely named pipeline.",
                        "resource-types": "pipeline*"
                    },
                    "DeleteCustomActionType": {
                        "access-level": "write",
                        "actions": "DeleteCustomActionType",
                        "description": "Delete a custom action.",
                        "resource-types": "actiontype*"
                    },
                    "DeletePipeline": {
                        "access-level": "write",
                        "actions": "DeletePipeline",
                        "description": "Delete a specified pipeline.",
                        "resource-types": "pipeline*"
                    },
                    "DeleteWebhook": {
                        "access-level": "write",
                        "actions": "DeleteWebhook",
                        "description": "Delete a specified webhook.",
                        "resource-types": "webhook*"
                    },
                    "DeregisterWebhookWithThirdParty": {
                        "access-level": "write",
                        "actions": "DeregisterWebhookWithThirdParty",
                        "description": "Remove the registration of a webhook with the third party specified in its configuration.",
                        "resource-types": "webhook*"
                    },
                    "DisableStageTransition": {
                        "access-level": "write",
                        "actions": "DisableStageTransition",
                        "description": "Prevent revisions from transitioning to the next stage in a pipeline.",
                        "resource-types": "stage*"
                    },
                    "EnableStageTransition": {
                        "access-level": "write",
                        "actions": "EnableStageTransition",
                        "description": "Enable revisions to transition to the next stage in a pipeline.",
                        "resource-types": "stage*"
                    },
                    "PollForJobs": {
                        "access-level": "write",
                        "actions": "PollForJobs",
                        "description": "Returns information about any jobs for AWS CodePipeline to act upon.",
                        "resource-types": "actiontype*"
                    },
                    "PollForThirdPartyJobs": {
                        "access-level": "write",
                        "actions": "PollForThirdPartyJobs",
                        "description": "Determines whether there are any third party jobs for a job worker to act on. Only used for partner actions."
                    },
                    "PutActionRevision": {
                        "access-level": "write",
                        "actions": "PutActionRevision",
                        "description": "Edit actions within a pipeline.",
                        "resource-types": "action*"
                    },
                    "PutApprovalResult": {
                        "access-level": "write",
                        "actions": "PutApprovalResult",
                        "description": "Provides the response to a manual approval request to AWS CodePipeline. Valid responses include Approved and Rejected."
                    },
                    "PutJobFailureResult": {
                        "access-level": "write",
                        "actions": "PutJobFailureResult",
                        "description": "Represents the failure of a job as returned to the pipeline by a job worker. Only used for custom actions."
                    },
                    "PutJobSuccessResult": {
                        "access-level": "write",
                        "actions": "PutJobSuccessResult",
                        "description": "Represents the success of a job as returned to the pipeline by a job worker. Only used for custom actions."
                    },
                    "PutThirdPartyJobFailureResult": {
                        "access-level": "write",
                        "actions": "PutThirdPartyJobFailureResult",
                        "description": "Represents the failure of a third party job as returned to the pipeline by a job worker. Only used for partner actions."
                    },
                    "PutThirdPartyJobSuccessResult": {
                        "access-level": "write",
                        "actions": "PutThirdPartyJobSuccessResult",
                        "description": "Represents the success of a third party job as returned to the pipeline by a job worker. Only used for partner actions."
                    },
                    "PutWebhook": {
                        "access-level": "write",
                        "actions": "PutWebhook",
                        "description": "Create or update a webhook",
                        "resource-types": "pipeline*"
                    },
                    "RegisterWebhookWithThirdParty": {
                        "access-level": "write",
                        "actions": "RegisterWebhookWithThirdParty",
                        "description": "Register a webhook with the third party specified in its configuration.",
                        "resource-types": "webhook*"
                    },
                    "RetryStageExecution": {
                        "access-level": "write",
                        "actions": "RetryStageExecution",
                        "description": "Resumes the pipeline execution by retrying the last failed actions in a stage",
                        "resource-types": "stage*"
                    },
                    "StartPipelineExecution": {
                        "access-level": "write",
                        "actions": "StartPipelineExecution",
                        "description": "Run the most recent revision through the pipeline.",
                        "resource-types": "pipeline*"
                    },
                    "UpdatePipeline": {
                        "access-level": "write",
                        "actions": "UpdatePipeline",
                        "description": "Update a pipeline with changes to the structure of the pipeline.",
                        "resource-types": "pipeline*"
                    },
                    "webhook*": {
                        "access-level": "write",
                        "actions": "webhook*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "action": {
                    "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:${PipelineName}/${StageName}/${ActionName}",
                    "resource-types": "action"
                },
                "actiontype": {
                    "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:actiontype:${Owner}/${Category}/${Provider}/${Version}",
                    "resource-types": "actiontype"
                },
                "pipeline": {
                    "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:${PipelineName}",
                    "resource-types": "pipeline"
                },
                "stage": {
                    "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:${PipelineName}/${StageName}",
                    "resource-types": "stage"
                },
                "webhook": {
                    "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:webhook:${WebhookName}",
                    "resource-types": "webhook"
                }
            }
        },
        "codesigningforfreertos": {
            "actions": {
                "list": {
                    "ListSigningJobs": {
                        "access-level": "list",
                        "actions": "ListSigningJobs",
                        "description": "List signing jobs."
                    },
                    "ListSigningPlatforms": {
                        "access-level": "list",
                        "actions": "ListSigningPlatforms",
                        "description": "List all signing platforms."
                    },
                    "ListSigningProfiles": {
                        "access-level": "list",
                        "actions": "ListSigningProfiles",
                        "description": "List all signing profile associated with the account."
                    }
                },
                "read": {
                    "DescribeSigningJob": {
                        "access-level": "read",
                        "actions": "DescribeSigningJob",
                        "description": "Describe a signing job.",
                        "resource-types": "signing-job*"
                    },
                    "GetSigningPlatform": {
                        "access-level": "read",
                        "actions": "GetSigningPlatform",
                        "description": "Retrieves a signing platform."
                    },
                    "GetSigningProfile": {
                        "access-level": "read",
                        "actions": "GetSigningProfile",
                        "description": "Retreives a signing profile.",
                        "resource-types": "signing-profile*"
                    }
                },
                "write": {
                    "CancelSigningProfile": {
                        "access-level": "write",
                        "actions": "CancelSigningProfile",
                        "description": "Cancels a signing profile.",
                        "resource-types": "signing-profile*"
                    },
                    "PutSigningProfile": {
                        "access-level": "write",
                        "actions": "PutSigningProfile",
                        "description": "Creates a new signing profile if not exists."
                    },
                    "StartSigningJob": {
                        "access-level": "write",
                        "actions": "StartSigningJob",
                        "description": "Starts a code signing request.",
                        "resource-types": "signing-profile*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "signing-job": {
                    "arn": "arn:${Partition}:signer:${Region}::/signing-jobs/${jobId}",
                    "resource-types": "signing-job"
                },
                "signing-profile": {
                    "arn": "arn:${Partition}:signer:${Region}::/signing-profiles/${profileName}",
                    "resource-types": "signing-profile"
                }
            }
        },
        "codestar": {
            "actions": {
                "list": {
                    "ListProjects": {
                        "access-level": "list",
                        "actions": "ListProjects",
                        "description": "Lists all projects in CodeStar associated with your AWS account."
                    },
                    "ListResources": {
                        "access-level": "list",
                        "actions": "ListResources",
                        "description": "Lists all resources associated with a project in CodeStar.",
                        "resource-types": "project*"
                    },
                    "ListTeamMembers": {
                        "access-level": "list",
                        "actions": "ListTeamMembers",
                        "description": "Lists all team members associated with a project.",
                        "resource-types": "project*"
                    },
                    "ListUserProfiles": {
                        "access-level": "list",
                        "actions": "ListUserProfiles",
                        "description": "Lists user profiles in AWS CodeStar."
                    },
                    "VerifyServiceRole": {
                        "access-level": "list",
                        "actions": "VerifyServiceRole",
                        "description": "Verifies whether the AWS CodeStar service role exists in the customer\\'s account."
                    }
                },
                "permissions-management": {
                    "AssociateTeamMember": {
                        "access-level": "permissions-management",
                        "actions": "AssociateTeamMember",
                        "description": "Adds a user to the team for an AWS CodeStar project.",
                        "resource-types": "project*"
                    },
                    "CreateProject": {
                        "access-level": "permissions-management",
                        "actions": "CreateProject",
                        "description": "Creates a project with minimal structure, customer policies, and no resources."
                    },
                    "DeleteProject": {
                        "access-level": "permissions-management",
                        "actions": "DeleteProject",
                        "description": "Deletes a project, including project resources. Does not delete users associated with the project, but does delete the IAM roles that allowed access to the project.",
                        "resource-types": "project*"
                    },
                    "DisassociateTeamMember": {
                        "access-level": "permissions-management",
                        "actions": "DisassociateTeamMember",
                        "description": "Removes a user from a project. Removing a user from a project also removes the IAM policies from that user that allowed access to the project and its resources.",
                        "resource-types": "project*"
                    },
                    "UpdateTeamMember": {
                        "access-level": "permissions-management",
                        "actions": "UpdateTeamMember",
                        "description": "Updates team member attributes within a CodeStar project.",
                        "resource-types": "project*"
                    }
                },
                "read": {
                    "DescribeProject": {
                        "access-level": "read",
                        "actions": "DescribeProject",
                        "description": "Describes a project and its resources.",
                        "resource-types": "project*"
                    },
                    "DescribeUserProfile": {
                        "access-level": "read",
                        "actions": "DescribeUserProfile",
                        "description": "Describes a user in AWS CodeStar and the user attributes across all projects."
                    },
                    "GetExtendedAccess [permission only]": {
                        "access-level": "read",
                        "actions": "GetExtendedAccess [permission only]",
                        "description": "Grants access to extended read APIs.",
                        "resource-types": "project*"
                    }
                },
                "write": {
                    "CreateUserProfile": {
                        "access-level": "write",
                        "actions": "CreateUserProfile",
                        "description": "Creates a profile for a user that includes user preferences, display name, and email."
                    },
                    "DeleteExtendedAccess [permission only]": {
                        "access-level": "write",
                        "actions": "DeleteExtendedAccess [permission only]",
                        "description": "Grants access to extended delete APIs.",
                        "resource-types": "project*"
                    },
                    "DeleteUserProfile": {
                        "access-level": "write",
                        "actions": "DeleteUserProfile",
                        "description": "Deletes a user profile in AWS CodeStar, including all personal preference data associated with that profile, such as display name and email address. It does not delete the history of that user, for example the history of commits made by that user."
                    },
                    "PutExtendedAccess [permission only]": {
                        "access-level": "write",
                        "actions": "PutExtendedAccess [permission only]",
                        "description": "Grants access to extended write APIs.",
                        "resource-types": "project*"
                    },
                    "UpdateProject": {
                        "access-level": "write",
                        "actions": "UpdateProject",
                        "description": "Updates a project in CodeStar.",
                        "resource-types": "project*"
                    },
                    "UpdateUserProfile": {
                        "access-level": "write",
                        "actions": "UpdateUserProfile",
                        "description": "Updates a profile for a user that includes user preferences, display name, and email."
                    }
                }
            }
        },
        "cognitoidentity": {
            "actions": {
                "list": {
                    "ListIdentities": {
                        "access-level": "list",
                        "actions": "ListIdentities",
                        "description": "Lists the identities in a pool.",
                        "resource-types": "identitypool*"
                    },
                    "ListIdentityPools": {
                        "access-level": "list",
                        "actions": "ListIdentityPools",
                        "description": "Lists all of the Cognito identity pools registered for your account."
                    }
                },
                "read": {
                    "DescribeIdentity": {
                        "access-level": "read",
                        "actions": "DescribeIdentity",
                        "description": "Returns metadata related to the given identity, including when the identity was created and any associated linked logins."
                    },
                    "DescribeIdentityPool": {
                        "access-level": "read",
                        "actions": "DescribeIdentityPool",
                        "description": "Gets details about a particular identity pool, including the pool name, ID description, creation date, and current number of users.",
                        "resource-types": "identitypool*"
                    },
                    "GetCredentialsForIdentity": {
                        "access-level": "read",
                        "actions": "GetCredentialsForIdentity",
                        "description": "Returns credentials for the provided identity ID."
                    },
                    "GetIdentityPoolRoles": {
                        "access-level": "read",
                        "actions": "GetIdentityPoolRoles",
                        "description": "Gets the roles for an identity pool.",
                        "resource-types": "identitypool*"
                    },
                    "GetOpenIdToken": {
                        "access-level": "read",
                        "actions": "GetOpenIdToken",
                        "description": "Gets an OpenID token, using a known Cognito ID."
                    },
                    "GetOpenIdTokenForDeveloperIdentity": {
                        "access-level": "read",
                        "actions": "GetOpenIdTokenForDeveloperIdentity",
                        "description": "Registers (or retrieves) a Cognito IdentityId and an OpenID Connect token for a user authenticated by your backend authentication process.",
                        "resource-types": "identitypool*"
                    },
                    "LookupDeveloperIdentity": {
                        "access-level": "read",
                        "actions": "LookupDeveloperIdentity",
                        "description": "Retrieves the IdentityID associated with a DeveloperUserIdentifier or the list of DeveloperUserIdentifiers associated with an IdentityId for an existing identity.",
                        "resource-types": "identitypool*"
                    }
                },
                "write": {
                    "CreateIdentityPool": {
                        "access-level": "write",
                        "actions": "CreateIdentityPool",
                        "description": "Creates a new identity pool."
                    },
                    "DeleteIdentities": {
                        "access-level": "write",
                        "actions": "DeleteIdentities",
                        "description": "Deletes identities from an identity pool. You can specify a list of 1-60 identities that you want to delete."
                    },
                    "DeleteIdentityPool": {
                        "access-level": "write",
                        "actions": "DeleteIdentityPool",
                        "description": "Deletes a user pool. Once a pool is deleted, users will not be able to authenticate with the pool.",
                        "resource-types": "identitypool*"
                    },
                    "GetId": {
                        "access-level": "write",
                        "actions": "GetId",
                        "description": "Generates (or retrieves) a Cognito ID. Supplying multiple logins will create an implicit linked account."
                    },
                    "MergeDeveloperIdentities": {
                        "access-level": "write",
                        "actions": "MergeDeveloperIdentities",
                        "description": "Merges two users having different IdentityIds, existing in the same identity pool, and identified by the same developer provider.",
                        "resource-types": "identitypool*"
                    },
                    "SetIdentityPoolRoles": {
                        "access-level": "write",
                        "actions": "SetIdentityPoolRoles",
                        "description": "Sets the roles for an identity pool. These roles are used when making calls to GetCredentialsForIdentity action."
                    },
                    "UnlinkDeveloperIdentity": {
                        "access-level": "write",
                        "actions": "UnlinkDeveloperIdentity",
                        "description": "Unlinks a DeveloperUserIdentifier from an existing identity.",
                        "resource-types": "identitypool*"
                    },
                    "UnlinkIdentity": {
                        "access-level": "write",
                        "actions": "UnlinkIdentity",
                        "description": "Unlinks a federated identity from an existing account."
                    },
                    "UpdateIdentityPool": {
                        "access-level": "write",
                        "actions": "UpdateIdentityPool",
                        "description": "Updates a user pool.",
                        "resource-types": "identitypool*"
                    }
                }
            }
        },
        "cognitosync": {
            "actions": {
                "list": {
                    "ListDatasets": {
                        "access-level": "list",
                        "actions": "ListDatasets",
                        "description": "Lists datasets for an identity.",
                        "resource-types": "dataset*"
                    }
                },
                "read": {
                    "DescribeDataset": {
                        "access-level": "read",
                        "actions": "DescribeDataset",
                        "description": "Gets meta data about a dataset by identity and dataset name.",
                        "resource-types": "dataset*"
                    },
                    "DescribeIdentityPoolUsage": {
                        "access-level": "read",
                        "actions": "DescribeIdentityPoolUsage",
                        "description": "Gets usage details (for example, data storage) about a particular identity pool.",
                        "resource-types": "identitypool*"
                    },
                    "DescribeIdentityUsage": {
                        "access-level": "read",
                        "actions": "DescribeIdentityUsage",
                        "description": "Gets usage information for an identity, including number of datasets and data usage.",
                        "resource-types": "identity*"
                    },
                    "GetBulkPublishDetails": {
                        "access-level": "read",
                        "actions": "GetBulkPublishDetails",
                        "description": "Get the status of the last BulkPublish operation for an identity pool.",
                        "resource-types": "identitypool*"
                    },
                    "GetCognitoEvents": {
                        "access-level": "read",
                        "actions": "GetCognitoEvents",
                        "description": "Gets the events and the corresponding Lambda functions associated with an identity pool.",
                        "resource-types": "identitypool*"
                    },
                    "GetIdentityPoolConfiguration": {
                        "access-level": "read",
                        "actions": "GetIdentityPoolConfiguration",
                        "description": "Gets the configuration settings of an identity pool.",
                        "resource-types": "identitypool*"
                    },
                    "ListIdentityPoolUsage": {
                        "access-level": "read",
                        "actions": "ListIdentityPoolUsage",
                        "description": "Gets a list of identity pools registered with Cognito.",
                        "resource-types": "identitypool*"
                    },
                    "ListRecords": {
                        "access-level": "read",
                        "actions": "ListRecords",
                        "description": "Gets paginated records, optionally changed after a particular sync count for a dataset and identity.",
                        "resource-types": "dataset*"
                    },
                    "QueryRecords [permission only]": {
                        "access-level": "read",
                        "actions": "QueryRecords [permission only]",
                        "description": "A permission that grants the ability to query records."
                    }
                },
                "write": {
                    "BulkPublish": {
                        "access-level": "write",
                        "actions": "BulkPublish",
                        "description": "Initiates a bulk publish of all existing datasets for an Identity Pool to the configured stream.",
                        "resource-types": "identitypool*"
                    },
                    "DeleteDataset": {
                        "access-level": "write",
                        "actions": "DeleteDataset",
                        "description": "Deletes the specific dataset.",
                        "resource-types": "dataset*"
                    },
                    "RegisterDevice": {
                        "access-level": "write",
                        "actions": "RegisterDevice",
                        "description": "Registers a device to receive push sync notifications.",
                        "resource-types": "identity*"
                    },
                    "SetCognitoEvents": {
                        "access-level": "write",
                        "actions": "SetCognitoEvents",
                        "description": "Sets the AWS Lambda function for a given event type for an identity pool.",
                        "resource-types": "identitypool*"
                    },
                    "SetDatasetConfiguration [permission only]": {
                        "access-level": "write",
                        "actions": "SetDatasetConfiguration [permission only]",
                        "description": "A permission that grants ability to configure datasets.",
                        "resource-types": "dataset*"
                    },
                    "SetIdentityPoolConfiguration": {
                        "access-level": "write",
                        "actions": "SetIdentityPoolConfiguration",
                        "description": "Sets the necessary configuration for push sync.",
                        "resource-types": "identitypool*"
                    },
                    "SubscribeToDataset": {
                        "access-level": "write",
                        "actions": "SubscribeToDataset",
                        "description": "Subscribes to receive notifications when a dataset is modified by another device.",
                        "resource-types": "dataset*"
                    },
                    "UnsubscribeFromDataset": {
                        "access-level": "write",
                        "actions": "UnsubscribeFromDataset",
                        "description": "Unsubscribes from receiving notifications when a dataset is modified by another device.",
                        "resource-types": "dataset*"
                    },
                    "UpdateRecords": {
                        "access-level": "write",
                        "actions": "UpdateRecords",
                        "description": "Posts updates to records and adds and deletes records for a dataset and user.",
                        "resource-types": "dataset*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "dataset": {
                    "arn": "arn:${Partition}:cognito-sync:${Region}:${Account}:identitypool/${IdentityPoolId}/identity/${IdentityId}/dataset/${DatasetName}",
                    "resource-types": "dataset"
                },
                "identity": {
                    "arn": "arn:${Partition}:cognito-sync:${Region}:${Account}:identitypool/${IdentityPoolId}/identity/${IdentityId}",
                    "resource-types": "identity"
                },
                "identitypool": {
                    "arn": "arn:${Partition}:cognito-sync:${Region}:${Account}:identitypool/${IdentityPoolId}",
                    "resource-types": "identitypool"
                }
            }
        },
        "cognitouserpools": {
            "actions": {
                "list": {
                    "AdminListDevices": {
                        "access-level": "list",
                        "actions": "AdminListDevices",
                        "description": "Lists devices, as an administrator.",
                        "resource-types": "userpool*"
                    },
                    "AdminListGroupsForUser": {
                        "access-level": "list",
                        "actions": "AdminListGroupsForUser",
                        "description": "Lists the groups that the user belongs to.",
                        "resource-types": "userpool*"
                    },
                    "ListDevices": {
                        "access-level": "list",
                        "actions": "ListDevices",
                        "description": "Lists the devices.",
                        "resource-types": "userpool*"
                    },
                    "ListGroups": {
                        "access-level": "list",
                        "actions": "ListGroups",
                        "description": "Lists the groups associated with a user pool.",
                        "resource-types": "userpool*"
                    },
                    "ListIdentityProviders": {
                        "access-level": "list",
                        "actions": "ListIdentityProviders",
                        "description": "Lists information about all identity providers for a user pool.",
                        "resource-types": "userpool*"
                    },
                    "ListResourceServers": {
                        "access-level": "list",
                        "actions": "ListResourceServers",
                        "description": "Lists the resource servers for a user pool.",
                        "resource-types": "userpool*"
                    },
                    "ListUserImportJobs": {
                        "access-level": "list",
                        "actions": "ListUserImportJobs",
                        "description": "Lists the user import jobs..",
                        "resource-types": "userpool*"
                    },
                    "ListUserPoolClients": {
                        "access-level": "list",
                        "actions": "ListUserPoolClients",
                        "description": "Lists the clients that have been created for the specified user pool.",
                        "resource-types": "userpool*"
                    },
                    "ListUserPools": {
                        "access-level": "list",
                        "actions": "ListUserPools",
                        "description": "Lists the user pools associated with an AWS account."
                    },
                    "ListUsers": {
                        "access-level": "list",
                        "actions": "ListUsers",
                        "description": "Lists the users in the Amazon Cognito user pool.",
                        "resource-types": "userpool*"
                    },
                    "ListUsersInGroup": {
                        "access-level": "list",
                        "actions": "ListUsersInGroup",
                        "description": "Lists the users in the specified group.",
                        "resource-types": "userpool*"
                    }
                },
                "read": {
                    "AdminGetDevice": {
                        "access-level": "read",
                        "actions": "AdminGetDevice",
                        "description": "Gets the device, as an administrator.",
                        "resource-types": "userpool*"
                    },
                    "AdminGetUser": {
                        "access-level": "read",
                        "actions": "AdminGetUser",
                        "description": "Gets the specified user by user name in a user pool as an administrator. Works on any user.",
                        "resource-types": "userpool*"
                    },
                    "AdminListUserAuthEvents": {
                        "access-level": "read",
                        "actions": "AdminListUserAuthEvents",
                        "description": "Lists the authentication events for the user.",
                        "resource-types": "userpool*"
                    },
                    "DescribeIdentityProvider": {
                        "access-level": "read",
                        "actions": "DescribeIdentityProvider",
                        "description": "Gets information about a specific identity provider.",
                        "resource-types": "userpool*"
                    },
                    "DescribeResourceServer": {
                        "access-level": "read",
                        "actions": "DescribeResourceServer",
                        "description": "Describes a resource server.",
                        "resource-types": "userpool*"
                    },
                    "DescribeRiskConfiguration": {
                        "access-level": "read",
                        "actions": "DescribeRiskConfiguration",
                        "description": "Describes the risk configuration setting for the userpool / userpool client",
                        "resource-types": "userpool*"
                    },
                    "DescribeUserImportJob": {
                        "access-level": "read",
                        "actions": "DescribeUserImportJob",
                        "description": "Describes the user import job.",
                        "resource-types": "userpool*"
                    },
                    "DescribeUserPool": {
                        "access-level": "read",
                        "actions": "DescribeUserPool",
                        "description": "Returns the configuration information and metadata of the specified user pool.",
                        "resource-types": "userpool*"
                    },
                    "DescribeUserPoolClient": {
                        "access-level": "read",
                        "actions": "DescribeUserPoolClient",
                        "description": "Client method for returning the configuration information and metadata of the specified user pool client.",
                        "resource-types": "userpool*"
                    },
                    "DescribeUserPoolDomain": {
                        "access-level": "read",
                        "actions": "DescribeUserPoolDomain",
                        "description": "Gets information about a domain.",
                        "resource-types": "userpool*"
                    },
                    "GetCSVHeader": {
                        "access-level": "read",
                        "actions": "GetCSVHeader",
                        "description": "Gets the header information for the .csv file to be used as input for the user import job.",
                        "resource-types": "userpool*"
                    },
                    "GetDevice": {
                        "access-level": "read",
                        "actions": "GetDevice",
                        "description": "Gets the device.",
                        "resource-types": "userpool*"
                    },
                    "GetGroup": {
                        "access-level": "read",
                        "actions": "GetGroup",
                        "description": "Gets a group.",
                        "resource-types": "userpool*"
                    },
                    "GetIdentityProviderByIdentifier": {
                        "access-level": "read",
                        "actions": "GetIdentityProviderByIdentifier",
                        "description": "Gets the specified identity provider.",
                        "resource-types": "userpool*"
                    },
                    "GetSigningCertificate": {
                        "access-level": "read",
                        "actions": "GetSigningCertificate",
                        "description": "Returns the signing certificate.",
                        "resource-types": "userpool*"
                    },
                    "GetUICustomization": {
                        "access-level": "read",
                        "actions": "GetUICustomization",
                        "description": "Gets the UI Customization information for a particular app client\\'s app UI, if there is something set.",
                        "resource-types": "userpool*"
                    },
                    "GetUser": {
                        "access-level": "read",
                        "actions": "GetUser",
                        "description": "Gets the user attributes and metadata for a user.",
                        "resource-types": "userpool*"
                    },
                    "GetUserAttributeVerificationCode": {
                        "access-level": "read",
                        "actions": "GetUserAttributeVerificationCode",
                        "description": "Gets the user attribute verification code for the specified attribute name.",
                        "resource-types": "userpool*"
                    },
                    "GetUserPoolMfaConfig": {
                        "access-level": "read",
                        "actions": "GetUserPoolMfaConfig",
                        "description": "Gets the MFA configuration for the userpool",
                        "resource-types": "userpool*"
                    }
                },
                "write": {
                    "AddCustomAttributes": {
                        "access-level": "write",
                        "actions": "AddCustomAttributes",
                        "description": "Adds additional user attributes to the user pool schema.",
                        "resource-types": "userpool*"
                    },
                    "AdminAddUserToGroup": {
                        "access-level": "write",
                        "actions": "AdminAddUserToGroup",
                        "description": "Adds the specified user to the specified group.",
                        "resource-types": "userpool*"
                    },
                    "AdminConfirmSignUp": {
                        "access-level": "write",
                        "actions": "AdminConfirmSignUp",
                        "description": "Confirms user registration as an admin without using a confirmation code. Works on any user.",
                        "resource-types": "userpool*"
                    },
                    "AdminCreateUser": {
                        "access-level": "write",
                        "actions": "AdminCreateUser",
                        "description": "Creates a new user in the specified user pool and sends a welcome message via email or phone (SMS).",
                        "resource-types": "userpool*"
                    },
                    "AdminDeleteUser": {
                        "access-level": "write",
                        "actions": "AdminDeleteUser",
                        "description": "Deletes a user as an administrator. Works on any user.",
                        "resource-types": "userpool*"
                    },
                    "AdminDeleteUserAttributes": {
                        "access-level": "write",
                        "actions": "AdminDeleteUserAttributes",
                        "description": "Deletes the user attributes in a user pool as an administrator. Works on any user.",
                        "resource-types": "userpool*"
                    },
                    "AdminDisableProviderForUser": {
                        "access-level": "write",
                        "actions": "AdminDisableProviderForUser",
                        "description": "Disables the user from signing in with the specified external (SAML or social) identity provider.",
                        "resource-types": "userpool*"
                    },
                    "AdminDisableUser": {
                        "access-level": "write",
                        "actions": "AdminDisableUser",
                        "description": "Disables the specified user as an administrator. Works on any user.",
                        "resource-types": "userpool*"
                    },
                    "AdminEnableUser": {
                        "access-level": "write",
                        "actions": "AdminEnableUser",
                        "description": "Enables the specified user as an administrator. Works on any user.",
                        "resource-types": "userpool*"
                    },
                    "AdminForgetDevice": {
                        "access-level": "write",
                        "actions": "AdminForgetDevice",
                        "description": "Forgets the device, as an administrator.",
                        "resource-types": "userpool*"
                    },
                    "AdminInitiateAuth": {
                        "access-level": "write",
                        "actions": "AdminInitiateAuth",
                        "description": "Authenticates a user in a user pool as an administrator. Works on any user.",
                        "resource-types": "userpool*"
                    },
                    "AdminLinkProviderForUser": {
                        "access-level": "write",
                        "actions": "AdminLinkProviderForUser",
                        "description": "Links an existing user account in a user pool (DestinationUser) to an identity from an external identity provider (SourceUser) based on a specified attribute name and value from the external identity provider.",
                        "resource-types": "userpool*"
                    },
                    "AdminRemoveUserFromGroup": {
                        "access-level": "write",
                        "actions": "AdminRemoveUserFromGroup",
                        "description": "Removes the specified user from the specified group.",
                        "resource-types": "userpool*"
                    },
                    "AdminResetUserPassword": {
                        "access-level": "write",
                        "actions": "AdminResetUserPassword",
                        "description": "Resets the specified user\\'s password in a user pool as an administrator. Works on any user.",
                        "resource-types": "userpool*"
                    },
                    "AdminRespondToAuthChallenge": {
                        "access-level": "write",
                        "actions": "AdminRespondToAuthChallenge",
                        "description": "Responds to an authentication challenge, as an administrator.",
                        "resource-types": "userpool*"
                    },
                    "AdminSetUserMFAPreference": {
                        "access-level": "write",
                        "actions": "AdminSetUserMFAPreference",
                        "description": "Sets MFA preference for the user in the userpool",
                        "resource-types": "userpool*"
                    },
                    "AdminSetUserSettings": {
                        "access-level": "write",
                        "actions": "AdminSetUserSettings",
                        "description": "Sets all the user settings for a specified user name. Works on any user.",
                        "resource-types": "userpool*"
                    },
                    "AdminUpdateAuthEventFeedback": {
                        "access-level": "write",
                        "actions": "AdminUpdateAuthEventFeedback",
                        "description": "Updates the feedback for the user authentication event",
                        "resource-types": "userpool*"
                    },
                    "AdminUpdateDeviceStatus": {
                        "access-level": "write",
                        "actions": "AdminUpdateDeviceStatus",
                        "description": "Updates the device status as an administrator.",
                        "resource-types": "userpool*"
                    },
                    "AdminUpdateUserAttributes": {
                        "access-level": "write",
                        "actions": "AdminUpdateUserAttributes",
                        "description": "Updates the specified user\\'s attributes, including developer attributes, as an administrator.",
                        "resource-types": "userpool*"
                    },
                    "AdminUserGlobalSignOut": {
                        "access-level": "write",
                        "actions": "AdminUserGlobalSignOut",
                        "description": "Signs out users from all devices, as an administrator.",
                        "resource-types": "userpool*"
                    },
                    "AssociateSoftwareToken": {
                        "access-level": "write",
                        "actions": "AssociateSoftwareToken",
                        "description": "Returns a unique generated shared secret key code for the user account.",
                        "resource-types": "userpool*"
                    },
                    "ChangePassword": {
                        "access-level": "write",
                        "actions": "ChangePassword",
                        "description": "Changes the password for a specified user in a user pool.",
                        "resource-types": "userpool*"
                    },
                    "ConfirmDevice": {
                        "access-level": "write",
                        "actions": "ConfirmDevice",
                        "description": "Confirms tracking of the device. This API call is the call that begins device tracking.",
                        "resource-types": "userpool*"
                    },
                    "ConfirmForgotPassword": {
                        "access-level": "write",
                        "actions": "ConfirmForgotPassword",
                        "description": "Allows a user to enter a confirmation code to reset a forgotten password.",
                        "resource-types": "userpool*"
                    },
                    "ConfirmSignUp": {
                        "access-level": "write",
                        "actions": "ConfirmSignUp",
                        "description": "Confirms registration of a user and handles the existing alias from a previous user.",
                        "resource-types": "userpool*"
                    },
                    "CreateGroup": {
                        "access-level": "write",
                        "actions": "CreateGroup",
                        "description": "Creates a new group in the specified user pool.",
                        "resource-types": "userpool*"
                    },
                    "CreateIdentityProvider": {
                        "access-level": "write",
                        "actions": "CreateIdentityProvider",
                        "description": "Creates an identity provider for a user pool.",
                        "resource-types": "userpool*"
                    },
                    "CreateResourceServer": {
                        "access-level": "write",
                        "actions": "CreateResourceServer",
                        "description": "Creates a new OAuth2.0 resource server and defines custom scopes in it.",
                        "resource-types": "userpool*"
                    },
                    "CreateUserImportJob": {
                        "access-level": "write",
                        "actions": "CreateUserImportJob",
                        "description": "Creates the user import job.",
                        "resource-types": "userpool*"
                    },
                    "CreateUserPool": {
                        "access-level": "write",
                        "actions": "CreateUserPool",
                        "description": "Creates a new Amazon Cognito user pool and sets the password policy for the pool.",
                        "resource-types": "userpool*"
                    },
                    "CreateUserPoolClient": {
                        "access-level": "write",
                        "actions": "CreateUserPoolClient",
                        "description": "Creates the user pool client.",
                        "resource-types": "userpool*"
                    },
                    "CreateUserPoolDomain": {
                        "access-level": "write",
                        "actions": "CreateUserPoolDomain",
                        "description": "Creates a new domain for a user pool.",
                        "resource-types": "userpool*"
                    },
                    "DeleteGroup": {
                        "access-level": "write",
                        "actions": "DeleteGroup",
                        "description": "Deletes a group. Currently only groups with no members can be deleted.",
                        "resource-types": "userpool*"
                    },
                    "DeleteIdentityProvider": {
                        "access-level": "write",
                        "actions": "DeleteIdentityProvider",
                        "description": "Deletes an identity provider for a user pool.",
                        "resource-types": "userpool*"
                    },
                    "DeleteResourceServer": {
                        "access-level": "write",
                        "actions": "DeleteResourceServer",
                        "description": "Deletes a resource server.",
                        "resource-types": "userpool*"
                    },
                    "DeleteUser": {
                        "access-level": "write",
                        "actions": "DeleteUser",
                        "description": "Allows a user to delete one\\'s self.",
                        "resource-types": "userpool*"
                    },
                    "DeleteUserAttributes": {
                        "access-level": "write",
                        "actions": "DeleteUserAttributes",
                        "description": "Deletes the attributes for a user.",
                        "resource-types": "userpool*"
                    },
                    "DeleteUserPool": {
                        "access-level": "write",
                        "actions": "DeleteUserPool",
                        "description": "Deletes the specified Amazon Cognito user pool.",
                        "resource-types": "userpool*"
                    },
                    "DeleteUserPoolClient": {
                        "access-level": "write",
                        "actions": "DeleteUserPoolClient",
                        "description": "Allows the developer to delete the user pool client.",
                        "resource-types": "userpool*"
                    },
                    "DeleteUserPoolDomain": {
                        "access-level": "write",
                        "actions": "DeleteUserPoolDomain",
                        "description": "Deletes a domain for a user pool.",
                        "resource-types": "userpool*"
                    },
                    "ForgetDevice": {
                        "access-level": "write",
                        "actions": "ForgetDevice",
                        "description": "Forgets the specified device.",
                        "resource-types": "userpool*"
                    },
                    "ForgotPassword": {
                        "access-level": "write",
                        "actions": "ForgotPassword",
                        "description": "Calling this API causes a message to be sent to the end user with a confirmation code that is required to change the user\\'s password.",
                        "resource-types": "userpool*"
                    },
                    "GlobalSignOut": {
                        "access-level": "write",
                        "actions": "GlobalSignOut",
                        "description": "Signs out users from all devices..",
                        "resource-types": "userpool*"
                    },
                    "InitiateAuth": {
                        "access-level": "write",
                        "actions": "InitiateAuth",
                        "description": "Initiates the authentication flow.",
                        "resource-types": "userpool*"
                    },
                    "ResendConfirmationCode": {
                        "access-level": "write",
                        "actions": "ResendConfirmationCode",
                        "description": "Resends the confirmation (for confirmation of registration) to a specific user in the user pool.",
                        "resource-types": "userpool*"
                    },
                    "RespondToAuthChallenge": {
                        "access-level": "write",
                        "actions": "RespondToAuthChallenge",
                        "description": "Responds to the authentication challenge.",
                        "resource-types": "userpool*"
                    },
                    "SetRiskConfiguration": {
                        "access-level": "write",
                        "actions": "SetRiskConfiguration",
                        "description": "sets the risk configuration setting for the userpool / userpool client",
                        "resource-types": "userpool*"
                    },
                    "SetUICustomization": {
                        "access-level": "write",
                        "actions": "SetUICustomization",
                        "description": "Sets the UI customization information for a user pool\\'s built-in app UI.",
                        "resource-types": "userpool*"
                    },
                    "SetUserMFAPreference": {
                        "access-level": "write",
                        "actions": "SetUserMFAPreference",
                        "description": "Sets MFA preference for the user in the userpool",
                        "resource-types": "userpool*"
                    },
                    "SetUserPoolMfaConfig": {
                        "access-level": "write",
                        "actions": "SetUserPoolMfaConfig",
                        "description": "Sets the MFA configuration for the userpool",
                        "resource-types": "userpool*"
                    },
                    "SetUserSettings": {
                        "access-level": "write",
                        "actions": "SetUserSettings",
                        "description": "Sets the user settings like multi-factor authentication (MFA).",
                        "resource-types": "userpool*"
                    },
                    "SignUp": {
                        "access-level": "write",
                        "actions": "SignUp",
                        "description": "Registers the user in the specified user pool and creates a user name, password, and user attributes.",
                        "resource-types": "userpool*"
                    },
                    "StartUserImportJob": {
                        "access-level": "write",
                        "actions": "StartUserImportJob",
                        "description": "Starts the user import.",
                        "resource-types": "userpool*"
                    },
                    "StopUserImportJob": {
                        "access-level": "write",
                        "actions": "StopUserImportJob",
                        "description": "Stops the user import job.",
                        "resource-types": "userpool*"
                    },
                    "UpdateAuthEventFeedback": {
                        "access-level": "write",
                        "actions": "UpdateAuthEventFeedback",
                        "description": "Updates the feedback for the user authentication event",
                        "resource-types": "userpool*"
                    },
                    "UpdateDeviceStatus": {
                        "access-level": "write",
                        "actions": "UpdateDeviceStatus",
                        "description": "Updates the device status.",
                        "resource-types": "userpool*"
                    },
                    "UpdateGroup": {
                        "access-level": "write",
                        "actions": "UpdateGroup",
                        "description": "Updates the specified group with the specified attributes.",
                        "resource-types": "userpool*"
                    },
                    "UpdateIdentityProvider": {
                        "access-level": "write",
                        "actions": "UpdateIdentityProvider",
                        "description": "Updates identity provider information for a user pool.",
                        "resource-types": "userpool*"
                    },
                    "UpdateResourceServer": {
                        "access-level": "write",
                        "actions": "UpdateResourceServer",
                        "description": "Updates the name and scopes of resource server.",
                        "resource-types": "userpool*"
                    },
                    "UpdateUserAttributes": {
                        "access-level": "write",
                        "actions": "UpdateUserAttributes",
                        "description": "Allows a user to update a specific attribute (one at a time).",
                        "resource-types": "userpool*"
                    },
                    "UpdateUserPool": {
                        "access-level": "write",
                        "actions": "UpdateUserPool",
                        "description": "Updates the specified user pool with the specified attributes.",
                        "resource-types": "userpool*"
                    },
                    "UpdateUserPoolClient": {
                        "access-level": "write",
                        "actions": "UpdateUserPoolClient",
                        "description": "Allows the developer to update the specified user pool client and password policy.",
                        "resource-types": "userpool*"
                    },
                    "VerifySoftwareToken": {
                        "access-level": "write",
                        "actions": "VerifySoftwareToken",
                        "description": "Registers a user\\'s entered TOTP code and mark the user\\'s software token MFA status as verified if successful.",
                        "resource-types": "userpool*"
                    },
                    "VerifyUserAttribute": {
                        "access-level": "write",
                        "actions": "VerifyUserAttribute",
                        "description": "Verifies a user attribute using a one time verification code.",
                        "resource-types": "userpool*"
                    }
                }
            }
        },
        "comprehend": {
            "actions": {
                "list": {
                    "ListDocumentClassificationJobs": {
                        "access-level": "list",
                        "actions": "ListDocumentClassificationJobs",
                        "description": "Gets a list of the document classification jobs that you have submitted."
                    },
                    "ListDocumentClassifiers": {
                        "access-level": "list",
                        "actions": "ListDocumentClassifiers",
                        "description": "Gets a list of the document classifiers that you have created."
                    },
                    "ListDominantLanguageDetectionJobs": {
                        "access-level": "list",
                        "actions": "ListDominantLanguageDetectionJobs",
                        "description": "Gets a list of the dominant language detection jobs that you have submitted."
                    },
                    "ListEntitiesDetectionJobs": {
                        "access-level": "list",
                        "actions": "ListEntitiesDetectionJobs",
                        "description": "Gets a list of the entity detection jobs that you have submitted."
                    },
                    "ListEntityRecognizers": {
                        "access-level": "list",
                        "actions": "ListEntityRecognizers",
                        "description": "Gets a list of the properties of all entity recognizers that you created, including recognizers currently in training."
                    },
                    "ListKeyPhrasesDetectionJobs": {
                        "access-level": "list",
                        "actions": "ListKeyPhrasesDetectionJobs",
                        "description": "Get a list of key phrase detection jobs that you have submitted."
                    },
                    "ListSentimentDetectionJobs": {
                        "access-level": "list",
                        "actions": "ListSentimentDetectionJobs",
                        "description": "Gets a list of sentiment detection jobs that you have submitted."
                    },
                    "ListTopicsDetectionJobs": {
                        "access-level": "list",
                        "actions": "ListTopicsDetectionJobs",
                        "description": "Gets a list of the topic detection jobs that you have submitted."
                    }
                },
                "read": {
                    "BatchDetectDominantLanguage": {
                        "access-level": "read",
                        "actions": "BatchDetectDominantLanguage",
                        "description": "Detects the language or languages present in the list of text documents."
                    },
                    "BatchDetectEntities": {
                        "access-level": "read",
                        "actions": "BatchDetectEntities",
                        "description": "Detects the named entities (\"People\", \"Places\", \"Locations\", etc) within the given list of text documents."
                    },
                    "BatchDetectKeyPhrases": {
                        "access-level": "read",
                        "actions": "BatchDetectKeyPhrases",
                        "description": "Detects the phrases in the list of text documents that are most indicative of the content."
                    },
                    "BatchDetectSentiment": {
                        "access-level": "read",
                        "actions": "BatchDetectSentiment",
                        "description": "Detects the sentiment of a text in the list of documents (Positive, Negative, Neutral, or Mixed)."
                    },
                    "BatchDetectSyntax": {
                        "access-level": "read",
                        "actions": "BatchDetectSyntax",
                        "description": "Detects syntactic information (like Part of Speech, Tokens) in a list of text documents."
                    },
                    "DescribeDocumentClassificationJob": {
                        "access-level": "read",
                        "actions": "DescribeDocumentClassificationJob",
                        "description": "Gets the properties associated with a document classification job."
                    },
                    "DescribeDocumentClassifier": {
                        "access-level": "read",
                        "actions": "DescribeDocumentClassifier",
                        "description": "Gets the properties associated with a document classifier.",
                        "resource-types": "document-classifier*"
                    },
                    "DescribeDominantLanguageDetectionJob": {
                        "access-level": "read",
                        "actions": "DescribeDominantLanguageDetectionJob",
                        "description": "Gets the properties associated with a dominant language detection job."
                    },
                    "DescribeEntitiesDetectionJob": {
                        "access-level": "read",
                        "actions": "DescribeEntitiesDetectionJob",
                        "description": "Gets the properties associated with an entities detection job."
                    },
                    "DescribeEntityRecognizer": {
                        "access-level": "read",
                        "actions": "DescribeEntityRecognizer",
                        "description": "Provides details about an entity recognizer including status, S3 buckets containing training data, recognizer metadata, metrics, and so on.",
                        "resource-types": "entity-recognizer*"
                    },
                    "DescribeKeyPhrasesDetectionJob": {
                        "access-level": "read",
                        "actions": "DescribeKeyPhrasesDetectionJob",
                        "description": "Gets the properties associated with a key phrases detection job."
                    },
                    "DescribeSentimentDetectionJob": {
                        "access-level": "read",
                        "actions": "DescribeSentimentDetectionJob",
                        "description": "Gets the properties associated with a sentiment detection job."
                    },
                    "DescribeTopicsDetectionJob": {
                        "access-level": "read",
                        "actions": "DescribeTopicsDetectionJob",
                        "description": "Gets the properties associated with a topic detection job."
                    },
                    "DetectDominantLanguage": {
                        "access-level": "read",
                        "actions": "DetectDominantLanguage",
                        "description": "Detects the language or languages present in the text."
                    },
                    "DetectEntities": {
                        "access-level": "read",
                        "actions": "DetectEntities",
                        "description": "Detects the named entities (\"People\", \"Places\", \"Locations\", etc) within the given text document."
                    },
                    "DetectKeyPhrases": {
                        "access-level": "read",
                        "actions": "DetectKeyPhrases",
                        "description": "Detects the phrases in the text that are most indicative of the content."
                    },
                    "DetectSentiment": {
                        "access-level": "read",
                        "actions": "DetectSentiment",
                        "description": "Detects the sentiment of a text in a document (Positive, Negative, Neutral, or Mixed)."
                    },
                    "DetectSyntax": {
                        "access-level": "read",
                        "actions": "DetectSyntax",
                        "description": "Detects syntactic information (like Part of Speech, Tokens) in a text document."
                    }
                },
                "write": {
                    "CreateDocumentClassifier": {
                        "access-level": "write",
                        "actions": "CreateDocumentClassifier",
                        "description": "Creates a new document classifier that you can use to categorize documents.",
                        "resource-types": "document-classifier*"
                    },
                    "CreateEntityRecognizer": {
                        "access-level": "write",
                        "actions": "CreateEntityRecognizer",
                        "description": "Creates an entity recognizer using submitted files.",
                        "resource-types": "entity-recognizer*"
                    },
                    "DeleteDocumentClassifier": {
                        "access-level": "write",
                        "actions": "DeleteDocumentClassifier",
                        "description": "Deletes a previously created document classifier.",
                        "resource-types": "document-classifier*"
                    },
                    "DeleteEntityRecognizer": {
                        "access-level": "write",
                        "actions": "DeleteEntityRecognizer",
                        "description": "Deletes a submitted entity recognizer.",
                        "resource-types": "entity-recognizer*"
                    },
                    "StartDocumentClassificationJob": {
                        "access-level": "write",
                        "actions": "StartDocumentClassificationJob",
                        "description": "Starts an asynchronous document classification job.",
                        "resource-types": "document-classifier*"
                    },
                    "StartDominantLanguageDetectionJob": {
                        "access-level": "write",
                        "actions": "StartDominantLanguageDetectionJob",
                        "description": "Starts an asynchronous dominant language detection job for a collection of documents."
                    },
                    "StartEntitiesDetectionJob": {
                        "access-level": "write",
                        "actions": "StartEntitiesDetectionJob",
                        "description": "Starts an asynchronous entity detection job for a collection of documents."
                    },
                    "StartKeyPhrasesDetectionJob": {
                        "access-level": "write",
                        "actions": "StartKeyPhrasesDetectionJob",
                        "description": "Starts an asynchronous key phrase detection job for a collection of documents."
                    },
                    "StartSentimentDetectionJob": {
                        "access-level": "write",
                        "actions": "StartSentimentDetectionJob",
                        "description": "Starts an asynchronous sentiment detection job for a collection of documents."
                    },
                    "StartTopicsDetectionJob": {
                        "access-level": "write",
                        "actions": "StartTopicsDetectionJob",
                        "description": "Starts an asynchronous job to detect the most common topics in the collection of documents and the phrases associated with each topic."
                    },
                    "StopDominantLanguageDetectionJob": {
                        "access-level": "write",
                        "actions": "StopDominantLanguageDetectionJob",
                        "description": "Stops a dominant language detection job."
                    },
                    "StopEntitiesDetectionJob": {
                        "access-level": "write",
                        "actions": "StopEntitiesDetectionJob",
                        "description": "Stops an entity detection job."
                    },
                    "StopKeyPhrasesDetectionJob": {
                        "access-level": "write",
                        "actions": "StopKeyPhrasesDetectionJob",
                        "description": "Stops a key phrase detection job."
                    },
                    "StopSentimentDetectionJob": {
                        "access-level": "write",
                        "actions": "StopSentimentDetectionJob",
                        "description": "Stops a sentiment detection job."
                    },
                    "StopTrainingDocumentClassifier": {
                        "access-level": "write",
                        "actions": "StopTrainingDocumentClassifier",
                        "description": "Stop a previously created document classifier training job.",
                        "resource-types": "document-classifier*"
                    },
                    "StopTrainingEntityRecognizer": {
                        "access-level": "write",
                        "actions": "StopTrainingEntityRecognizer",
                        "description": "Stop a previously created entity recognizer training job.",
                        "resource-types": "entity-recognizer*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "document-classifier": {
                    "arn": "arn:${Partition}:comprehend:${Region}:${Account}:document-classifier/${DocumentClassifierName}",
                    "resource-types": "document-classifier"
                },
                "entity-recognizer": {
                    "arn": "arn:${Partition}:comprehend:${Region}:${Account}:entity-recognizer/${EntityRecognizerName}",
                    "resource-types": "entity-recognizer"
                }
            }
        },
        "comprehendmedical": {
            "actions": {
                "read": {
                    "DetectEntities": {
                        "access-level": "read",
                        "actions": "DetectEntities",
                        "description": "Inspects the specified text for the specified type of entities and returns information about them."
                    },
                    "DetectPHI": {
                        "access-level": "read",
                        "actions": "DetectPHI",
                        "description": "Inspects the specified text for PHI entities and returns information about them."
                    }
                }
            }
        },
        "config": {
            "actions": {
                "list": {
                    "DescribeAggregateComplianceByConfigRules": {
                        "access-level": "list",
                        "actions": "DescribeAggregateComplianceByConfigRules",
                        "description": "Returns a list of compliant and noncompliant rules with the number of resources for compliant and noncompliant rules",
                        "resource-types": "ConfigurationAggregator*"
                    },
                    "DescribeAggregationAuthorizations": {
                        "access-level": "list",
                        "actions": "DescribeAggregationAuthorizations",
                        "description": "Returns a list of authorizations granted to various aggregator accounts and regions"
                    },
                    "DescribeComplianceByConfigRule": {
                        "access-level": "list",
                        "actions": "DescribeComplianceByConfigRule",
                        "description": "Indicates whether the specified AWS Config rules are compliant",
                        "resource-types": "ConfigRule*"
                    },
                    "DescribeComplianceByResource": {
                        "access-level": "list",
                        "actions": "DescribeComplianceByResource",
                        "description": "Indicates whether the specified AWS resources are compliant"
                    },
                    "DescribeConfigRuleEvaluationStatus": {
                        "access-level": "list",
                        "actions": "DescribeConfigRuleEvaluationStatus",
                        "description": "Returns status information for each of your AWS managed Config rules",
                        "resource-types": "ConfigRule*"
                    },
                    "DescribeConfigRules": {
                        "access-level": "list",
                        "actions": "DescribeConfigRules",
                        "description": "Returns details about your AWS Config rules",
                        "resource-types": "ConfigRule*"
                    },
                    "DescribeConfigurationAggregatorSourcesStatus": {
                        "access-level": "list",
                        "actions": "DescribeConfigurationAggregatorSourcesStatus",
                        "description": "Returns status information for sources within an aggregator",
                        "resource-types": "ConfigurationAggregator*"
                    },
                    "DescribeConfigurationAggregators": {
                        "access-level": "list",
                        "actions": "DescribeConfigurationAggregators",
                        "description": "Returns the details of one or more configuration aggregators"
                    },
                    "DescribeConfigurationRecorderStatus": {
                        "access-level": "list",
                        "actions": "DescribeConfigurationRecorderStatus",
                        "description": "Returns the current status of the specified configuration recorder"
                    },
                    "DescribeConfigurationRecorders": {
                        "access-level": "list",
                        "actions": "DescribeConfigurationRecorders",
                        "description": "Returns the name of one or more specified configuration recorders"
                    },
                    "DescribeDeliveryChannelStatus": {
                        "access-level": "list",
                        "actions": "DescribeDeliveryChannelStatus",
                        "description": "Returns the current status of the specified delivery channel"
                    },
                    "DescribeDeliveryChannels": {
                        "access-level": "list",
                        "actions": "DescribeDeliveryChannels",
                        "description": "Returns details about the specified delivery channel"
                    },
                    "DescribePendingAggregationRequests": {
                        "access-level": "list",
                        "actions": "DescribePendingAggregationRequests",
                        "description": "Returns a list of all pending aggregation requests"
                    },
                    "DescribeRetentionConfigurations": {
                        "access-level": "list",
                        "actions": "DescribeRetentionConfigurations",
                        "description": "Returns the details of one or more retention configurations"
                    },
                    "ListAggregateDiscoveredResources": {
                        "access-level": "list",
                        "actions": "ListAggregateDiscoveredResources",
                        "description": "Accepts a resource type and returns a list of resource identifiers that are aggregated for a specific resource type across accounts and regions",
                        "resource-types": "ConfigurationAggregator*"
                    },
                    "ListDiscoveredResources": {
                        "access-level": "list",
                        "actions": "ListDiscoveredResources",
                        "description": "Accepts a resource type and returns a list of resource identifiers for the resources of that type"
                    }
                },
                "read": {
                    "BatchGetAggregateResourceConfig": {
                        "access-level": "read",
                        "actions": "BatchGetAggregateResourceConfig",
                        "description": "Returns the current configuration items for resources that are present in your AWS Config aggregator",
                        "resource-types": "ConfigurationAggregator*"
                    },
                    "BatchGetResourceConfig": {
                        "access-level": "read",
                        "actions": "BatchGetResourceConfig",
                        "description": "Returns the current configuration for one or more requested resources"
                    },
                    "DeliverConfigSnapshot": {
                        "access-level": "read",
                        "actions": "DeliverConfigSnapshot",
                        "description": "Schedules delivery of a configuration snapshot to the Amazon S3 bucket in the specified delivery channel"
                    },
                    "GetAggregateComplianceDetailsByConfigRule": {
                        "access-level": "read",
                        "actions": "GetAggregateComplianceDetailsByConfigRule",
                        "description": "Returns the evaluation results for the specified AWS Config rule for a specific resource in a rule",
                        "resource-types": "ConfigurationAggregator*"
                    },
                    "GetAggregateConfigRuleComplianceSummary": {
                        "access-level": "read",
                        "actions": "GetAggregateConfigRuleComplianceSummary",
                        "description": "Returns the number of compliant and noncompliant rules for one or more accounts and regions in an aggregator",
                        "resource-types": "ConfigurationAggregator*"
                    },
                    "GetAggregateDiscoveredResourceCounts": {
                        "access-level": "read",
                        "actions": "GetAggregateDiscoveredResourceCounts",
                        "description": "Returns the resource counts across accounts and regions that are present in your AWS Config aggregator",
                        "resource-types": "ConfigurationAggregator*"
                    },
                    "GetAggregateResourceConfig": {
                        "access-level": "read",
                        "actions": "GetAggregateResourceConfig",
                        "description": "Returns configuration item that is aggregated for your specific resource in a specific source account and region",
                        "resource-types": "ConfigurationAggregator*"
                    },
                    "GetComplianceDetailsByConfigRule": {
                        "access-level": "read",
                        "actions": "GetComplianceDetailsByConfigRule",
                        "description": "Returns the evaluation results for the specified AWS Config rule",
                        "resource-types": "ConfigRule*"
                    },
                    "GetComplianceDetailsByResource": {
                        "access-level": "read",
                        "actions": "GetComplianceDetailsByResource",
                        "description": "Returns the evaluation results for the specified AWS resource"
                    },
                    "GetComplianceSummaryByConfigRule": {
                        "access-level": "read",
                        "actions": "GetComplianceSummaryByConfigRule",
                        "description": "Returns the number of AWS Config rules that are compliant and noncompliant, up to a maximum of 25 for each"
                    },
                    "GetComplianceSummaryByResourceType": {
                        "access-level": "read",
                        "actions": "GetComplianceSummaryByResourceType",
                        "description": "Returns the number of resources that are compliant and the number that are noncompliant"
                    },
                    "GetDiscoveredResourceCounts": {
                        "access-level": "read",
                        "actions": "GetDiscoveredResourceCounts",
                        "description": "Returns the resource types, the number of each resource type, and the total number of resources that AWS Config is recording in this region for your AWS account"
                    },
                    "GetResourceConfigHistory": {
                        "access-level": "read",
                        "actions": "GetResourceConfigHistory",
                        "description": "Returns a list of configuration items for the specified resource"
                    }
                },
                "write": {
                    "DeleteAggregationAuthorization": {
                        "access-level": "write",
                        "actions": "DeleteAggregationAuthorization",
                        "description": "Deletes the authorization granted to the specified configuration aggregator account in a specified region",
                        "resource-types": "AggregationAuthorization*"
                    },
                    "DeleteConfigRule": {
                        "access-level": "write",
                        "actions": "DeleteConfigRule",
                        "description": "Deletes the specified AWS Config rule and all of its evaluation results",
                        "resource-types": "ConfigRule*"
                    },
                    "DeleteConfigurationAggregator": {
                        "access-level": "write",
                        "actions": "DeleteConfigurationAggregator",
                        "description": "Deletes the specified configuration aggregator and the aggregated data associated with the aggregator",
                        "resource-types": "ConfigurationAggregator*"
                    },
                    "DeleteConfigurationRecorder": {
                        "access-level": "write",
                        "actions": "DeleteConfigurationRecorder",
                        "description": "Deletes the configuration recorder"
                    },
                    "DeleteDeliveryChannel": {
                        "access-level": "write",
                        "actions": "DeleteDeliveryChannel",
                        "description": "Deletes the delivery channel"
                    },
                    "DeleteEvaluationResults": {
                        "access-level": "write",
                        "actions": "DeleteEvaluationResults",
                        "description": "Deletes the evaluation results for the specified Config rule",
                        "resource-types": "ConfigRule*"
                    },
                    "DeletePendingAggregationRequest": {
                        "access-level": "write",
                        "actions": "DeletePendingAggregationRequest",
                        "description": "Deletes pending authorization requests for a specified aggregator account in a specified region"
                    },
                    "DeleteRetentionConfiguration": {
                        "access-level": "write",
                        "actions": "DeleteRetentionConfiguration",
                        "description": "Deletes the retention configuration"
                    },
                    "PutAggregationAuthorization": {
                        "access-level": "write",
                        "actions": "PutAggregationAuthorization",
                        "description": "Authorizes the aggregator account and region to collect data from the source account and region",
                        "resource-types": "AggregationAuthorization*"
                    },
                    "PutConfigRule": {
                        "access-level": "write",
                        "actions": "PutConfigRule",
                        "description": "Adds or updates an AWS Config rule for evaluating whether your AWS resources comply with your desired configurations",
                        "resource-types": "ConfigRule*"
                    },
                    "PutConfigurationAggregator": {
                        "access-level": "write",
                        "actions": "PutConfigurationAggregator",
                        "description": "Creates and updates the configuration aggregator with the selected source accounts and regions",
                        "resource-types": "ConfigurationAggregator*"
                    },
                    "PutConfigurationRecorder": {
                        "access-level": "write",
                        "actions": "PutConfigurationRecorder",
                        "description": "Creates a new configuration recorder to record the selected resource configurations"
                    },
                    "PutDeliveryChannel": {
                        "access-level": "write",
                        "actions": "PutDeliveryChannel",
                        "description": "Creates a delivery channel object to deliver configuration information to an Amazon S3 bucket and Amazon SNS topic"
                    },
                    "PutEvaluations": {
                        "access-level": "write",
                        "actions": "PutEvaluations",
                        "description": "Used by an AWS Lambda function to deliver evaluation results to AWS Config"
                    },
                    "PutRetentionConfiguration": {
                        "access-level": "write",
                        "actions": "PutRetentionConfiguration",
                        "description": "Creates and updates the retention configuration with details about retention period (number of days) that AWS Config stores your historical information"
                    },
                    "StartConfigRulesEvaluation": {
                        "access-level": "write",
                        "actions": "StartConfigRulesEvaluation",
                        "description": "Evaluates your resources against the specified Config rules",
                        "resource-types": "ConfigRule*"
                    },
                    "StartConfigurationRecorder": {
                        "access-level": "write",
                        "actions": "StartConfigurationRecorder",
                        "description": "Starts recording configurations of the AWS resources you have selected to record in your AWS account"
                    },
                    "StopConfigurationRecorder": {
                        "access-level": "write",
                        "actions": "StopConfigurationRecorder",
                        "description": "Stops recording configurations of the AWS resources you have selected to record in your AWS account"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "aggregationauthorization": {
                    "arn": "arn:${Partition}:config:${Region}:${Account}:aggregation-authorization/${AggregatorAccount}/${AggregatorRegion}",
                    "resource-types": "AggregationAuthorization"
                },
                "configrule": {
                    "arn": "arn:${Partition}:config:${Region}:${Account}:config-rule/${ConfigRuleId}",
                    "resource-types": "ConfigRule"
                },
                "configurationaggregator": {
                    "arn": "arn:${Partition}:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
                    "resource-types": "ConfigurationAggregator"
                }
            }
        },
        "connect": {
            "actions": {
                "list": {
                    "ListInstances": {
                        "access-level": "list",
                        "actions": "ListInstances",
                        "description": "Grants permissions to view the Amazon Connect instances associated with an AWS account."
                    }
                },
                "read": {
                    "DescribeInstance": {
                        "access-level": "read",
                        "actions": "DescribeInstance",
                        "dependent-actions": "firehose:DescribeDeliveryStream firehose:ListDeliveryStreams kinesis:DescribeStream kinesis:ListStreams kms:DescribeKey kms:ListAliases s3:ListAllMyBuckets",
                        "description": "Grants permissions to view details of an Amazon Connect instance. This is required to create an instance.",
                        "resource-types": "instance*"
                    },
                    "GetCurrentMetricData": {
                        "access-level": "read",
                        "actions": "GetCurrentMetricData",
                        "description": "Grants permissions to retrieve current metric data for the queues in an Amazon Connect instance",
                        "resource-types": "queue*"
                    },
                    "GetFederationToken": {
                        "access-level": "read",
                        "actions": "GetFederationToken",
                        "description": "Allows federation into an instance when using SAML-based authentication for identity management.",
                        "resource-types": "instance*"
                    },
                    "GetMetricData": {
                        "access-level": "read",
                        "actions": "GetMetricData",
                        "description": "Grants permissions to retrieve historical metric data for queues in an Amazon Connect instance",
                        "resource-types": "queue*"
                    }
                },
                "write": {
                    "CreateInstance": {
                        "access-level": "write",
                        "actions": "CreateInstance",
                        "dependent-actions": "ds:CreateAlias ds:DeleteDirectory ds:DescribeDirectories firehose:DescribeDeliveryStream firehose:ListDeliveryStreams iam:CreateServiceLinkedRole kinesis:DescribeStream kinesis:ListStreams kms:CreateGrant kms:DescribeKey kms:ListAliases kms:RetireGrant s3:CreateBucket s3:ListAllMyBuckets",
                        "description": "Grants permissions to create a new Amazon Connect instance. The associated required actions grant permissions to configure instance settings."
                    },
                    "DestroyInstance": {
                        "access-level": "write",
                        "actions": "DestroyInstance",
                        "description": "Grants permissions to delete an Amazon Connect instance. When you remove an instance, the link to an existing AWS directory is also removed.",
                        "resource-types": "instance*"
                    },
                    "GetFederationTokens": {
                        "access-level": "write",
                        "actions": "GetFederationTokens",
                        "dependent-actions": "connect:DescribeInstance connect:ListInstances ds:DescribeDirectories",
                        "description": "Grants permissions to federate in to an Amazon Connect instance (Log in as administrator functionality in the AWS console).",
                        "resource-types": "instance*"
                    },
                    "ModifyInstance": {
                        "access-level": "write",
                        "actions": "ModifyInstance",
                        "dependent-actions": "firehose:DescribeDeliveryStream firehose:ListDeliveryStreams kinesis:DescribeStream kinesis:ListStreams kms:CreateGrant kms:DescribeKey kms:ListAliases kms:RetireGrant s3:CreateBucket s3:ListAllMyBuckets",
                        "description": "Grants permissions to modify configuration settings for an existing Amazon Connect instance. The associated required actions grant permission modify the settings for the instance.",
                        "resource-types": "instance*"
                    },
                    "StartOutboundVoiceContact": {
                        "access-level": "write",
                        "actions": "StartOutboundVoiceContact",
                        "description": "Grants permissions to initiate outbound calls using the Amazon Connect API.",
                        "resource-types": "contact*"
                    },
                    "StopContact": {
                        "access-level": "write",
                        "actions": "StopContact",
                        "description": "Grants permissions to stop contacts that were initiated using the Amazon Connect API. If you use this operation on an active contact the contact ends, even if an agent is active on a call with a customer.",
                        "resource-types": "contact*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "contact": {
                    "arn": "arn:${Partition}:connect::${Account}:instance/${InstanceId}/contact/${ContactId}",
                    "resource-types": "contact"
                },
                "instance": {
                    "arn": "arn:${Partition}:connect::${Account}:instance/${InstanceId}",
                    "resource-types": "instance"
                },
                "queue": {
                    "arn": "arn:${Partition}:connect::${Account}:instance/${InstanceId}/queue/${QueueId}",
                    "resource-types": "queue"
                }
            }
        },
        "costandusagereport": {
            "actions": {
                "read": {
                    "DescribeReportDefinitions": {
                        "access-level": "read",
                        "actions": "DescribeReportDefinitions",
                        "description": "Get Cost and Usage Report Definitions"
                    }
                },
                "write": {
                    "DeleteReportDefinition": {
                        "access-level": "write",
                        "actions": "DeleteReportDefinition",
                        "description": "Delete Cost and Usage Report Definition",
                        "resource-types": "cur*"
                    },
                    "PutReportDefinition": {
                        "access-level": "write",
                        "actions": "PutReportDefinition",
                        "description": "Write Cost and Usage Report Definition",
                        "resource-types": "cur*"
                    }
                }
            }
        },
        "costexplorerservice": {
            "actions": {
                "read": {
                    "GetCostAndUsage": {
                        "access-level": "read",
                        "actions": "GetCostAndUsage",
                        "description": "Get cost and usage metrics for your account"
                    },
                    "GetDimensionValues": {
                        "access-level": "read",
                        "actions": "GetDimensionValues",
                        "description": "Retrieve all available filter values for a filter over a period of time."
                    },
                    "GetReservationUtilization": {
                        "access-level": "read",
                        "actions": "GetReservationUtilization",
                        "description": "Get reservation utilization for your account."
                    },
                    "GetTags": {
                        "access-level": "read",
                        "actions": "GetTags",
                        "description": "Query tags for a specified time period."
                    }
                }
            }
        },
        "databasemigrationservice": {
            "actions": {
                "list": {
                    "ListTagsForResource": {
                        "access-level": "list",
                        "actions": "ListTagsForResource",
                        "description": "Lists all tags for an AWS DMS resource"
                    }
                },
                "read": {
                    "DescribeAccountAttributes": {
                        "access-level": "read",
                        "actions": "DescribeAccountAttributes",
                        "description": "Lists all of the AWS DMS attributes for a customer account"
                    },
                    "DescribeCertificates": {
                        "access-level": "read",
                        "actions": "DescribeCertificates",
                        "description": "Provides a description of the certificate."
                    },
                    "DescribeConnections": {
                        "access-level": "read",
                        "actions": "DescribeConnections",
                        "description": "Describes the status of the connections that have been made between the replication instance and an endpoint"
                    },
                    "DescribeEndpointTypes": {
                        "access-level": "read",
                        "actions": "DescribeEndpointTypes",
                        "description": "Returns information about the type of endpoints available"
                    },
                    "DescribeEndpoints": {
                        "access-level": "read",
                        "actions": "DescribeEndpoints",
                        "description": "Returns information about the endpoints for your account in the current region"
                    },
                    "DescribeEventCategories": {
                        "access-level": "read",
                        "actions": "DescribeEventCategories",
                        "description": "Lists categories for all event source types, or, if specified, for a specified source type."
                    },
                    "DescribeEventSubscriptions": {
                        "access-level": "read",
                        "actions": "DescribeEventSubscriptions",
                        "description": "Lists all the event subscriptions for a customer account."
                    },
                    "DescribeEvents": {
                        "access-level": "read",
                        "actions": "DescribeEvents",
                        "description": "Lists events for a given source identifier and source type."
                    },
                    "DescribeOrderableReplicationInstances": {
                        "access-level": "read",
                        "actions": "DescribeOrderableReplicationInstances",
                        "description": "Returns information about the replication instance types that can be created in the specified region"
                    },
                    "DescribeRefreshSchemasStatus": {
                        "access-level": "read",
                        "actions": "DescribeRefreshSchemasStatus",
                        "description": "Returns the status of the RefreshSchemas operation"
                    },
                    "DescribeReplicationInstances": {
                        "access-level": "read",
                        "actions": "DescribeReplicationInstances",
                        "description": "Returns information about replication instances for your account in the current region"
                    },
                    "DescribeReplicationSubnetGroups": {
                        "access-level": "read",
                        "actions": "DescribeReplicationSubnetGroups",
                        "description": "Returns information about the replication subnet groups"
                    },
                    "DescribeReplicationTasks": {
                        "access-level": "read",
                        "actions": "DescribeReplicationTasks",
                        "description": "Returns information about replication tasks for your account in the current region"
                    },
                    "DescribeSchemas": {
                        "access-level": "read",
                        "actions": "DescribeSchemas",
                        "description": "Returns information about the schema for the specified endpoint"
                    },
                    "DescribeTableStatistics": {
                        "access-level": "read",
                        "actions": "DescribeTableStatistics",
                        "description": "Returns table statistics on the database migration task, including table name, rows inserted, rows updated, and rows deleted"
                    },
                    "TestConnection": {
                        "access-level": "read",
                        "actions": "TestConnection",
                        "description": "Tests the connection between the replication instance and the endpoint"
                    }
                },
                "tagging": {
                    "AddTagsToResource": {
                        "access-level": "tagging",
                        "actions": "AddTagsToResource",
                        "description": "Adds metadata tags to a DMS resource, including replication instance, endpoint, security group, and migration task"
                    },
                    "RemoveTagsFromResource": {
                        "access-level": "tagging",
                        "actions": "RemoveTagsFromResource",
                        "description": "Removes metadata tags from a DMS resource"
                    }
                },
                "write": {
                    "CreateEndpoint": {
                        "access-level": "write",
                        "actions": "CreateEndpoint",
                        "description": "Creates an endpoint using the provided settings"
                    },
                    "CreateReplicationInstance": {
                        "access-level": "write",
                        "actions": "CreateReplicationInstance",
                        "description": "Creates the replication instance using the specified parameters"
                    },
                    "CreateReplicationSubnetGroup": {
                        "access-level": "write",
                        "actions": "CreateReplicationSubnetGroup",
                        "description": "Creates a replication subnet group given a list of the subnet IDs in a VPC"
                    },
                    "CreateReplicationTask": {
                        "access-level": "write",
                        "actions": "CreateReplicationTask",
                        "description": "Creates a replication task using the specified parameters"
                    },
                    "DeleteEndpoint": {
                        "access-level": "write",
                        "actions": "DeleteEndpoint",
                        "description": "Deletes the specified endpoint"
                    },
                    "DeleteEventSubscription": {
                        "access-level": "write",
                        "actions": "DeleteEventSubscription",
                        "description": "Deletes an AWS DMS event subscription."
                    },
                    "DeleteReplicationInstance": {
                        "access-level": "write",
                        "actions": "DeleteReplicationInstance",
                        "description": "Deletes the specified replication instance"
                    },
                    "DeleteReplicationSubnetGroup": {
                        "access-level": "write",
                        "actions": "DeleteReplicationSubnetGroup",
                        "description": "Deletes a subnet group"
                    },
                    "DeleteReplicationTask": {
                        "access-level": "write",
                        "actions": "DeleteReplicationTask",
                        "description": "Deletes the specified replication task"
                    },
                    "ModifyEndpoint": {
                        "access-level": "write",
                        "actions": "ModifyEndpoint",
                        "description": "Modifies the specified endpoint"
                    },
                    "ModifyEventSubscription": {
                        "access-level": "write",
                        "actions": "ModifyEventSubscription",
                        "description": "Modifies an existing AWS DMS event notification subscription."
                    },
                    "ModifyReplicationInstance": {
                        "access-level": "write",
                        "actions": "ModifyReplicationInstance",
                        "description": "Modifies the replication instance to apply new settings"
                    },
                    "ModifyReplicationSubnetGroup": {
                        "access-level": "write",
                        "actions": "ModifyReplicationSubnetGroup",
                        "description": "Modifies the settings for the specified replication subnet group"
                    },
                    "ModifyReplicationTask": {
                        "access-level": "write",
                        "actions": "ModifyReplicationTask",
                        "description": "Modifies the specified replication task."
                    },
                    "RefreshSchemas": {
                        "access-level": "write",
                        "actions": "RefreshSchemas",
                        "description": "Populates the schema for the specified endpoint"
                    },
                    "StartReplicationTask": {
                        "access-level": "write",
                        "actions": "StartReplicationTask",
                        "description": "Starts the replication task"
                    },
                    "StopReplicationTask": {
                        "access-level": "write",
                        "actions": "StopReplicationTask",
                        "description": "Stops the replication task"
                    }
                }
            }
        },
        "datalifecyclemanager": {
            "actions": {
                "list": {
                    "GetLifecyclePolicies": {
                        "access-level": "list",
                        "actions": "GetLifecyclePolicies",
                        "description": "Returns a list of summary descriptions of data lifecycle policies."
                    }
                },
                "read": {
                    "GetLifecyclePolicy": {
                        "access-level": "read",
                        "actions": "GetLifecyclePolicy",
                        "description": "Returns a complete description of a single data lifecycle policy."
                    }
                },
                "write": {
                    "CreateLifecyclePolicy": {
                        "access-level": "write",
                        "actions": "CreateLifecyclePolicy",
                        "description": "Create a data lifecycle policy to manage the scheduled creation and retention of Amazon EBS snapshots. You may have up to 100 policies."
                    },
                    "DeleteLifecyclePolicy": {
                        "access-level": "write",
                        "actions": "DeleteLifecyclePolicy",
                        "description": "Delete an existing data lifecycle policy. In addition, this action halts the creation and deletion of snapshots that the policy specified. Existing snapshots are not affected."
                    },
                    "UpdateLifecyclePolicy": {
                        "access-level": "write",
                        "actions": "UpdateLifecyclePolicy",
                        "description": "Updates an existing data lifecycle policy."
                    }
                }
            }
        },
        "datapipeline": {
            "actions": {
                "list": {
                    "DescribePipelines": {
                        "access-level": "list",
                        "actions": "DescribePipelines",
                        "condition-keys": [
                            "datapipeline:PipelineCreator",
                            "datapipeline:Tag"
                        ],
                        "description": "Retrieves metadata about one or more pipelines."
                    },
                    "GetAccountLimits": {
                        "access-level": "list",
                        "actions": "GetAccountLimits",
                        "description": "Description for GetAccountLimits"
                    },
                    "ListPipelines": {
                        "access-level": "list",
                        "actions": "ListPipelines",
                        "description": "Lists the pipeline identifiers for all active pipelines that you have permission to access."
                    }
                },
                "read": {
                    "DescribeObjects": {
                        "access-level": "read",
                        "actions": "DescribeObjects",
                        "condition-keys": [
                            "datapipeline:PipelineCreator",
                            "datapipeline:Tag"
                        ],
                        "description": "Gets the object definitions for a set of objects associated with the pipeline."
                    },
                    "EvaluateExpression": {
                        "access-level": "read",
                        "actions": "EvaluateExpression",
                        "condition-keys": [
                            "datapipeline:PipelineCreator",
                            "datapipeline:Tag"
                        ],
                        "description": "Task runners call EvaluateExpression to evaluate a string in the context of the specified object."
                    },
                    "GetPipelineDefinition": {
                        "access-level": "read",
                        "actions": "GetPipelineDefinition",
                        "condition-keys": [
                            "datapipeline:PipelineCreator",
                            "datapipeline:Tag",
                            "datapipeline:workerGroup"
                        ],
                        "description": "Gets the definition of the specified pipeline."
                    },
                    "QueryObjects": {
                        "access-level": "read",
                        "actions": "QueryObjects",
                        "condition-keys": [
                            "datapipeline:PipelineCreator",
                            "datapipeline:Tag"
                        ],
                        "description": "Queries the specified pipeline for the names of objects that match the specified set of conditions."
                    },
                    "ValidatePipelineDefinition": {
                        "access-level": "read",
                        "actions": "ValidatePipelineDefinition",
                        "condition-keys": [
                            "datapipeline:PipelineCreator",
                            "datapipeline:Tag",
                            "datapipeline:workerGroup"
                        ],
                        "description": "Validates the specified pipeline definition to ensure that it is well formed and can be run without error."
                    }
                },
                "tagging": {
                    "AddTags": {
                        "access-level": "tagging",
                        "actions": "AddTags",
                        "condition-keys": [
                            "datapipeline:PipelineCreator",
                            "datapipeline:Tag"
                        ],
                        "description": "Adds or modifies tags for the specified pipeline."
                    },
                    "RemoveTags": {
                        "access-level": "tagging",
                        "actions": "RemoveTags",
                        "condition-keys": [
                            "datapipeline:PipelineCreator",
                            "datapipeline:Tag"
                        ],
                        "description": "Removes existing tags from the specified pipeline."
                    }
                },
                "write": {
                    "ActivatePipeline": {
                        "access-level": "write",
                        "actions": "ActivatePipeline",
                        "condition-keys": [
                            "datapipeline:PipelineCreator",
                            "datapipeline:Tag",
                            "datapipeline:workerGroup"
                        ],
                        "description": "Validates the specified pipeline and starts processing pipeline tasks. If the pipeline does not pass validation, activation fails."
                    },
                    "CreatePipeline": {
                        "access-level": "write",
                        "actions": "CreatePipeline",
                        "condition-keys": [
                            "datapipeline:Tag"
                        ],
                        "description": "Creates a new, empty pipeline."
                    },
                    "DeactivatePipeline": {
                        "access-level": "write",
                        "actions": "DeactivatePipeline",
                        "condition-keys": [
                            "datapipeline:PipelineCreator",
                            "datapipeline:Tag",
                            "datapipeline:workerGroup"
                        ],
                        "description": "Deactivates the specified running pipeline."
                    },
                    "DeletePipeline": {
                        "access-level": "write",
                        "actions": "DeletePipeline",
                        "condition-keys": [
                            "datapipeline:PipelineCreator",
                            "datapipeline:Tag"
                        ],
                        "description": "Deletes a pipeline, its pipeline definition, and its run history."
                    },
                    "PollForTask": {
                        "access-level": "write",
                        "actions": "PollForTask",
                        "condition-keys": [
                            "datapipeline:workerGroup"
                        ],
                        "description": "Task runners call PollForTask to receive a task to perform from AWS Data Pipeline."
                    },
                    "PutAccountLimits": {
                        "access-level": "write",
                        "actions": "PutAccountLimits",
                        "description": "Description for PutAccountLimits"
                    },
                    "PutPipelineDefinition": {
                        "access-level": "write",
                        "actions": "PutPipelineDefinition",
                        "condition-keys": [
                            "datapipeline:PipelineCreator",
                            "datapipeline:Tag",
                            "datapipeline:workerGroup"
                        ],
                        "description": "Adds tasks, schedules, and preconditions to the specified pipeline."
                    },
                    "ReportTaskProgress": {
                        "access-level": "write",
                        "actions": "ReportTaskProgress",
                        "description": "Task runners call ReportTaskProgress when assigned a task to acknowledge that it has the task."
                    },
                    "ReportTaskRunnerHeartbeat": {
                        "access-level": "write",
                        "actions": "ReportTaskRunnerHeartbeat",
                        "description": "Task runners call ReportTaskRunnerHeartbeat every 15 minutes to indicate that they are operational."
                    },
                    "SetStatus": {
                        "access-level": "write",
                        "actions": "SetStatus",
                        "condition-keys": [
                            "datapipeline:PipelineCreator",
                            "datapipeline:Tag"
                        ],
                        "description": "Requests that the status of the specified physical or logical pipeline objects be updated in the specified pipeline."
                    },
                    "SetTaskStatus": {
                        "access-level": "write",
                        "actions": "SetTaskStatus",
                        "description": "Task runners call SetTaskStatus to notify AWS Data Pipeline that a task is completed and provide information about the final status."
                    }
                }
            }
        },
        "datasync": {
            "actions": {
                "list": {
                    "ListAgents": {
                        "access-level": "list",
                        "actions": "ListAgents",
                        "description": "Returns a list of agents owned by an AWS account in a region specified in the request."
                    },
                    "ListLocations": {
                        "access-level": "list",
                        "actions": "ListLocations",
                        "description": "Returns a lists of source and destination sync locations."
                    },
                    "ListTaskExecutions": {
                        "access-level": "list",
                        "actions": "ListTaskExecutions",
                        "description": "Returns a list of executed sync tasks."
                    },
                    "ListTasks": {
                        "access-level": "list",
                        "actions": "ListTasks",
                        "description": "Returns a list of all the sync tasks."
                    }
                },
                "read": {
                    "DescribeAgent": {
                        "access-level": "read",
                        "actions": "DescribeAgent",
                        "description": "Returns metadata such as name, network interfaces, and the status (that is, whether the agent is running or not) about a sync agent.",
                        "resource-types": "agent*"
                    },
                    "DescribeLocationEfs": {
                        "access-level": "read",
                        "actions": "DescribeLocationEfs",
                        "description": "Returns metadata, such as the path information about an Amazon EFS sync location.",
                        "resource-types": "location*"
                    },
                    "DescribeLocationNfs": {
                        "access-level": "read",
                        "actions": "DescribeLocationNfs",
                        "description": "Returns metadata, such as the path information, about a NFS sync location.",
                        "resource-types": "location*"
                    },
                    "DescribeLocationS3": {
                        "access-level": "read",
                        "actions": "DescribeLocationS3",
                        "description": "Returns metadata, such as bucket name, about an Amazon S3 bucket sync location.",
                        "resource-types": "location*"
                    },
                    "DescribeTask": {
                        "access-level": "read",
                        "actions": "DescribeTask",
                        "description": "Returns metadata about a sync task.",
                        "resource-types": "task*"
                    },
                    "DescribeTaskExecution": {
                        "access-level": "read",
                        "actions": "DescribeTaskExecution",
                        "description": "Returns detailed metadata about a sync task that is being executed.",
                        "resource-types": "taskexecution*"
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "This operation lists the tags that have been added to the specified resource.",
                        "resource-types": "agent"
                    },
                    "location": {
                        "access-level": "read",
                        "actions": "location"
                    },
                    "task": {
                        "access-level": "read",
                        "actions": "task"
                    }
                },
                "tagging": {
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "This operation removes one or more tags from the specified resource.",
                        "resource-types": "agent"
                    },
                    "location": {
                        "access-level": "tagging",
                        "actions": "location"
                    },
                    "task": {
                        "access-level": "tagging",
                        "actions": "task",
                        "condition-keys": [
                            "aws:TagKeys"
                        ]
                    }
                },
                "write": {
                    "CancelTaskExecution": {
                        "access-level": "write",
                        "actions": "CancelTaskExecution",
                        "description": "Cancels execution of a sync task.",
                        "resource-types": "taskexecution*"
                    },
                    "CreateAgent": {
                        "access-level": "write",
                        "actions": "CreateAgent",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Activates an agent that you have deployed on your host."
                    },
                    "CreateLocationEfs": {
                        "access-level": "write",
                        "actions": "CreateLocationEfs",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Creates an endpoint for an Amazon EFS file system."
                    },
                    "CreateLocationNfs": {
                        "access-level": "write",
                        "actions": "CreateLocationNfs",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Creates an endpoint for a NFS file system."
                    },
                    "CreateLocationS3": {
                        "access-level": "write",
                        "actions": "CreateLocationS3",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Creates an endpoint for an Amazon S3 bucket."
                    },
                    "CreateTask": {
                        "access-level": "write",
                        "actions": "CreateTask",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Creates a sync task."
                    },
                    "DeleteAgent": {
                        "access-level": "write",
                        "actions": "DeleteAgent",
                        "description": "Deletes an agent.",
                        "resource-types": "agent*"
                    },
                    "DeleteLocation": {
                        "access-level": "write",
                        "actions": "DeleteLocation",
                        "description": "Deletes the configuration of a location used by AWS DataSync.",
                        "resource-types": "location*"
                    },
                    "DeleteTask": {
                        "access-level": "write",
                        "actions": "DeleteTask",
                        "description": "Deletes a sync task.",
                        "resource-types": "task*"
                    },
                    "StartTaskExecution": {
                        "access-level": "write",
                        "actions": "StartTaskExecution",
                        "description": "Starts a specific invocation of a sync task.",
                        "resource-types": "task*"
                    },
                    "TagResource": {
                        "access-level": "write",
                        "actions": "TagResource",
                        "description": "Applies a key-value pair to an AWS resource.",
                        "resource-types": "agent"
                    },
                    "UpdateAgent": {
                        "access-level": "write",
                        "actions": "UpdateAgent",
                        "description": "Updates the name of an agent.",
                        "resource-types": "agent*"
                    },
                    "UpdateTask": {
                        "access-level": "write",
                        "actions": "UpdateTask",
                        "description": "Updates the metadata associated with a sync task.",
                        "resource-types": "task*"
                    },
                    "location": {
                        "access-level": "write",
                        "actions": "location"
                    },
                    "task": {
                        "access-level": "write",
                        "actions": "task",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ]
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "agent": {
                    "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:agent/${AgentId}",
                    "condition-keys": "aws:ResourceTag/${TagKey}",
                    "resource-types": "agent"
                },
                "location": {
                    "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:location/${LocationId}",
                    "condition-keys": "aws:ResourceTag/${TagKey}",
                    "resource-types": "location"
                },
                "task": {
                    "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:task/${TaskId}",
                    "condition-keys": "aws:ResourceTag/${TagKey}",
                    "resource-types": "task"
                },
                "taskexecution": {
                    "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:task/${TaskId}/execution/${ExecutionId}",
                    "resource-types": "taskexecution"
                }
            }
        },
        "deeplens": {
            "actions": {
                "list": {
                    "ListDeployments": {
                        "access-level": "list",
                        "actions": "ListDeployments",
                        "description": "Retrieves a list of AWS DeepLens Deployment identifiers."
                    },
                    "ListDevices": {
                        "access-level": "list",
                        "actions": "ListDevices",
                        "description": "Retrieves a list of AWS DeepLens device identifiers."
                    },
                    "ListModels": {
                        "access-level": "list",
                        "actions": "ListModels",
                        "description": "Retrieves a list of AWS DeepLens Model identifiers."
                    },
                    "ListProjects": {
                        "access-level": "list",
                        "actions": "ListProjects",
                        "description": "Retrieves a list of AWS DeepLens Project identifiers."
                    }
                },
                "permissions-management": {
                    "AssociateServiceRoleToAccount": {
                        "access-level": "permissions-management",
                        "actions": "AssociateServiceRoleToAccount",
                        "description": "Associates the user\\'s account with IAM roles controlling various permissions needed by AWS DeepLens for proper functionality."
                    }
                },
                "read": {
                    "BatchGetDevice": {
                        "access-level": "read",
                        "actions": "BatchGetDevice",
                        "description": "Retrieves a list of AWS DeepLens devices.",
                        "resource-types": "device*"
                    },
                    "BatchGetModel": {
                        "access-level": "read",
                        "actions": "BatchGetModel",
                        "description": "Retrieves a list of AWS DeepLens Models.",
                        "resource-types": "model*"
                    },
                    "BatchGetProject": {
                        "access-level": "read",
                        "actions": "BatchGetProject",
                        "description": "Retrieves a list of AWS DeepLens Projects.",
                        "resource-types": "project*"
                    },
                    "GetAssociatedResources": {
                        "access-level": "read",
                        "actions": "GetAssociatedResources",
                        "description": "Retrieves the account level resources associated with the user\\'s account."
                    },
                    "GetDeploymentStatus": {
                        "access-level": "read",
                        "actions": "GetDeploymentStatus",
                        "description": "Retrieves the the deployment status of a particular AWS DeepLens device, along with any associated metadata."
                    },
                    "GetDevice": {
                        "access-level": "read",
                        "actions": "GetDevice",
                        "description": "Retrieves information about an AWS DeepLens device.",
                        "resource-types": "device*"
                    },
                    "GetModel": {
                        "access-level": "read",
                        "actions": "GetModel",
                        "description": "Retrieves an AWS DeepLens Model.",
                        "resource-types": "model*"
                    },
                    "GetProject": {
                        "access-level": "read",
                        "actions": "GetProject",
                        "description": "Retrieves an AWS DeepLens Project.",
                        "resource-types": "project*"
                    }
                },
                "write": {
                    "CreateDeviceCertificates": {
                        "access-level": "write",
                        "actions": "CreateDeviceCertificates",
                        "description": "Creates a certificate package that is used to successfully authenticate and Register an AWS DeepLens device."
                    },
                    "CreateModel": {
                        "access-level": "write",
                        "actions": "CreateModel",
                        "description": "Creates a new AWS DeepLens Model."
                    },
                    "CreateProject": {
                        "access-level": "write",
                        "actions": "CreateProject",
                        "description": "Creates a new AWS DeepLens Project."
                    },
                    "DeleteModel": {
                        "access-level": "write",
                        "actions": "DeleteModel",
                        "description": "Deletes an AWS DeepLens Model.",
                        "resource-types": "model*"
                    },
                    "DeleteProject": {
                        "access-level": "write",
                        "actions": "DeleteProject",
                        "description": "Deletes an AWS DeepLens Project.",
                        "resource-types": "project*"
                    },
                    "DeployProject": {
                        "access-level": "write",
                        "actions": "DeployProject",
                        "description": "Deploys an AWS DeepLens project to a registered AWS DeepLens device.",
                        "resource-types": "device*"
                    },
                    "DeregisterDevice": {
                        "access-level": "write",
                        "actions": "DeregisterDevice",
                        "description": "Begins a device de-registration workflow for a registered AWS DeepLens device.",
                        "resource-types": "device*"
                    },
                    "ImportProjectFromTemplate": {
                        "access-level": "write",
                        "actions": "ImportProjectFromTemplate",
                        "description": "Creates a new AWS DeepLens project from a sample project template."
                    },
                    "RegisterDevice": {
                        "access-level": "write",
                        "actions": "RegisterDevice",
                        "description": "Begins a device registration workflow for an AWS DeepLens device."
                    },
                    "RemoveProject": {
                        "access-level": "write",
                        "actions": "RemoveProject",
                        "description": "Removes a deployed AWS DeepLens project from an AWS DeepLens device.",
                        "resource-types": "device*"
                    },
                    "UpdateProject": {
                        "access-level": "write",
                        "actions": "UpdateProject",
                        "description": "Updates an existing AWS DeepLens Project.",
                        "resource-types": "project*"
                    },
                    "project*": {
                        "access-level": "write",
                        "actions": "project*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "device": {
                    "arn": "arn:${Partition}:deeplens:${Region}:${Account}:device/${DeviceName}",
                    "resource-types": "device"
                },
                "model": {
                    "arn": "arn:${Partition}:deeplens:${Region}:${Account}:model/${ModelName}",
                    "resource-types": "model"
                },
                "project": {
                    "arn": "arn:${Partition}:deeplens:${Region}:${Account}:project/${ProjectName}",
                    "resource-types": "project"
                }
            }
        },
        "devicefarm": {
            "actions": {
                "list": {
                    "ListArtifacts": {
                        "access-level": "list",
                        "actions": "ListArtifacts",
                        "description": "Gets information about artifacts"
                    },
                    "ListDevicePools": {
                        "access-level": "list",
                        "actions": "ListDevicePools",
                        "description": "Gets information about device pools"
                    },
                    "ListDevices": {
                        "access-level": "list",
                        "actions": "ListDevices",
                        "description": "Gets information about unique device types"
                    },
                    "ListJobs": {
                        "access-level": "list",
                        "actions": "ListJobs",
                        "description": "Gets information about jobs"
                    },
                    "ListOfferingTransactions": {
                        "access-level": "list",
                        "actions": "ListOfferingTransactions",
                        "description": "Returns a list of all historical purchases, renewals, and system renewal transactions for an AWS account"
                    },
                    "ListOfferings": {
                        "access-level": "list",
                        "actions": "ListOfferings",
                        "description": "Returns a list of products or offerings that the user can manage through the API"
                    },
                    "ListProjects": {
                        "access-level": "list",
                        "actions": "ListProjects",
                        "description": "Gets information about projects"
                    },
                    "ListRemoteAccessSessions": {
                        "access-level": "list",
                        "actions": "ListRemoteAccessSessions",
                        "description": "Returns a list of all currently running remote access sessions"
                    },
                    "ListRuns": {
                        "access-level": "list",
                        "actions": "ListRuns",
                        "description": "Gets information about runs"
                    },
                    "ListSamples": {
                        "access-level": "list",
                        "actions": "ListSamples",
                        "description": "Gets information about samples"
                    },
                    "ListSuites": {
                        "access-level": "list",
                        "actions": "ListSuites",
                        "description": "Gets information about suites"
                    },
                    "ListTests": {
                        "access-level": "list",
                        "actions": "ListTests",
                        "description": "Gets information about tests"
                    },
                    "ListUniqueProblems": {
                        "access-level": "list",
                        "actions": "ListUniqueProblems",
                        "description": "Gets information about unique problems"
                    },
                    "ListUploads": {
                        "access-level": "list",
                        "actions": "ListUploads",
                        "description": "Gets information about uploads"
                    }
                },
                "read": {
                    "GetAccountSettings": {
                        "access-level": "read",
                        "actions": "GetAccountSettings",
                        "description": "Returns the number of unmetered iOS and/or unmetered Android devices that have been purchased by the account"
                    },
                    "GetDevice": {
                        "access-level": "read",
                        "actions": "GetDevice",
                        "description": "Gets information about a unique device type"
                    },
                    "GetDevicePool": {
                        "access-level": "read",
                        "actions": "GetDevicePool",
                        "description": "Gets information about a device pool"
                    },
                    "GetDevicePoolCompatibility": {
                        "access-level": "read",
                        "actions": "GetDevicePoolCompatibility",
                        "description": "Gets information about compatibility with a device pool"
                    },
                    "GetJob": {
                        "access-level": "read",
                        "actions": "GetJob",
                        "description": "Gets information about a job"
                    },
                    "GetOfferingStatus": {
                        "access-level": "read",
                        "actions": "GetOfferingStatus",
                        "description": "Gets the current status and future status of all offerings purchased by an AWS account"
                    },
                    "GetProject": {
                        "access-level": "read",
                        "actions": "GetProject",
                        "description": "Gets information about a project"
                    },
                    "GetRemoteAccessSession": {
                        "access-level": "read",
                        "actions": "GetRemoteAccessSession",
                        "description": "Returns a link to a currently running remote access session"
                    },
                    "GetRun": {
                        "access-level": "read",
                        "actions": "GetRun",
                        "description": "Gets information about a run"
                    },
                    "GetSuite": {
                        "access-level": "read",
                        "actions": "GetSuite",
                        "description": "Gets information about a suite"
                    },
                    "GetTest": {
                        "access-level": "read",
                        "actions": "GetTest",
                        "description": "Gets information about a test"
                    },
                    "GetUpload": {
                        "access-level": "read",
                        "actions": "GetUpload",
                        "description": "Gets information about an upload"
                    }
                },
                "write": {
                    "CreateDevicePool": {
                        "access-level": "write",
                        "actions": "CreateDevicePool",
                        "description": "Creates a device pool"
                    },
                    "CreateProject": {
                        "access-level": "write",
                        "actions": "CreateProject",
                        "description": "Creates a new project"
                    },
                    "CreateRemoteAccessSession": {
                        "access-level": "write",
                        "actions": "CreateRemoteAccessSession",
                        "description": "Specifies and starts a remote access session"
                    },
                    "CreateUpload": {
                        "access-level": "write",
                        "actions": "CreateUpload",
                        "description": "Creates a new project"
                    },
                    "DeleteDevicePool": {
                        "access-level": "write",
                        "actions": "DeleteDevicePool",
                        "description": "Deletes a device pool given the pool ARN. Does not allow deletion of curated pools owned by the system"
                    },
                    "DeleteProject": {
                        "access-level": "write",
                        "actions": "DeleteProject",
                        "description": "Deletes an AWS Device Farm project, given the project ARN"
                    },
                    "DeleteRemoteAccessSession": {
                        "access-level": "write",
                        "actions": "DeleteRemoteAccessSession",
                        "description": "Deletes a completed remote access session and its results"
                    },
                    "DeleteRun": {
                        "access-level": "write",
                        "actions": "DeleteRun",
                        "description": "Deletes the run, given the run ARN"
                    },
                    "DeleteUpload": {
                        "access-level": "write",
                        "actions": "DeleteUpload",
                        "description": "Deletes an upload given the upload ARN"
                    },
                    "InstallToRemoteAccessSession": {
                        "access-level": "write",
                        "actions": "InstallToRemoteAccessSession",
                        "description": "Installs an application to the device in a remote access session"
                    },
                    "PurchaseOffering": {
                        "access-level": "write",
                        "actions": "PurchaseOffering",
                        "description": "Immediately purchases offerings for an AWS account"
                    },
                    "RenewOffering": {
                        "access-level": "write",
                        "actions": "RenewOffering",
                        "description": "Explicitly sets the quantity of devices to renew for an offering, starting from the effectiveDate of the next period"
                    },
                    "ScheduleRun": {
                        "access-level": "write",
                        "actions": "ScheduleRun",
                        "description": "Schedules a run"
                    },
                    "StopRemoteAccessSession": {
                        "access-level": "write",
                        "actions": "StopRemoteAccessSession",
                        "description": "Ends a specified remote access session"
                    },
                    "StopRun": {
                        "access-level": "write",
                        "actions": "StopRun",
                        "description": "Initiates a stop request for the current test run"
                    },
                    "UpdateDevicePool": {
                        "access-level": "write",
                        "actions": "UpdateDevicePool",
                        "description": "Modifies the name, description, and rules in a device pool given the attributes and the pool ARN"
                    },
                    "UpdateProject": {
                        "access-level": "write",
                        "actions": "UpdateProject",
                        "description": "Modifies the specified project name, given the project ARN and a new name"
                    }
                }
            }
        },
        "directconnect": {
            "actions": {
                "list": {
                    "DescribeConnectionLoa": {
                        "access-level": "list",
                        "actions": "DescribeConnectionLoa",
                        "description": "Returns the LOA-CFA for a Connection."
                    },
                    "DescribeConnections": {
                        "access-level": "list",
                        "actions": "DescribeConnections",
                        "description": "Displays all connections in this region."
                    },
                    "DescribeConnectionsOnInterconnect": {
                        "access-level": "list",
                        "actions": "DescribeConnectionsOnInterconnect",
                        "description": "Return a list of connections that have been provisioned on the given interconnect."
                    },
                    "DescribeInterconnectLoa": {
                        "access-level": "list",
                        "actions": "DescribeInterconnectLoa",
                        "description": "Returns the LOA-CFA for an Interconnect."
                    },
                    "DescribeInterconnects": {
                        "access-level": "list",
                        "actions": "DescribeInterconnects",
                        "description": "Returns a list of interconnects owned by the AWS account."
                    },
                    "DescribeLocations": {
                        "access-level": "list",
                        "actions": "DescribeLocations",
                        "description": "Returns the list of AWS Direct Connect locations in the current AWS region."
                    },
                    "DescribeVirtualGateways": {
                        "access-level": "list",
                        "actions": "DescribeVirtualGateways",
                        "description": "Returns a list of virtual private gateways owned by the AWS account."
                    },
                    "DescribeVirtualInterfaces": {
                        "access-level": "list",
                        "actions": "DescribeVirtualInterfaces",
                        "description": "Displays all virtual interfaces for an AWS account."
                    }
                },
                "read": {
                    "ConfirmConnection": {
                        "access-level": "read",
                        "actions": "ConfirmConnection",
                        "description": "Confirm the creation of a hosted connection on an interconnect."
                    },
                    "ConfirmPrivateVirtualInterface": {
                        "access-level": "read",
                        "actions": "ConfirmPrivateVirtualInterface",
                        "description": "Accept ownership of a private virtual interface created by another customer."
                    },
                    "ConfirmPublicVirtualInterface": {
                        "access-level": "read",
                        "actions": "ConfirmPublicVirtualInterface",
                        "description": "Accept ownership of a public virtual interface created by another customer"
                    }
                },
                "write": {
                    "AllocateConnectionOnInterconnect": {
                        "access-level": "write",
                        "actions": "AllocateConnectionOnInterconnect",
                        "description": "Creates a hosted connection on an interconnect."
                    },
                    "AllocatePrivateVirtualInterface": {
                        "access-level": "write",
                        "actions": "AllocatePrivateVirtualInterface",
                        "description": "Provisions a private virtual interface to be owned by a different customer."
                    },
                    "AllocatePublicVirtualInterface": {
                        "access-level": "write",
                        "actions": "AllocatePublicVirtualInterface",
                        "description": "Provisions a public virtual interface to be owned by a different customer."
                    },
                    "CreateConnection": {
                        "access-level": "write",
                        "actions": "CreateConnection",
                        "description": "Creates a new connection between the customer network and a specific AWS Direct Connect location."
                    },
                    "CreateInterconnect": {
                        "access-level": "write",
                        "actions": "CreateInterconnect",
                        "description": "Creates a new interconnect between a AWS Direct Connect partner\\'s network and a specific AWS Direct Connect location."
                    },
                    "CreatePrivateVirtualInterface": {
                        "access-level": "write",
                        "actions": "CreatePrivateVirtualInterface",
                        "description": "Creates a new private virtual interface."
                    },
                    "CreatePublicVirtualInterface": {
                        "access-level": "write",
                        "actions": "CreatePublicVirtualInterface",
                        "description": "Creates a new public virtual interface."
                    },
                    "DeleteConnection": {
                        "access-level": "write",
                        "actions": "DeleteConnection",
                        "description": "Deletes the connection."
                    },
                    "DeleteInterconnect": {
                        "access-level": "write",
                        "actions": "DeleteInterconnect",
                        "description": "Deletes the specified interconnect."
                    },
                    "DeleteVirtualInterface": {
                        "access-level": "write",
                        "actions": "DeleteVirtualInterface",
                        "description": "Deletes a virtual interface."
                    }
                }
            }
        },
        "directoryservice": {
            "actions": {
                "list": {
                    "DescribeDirectories": {
                        "access-level": "list",
                        "actions": "DescribeDirectories",
                        "description": "Obtains information about the directories that belong to this account."
                    },
                    "ListSchemaExtensions": {
                        "access-level": "list",
                        "actions": "ListSchemaExtensions",
                        "description": "Lists all schema extensions applied to a Microsoft AD Directory."
                    }
                },
                "read": {
                    "DescribeConditionalForwarders": {
                        "access-level": "read",
                        "actions": "DescribeConditionalForwarders",
                        "description": "Obtains information about the conditional forwarders for this account."
                    },
                    "DescribeDomainControllers": {
                        "access-level": "read",
                        "actions": "DescribeDomainControllers",
                        "description": "Provides information about any domain controllers in your directory."
                    },
                    "DescribeEventTopics": {
                        "access-level": "read",
                        "actions": "DescribeEventTopics",
                        "description": "Obtains information about which SNS topics receive status messages from the specified directory."
                    },
                    "DescribeSharedDirectories": {
                        "access-level": "read",
                        "actions": "DescribeSharedDirectories",
                        "description": "Returns the shared directories in your account."
                    },
                    "DescribeSnapshots": {
                        "access-level": "read",
                        "actions": "DescribeSnapshots",
                        "description": "Obtains information about the directory snapshots that belong to this account."
                    },
                    "DescribeTrusts": {
                        "access-level": "read",
                        "actions": "DescribeTrusts",
                        "description": "Obtains information about the trust relationships for this account."
                    },
                    "GetDirectoryLimits": {
                        "access-level": "read",
                        "actions": "GetDirectoryLimits",
                        "description": "Obtains directory limit information for the current region."
                    },
                    "GetSnapshotLimits": {
                        "access-level": "read",
                        "actions": "GetSnapshotLimits",
                        "description": "Obtains the manual snapshot limits for a directory."
                    },
                    "ListIpRoutes": {
                        "access-level": "read",
                        "actions": "ListIpRoutes",
                        "description": "Lists the address blocks that you have added to a directory."
                    },
                    "ListLogSubscriptions": {
                        "access-level": "read",
                        "actions": "ListLogSubscriptions",
                        "description": "Lists the active log subscriptions for the AWS account."
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "Lists all tags on an Amazon Directory Services directory."
                    },
                    "VerifyTrust": {
                        "access-level": "read",
                        "actions": "VerifyTrust",
                        "description": "Verifies a trust relationship between your Microsoft AD in the AWS cloud and an external domain."
                    }
                },
                "tagging": {
                    "AddTagsToResource": {
                        "access-level": "tagging",
                        "actions": "AddTagsToResource",
                        "description": "Adds or overwrites one or more tags for the specified Amazon Directory Services directory."
                    },
                    "RemoveTagsFromResource": {
                        "access-level": "tagging",
                        "actions": "RemoveTagsFromResource",
                        "description": "Removes tags from an Amazon Directory Services directory."
                    }
                },
                "write": {
                    "AcceptSharedDirectory": {
                        "access-level": "write",
                        "actions": "AcceptSharedDirectory",
                        "description": "Accepts a directory sharing request that was sent from the directory owner account."
                    },
                    "AddIpRoutes": {
                        "access-level": "write",
                        "actions": "AddIpRoutes",
                        "dependent-actions": "ec2:AuthorizeSecurityGroupEgress ec2:AuthorizeSecurityGroupIngress ec2:DescribeSecurityGroups",
                        "description": "Adds a CIDR address block to correctly route traffic to and from your Microsoft AD on Amazon Web Services"
                    },
                    "CancelSchemaExtension": {
                        "access-level": "write",
                        "actions": "CancelSchemaExtension",
                        "description": "Cancels an in-progress schema extension to a Microsoft AD directory."
                    },
                    "ConnectDirectory": {
                        "access-level": "write",
                        "actions": "ConnectDirectory",
                        "dependent-actions": "ec2:AuthorizeSecurityGroupEgress ec2:AuthorizeSecurityGroupIngress ec2:CreateNetworkInterface ec2:CreateSecurityGroup ec2:DescribeNetworkInterfaces ec2:DescribeSubnets ec2:DescribeVpcs",
                        "description": "Creates an AD Connector to connect to an on-premises directory."
                    },
                    "CreateAlias": {
                        "access-level": "write",
                        "actions": "CreateAlias",
                        "description": "Creates an alias for a directory and assigns the alias to the directory."
                    },
                    "CreateComputer": {
                        "access-level": "write",
                        "actions": "CreateComputer",
                        "description": "Creates a computer account in the specified directory, and joins the computer to the directory."
                    },
                    "CreateConditionalForwarder": {
                        "access-level": "write",
                        "actions": "CreateConditionalForwarder",
                        "description": "Creates a conditional forwarder associated with your AWS directory."
                    },
                    "CreateDirectory": {
                        "access-level": "write",
                        "actions": "CreateDirectory",
                        "dependent-actions": "ec2:AuthorizeSecurityGroupEgress ec2:AuthorizeSecurityGroupIngress ec2:CreateNetworkInterface ec2:CreateSecurityGroup ec2:DescribeNetworkInterfaces ec2:DescribeSubnets ec2:DescribeVpcs",
                        "description": "Creates a Simple AD directory."
                    },
                    "CreateLogSubscription": {
                        "access-level": "write",
                        "actions": "CreateLogSubscription",
                        "description": "Creates a subscription to forward real time Directory Service domain controller security logs to the specified CloudWatch log group in your AWS account."
                    },
                    "CreateMicrosoftAD": {
                        "access-level": "write",
                        "actions": "CreateMicrosoftAD",
                        "dependent-actions": "ec2:AuthorizeSecurityGroupEgress ec2:AuthorizeSecurityGroupIngress ec2:CreateNetworkInterface ec2:CreateSecurityGroup ec2:DescribeNetworkInterfaces ec2:DescribeSubnets ec2:DescribeVpcs",
                        "description": "Creates a Microsoft AD in the AWS cloud."
                    },
                    "CreateSnapshot": {
                        "access-level": "write",
                        "actions": "CreateSnapshot",
                        "description": "Creates a snapshot of a Simple AD or Microsoft AD directory in the AWS cloud."
                    },
                    "CreateTrust": {
                        "access-level": "write",
                        "actions": "CreateTrust",
                        "description": "Initiates the creation of the AWS side of a trust relationship between a Microsoft AD in the AWS cloud and an external domain."
                    },
                    "DeleteConditionalForwarder": {
                        "access-level": "write",
                        "actions": "DeleteConditionalForwarder",
                        "description": "Deletes a conditional forwarder that has been set up for your AWS directory."
                    },
                    "DeleteDirectory": {
                        "access-level": "write",
                        "actions": "DeleteDirectory",
                        "dependent-actions": "ec2:DeleteNetworkInterface ec2:DeleteSecurityGroup ec2:DescribeNetworkInterfaces ec2:RevokeSecurityGroupEgress ec2:RevokeSecurityGroupIngress",
                        "description": "Deletes an AWS Directory Service directory."
                    },
                    "DeleteLogSubscription": {
                        "access-level": "write",
                        "actions": "DeleteLogSubscription",
                        "description": "Deletes the specified log subscription."
                    },
                    "DeleteSnapshot": {
                        "access-level": "write",
                        "actions": "DeleteSnapshot",
                        "description": "Deletes a directory snapshot."
                    },
                    "DeleteTrust": {
                        "access-level": "write",
                        "actions": "DeleteTrust",
                        "description": "Deletes an existing trust relationship between your Microsoft AD in the AWS cloud and an external domain."
                    },
                    "DeregisterEventTopic": {
                        "access-level": "write",
                        "actions": "DeregisterEventTopic",
                        "description": "Removes the specified directory as a publisher to the specified SNS topic."
                    },
                    "DisableRadius": {
                        "access-level": "write",
                        "actions": "DisableRadius",
                        "description": "Disables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector directory."
                    },
                    "DisableSso": {
                        "access-level": "write",
                        "actions": "DisableSso",
                        "description": "Disables single-sign on for a directory."
                    },
                    "EnableRadius": {
                        "access-level": "write",
                        "actions": "EnableRadius",
                        "description": "Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector directory."
                    },
                    "EnableSso": {
                        "access-level": "write",
                        "actions": "EnableSso",
                        "description": "Enables single-sign on for a directory."
                    },
                    "RegisterEventTopic": {
                        "access-level": "write",
                        "actions": "RegisterEventTopic",
                        "dependent-actions": "sns:GetTopicAttributes",
                        "description": "Associates a directory with an SNS topic."
                    },
                    "RejectSharedDirectory": {
                        "access-level": "write",
                        "actions": "RejectSharedDirectory",
                        "description": "Rejects a directory sharing request that was sent from the directory owner account."
                    },
                    "RemoveIpRoutes": {
                        "access-level": "write",
                        "actions": "RemoveIpRoutes",
                        "description": "Removes IP address blocks from a directory."
                    },
                    "ResetUserPassword": {
                        "access-level": "write",
                        "actions": "ResetUserPassword",
                        "description": "Resets the password for any user in your AWS Managed Microsoft AD or Simple AD directory."
                    },
                    "RestoreFromSnapshot": {
                        "access-level": "write",
                        "actions": "RestoreFromSnapshot",
                        "description": "Restores a directory using an existing directory snapshot."
                    },
                    "ShareDirectory": {
                        "access-level": "write",
                        "actions": "ShareDirectory",
                        "description": "Shares a specified directory in your AWS account (directory owner) with another AWS account (directory consumer). With this operation you can use your directory from any AWS account and from any Amazon VPC within an AWS Region."
                    },
                    "StartSchemaExtension": {
                        "access-level": "write",
                        "actions": "StartSchemaExtension",
                        "description": "Applies a schema extension to a Microsoft AD directory."
                    },
                    "UnshareDirectory": {
                        "access-level": "write",
                        "actions": "UnshareDirectory",
                        "description": "Stops the directory sharing between the directory owner and consumer accounts."
                    },
                    "UpdateConditionalForwarder": {
                        "access-level": "write",
                        "actions": "UpdateConditionalForwarder",
                        "description": "Updates a conditional forwarder that has been set up for your AWS directory."
                    },
                    "UpdateNumberOfDomainControllers": {
                        "access-level": "write",
                        "actions": "UpdateNumberOfDomainControllers",
                        "description": "Adds or removes domain controllers to or from the directory. Based on the difference between current value and new value (provided through this API call), domain controllers will be added or removed. It may take up to 45 minutes for any new domain controllers to become fully active once the requested number of domain controllers is updated. During this time, you cannot make another update request."
                    },
                    "UpdateRadius": {
                        "access-level": "write",
                        "actions": "UpdateRadius",
                        "description": "Updates the Remote Authentication Dial In User Service (RADIUS) server information for an AD Connector directory."
                    }
                }
            }
        },
        "dynamodb": {
            "actions": {
                "list": {
                    "ListBackups": {
                        "access-level": "list",
                        "actions": "ListBackups",
                        "description": "List backups associated with the account and endpoint"
                    },
                    "ListGlobalTables": {
                        "access-level": "list",
                        "actions": "ListGlobalTables",
                        "description": "Lists all global tables that have a replica in the specified region"
                    },
                    "ListTables": {
                        "access-level": "list",
                        "actions": "ListTables",
                        "description": "Returns an array of table names associated with the current account and endpoint"
                    }
                },
                "read": {
                    "BatchGetItem": {
                        "access-level": "read",
                        "actions": "BatchGetItem",
                        "condition-keys": [
                            "dynamodb:Attributes",
                            "dynamodb:LeadingKeys",
                            "dynamodb:ReturnConsumedCapacity",
                            "dynamodb:Select"
                        ],
                        "description": "Returns the attributes of one or more items from one or more tables",
                        "resource-types": "table*"
                    },
                    "ConditionCheckItem": {
                        "access-level": "read",
                        "actions": "ConditionCheckItem",
                        "condition-keys": [
                            "dynamodb:Attributes",
                            "dynamodb:LeadingKeys",
                            "dynamodb:ReturnConsumedCapacity",
                            "dynamodb:ReturnValues"
                        ],
                        "description": "The ConditionCheckItem operation checks the existence of a set of attributes for the item with the given primary key",
                        "resource-types": "table*"
                    },
                    "DescribeBackup": {
                        "access-level": "read",
                        "actions": "DescribeBackup",
                        "description": "Describes an existing backup of a table",
                        "resource-types": "backup*"
                    },
                    "DescribeContinuousBackups": {
                        "access-level": "read",
                        "actions": "DescribeContinuousBackups",
                        "description": "Checks the status of the backup restore settings on the specified table",
                        "resource-types": "table*"
                    },
                    "DescribeGlobalTable": {
                        "access-level": "read",
                        "actions": "DescribeGlobalTable",
                        "description": "Returns information about the specified global table",
                        "resource-types": "global-table*"
                    },
                    "DescribeGlobalTableSettings": {
                        "access-level": "read",
                        "actions": "DescribeGlobalTableSettings",
                        "description": "Returns settings information about the specified global table",
                        "resource-types": "global-table*"
                    },
                    "DescribeLimits": {
                        "access-level": "read",
                        "actions": "DescribeLimits",
                        "description": "Returns the current provisioned-capacity limits for your AWS account in a region, both for the region as a whole and for any one DynamoDB table that you create there"
                    },
                    "DescribeReservedCapacity": {
                        "access-level": "read",
                        "actions": "DescribeReservedCapacity",
                        "description": "Describes one or more of the Reserved Capacity purchased"
                    },
                    "DescribeReservedCapacityOfferings": {
                        "access-level": "read",
                        "actions": "DescribeReservedCapacityOfferings",
                        "description": "Describes Reserved Capacity offerings that are available for purchase"
                    },
                    "DescribeStream": {
                        "access-level": "read",
                        "actions": "DescribeStream",
                        "description": "Returns information about a stream, including the current status of the stream, its Amazon Resource Name (ARN), the composition of its shards, and its corresponding DynamoDB table",
                        "resource-types": "stream*"
                    },
                    "DescribeTable": {
                        "access-level": "read",
                        "actions": "DescribeTable",
                        "description": "Returns information about the table",
                        "resource-types": "table*"
                    },
                    "DescribeTimeToLive": {
                        "access-level": "read",
                        "actions": "DescribeTimeToLive",
                        "description": "Gives a description of the Time to Live (TTL) status on the specified table."
                    },
                    "GetItem": {
                        "access-level": "read",
                        "actions": "GetItem",
                        "condition-keys": [
                            "dynamodb:Attributes",
                            "dynamodb:EnclosingOperation",
                            "dynamodb:LeadingKeys",
                            "dynamodb:ReturnConsumedCapacity",
                            "dynamodb:Select"
                        ],
                        "description": "The GetItem operation returns a set of attributes for the item with the given primary key",
                        "resource-types": "table*"
                    },
                    "GetRecords": {
                        "access-level": "read",
                        "actions": "GetRecords",
                        "description": "Retrieves the stream records from a given shard",
                        "resource-types": "stream*"
                    },
                    "GetShardIterator": {
                        "access-level": "read",
                        "actions": "GetShardIterator",
                        "description": "Returns a shard iterator",
                        "resource-types": "stream*"
                    },
                    "ListStreams": {
                        "access-level": "read",
                        "actions": "ListStreams",
                        "description": "Returns an array of stream ARNs associated with the current account and endpoint"
                    },
                    "ListTagsOfResource": {
                        "access-level": "read",
                        "actions": "ListTagsOfResource",
                        "description": "List all tags on an Amazon DynamoDB resource"
                    },
                    "Query": {
                        "access-level": "read",
                        "actions": "Query",
                        "description": "Uses the primary key of a table or a secondary index to directly access items from that table or index",
                        "resource-types": "table*"
                    },
                    "Scan": {
                        "access-level": "read",
                        "actions": "Scan",
                        "description": "Returns one or more items and item attributes by accessing every item in a table or a secondary index",
                        "resource-types": "table*"
                    },
                    "index": {
                        "access-level": "read",
                        "actions": "index",
                        "condition-keys": [
                            "dynamodb:Attributes",
                            "dynamodb:LeadingKeys",
                            "dynamodb:ReturnConsumedCapacity",
                            "dynamodb:ReturnValues",
                            "dynamodb:Select"
                        ]
                    }
                },
                "tagging": {
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "description": "Associate a set of tags with an Amazon DynamoDB resource"
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "Removes the association of tags from an Amazon DynamoDB resource."
                    }
                },
                "write": {
                    "BatchWriteItem": {
                        "access-level": "write",
                        "actions": "BatchWriteItem",
                        "condition-keys": [
                            "dynamodb:Attributes",
                            "dynamodb:LeadingKeys",
                            "dynamodb:ReturnConsumedCapacity"
                        ],
                        "description": "Puts or deletes multiple items in one or more tables",
                        "resource-types": "table*"
                    },
                    "CreateBackup": {
                        "access-level": "write",
                        "actions": "CreateBackup",
                        "description": "Creates a backup for an existing table",
                        "resource-types": "table*"
                    },
                    "CreateGlobalTable": {
                        "access-level": "write",
                        "actions": "CreateGlobalTable",
                        "description": "Enables the user to create a global table from an existing table",
                        "resource-types": "global-table*"
                    },
                    "CreateTable": {
                        "access-level": "write",
                        "actions": "CreateTable",
                        "description": "The CreateTable operation adds a new table to your account",
                        "resource-types": "table*"
                    },
                    "DeleteBackup": {
                        "access-level": "write",
                        "actions": "DeleteBackup",
                        "description": "Deletes an existing backup of a table",
                        "resource-types": "backup*"
                    },
                    "DeleteItem": {
                        "access-level": "write",
                        "actions": "DeleteItem",
                        "condition-keys": [
                            "dynamodb:Attributes",
                            "dynamodb:EnclosingOperation",
                            "dynamodb:LeadingKeys",
                            "dynamodb:ReturnConsumedCapacity",
                            "dynamodb:ReturnValues"
                        ],
                        "description": "Deletes a single item in a table by primary key",
                        "resource-types": "table*"
                    },
                    "DeleteTable": {
                        "access-level": "write",
                        "actions": "DeleteTable",
                        "description": "The DeleteTable operation deletes a table and all of its items",
                        "resource-types": "table*"
                    },
                    "PurchaseReservedCapacityOfferings": {
                        "access-level": "write",
                        "actions": "PurchaseReservedCapacityOfferings",
                        "description": "Purchases Reserved Capacity for use with your account"
                    },
                    "PutItem": {
                        "access-level": "write",
                        "actions": "PutItem",
                        "condition-keys": [
                            "dynamodb:Attributes",
                            "dynamodb:EnclosingOperation",
                            "dynamodb:LeadingKeys",
                            "dynamodb:ReturnConsumedCapacity",
                            "dynamodb:ReturnValues"
                        ],
                        "description": "Creates a new item, or replaces an old item with a new item",
                        "resource-types": "table*"
                    },
                    "RestoreTableFromBackup": {
                        "access-level": "write",
                        "actions": "RestoreTableFromBackup",
                        "description": "Creates a new table from an existing backup",
                        "resource-types": "backup*"
                    },
                    "RestoreTableToPointInTime": {
                        "access-level": "write",
                        "actions": "RestoreTableToPointInTime",
                        "description": "Restores a table to a point in time",
                        "resource-types": "table*"
                    },
                    "UpdateContinuousBackups": {
                        "access-level": "write",
                        "actions": "UpdateContinuousBackups",
                        "description": "Enables or disables continuous backups",
                        "resource-types": "table*"
                    },
                    "UpdateGlobalTable": {
                        "access-level": "write",
                        "actions": "UpdateGlobalTable",
                        "description": "Enables the user to add or remove replicas in the specified global table",
                        "resource-types": "global-table*"
                    },
                    "UpdateGlobalTableSettings": {
                        "access-level": "write",
                        "actions": "UpdateGlobalTableSettings",
                        "description": "Enables the user to update settings of the specified global table",
                        "resource-types": "global-table*"
                    },
                    "UpdateItem": {
                        "access-level": "write",
                        "actions": "UpdateItem",
                        "condition-keys": [
                            "dynamodb:Attributes",
                            "dynamodb:EnclosingOperation",
                            "dynamodb:LeadingKeys",
                            "dynamodb:ReturnConsumedCapacity",
                            "dynamodb:ReturnValues"
                        ],
                        "description": "Edits an existing item\\'s attributes, or adds a new item to the table if it does not already exist",
                        "resource-types": "table*"
                    },
                    "UpdateTable": {
                        "access-level": "write",
                        "actions": "UpdateTable",
                        "description": "Modifies the provisioned throughput settings, global secondary indexes, or DynamoDB Streams settings for a given table",
                        "resource-types": "table*"
                    },
                    "UpdateTimeToLive": {
                        "access-level": "write",
                        "actions": "UpdateTimeToLive",
                        "description": "Enables or disables TTL for the specified table",
                        "resource-types": "table*"
                    },
                    "table*": {
                        "access-level": "write",
                        "actions": "table*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "backup": {
                    "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}/backup/${BackupName}",
                    "resource-types": "backup"
                },
                "global-table": {
                    "arn": "arn:${Partition}:dynamodb::${Account}:global-table/${GlobalTableName}",
                    "resource-types": "global-table"
                },
                "index": {
                    "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}/index/${IndexName}",
                    "resource-types": "index"
                },
                "stream": {
                    "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}/stream/${StreamLabel}",
                    "resource-types": "stream"
                },
                "table": {
                    "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}",
                    "resource-types": "table"
                }
            }
        },
        "dynamodbacceleratordax": {
            "actions": {
                "list": {
                    "DescribeClusters": {
                        "access-level": "list",
                        "actions": "DescribeClusters",
                        "description": "The DescribeClusters action returns information about all provisioned DAX clusters.",
                        "resource-types": "application"
                    },
                    "DescribeDefaultParameters": {
                        "access-level": "list",
                        "actions": "DescribeDefaultParameters",
                        "description": "The DescribeDefaultParameters action returns the default system parameter information for DAX."
                    },
                    "DescribeEvents": {
                        "access-level": "list",
                        "actions": "DescribeEvents",
                        "description": "The DescribeEvents action returns events related to DAX clusters and parameter groups."
                    },
                    "DescribeParameterGroups": {
                        "access-level": "list",
                        "actions": "DescribeParameterGroups",
                        "description": "The DescribeParameterGroups action returns a list of parameter group descriptions."
                    },
                    "DescribeSubnetGroups": {
                        "access-level": "list",
                        "actions": "DescribeSubnetGroups",
                        "description": "The DescribeSubnetGroups action returns a list of subnet group descriptions."
                    }
                },
                "read": {
                    "BatchGetItem": {
                        "access-level": "read",
                        "actions": "BatchGetItem",
                        "description": "The BatchGetItem action returns the attributes of one or more items from one or more tables.",
                        "resource-types": "application*"
                    },
                    "ConditionCheckItem": {
                        "access-level": "read",
                        "actions": "ConditionCheckItem",
                        "description": "The ConditionCheckItem operation checks the existence of a set of attributes for the item with the given primary key",
                        "resource-types": "application*"
                    },
                    "DescribeParameters": {
                        "access-level": "read",
                        "actions": "DescribeParameters",
                        "description": "The DescribeParameters action returns the detailed parameter list for a particular parameter group."
                    },
                    "GetItem": {
                        "access-level": "read",
                        "actions": "GetItem",
                        "condition-keys": [
                            "dax:EnclosingOperation"
                        ],
                        "description": "The GetItem action returns a set of attributes for the item with the given primary key.",
                        "resource-types": "application*"
                    },
                    "ListTags": {
                        "access-level": "read",
                        "actions": "ListTags",
                        "description": "The ListTags action returns a list all of the tags for a DAX cluster.",
                        "resource-types": "application*"
                    },
                    "Query": {
                        "access-level": "read",
                        "actions": "Query",
                        "description": "The Query action finds items based on primary key values. You can query any table or secondary index that has a composite primary key (a partition key and a sort key).",
                        "resource-types": "application*"
                    },
                    "Scan": {
                        "access-level": "read",
                        "actions": "Scan",
                        "description": "The Scan action returns one or more items and item attributes by accessing every item in a table or a secondary index.",
                        "resource-types": "application*"
                    }
                },
                "tagging": {
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "description": "The TagResource action associates a set of tags with a DAX resource.",
                        "resource-types": "application*"
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "The UntagResource action removes the association of tags from a DAX resource.",
                        "resource-types": "application*"
                    }
                },
                "write": {
                    "BatchWriteItem": {
                        "access-level": "write",
                        "actions": "BatchWriteItem",
                        "description": "The BatchWriteItem action operation puts or deletes multiple items in one or more tables.",
                        "resource-types": "application*"
                    },
                    "CreateCluster": {
                        "access-level": "write",
                        "actions": "CreateCluster",
                        "dependent-actions": "dax:CreateParameterGroup dax:CreateSubnetGroup ec2:CreateNetworkInterface ec2:DeleteNetworkInterface ec2:DescribeNetworkInterfaces ec2:DescribeSecurityGroups ec2:DescribeSubnets ec2:DescribeVpcs iam:GetRole iam:PassRole",
                        "description": "The CreateCluster action creates a DAX cluster.",
                        "resource-types": "application*"
                    },
                    "CreateParameterGroup": {
                        "access-level": "write",
                        "actions": "CreateParameterGroup",
                        "description": "The CreateParameterGroup action creates collection of parameters that you apply to all of the nodes in a DAX cluster."
                    },
                    "CreateSubnetGroup": {
                        "access-level": "write",
                        "actions": "CreateSubnetGroup",
                        "description": "The CreateSubnetGroup action creates a new subnet group."
                    },
                    "DecreaseReplicationFactor": {
                        "access-level": "write",
                        "actions": "DecreaseReplicationFactor",
                        "description": "The DecreaseReplicationFactor action removes one or more nodes from a DAX cluster.",
                        "resource-types": "application*"
                    },
                    "DeleteCluster": {
                        "access-level": "write",
                        "actions": "DeleteCluster",
                        "description": "The DeleteCluster action deletes a previously provisioned DAX cluster.",
                        "resource-types": "application*"
                    },
                    "DeleteItem": {
                        "access-level": "write",
                        "actions": "DeleteItem",
                        "condition-keys": [
                            "dax:EnclosingOperation"
                        ],
                        "description": "The DeleteItem action deletes a single item in a table by primary key.",
                        "resource-types": "application*"
                    },
                    "DeleteParameterGroup": {
                        "access-level": "write",
                        "actions": "DeleteParameterGroup",
                        "description": "The DeleteParameterGroup action deletes the specified parameter group."
                    },
                    "DeleteSubnetGroup": {
                        "access-level": "write",
                        "actions": "DeleteSubnetGroup",
                        "description": "The DeleteSubnetGroup action deletes a subnet group."
                    },
                    "IncreaseReplicationFactor": {
                        "access-level": "write",
                        "actions": "IncreaseReplicationFactor",
                        "description": "The IncreaseReplicationFactor action adds one or more nodes to a DAX cluster.",
                        "resource-types": "application*"
                    },
                    "PutItem": {
                        "access-level": "write",
                        "actions": "PutItem",
                        "condition-keys": [
                            "dax:EnclosingOperation"
                        ],
                        "description": "The PutItem action creates a new item, or replaces an old item with a new item.",
                        "resource-types": "application*"
                    },
                    "RebootNode": {
                        "access-level": "write",
                        "actions": "RebootNode",
                        "description": "The RebootNode action reboots a single node of a DAX cluster.",
                        "resource-types": "application*"
                    },
                    "UpdateCluster": {
                        "access-level": "write",
                        "actions": "UpdateCluster",
                        "description": "The UpdateCluster action modifies the settings for a DAX cluster.",
                        "resource-types": "application*"
                    },
                    "UpdateItem": {
                        "access-level": "write",
                        "actions": "UpdateItem",
                        "condition-keys": [
                            "dax:EnclosingOperation"
                        ],
                        "description": "The UpdateItem action edits an existing item\\'s attributes, or adds a new item to the table if it does not already exist.",
                        "resource-types": "application*"
                    },
                    "UpdateParameterGroup": {
                        "access-level": "write",
                        "actions": "UpdateParameterGroup",
                        "description": "The UpdateParameterGroup action modifies the parameters of a parameter group."
                    },
                    "UpdateSubnetGroup": {
                        "access-level": "write",
                        "actions": "UpdateSubnetGroup",
                        "description": "The UpdateSubnetGroup action modifies an existing subnet group."
                    }
                }
            }
        },
        "ec2": {
            "actions": {
                "image-instance-network-interface-security-group-key-pair-placement-group-snapshot": {
                    "SCENARIO: EC2-VPC-InstanceStore": {
                        "access-level": "image-instance-network-interface-security-group-key-pair-placement-group-snapshot",
                        "actions": "SCENARIO: EC2-VPC-InstanceStore"
                    }
                },
                "image-instance-network-interface-security-group-subnet-key-pair-placement-group-snapshot": {
                    "SCENARIO: EC2-VPC-InstanceStore-Subnet": {
                        "access-level": "image-instance-network-interface-security-group-subnet-key-pair-placement-group-snapshot",
                        "actions": "SCENARIO: EC2-VPC-InstanceStore-Subnet"
                    }
                },
                "image-instance-network-interface-security-group-subnet-volume-key-pair-placement-group-snapshot": {
                    "SCENARIO: EC2-VPC-EBS-Subnet": {
                        "access-level": "image-instance-network-interface-security-group-subnet-volume-key-pair-placement-group-snapshot",
                        "actions": "SCENARIO: EC2-VPC-EBS-Subnet"
                    }
                },
                "image-instance-network-interface-security-group-volume-key-pair-placement-group-snapshot": {
                    "SCENARIO: EC2-VPC-EBS": {
                        "access-level": "image-instance-network-interface-security-group-volume-key-pair-placement-group-snapshot",
                        "actions": "SCENARIO: EC2-VPC-EBS"
                    }
                },
                "image-instance-security-group-key-pair-placement-group-snapshot": {
                    "SCENARIO: EC2-Classic-InstanceStore": {
                        "access-level": "image-instance-security-group-key-pair-placement-group-snapshot",
                        "actions": "SCENARIO: EC2-Classic-InstanceStore"
                    }
                },
                "image-instance-security-group-volume-key-pair-placement-group-snapshot": {
                    "SCENARIO: EC2-Classic-EBS": {
                        "access-level": "image-instance-security-group-volume-key-pair-placement-group-snapshot",
                        "actions": "SCENARIO: EC2-Classic-EBS"
                    }
                },
                "list": {
                    "DescribeAccountAttributes": {
                        "access-level": "list",
                        "actions": "DescribeAccountAttributes",
                        "description": "Describes attributes of your AWS account."
                    },
                    "DescribeAddresses": {
                        "access-level": "list",
                        "actions": "DescribeAddresses",
                        "description": "Describes one or more of your Elastic IP addresses."
                    },
                    "DescribeAggregateIdFormat": {
                        "access-level": "list",
                        "actions": "DescribeAggregateIdFormat",
                        "description": "Describes the longer ID format settings for all resource types in a specific region."
                    },
                    "DescribeAvailabilityZones": {
                        "access-level": "list",
                        "actions": "DescribeAvailabilityZones",
                        "description": "escribes one or more of the Availability Zones that are available to you."
                    },
                    "DescribeBundleTasks": {
                        "access-level": "list",
                        "actions": "DescribeBundleTasks",
                        "description": "Describes one or more of your bundling tasks."
                    },
                    "DescribeByoipCidrs": {
                        "access-level": "list",
                        "actions": "DescribeByoipCidrs",
                        "description": "Describes the IP address ranges that were specified in calls to ProvisionByoipCidr."
                    },
                    "DescribeCapacityReservations": {
                        "access-level": "list",
                        "actions": "DescribeCapacityReservations",
                        "description": "Describes one or more of your Capacity Reservations."
                    },
                    "DescribeClassicLinkInstances": {
                        "access-level": "list",
                        "actions": "DescribeClassicLinkInstances",
                        "description": "Describes one or more of your linked EC2-Classic instances."
                    },
                    "DescribeConversionTasks": {
                        "access-level": "list",
                        "actions": "DescribeConversionTasks",
                        "description": "Describes one or more of your conversion tasks."
                    },
                    "DescribeCustomerGateways": {
                        "access-level": "list",
                        "actions": "DescribeCustomerGateways",
                        "description": "Describes one or more of your VPN customer gateways."
                    },
                    "DescribeDhcpOptions": {
                        "access-level": "list",
                        "actions": "DescribeDhcpOptions",
                        "description": "Describes one or more of your DHCP options sets."
                    },
                    "DescribeEgressOnlyInternetGateways": {
                        "access-level": "list",
                        "actions": "DescribeEgressOnlyInternetGateways",
                        "description": "Describes one or more of your egress-only Internet gateways."
                    },
                    "DescribeExportTasks": {
                        "access-level": "list",
                        "actions": "DescribeExportTasks",
                        "description": "Describes one or more of your export tasks."
                    },
                    "DescribeFleetHistory": {
                        "access-level": "list",
                        "actions": "DescribeFleetHistory",
                        "description": "Describes the events for the specified EC2 Fleet during the specified time."
                    },
                    "DescribeFleetInstances": {
                        "access-level": "list",
                        "actions": "DescribeFleetInstances",
                        "description": "Describes the running instances for the specified EC2 Fleet."
                    },
                    "DescribeFleets": {
                        "access-level": "list",
                        "actions": "DescribeFleets",
                        "description": "Describes one or more of your EC2 Fleet."
                    },
                    "DescribeFlowLogs": {
                        "access-level": "list",
                        "actions": "DescribeFlowLogs",
                        "description": "Describes one or more flow logs."
                    },
                    "DescribeFpgaImageAttribute": {
                        "access-level": "list",
                        "actions": "DescribeFpgaImageAttribute",
                        "description": "Describes the specified attribute of the specified Amazon FPGA Images (AFI)."
                    },
                    "DescribeFpgaImages": {
                        "access-level": "list",
                        "actions": "DescribeFpgaImages",
                        "description": "Describes one or more of the Amazon FPGA Images (AFIs) available to you."
                    },
                    "DescribeHostReservationOfferings": {
                        "access-level": "list",
                        "actions": "DescribeHostReservationOfferings",
                        "description": "Describes the Dedicated Host Reservations that are available to purchase."
                    },
                    "DescribeHostReservations": {
                        "access-level": "list",
                        "actions": "DescribeHostReservations",
                        "description": "Describes Dedicated Host Reservations which are associated with Dedicated Hosts in your account."
                    },
                    "DescribeHosts": {
                        "access-level": "list",
                        "actions": "DescribeHosts",
                        "description": "Describes one or more of your Dedicated Hosts."
                    },
                    "DescribeIamInstanceProfileAssociations": {
                        "access-level": "list",
                        "actions": "DescribeIamInstanceProfileAssociations",
                        "description": "Describes your IAM instance profile associations."
                    },
                    "DescribeIdFormat": {
                        "access-level": "list",
                        "actions": "DescribeIdFormat",
                        "description": "Describes the ID format settings for your resources on a per-region basis, for example, to view which resource types are enabled for longer IDs."
                    },
                    "DescribeIdentityIdFormat": {
                        "access-level": "list",
                        "actions": "DescribeIdentityIdFormat",
                        "description": "Describes the ID format settings for resources for the specified IAM user, IAM role, or root user."
                    },
                    "DescribeImageAttribute": {
                        "access-level": "list",
                        "actions": "DescribeImageAttribute",
                        "description": "Describes the specified attribute of the specified AMI."
                    },
                    "DescribeImages": {
                        "access-level": "list",
                        "actions": "DescribeImages",
                        "description": "Describes one or more of the images (AMIs, AKIs, and ARIs) available to you."
                    },
                    "DescribeImportImageTasks": {
                        "access-level": "list",
                        "actions": "DescribeImportImageTasks",
                        "description": "Displays details about an import virtual machine or import snapshot tasks that are already created."
                    },
                    "DescribeImportSnapshotTasks": {
                        "access-level": "list",
                        "actions": "DescribeImportSnapshotTasks",
                        "description": "Describes your import snapshot tasks."
                    },
                    "DescribeInstanceAttribute": {
                        "access-level": "list",
                        "actions": "DescribeInstanceAttribute",
                        "description": "Describes the specified attribute of the specified instance."
                    },
                    "DescribeInstanceCreditSpecifications": {
                        "access-level": "list",
                        "actions": "DescribeInstanceCreditSpecifications",
                        "description": "Describes the credit option for CPU usage of one or more of your instances."
                    },
                    "DescribeInstanceStatus": {
                        "access-level": "list",
                        "actions": "DescribeInstanceStatus",
                        "description": "Describes the status of one or more instances."
                    },
                    "DescribeInstances": {
                        "access-level": "list",
                        "actions": "DescribeInstances",
                        "description": "Describes one or more of your instances."
                    },
                    "DescribeInternetGateways": {
                        "access-level": "list",
                        "actions": "DescribeInternetGateways",
                        "description": "Describes one or more of your Internet gateways."
                    },
                    "DescribeKeyPairs": {
                        "access-level": "list",
                        "actions": "DescribeKeyPairs",
                        "description": "Describes one or more of your key pairs."
                    },
                    "DescribeLaunchTemplateVersions": {
                        "access-level": "list",
                        "actions": "DescribeLaunchTemplateVersions",
                        "description": "Describes one or more of your launch template versions."
                    },
                    "DescribeLaunchTemplates": {
                        "access-level": "list",
                        "actions": "DescribeLaunchTemplates",
                        "description": "Describes one or more of your launch templates."
                    },
                    "DescribeMovingAddresses": {
                        "access-level": "list",
                        "actions": "DescribeMovingAddresses",
                        "description": "Describes your Elastic IP addresses that are being moved to the EC2-VPC platform, or that are being restored to the EC2-Classic platform."
                    },
                    "DescribeNatGateways": {
                        "access-level": "list",
                        "actions": "DescribeNatGateways",
                        "description": "Describes one or more of the your NAT gateways."
                    },
                    "DescribeNetworkAcls": {
                        "access-level": "list",
                        "actions": "DescribeNetworkAcls",
                        "description": "Describes one or more of your network ACLs."
                    },
                    "DescribeNetworkInterfaceAttribute": {
                        "access-level": "list",
                        "actions": "DescribeNetworkInterfaceAttribute",
                        "description": "Describes a network interface attribute. You can specify only one attribute at a time."
                    },
                    "DescribeNetworkInterfacePermissions": {
                        "access-level": "list",
                        "actions": "DescribeNetworkInterfacePermissions",
                        "description": "Describes the permissions associated with a network interface."
                    },
                    "DescribeNetworkInterfaces": {
                        "access-level": "list",
                        "actions": "DescribeNetworkInterfaces",
                        "description": "Describes one or more of your network interfaces."
                    },
                    "DescribePlacementGroups": {
                        "access-level": "list",
                        "actions": "DescribePlacementGroups",
                        "description": "Describes one or more of your placement groups."
                    },
                    "DescribePrefixLists": {
                        "access-level": "list",
                        "actions": "DescribePrefixLists",
                        "description": "Describes available AWS services in a prefix list format, which includes the prefix list name and prefix list ID of the service and the IP address range for the service."
                    },
                    "DescribePrincipalIdFormat": {
                        "access-level": "list",
                        "actions": "DescribePrincipalIdFormat",
                        "description": "Describes the ID format settings for the root user and all IAM roles and IAM users that have explicitly specified a longer ID (17-character ID) preference."
                    },
                    "DescribePublicIpv4Pools": {
                        "access-level": "list",
                        "actions": "DescribePublicIpv4Pools",
                        "description": "Describes the specified IPv4 address pools."
                    },
                    "DescribeRegions": {
                        "access-level": "list",
                        "actions": "DescribeRegions",
                        "description": "Describes one or more regions that are currently available to you."
                    },
                    "DescribeReservedInstances": {
                        "access-level": "list",
                        "actions": "DescribeReservedInstances",
                        "description": "Describes one or more of the Reserved Instances that you purchased."
                    },
                    "DescribeReservedInstancesListings": {
                        "access-level": "list",
                        "actions": "DescribeReservedInstancesListings",
                        "description": "Describes your account\\'s Reserved Instance listings in the Reserved Instance Marketplace."
                    },
                    "DescribeReservedInstancesModifications": {
                        "access-level": "list",
                        "actions": "DescribeReservedInstancesModifications",
                        "description": "Describes the modifications made to your Reserved Instances."
                    },
                    "DescribeReservedInstancesOfferings": {
                        "access-level": "list",
                        "actions": "DescribeReservedInstancesOfferings",
                        "description": "Describes Reserved Instance offerings that are available for purchase."
                    },
                    "DescribeRouteTables": {
                        "access-level": "list",
                        "actions": "DescribeRouteTables",
                        "description": "Describes one or more of your route tables."
                    },
                    "DescribeSecurityGroupReferences": {
                        "access-level": "list",
                        "actions": "DescribeSecurityGroupReferences",
                        "description": "[EC2-VPC only] Describes the VPCs on the other side of a VPC peering connection that are referencing the security groups you\\'ve specified in this request."
                    },
                    "DescribeSecurityGroups": {
                        "access-level": "list",
                        "actions": "DescribeSecurityGroups",
                        "description": "Describes one or more of your security groups."
                    },
                    "DescribeSnapshotAttribute": {
                        "access-level": "list",
                        "actions": "DescribeSnapshotAttribute",
                        "description": "Describes the specified attribute of the specified snapshot."
                    },
                    "DescribeSnapshots": {
                        "access-level": "list",
                        "actions": "DescribeSnapshots",
                        "description": "Describes one or more of the EBS snapshots available to you."
                    },
                    "DescribeSpotDatafeedSubscription": {
                        "access-level": "list",
                        "actions": "DescribeSpotDatafeedSubscription",
                        "description": "Describes the data feed for Spot instances."
                    },
                    "DescribeSpotFleetInstances": {
                        "access-level": "list",
                        "actions": "DescribeSpotFleetInstances",
                        "description": "Describes the running instances for the specified Spot fleet."
                    },
                    "DescribeSpotFleetRequestHistory": {
                        "access-level": "list",
                        "actions": "DescribeSpotFleetRequestHistory",
                        "description": "Describes the events for the specified Spot fleet request during the specified time."
                    },
                    "DescribeSpotFleetRequests": {
                        "access-level": "list",
                        "actions": "DescribeSpotFleetRequests",
                        "description": "Describes your Spot fleet requests."
                    },
                    "DescribeSpotInstanceRequests": {
                        "access-level": "list",
                        "actions": "DescribeSpotInstanceRequests",
                        "description": "Describes the Spot instance requests that belong to your account."
                    },
                    "DescribeSpotPriceHistory": {
                        "access-level": "list",
                        "actions": "DescribeSpotPriceHistory",
                        "description": "Describes the Spot price history."
                    },
                    "DescribeStaleSecurityGroups": {
                        "access-level": "list",
                        "actions": "DescribeStaleSecurityGroups",
                        "description": "[EC2-VPC only] Describes the stale security group rules for security groups in a specified VPC."
                    },
                    "DescribeSubnets": {
                        "access-level": "list",
                        "actions": "DescribeSubnets",
                        "description": "Describes one or more of your subnets."
                    },
                    "DescribeTransitGatewayAttachments": {
                        "access-level": "list",
                        "actions": "DescribeTransitGatewayAttachments",
                        "description": "Describes one or more attachments between resources and transit gateways."
                    },
                    "DescribeTransitGatewayRouteTables": {
                        "access-level": "list",
                        "actions": "DescribeTransitGatewayRouteTables",
                        "description": "Describes one or more transit gateway route tables."
                    },
                    "DescribeTransitGatewayVpcAttachments": {
                        "access-level": "list",
                        "actions": "DescribeTransitGatewayVpcAttachments",
                        "description": "Describes one or more VPC attachments."
                    },
                    "DescribeTransitGateways": {
                        "access-level": "list",
                        "actions": "DescribeTransitGateways",
                        "description": "Describes one or more transit gateways."
                    },
                    "DescribeVolumeAttribute": {
                        "access-level": "list",
                        "actions": "DescribeVolumeAttribute",
                        "description": "Describes the specified attribute of the specified volume."
                    },
                    "DescribeVolumeStatus": {
                        "access-level": "list",
                        "actions": "DescribeVolumeStatus",
                        "description": "Describes the status of the specified volumes."
                    },
                    "DescribeVolumes": {
                        "access-level": "list",
                        "actions": "DescribeVolumes",
                        "description": "Describes the specified EBS volumes."
                    },
                    "DescribeVpcAttribute": {
                        "access-level": "list",
                        "actions": "DescribeVpcAttribute",
                        "description": "Describes the specified attribute of the specified VPC."
                    },
                    "DescribeVpcClassicLink": {
                        "access-level": "list",
                        "actions": "DescribeVpcClassicLink",
                        "description": "Describes the ClassicLink status of one or more VPCs."
                    },
                    "DescribeVpcClassicLinkDnsSupport": {
                        "access-level": "list",
                        "actions": "DescribeVpcClassicLinkDnsSupport",
                        "description": "Describes the ClassicLink DNS support status of one or more VPCs."
                    },
                    "DescribeVpcEndpointConnectionNotifications": {
                        "access-level": "list",
                        "actions": "DescribeVpcEndpointConnectionNotifications",
                        "description": "Describes the connection notifications for VPC endpoints and VPC endpoint services."
                    },
                    "DescribeVpcEndpointConnections": {
                        "access-level": "list",
                        "actions": "DescribeVpcEndpointConnections",
                        "description": "Describes the VPC endpoint connections to your VPC endpoint services, including any endpoints that are pending your acceptance."
                    },
                    "DescribeVpcEndpointServiceConfigurations": {
                        "access-level": "list",
                        "actions": "DescribeVpcEndpointServiceConfigurations",
                        "description": "Describes the VPC endpoint service configurations in your account (your services)."
                    },
                    "DescribeVpcEndpointServicePermissions": {
                        "access-level": "list",
                        "actions": "DescribeVpcEndpointServicePermissions",
                        "description": "Describes the principals (service consumers) that are permitted to discover your VPC endpoint service."
                    },
                    "DescribeVpcEndpointServices": {
                        "access-level": "list",
                        "actions": "DescribeVpcEndpointServices",
                        "description": "Describes all supported AWS services that can be specified when creating a VPC endpoint."
                    },
                    "DescribeVpcEndpoints": {
                        "access-level": "list",
                        "actions": "DescribeVpcEndpoints",
                        "description": "Describes one or more of your VPC endpoints."
                    },
                    "DescribeVpcPeeringConnections": {
                        "access-level": "list",
                        "actions": "DescribeVpcPeeringConnections",
                        "description": "Describes one or more of your VPC peering connections."
                    },
                    "DescribeVpcs": {
                        "access-level": "list",
                        "actions": "DescribeVpcs",
                        "description": "Describes one or more of your VPCs."
                    },
                    "DescribeVpnGateways": {
                        "access-level": "list",
                        "actions": "DescribeVpnGateways",
                        "description": "Describes one or more of your virtual private gateways."
                    },
                    "GetTransitGatewayAttachmentPropagations": {
                        "access-level": "list",
                        "actions": "GetTransitGatewayAttachmentPropagations",
                        "description": "Lists the route tables to which the specified resource attachment propagates routes."
                    },
                    "GetTransitGatewayRouteTableAssociations": {
                        "access-level": "list",
                        "actions": "GetTransitGatewayRouteTableAssociations",
                        "description": "Gets information about the associations for the specified transit gateway route table."
                    },
                    "GetTransitGatewayRouteTablePropagations": {
                        "access-level": "list",
                        "actions": "GetTransitGatewayRouteTablePropagations",
                        "description": "Gets information about the route table propagations for the specified transit gateway route table."
                    },
                    "SearchTransitGatewayRoutes": {
                        "access-level": "list",
                        "actions": "SearchTransitGatewayRoutes",
                        "description": "Searches for routes in the specified transit gateway route table."
                    }
                },
                "read": {
                    "DescribeElasticGpus": {
                        "access-level": "read",
                        "actions": "DescribeElasticGpus",
                        "description": "Describes the Elastic GPUs associated with your instances."
                    },
                    "DescribeScheduledInstanceAvailability": {
                        "access-level": "read",
                        "actions": "DescribeScheduledInstanceAvailability",
                        "description": "Finds available schedules that meet the specified criteria."
                    },
                    "DescribeScheduledInstances": {
                        "access-level": "read",
                        "actions": "DescribeScheduledInstances",
                        "description": "Describes one or more of your Scheduled Instances."
                    },
                    "DescribeTags": {
                        "access-level": "read",
                        "actions": "DescribeTags",
                        "description": "Describes one or more of the tags for your EC2 resources."
                    },
                    "DescribeVolumesModifications": {
                        "access-level": "read",
                        "actions": "DescribeVolumesModifications",
                        "description": "Reports the current modification status of EBS volumes."
                    },
                    "DescribeVpnConnections": {
                        "access-level": "read",
                        "actions": "DescribeVpnConnections",
                        "description": "Describes one or more of your VPN connections."
                    },
                    "GetConsoleOutput": {
                        "access-level": "read",
                        "actions": "GetConsoleOutput",
                        "description": "Gets the console output for the specified instance."
                    },
                    "GetConsoleScreenshot": {
                        "access-level": "read",
                        "actions": "GetConsoleScreenshot",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ],
                        "description": "Retrieve a JPG-format screenshot of a running instance to help with troubleshooting.",
                        "resource-types": "instance*"
                    },
                    "GetHostReservationPurchasePreview": {
                        "access-level": "read",
                        "actions": "GetHostReservationPurchasePreview",
                        "description": "Preview a reservation purchase with configurations that match those of your Dedicated Host."
                    },
                    "GetLaunchTemplateData": {
                        "access-level": "read",
                        "actions": "GetLaunchTemplateData",
                        "description": "Retrieves the configuration data of the specified instance."
                    },
                    "GetPasswordData": {
                        "access-level": "read",
                        "actions": "GetPasswordData",
                        "description": "Retrieves the encrypted administrator password for an instance running Windows."
                    },
                    "GetReservedInstancesExchangeQuote": {
                        "access-level": "read",
                        "actions": "GetReservedInstancesExchangeQuote",
                        "description": "Returns details about the values and term of your specified Convertible Reserved Instances."
                    }
                },
                "tagging": {
                    "CreateTags": {
                        "access-level": "tagging",
                        "actions": "CreateTags",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Adds or overwrites one or more tags for the specified Amazon EC2 resource or resources.",
                        "resource-types": "capacity-reservation"
                    },
                    "DeleteTags": {
                        "access-level": "tagging",
                        "actions": "DeleteTags",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified set of tags from the specified set of resources.",
                        "resource-types": "capacity-reservation"
                    },
                    "RunInstances": {
                        "access-level": "tagging",
                        "actions": "RunInstances",
                        "condition-keys": [
                            "ec2:ImageType",
                            "ec2:IsLaunchTemplateResource",
                            "ec2:LaunchTemplate",
                            "ec2:Owner",
                            "ec2:Public",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType"
                        ],
                        "description": "Launches the specified number of instances using an AMI for which you have permissions.",
                        "resource-types": "image*"
                    },
                    "dhcp-options": {
                        "access-level": "tagging",
                        "actions": "dhcp-options",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ]
                    },
                    "fpga-image": {
                        "access-level": "tagging",
                        "actions": "fpga-image",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Owner",
                            "ec2:Public",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ]
                    },
                    "image": {
                        "access-level": "tagging",
                        "actions": "image",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:ImageType",
                            "ec2:Owner",
                            "ec2:Public",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType"
                        ]
                    },
                    "instance": {
                        "access-level": "tagging",
                        "actions": "instance",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ]
                    },
                    "instance*": {
                        "access-level": "tagging",
                        "actions": "instance*",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:IsLaunchTemplateResource",
                            "ec2:LaunchTemplate",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ]
                    },
                    "internet-gateway": {
                        "access-level": "tagging",
                        "actions": "internet-gateway",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ]
                    },
                    "key-pair": {
                        "access-level": "tagging",
                        "actions": "key-pair",
                        "condition-keys": [
                            "ec2:IsLaunchTemplateResource",
                            "ec2:LaunchTemplate",
                            "ec2:Region"
                        ]
                    },
                    "launch-template": {
                        "access-level": "tagging",
                        "actions": "launch-template",
                        "condition-keys": [
                            "ec2:IsLaunchTemplateResource",
                            "ec2:LaunchTemplate",
                            "ec2:Region"
                        ]
                    },
                    "network-acl": {
                        "access-level": "tagging",
                        "actions": "network-acl",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ]
                    },
                    "network-interface": {
                        "access-level": "tagging",
                        "actions": "network-interface",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:AvailabilityZone",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Subnet",
                            "ec2:Vpc"
                        ]
                    },
                    "network-interface*": {
                        "access-level": "tagging",
                        "actions": "network-interface*",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:IsLaunchTemplateResource",
                            "ec2:LaunchTemplate",
                            "ec2:Region",
                            "ec2:ResourceTag/",
                            "ec2:Subnet",
                            "ec2:Vpc"
                        ]
                    },
                    "placement-group": {
                        "access-level": "tagging",
                        "actions": "placement-group",
                        "condition-keys": [
                            "ec2:IsLaunchTemplateResource",
                            "ec2:LaunchTemplate",
                            "ec2:PlacementGroupStrategy",
                            "ec2:Region"
                        ]
                    },
                    "reserved-instances": {
                        "access-level": "tagging",
                        "actions": "reserved-instances",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:AvailabilityZone",
                            "ec2:InstanceType",
                            "ec2:Region",
                            "ec2:ReservedInstancesOfferingType",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Tenancy"
                        ]
                    },
                    "route-table": {
                        "access-level": "tagging",
                        "actions": "route-table",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ]
                    },
                    "security-group": {
                        "access-level": "tagging",
                        "actions": "security-group",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ]
                    },
                    "security-group*": {
                        "access-level": "tagging",
                        "actions": "security-group*",
                        "condition-keys": [
                            "ec2:IsLaunchTemplateResource",
                            "ec2:LaunchTemplate",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ]
                    },
                    "snapshot": {
                        "access-level": "tagging",
                        "actions": "snapshot",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Owner",
                            "ec2:ParentVolume",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:SnapshotTime",
                            "ec2:VolumeSize",
                            "ec2:IsLaunchTemplateResource",
                            "ec2:LaunchTemplate"
                        ]
                    },
                    "spot-instance-request": {
                        "access-level": "tagging",
                        "actions": "spot-instance-request",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ]
                    },
                    "subnet": {
                        "access-level": "tagging",
                        "actions": "subnet",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:AvailabilityZone",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ]
                    },
                    "subnet*": {
                        "access-level": "tagging",
                        "actions": "subnet*",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:IsLaunchTemplateResource",
                            "ec2:LaunchTemplate",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ]
                    },
                    "transit-gateway": {
                        "access-level": "tagging",
                        "actions": "transit-gateway",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ]
                    },
                    "transit-gateway-attachment": {
                        "access-level": "tagging",
                        "actions": "transit-gateway-attachment",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ]
                    },
                    "transit-gateway-route-table": {
                        "access-level": "tagging",
                        "actions": "transit-gateway-route-table",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ]
                    },
                    "volume": {
                        "access-level": "tagging",
                        "actions": "volume",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:AvailabilityZone",
                            "ec2:Encrypted",
                            "ec2:ParentSnapshot",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:VolumeIops",
                            "ec2:VolumeSize",
                            "ec2:VolumeType"
                        ]
                    },
                    "volume*": {
                        "access-level": "tagging",
                        "actions": "volume*",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:AvailabilityZone",
                            "ec2:Encrypted",
                            "ec2:IsLaunchTemplateResource",
                            "ec2:LaunchTemplate",
                            "ec2:ParentSnapshot",
                            "ec2:Region",
                            "ec2:VolumeIops",
                            "ec2:VolumeSize",
                            "ec2:VolumeType"
                        ]
                    },
                    "vpc": {
                        "access-level": "tagging",
                        "actions": "vpc",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Tenancy"
                        ]
                    },
                    "vpn-connection": {
                        "access-level": "tagging",
                        "actions": "vpn-connection",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ]
                    },
                    "vpn-gateway": {
                        "access-level": "tagging",
                        "actions": "vpn-gateway",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:CreateAction"
                        ]
                    }
                },
                "write": {
                    "AcceptReservedInstancesExchangeQuote": {
                        "access-level": "write",
                        "actions": "AcceptReservedInstancesExchangeQuote",
                        "description": "Accepts the Convertible Reserved Instance exchange quote described in the GetReservedInstancesExchangeQuote call."
                    },
                    "AcceptTransitGatewayVpcAttachment": {
                        "access-level": "write",
                        "actions": "AcceptTransitGatewayVpcAttachment",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Accepts a request to attach a VPC to a transit gateway",
                        "resource-types": "transit-gateway-attachment*"
                    },
                    "AcceptVpcEndpointConnections": {
                        "access-level": "write",
                        "actions": "AcceptVpcEndpointConnections",
                        "description": "Accepts one or more interface VPC endpoint connection requests to your VPC endpoint service."
                    },
                    "AcceptVpcPeeringConnection": {
                        "access-level": "write",
                        "actions": "AcceptVpcPeeringConnection",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Tenancy"
                        ],
                        "description": "Accept a VPC peering connection request.",
                        "resource-types": "vpc*"
                    },
                    "AdvertiseByoipCidr": {
                        "access-level": "write",
                        "actions": "AdvertiseByoipCidr",
                        "description": "Advertises an IPv4 address range that is provisioned for use with your AWS resources through bring your own IP addresses (BYOIP)"
                    },
                    "AllocateAddress": {
                        "access-level": "write",
                        "actions": "AllocateAddress",
                        "description": "Acquires an Elastic IP address."
                    },
                    "AllocateHosts": {
                        "access-level": "write",
                        "actions": "AllocateHosts",
                        "description": "Allocates a Dedicated Host to your account."
                    },
                    "AssignIpv6Addresses": {
                        "access-level": "write",
                        "actions": "AssignIpv6Addresses",
                        "description": "Assigns one or more IPv6 addresses to the specified network interface."
                    },
                    "AssignPrivateIpAddresses": {
                        "access-level": "write",
                        "actions": "AssignPrivateIpAddresses",
                        "description": "Assigns one or more secondary private IP addresses to the specified network interface."
                    },
                    "AssociateAddress": {
                        "access-level": "write",
                        "actions": "AssociateAddress",
                        "description": "Associates an Elastic IP address with an instance or a network interface."
                    },
                    "AssociateDhcpOptions": {
                        "access-level": "write",
                        "actions": "AssociateDhcpOptions",
                        "description": "Associates a set of DHCP options (that you\\'ve previously created) with the specified VPC, or associates no DHCP options with the VPC."
                    },
                    "AssociateIamInstanceProfile": {
                        "access-level": "write",
                        "actions": "AssociateIamInstanceProfile",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ],
                        "dependent-actions": "iam:PassRole",
                        "description": "Associates an IAM instance profile with a running or stopped instance.",
                        "resource-types": "instance*"
                    },
                    "AssociateRouteTable": {
                        "access-level": "write",
                        "actions": "AssociateRouteTable",
                        "description": "Associates a subnet with a route table."
                    },
                    "AssociateSubnetCidrBlock": {
                        "access-level": "write",
                        "actions": "AssociateSubnetCidrBlock",
                        "description": "Associates a CIDR block with your subnet."
                    },
                    "AssociateTransitGatewayRouteTable": {
                        "access-level": "write",
                        "actions": "AssociateTransitGatewayRouteTable",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Associates the specified attachment with the specified transit gateway route table",
                        "resource-types": "transit-gateway-attachment*"
                    },
                    "AssociateVpcCidrBlock": {
                        "access-level": "write",
                        "actions": "AssociateVpcCidrBlock",
                        "description": "Associates a CIDR block with your VPC."
                    },
                    "AttachClassicLinkVpc": {
                        "access-level": "write",
                        "actions": "AttachClassicLinkVpc",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ],
                        "description": "Links an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC\\'s security groups.",
                        "resource-types": "instance*"
                    },
                    "AttachInternetGateway": {
                        "access-level": "write",
                        "actions": "AttachInternetGateway",
                        "description": "Attaches an Internet gateway to a VPC, enabling connectivity between the Internet and the VPC."
                    },
                    "AttachNetworkInterface": {
                        "access-level": "write",
                        "actions": "AttachNetworkInterface",
                        "description": "Attaches a network interface to an instance."
                    },
                    "AttachVolume": {
                        "access-level": "write",
                        "actions": "AttachVolume",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ],
                        "description": "Attaches an EBS volume to a running or stopped instance and exposes it to the instance with the specified device name.",
                        "resource-types": "instance*"
                    },
                    "AttachVpnGateway": {
                        "access-level": "write",
                        "actions": "AttachVpnGateway",
                        "description": "Attaches a virtual private gateway to a VPC."
                    },
                    "AuthorizeSecurityGroupEgress": {
                        "access-level": "write",
                        "actions": "AuthorizeSecurityGroupEgress",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ],
                        "description": "[EC2-VPC only] Adds one or more egress rules to a security group for use with a VPC.",
                        "resource-types": "security-group*"
                    },
                    "AuthorizeSecurityGroupIngress": {
                        "access-level": "write",
                        "actions": "AuthorizeSecurityGroupIngress",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ],
                        "description": "Adds one or more ingress rules to a security group.",
                        "resource-types": "security-group*"
                    },
                    "BundleInstance": {
                        "access-level": "write",
                        "actions": "BundleInstance",
                        "description": "Bundles an Amazon instance store-backed Windows instance."
                    },
                    "CancelBundleTask": {
                        "access-level": "write",
                        "actions": "CancelBundleTask",
                        "description": "Cancels a bundling operation for an instance store-backed Windows instance."
                    },
                    "CancelCapacityReservation": {
                        "access-level": "write",
                        "actions": "CancelCapacityReservation",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Cancels the specified Capacity Reservation, releases the reserved capacity, and changes the Capacity Reservation\\'s state to cancelled.",
                        "resource-types": "capacity-reservation*"
                    },
                    "CancelConversionTask": {
                        "access-level": "write",
                        "actions": "CancelConversionTask",
                        "description": "Cancels an active conversion task."
                    },
                    "CancelExportTask": {
                        "access-level": "write",
                        "actions": "CancelExportTask",
                        "description": "Cancels an active export task."
                    },
                    "CancelImportTask": {
                        "access-level": "write",
                        "actions": "CancelImportTask",
                        "description": "Cancels an in-process import virtual machine or import snapshot task."
                    },
                    "CancelReservedInstancesListing": {
                        "access-level": "write",
                        "actions": "CancelReservedInstancesListing",
                        "description": "Cancels the specified Reserved Instance listing in the Reserved Instance Marketplace."
                    },
                    "CancelSpotFleetRequests": {
                        "access-level": "write",
                        "actions": "CancelSpotFleetRequests",
                        "description": "Cancels the specified Spot fleet requests."
                    },
                    "CancelSpotInstanceRequests": {
                        "access-level": "write",
                        "actions": "CancelSpotInstanceRequests",
                        "description": "Cancels one or more Spot instance requests."
                    },
                    "ConfirmProductInstance": {
                        "access-level": "write",
                        "actions": "ConfirmProductInstance",
                        "description": "Determines whether a product code is associated with an instance."
                    },
                    "CopyFpgaImage": {
                        "access-level": "write",
                        "actions": "CopyFpgaImage",
                        "description": "Initiates the copy of an Amazon FPGA Image (AFI) from the specified source region to the current region."
                    },
                    "CopyImage": {
                        "access-level": "write",
                        "actions": "CopyImage",
                        "description": "Initiates the copy of an AMI from the specified source region to the current region."
                    },
                    "CopySnapshot": {
                        "access-level": "write",
                        "actions": "CopySnapshot",
                        "description": "Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3."
                    },
                    "CreateCapacityReservation": {
                        "access-level": "write",
                        "actions": "CreateCapacityReservation",
                        "description": "Creates a new Capacity Reservation with the specified attributes."
                    },
                    "CreateCustomerGateway": {
                        "access-level": "write",
                        "actions": "CreateCustomerGateway",
                        "description": "Provides information to AWS about your VPN customer gateway device."
                    },
                    "CreateDefaultSubnet": {
                        "access-level": "write",
                        "actions": "CreateDefaultSubnet",
                        "description": "Creates a default subnet with a size /20 IPv4 CIDR block in the specified Availability Zone in your default VPC."
                    },
                    "CreateDefaultVpc": {
                        "access-level": "write",
                        "actions": "CreateDefaultVpc",
                        "description": "Creates a default VPC with a size /16 IPv4 CIDR block and a default subnet in each Availability Zone."
                    },
                    "CreateDhcpOptions": {
                        "access-level": "write",
                        "actions": "CreateDhcpOptions",
                        "description": "Creates a set of DHCP options for your VPC."
                    },
                    "CreateEgressOnlyInternetGateway": {
                        "access-level": "write",
                        "actions": "CreateEgressOnlyInternetGateway",
                        "description": "Creates an egress-only Internet gateway for your VPC."
                    },
                    "CreateFleet": {
                        "access-level": "write",
                        "actions": "CreateFleet",
                        "description": "Launches an EC2 Fleet."
                    },
                    "CreateFlowLogs": {
                        "access-level": "write",
                        "actions": "CreateFlowLogs",
                        "description": "Creates one or more flow logs to capture IP traffic for a specific network interface, subnet, or VPC."
                    },
                    "CreateFpgaImage": {
                        "access-level": "write",
                        "actions": "CreateFpgaImage",
                        "description": "Creates an Amazon FPGA Image (AFI) from the specified design checkpoint (DCP)."
                    },
                    "CreateImage": {
                        "access-level": "write",
                        "actions": "CreateImage",
                        "description": "Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either running or stopped."
                    },
                    "CreateInstanceExportTask": {
                        "access-level": "write",
                        "actions": "CreateInstanceExportTask",
                        "description": "Exports a running or stopped instance to an S3 bucket."
                    },
                    "CreateInternetGateway": {
                        "access-level": "write",
                        "actions": "CreateInternetGateway",
                        "description": "Creates an Internet gateway for use with a VPC."
                    },
                    "CreateKeyPair": {
                        "access-level": "write",
                        "actions": "CreateKeyPair",
                        "description": "Creates a 2048-bit RSA key pair with the specified name."
                    },
                    "CreateLaunchTemplate": {
                        "access-level": "write",
                        "actions": "CreateLaunchTemplate",
                        "description": "Creates a new launch template."
                    },
                    "CreateLaunchTemplateVersion": {
                        "access-level": "write",
                        "actions": "CreateLaunchTemplateVersion",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Creates a new version for the specified launch template.",
                        "resource-types": "launch-template*"
                    },
                    "CreateNatGateway": {
                        "access-level": "write",
                        "actions": "CreateNatGateway",
                        "description": "Creates a NAT gateway in the specified subnet."
                    },
                    "CreateNetworkAcl": {
                        "access-level": "write",
                        "actions": "CreateNetworkAcl",
                        "description": "Creates a network ACL in a VPC."
                    },
                    "CreateNetworkAclEntry": {
                        "access-level": "write",
                        "actions": "CreateNetworkAclEntry",
                        "description": "Creates an entry (a rule) in a network ACL with the specified rule number."
                    },
                    "CreateNetworkInterface": {
                        "access-level": "write",
                        "actions": "CreateNetworkInterface",
                        "description": "Creates a network interface in the specified subnet."
                    },
                    "CreateNetworkInterfacePermission": {
                        "access-level": "write",
                        "actions": "CreateNetworkInterfacePermission",
                        "condition-keys": [
                            "ec2:AuthorizedUser",
                            "ec2:AvailabilityZone",
                            "ec2:Permission",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Subnet",
                            "ec2:Vpc",
                            "ec2:AuthorizedService"
                        ],
                        "description": "Creates a permission for a network interface that grants certain operations to another authorized user.",
                        "resource-types": "network-interface*"
                    },
                    "CreatePlacementGroup": {
                        "access-level": "write",
                        "actions": "CreatePlacementGroup",
                        "description": "Creates a placement group that you launch cluster instances into."
                    },
                    "CreateReservedInstancesListing": {
                        "access-level": "write",
                        "actions": "CreateReservedInstancesListing",
                        "description": "Creates a listing for Amazon EC2 Standard Reserved Instances to be sold in the Reserved Instance Marketplace."
                    },
                    "CreateRoute": {
                        "access-level": "write",
                        "actions": "CreateRoute",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ],
                        "description": "Creates a route in a route table within a VPC.",
                        "resource-types": "route-table*"
                    },
                    "CreateRouteTable": {
                        "access-level": "write",
                        "actions": "CreateRouteTable",
                        "description": "Creates a route table for the specified VPC."
                    },
                    "CreateSecurityGroup": {
                        "access-level": "write",
                        "actions": "CreateSecurityGroup",
                        "description": "Creates a security group."
                    },
                    "CreateSnapshot": {
                        "access-level": "write",
                        "actions": "CreateSnapshot",
                        "condition-keys": [
                            "aws:TagKeys",
                            "aws:RequestTag/${TagKey}",
                            "ec2:ParentVolume",
                            "ec2:Region"
                        ],
                        "description": "Creates a snapshot of an EBS volume and stores it in Amazon S3.",
                        "resource-types": "snapshot*"
                    },
                    "CreateSpotDatafeedSubscription": {
                        "access-level": "write",
                        "actions": "CreateSpotDatafeedSubscription",
                        "description": "Creates a data feed for Spot instances, enabling you to view Spot instance usage logs. You can create one data feed per AWS account."
                    },
                    "CreateSubnet": {
                        "access-level": "write",
                        "actions": "CreateSubnet",
                        "description": "Creates a subnet in an existing VPC."
                    },
                    "CreateTransitGateway": {
                        "access-level": "write",
                        "actions": "CreateTransitGateway",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region"
                        ],
                        "description": "Creates a transit gateway.",
                        "resource-types": "transit-gateway*"
                    },
                    "CreateTransitGatewayRoute": {
                        "access-level": "write",
                        "actions": "CreateTransitGatewayRoute",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Creates a static route for the specified transit gateway route table.",
                        "resource-types": "transit-gateway-route-table*"
                    },
                    "CreateTransitGatewayRouteTable": {
                        "access-level": "write",
                        "actions": "CreateTransitGatewayRouteTable",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Creates a route table for the specified transit gateway.",
                        "resource-types": "transit-gateway*"
                    },
                    "CreateTransitGatewayVpcAttachment": {
                        "access-level": "write",
                        "actions": "CreateTransitGatewayVpcAttachment",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Attaches the specified VPC to the specified transit gateway.",
                        "resource-types": "transit-gateway*"
                    },
                    "CreateVolume": {
                        "access-level": "write",
                        "actions": "CreateVolume",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:AvailabilityZone",
                            "ec2:Encrypted",
                            "ec2:ParentSnapshot",
                            "ec2:Region",
                            "ec2:VolumeIops",
                            "ec2:VolumeSize",
                            "ec2:VolumeType"
                        ],
                        "description": "Creates an EBS volume that can be attached to an instance in the same Availability Zone.",
                        "resource-types": "volume*"
                    },
                    "CreateVpc": {
                        "access-level": "write",
                        "actions": "CreateVpc",
                        "description": "Creates a VPC with the specified CIDR block."
                    },
                    "CreateVpcEndpoint": {
                        "access-level": "write",
                        "actions": "CreateVpcEndpoint",
                        "dependent-actions": "route53:AssociateVPCWithHostedZone",
                        "description": "Creates a VPC endpoint for a specified AWS service."
                    },
                    "CreateVpcEndpointConnectionNotification": {
                        "access-level": "write",
                        "actions": "CreateVpcEndpointConnectionNotification",
                        "description": "Creates a connection notification for a specified VPC endpoint or VPC endpoint service."
                    },
                    "CreateVpcEndpointServiceConfiguration": {
                        "access-level": "write",
                        "actions": "CreateVpcEndpointServiceConfiguration",
                        "description": "Creates a VPC endpoint service configuration to which service consumers (AWS accounts, IAM users, and IAM roles) can connect."
                    },
                    "CreateVpcPeeringConnection": {
                        "access-level": "write",
                        "actions": "CreateVpcPeeringConnection",
                        "condition-keys": [
                            "Requests",
                            "a",
                            "VPC",
                            "peering",
                            "connection",
                            "between",
                            "two",
                            "VPCs:",
                            "a",
                            "requester",
                            "VPC",
                            "that",
                            "you",
                            "own",
                            "and",
                            "a",
                            "peer",
                            "VPC",
                            "with",
                            "which",
                            "to",
                            "create",
                            "the",
                            "connection."
                        ],
                        "resource-types": "vpc*"
                    },
                    "CreateVpnConnection": {
                        "access-level": "write",
                        "actions": "CreateVpnConnection",
                        "description": "Creates a VPN connection between an existing virtual private gateway and a VPN customer gateway."
                    },
                    "CreateVpnConnectionRoute": {
                        "access-level": "write",
                        "actions": "CreateVpnConnectionRoute",
                        "description": "Creates a static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway."
                    },
                    "CreateVpnGateway": {
                        "access-level": "write",
                        "actions": "CreateVpnGateway",
                        "description": "Creates a virtual private gateway."
                    },
                    "DeleteCustomerGateway": {
                        "access-level": "write",
                        "actions": "DeleteCustomerGateway",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified customer gateway.",
                        "resource-types": "customer-gateway*"
                    },
                    "DeleteDhcpOptions": {
                        "access-level": "write",
                        "actions": "DeleteDhcpOptions",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified set of DHCP options.",
                        "resource-types": "dhcp-options*"
                    },
                    "DeleteEgressOnlyInternetGateway": {
                        "access-level": "write",
                        "actions": "DeleteEgressOnlyInternetGateway",
                        "description": "Deletes the specified egress-only Internet gateway."
                    },
                    "DeleteFleets": {
                        "access-level": "write",
                        "actions": "DeleteFleets",
                        "description": "Deletes the specified EC2 Fleet."
                    },
                    "DeleteFlowLogs": {
                        "access-level": "write",
                        "actions": "DeleteFlowLogs",
                        "description": "Deletes one or more flow logs."
                    },
                    "DeleteFpgaImage": {
                        "access-level": "write",
                        "actions": "DeleteFpgaImage",
                        "description": "Deletes the specified Amazon FPGA Image (AFI)."
                    },
                    "DeleteInternetGateway": {
                        "access-level": "write",
                        "actions": "DeleteInternetGateway",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified Internet gateway.",
                        "resource-types": "internet-gateway*"
                    },
                    "DeleteKeyPair": {
                        "access-level": "write",
                        "actions": "DeleteKeyPair",
                        "description": "Deletes the specified key pair, by removing the public key from Amazon EC2."
                    },
                    "DeleteLaunchTemplate": {
                        "access-level": "write",
                        "actions": "DeleteLaunchTemplate",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified launch template and all associated versions.",
                        "resource-types": "launch-template*"
                    },
                    "DeleteLaunchTemplateVersions": {
                        "access-level": "write",
                        "actions": "DeleteLaunchTemplateVersions",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified versions for the specified launch template.",
                        "resource-types": "launch-template*"
                    },
                    "DeleteNatGateway": {
                        "access-level": "write",
                        "actions": "DeleteNatGateway",
                        "description": "Deletes the specified NAT gateway."
                    },
                    "DeleteNetworkAcl": {
                        "access-level": "write",
                        "actions": "DeleteNetworkAcl",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ],
                        "description": "Deletes the specified network ACL.",
                        "resource-types": "network-acl*"
                    },
                    "DeleteNetworkAclEntry": {
                        "access-level": "write",
                        "actions": "DeleteNetworkAclEntry",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ],
                        "description": "Deletes the specified ingress or egress entry (rule) from the specified network ACL.",
                        "resource-types": "network-acl*"
                    },
                    "DeleteNetworkInterface": {
                        "access-level": "write",
                        "actions": "DeleteNetworkInterface",
                        "description": "Deletes the specified network interface. You must detach the network interface before you can delete it."
                    },
                    "DeleteNetworkInterfacePermission": {
                        "access-level": "write",
                        "actions": "DeleteNetworkInterfacePermission",
                        "description": "Deletes a permission associated with a network interface."
                    },
                    "DeletePlacementGroup": {
                        "access-level": "write",
                        "actions": "DeletePlacementGroup",
                        "description": "Deletes the specified placement group."
                    },
                    "DeleteRoute": {
                        "access-level": "write",
                        "actions": "DeleteRoute",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ],
                        "description": "Deletes the specified route from the specified route table.",
                        "resource-types": "route-table*"
                    },
                    "DeleteRouteTable": {
                        "access-level": "write",
                        "actions": "DeleteRouteTable",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ],
                        "description": "Deletes the specified route table.",
                        "resource-types": "route-table*"
                    },
                    "DeleteSecurityGroup": {
                        "access-level": "write",
                        "actions": "DeleteSecurityGroup",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ],
                        "description": "Deletes a security group.",
                        "resource-types": "security-group*"
                    },
                    "DeleteSnapshot": {
                        "access-level": "write",
                        "actions": "DeleteSnapshot",
                        "condition-keys": [
                            "ec2:Owner",
                            "ec2:ParentVolume",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:SnapshotTime",
                            "ec2:VolumeSize"
                        ],
                        "description": "Deletes the specified snapshot.",
                        "resource-types": "snapshot*"
                    },
                    "DeleteSpotDatafeedSubscription": {
                        "access-level": "write",
                        "actions": "DeleteSpotDatafeedSubscription",
                        "description": "Deletes the data feed for Spot instances."
                    },
                    "DeleteSubnet": {
                        "access-level": "write",
                        "actions": "DeleteSubnet",
                        "description": "Deletes the specified subnet."
                    },
                    "DeleteTransitGateway": {
                        "access-level": "write",
                        "actions": "DeleteTransitGateway",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified transit gateway.",
                        "resource-types": "transit-gateway*"
                    },
                    "DeleteTransitGatewayRoute": {
                        "access-level": "write",
                        "actions": "DeleteTransitGatewayRoute",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified route from the specified transit gateway route table.",
                        "resource-types": "transit-gateway-route-table*"
                    },
                    "DeleteTransitGatewayRouteTable": {
                        "access-level": "write",
                        "actions": "DeleteTransitGatewayRouteTable",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified transit gateway route table.",
                        "resource-types": "transit-gateway-route-table*"
                    },
                    "DeleteTransitGatewayVpcAttachment": {
                        "access-level": "write",
                        "actions": "DeleteTransitGatewayVpcAttachment",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified VPC attachment.",
                        "resource-types": "transit-gateway-attachment*"
                    },
                    "DeleteVolume": {
                        "access-level": "write",
                        "actions": "DeleteVolume",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:Encrypted",
                            "ec2:ParentSnapshot",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:VolumeIops",
                            "ec2:VolumeSize",
                            "ec2:VolumeType"
                        ],
                        "description": "Deletes the specified EBS volume.",
                        "resource-types": "volume*"
                    },
                    "DeleteVpc": {
                        "access-level": "write",
                        "actions": "DeleteVpc",
                        "description": "Deletes the specified VPC. You must detach or delete all gateways and resources that are associated with the VPC before you can delete it."
                    },
                    "DeleteVpcEndpointConnectionNotifications": {
                        "access-level": "write",
                        "actions": "DeleteVpcEndpointConnectionNotifications",
                        "description": "Deletes one or more VPC endpoint connection notifications."
                    },
                    "DeleteVpcEndpointServiceConfigurations": {
                        "access-level": "write",
                        "actions": "DeleteVpcEndpointServiceConfigurations",
                        "description": "Deletes one or more VPC endpoint service configurations in your account."
                    },
                    "DeleteVpcEndpoints": {
                        "access-level": "write",
                        "actions": "DeleteVpcEndpoints",
                        "description": "Deletes one or more specified VPC endpoints."
                    },
                    "DeleteVpcPeeringConnection": {
                        "access-level": "write",
                        "actions": "DeleteVpcPeeringConnection",
                        "condition-keys": [
                            "ec2:AccepterVpc",
                            "ec2:Region",
                            "ec2:RequesterVpc",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Description for DeleteVpcPeeringConnection",
                        "resource-types": "vpc-peering-connection*"
                    },
                    "DeleteVpnConnection": {
                        "access-level": "write",
                        "actions": "DeleteVpnConnection",
                        "description": "Deletes a VPC peering connection."
                    },
                    "DeleteVpnConnectionRoute": {
                        "access-level": "write",
                        "actions": "DeleteVpnConnectionRoute",
                        "description": "Deletes the specified static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway."
                    },
                    "DeleteVpnGateway": {
                        "access-level": "write",
                        "actions": "DeleteVpnGateway",
                        "description": "Deletes the specified virtual private gateway."
                    },
                    "DeprovisionByoipCidr": {
                        "access-level": "write",
                        "actions": "DeprovisionByoipCidr",
                        "description": "Releases the specified address range that you provisioned for use with your AWS resources through bring your own IP addresses (BYOIP) and deletes the corresponding address pool."
                    },
                    "DeregisterImage": {
                        "access-level": "write",
                        "actions": "DeregisterImage",
                        "description": "Deregisters the specified AMI."
                    },
                    "DetachClassicLinkVpc": {
                        "access-level": "write",
                        "actions": "DetachClassicLinkVpc",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ],
                        "description": "Unlinks (detaches) a linked EC2-Classic instance from a VPC.",
                        "resource-types": "instance*"
                    },
                    "DetachInternetGateway": {
                        "access-level": "write",
                        "actions": "DetachInternetGateway",
                        "description": "Detaches an Internet gateway from a VPC, disabling connectivity between the Internet and the VPC."
                    },
                    "DetachNetworkInterface": {
                        "access-level": "write",
                        "actions": "DetachNetworkInterface",
                        "description": "Detaches a network interface from an instance."
                    },
                    "DetachVolume": {
                        "access-level": "write",
                        "actions": "DetachVolume",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ],
                        "description": "Detaches an EBS volume from an instance.",
                        "resource-types": "instance*"
                    },
                    "DetachVpnGateway": {
                        "access-level": "write",
                        "actions": "DetachVpnGateway",
                        "description": "Detaches a virtual private gateway from a VPC."
                    },
                    "DisableTransitGatewayRouteTablePropagation": {
                        "access-level": "write",
                        "actions": "DisableTransitGatewayRouteTablePropagation",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Disables the specified resource attachment from propagating routes to the specified propagation route table.",
                        "resource-types": "transit-gateway-attachment*"
                    },
                    "DisableVgwRoutePropagation": {
                        "access-level": "write",
                        "actions": "DisableVgwRoutePropagation",
                        "description": "Disables a virtual private gateway (VGW) from propagating routes to a specified route table of a VPC."
                    },
                    "DisableVpcClassicLink": {
                        "access-level": "write",
                        "actions": "DisableVpcClassicLink",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Tenancy"
                        ],
                        "description": "Disables ClassicLink for a VPC.",
                        "resource-types": "vpc*"
                    },
                    "DisableVpcClassicLinkDnsSupport": {
                        "access-level": "write",
                        "actions": "DisableVpcClassicLinkDnsSupport",
                        "description": "Disables ClassicLink DNS support for a VPC."
                    },
                    "DisassociateAddress": {
                        "access-level": "write",
                        "actions": "DisassociateAddress",
                        "description": "Disassociates an Elastic IP address from the instance or network interface it\\'s associated with."
                    },
                    "DisassociateIamInstanceProfile": {
                        "access-level": "write",
                        "actions": "DisassociateIamInstanceProfile",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ],
                        "description": "Disassociates an IAM instance profile from a running or stopped instance.",
                        "resource-types": "instance*"
                    },
                    "DisassociateRouteTable": {
                        "access-level": "write",
                        "actions": "DisassociateRouteTable",
                        "description": "Disassociates a subnet from a route table."
                    },
                    "DisassociateSubnetCidrBlock": {
                        "access-level": "write",
                        "actions": "DisassociateSubnetCidrBlock",
                        "description": "Disassociates a CIDR block from a subnet."
                    },
                    "DisassociateTransitGatewayRouteTable": {
                        "access-level": "write",
                        "actions": "DisassociateTransitGatewayRouteTable",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Disassociates a resource attachment from a transit gateway route table.",
                        "resource-types": "transit-gateway-attachment*"
                    },
                    "DisassociateVpcCidrBlock": {
                        "access-level": "write",
                        "actions": "DisassociateVpcCidrBlock",
                        "description": "Disassociates a CIDR block from a VPC."
                    },
                    "EnableTransitGatewayRouteTablePropagation": {
                        "access-level": "write",
                        "actions": "EnableTransitGatewayRouteTablePropagation",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Enables the specified attachment to propagate routes to the specified propagation route table.",
                        "resource-types": "transit-gateway-attachment*"
                    },
                    "EnableVgwRoutePropagation": {
                        "access-level": "write",
                        "actions": "EnableVgwRoutePropagation",
                        "description": "Enables a virtual private gateway (VGW) to propagate routes to the specified route table of a VPC."
                    },
                    "EnableVolumeIO": {
                        "access-level": "write",
                        "actions": "EnableVolumeIO",
                        "description": "Enables I/O operations for a volume that had I/O operations disabled because the data on the volume was potentially inconsistent."
                    },
                    "EnableVpcClassicLink": {
                        "access-level": "write",
                        "actions": "EnableVpcClassicLink",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Tenancy"
                        ],
                        "description": "Enables a VPC for ClassicLink.",
                        "resource-types": "vpc*"
                    },
                    "EnableVpcClassicLinkDnsSupport": {
                        "access-level": "write",
                        "actions": "EnableVpcClassicLinkDnsSupport",
                        "description": "Enables a VPC to support DNS hostname resolution for ClassicLink."
                    },
                    "ExportTransitGatewayRoutes": {
                        "access-level": "write",
                        "actions": "ExportTransitGatewayRoutes",
                        "description": "Exports routes from the specified transit gateway route table to the specified S3 bucket."
                    },
                    "ImportImage": {
                        "access-level": "write",
                        "actions": "ImportImage",
                        "description": "Import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI)."
                    },
                    "ImportInstance": {
                        "access-level": "write",
                        "actions": "ImportInstance",
                        "description": "Creates an import instance task using metadata from the specified disk image."
                    },
                    "ImportKeyPair": {
                        "access-level": "write",
                        "actions": "ImportKeyPair",
                        "description": "Imports the public key from an RSA key pair that you created with a third-party tool."
                    },
                    "ImportSnapshot": {
                        "access-level": "write",
                        "actions": "ImportSnapshot",
                        "description": "Imports a disk into an EBS snapshot."
                    },
                    "ImportVolume": {
                        "access-level": "write",
                        "actions": "ImportVolume",
                        "description": "Creates an import volume task using metadata from the specified disk image."
                    },
                    "ModifyCapacityReservation": {
                        "access-level": "write",
                        "actions": "ModifyCapacityReservation",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Modifies a Capacity Reservation\\'s capacity and the conditions under which it is to be released.",
                        "resource-types": "capacity-reservation*"
                    },
                    "ModifyFleet": {
                        "access-level": "write",
                        "actions": "ModifyFleet",
                        "description": "Modifies the specified EC2 Fleet."
                    },
                    "ModifyFpgaImageAttribute": {
                        "access-level": "write",
                        "actions": "ModifyFpgaImageAttribute",
                        "description": "Modifies the specified attribute of the specified Amazon FPGA Image (AFI)."
                    },
                    "ModifyHosts": {
                        "access-level": "write",
                        "actions": "ModifyHosts",
                        "description": "Modify the auto-placement setting of a Dedicated Host."
                    },
                    "ModifyIdFormat": {
                        "access-level": "write",
                        "actions": "ModifyIdFormat",
                        "description": "Modifies the ID format for the specified resource on a per-region basis."
                    },
                    "ModifyIdentityIdFormat": {
                        "access-level": "write",
                        "actions": "ModifyIdentityIdFormat",
                        "description": "Modifies the ID format of a resource for a specified IAM user, IAM role, or the root user for an account; or all IAM users, IAM roles, and the root user for an account."
                    },
                    "ModifyImageAttribute": {
                        "access-level": "write",
                        "actions": "ModifyImageAttribute",
                        "description": "Modifies the specified attribute of the specified AMI."
                    },
                    "ModifyInstanceAttribute": {
                        "access-level": "write",
                        "actions": "ModifyInstanceAttribute",
                        "description": "Modifies the specified attribute of the specified instance."
                    },
                    "ModifyInstanceCapacityReservationAttributes": {
                        "access-level": "write",
                        "actions": "ModifyInstanceCapacityReservationAttributes",
                        "description": "Modifies the Capacity Reservation settings for a stopped instance."
                    },
                    "ModifyInstanceCreditSpecification": {
                        "access-level": "write",
                        "actions": "ModifyInstanceCreditSpecification",
                        "description": "Modifies the credit option for CPU usage on an instance."
                    },
                    "ModifyInstancePlacement": {
                        "access-level": "write",
                        "actions": "ModifyInstancePlacement",
                        "description": "Set the instance affinity value for a specific stopped instance and modify the instance tenancy setting."
                    },
                    "ModifyLaunchTemplate": {
                        "access-level": "write",
                        "actions": "ModifyLaunchTemplate",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Modifies the specified launch template.",
                        "resource-types": "launch-template*"
                    },
                    "ModifyNetworkInterfaceAttribute": {
                        "access-level": "write",
                        "actions": "ModifyNetworkInterfaceAttribute",
                        "description": "Modifies the specified network interface attribute. You can specify only one attribute at a time."
                    },
                    "ModifyReservedInstances": {
                        "access-level": "write",
                        "actions": "ModifyReservedInstances",
                        "description": "Modifies the Availability Zone, instance count, instance type, or network platform (EC2-Classic or EC2-VPC) of your Standard Reserved Instances."
                    },
                    "ModifySnapshotAttribute": {
                        "access-level": "write",
                        "actions": "ModifySnapshotAttribute",
                        "condition-keys": [
                            "ec2:Owner",
                            "ec2:ParentVolume",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:SnapshotTime",
                            "ec2:VolumeSize"
                        ],
                        "description": "Adds or removes permission settings for the specified snapshot.",
                        "resource-types": "snapshot*"
                    },
                    "ModifySpotFleetRequest": {
                        "access-level": "write",
                        "actions": "ModifySpotFleetRequest",
                        "description": "Modifies the specified Spot fleet request."
                    },
                    "ModifySubnetAttribute": {
                        "access-level": "write",
                        "actions": "ModifySubnetAttribute",
                        "description": "Modifies a subnet attribute."
                    },
                    "ModifyTransitGatewayVpcAttachment": {
                        "access-level": "write",
                        "actions": "ModifyTransitGatewayVpcAttachment",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Modifies the specified VPC attachment.",
                        "resource-types": "transit-gateway-attachment*"
                    },
                    "ModifyVolume": {
                        "access-level": "write",
                        "actions": "ModifyVolume",
                        "description": "You can modify several parameters of an existing EBS volume, including volume size, volume type, and IOPS capacity."
                    },
                    "ModifyVolumeAttribute": {
                        "access-level": "write",
                        "actions": "ModifyVolumeAttribute",
                        "description": "Modifies a volume attribute."
                    },
                    "ModifyVpcAttribute": {
                        "access-level": "write",
                        "actions": "ModifyVpcAttribute",
                        "description": "Modifies the specified attribute of the specified VPC."
                    },
                    "ModifyVpcEndpoint": {
                        "access-level": "write",
                        "actions": "ModifyVpcEndpoint",
                        "description": "Modifies attributes of a specified VPC endpoint."
                    },
                    "ModifyVpcEndpointConnectionNotification": {
                        "access-level": "write",
                        "actions": "ModifyVpcEndpointConnectionNotification",
                        "description": "Modifies a connection notification for VPC endpoint or VPC endpoint service."
                    },
                    "ModifyVpcEndpointServiceConfiguration": {
                        "access-level": "write",
                        "actions": "ModifyVpcEndpointServiceConfiguration",
                        "description": "Modifies the attributes of your VPC endpoint service configuration."
                    },
                    "ModifyVpcEndpointServicePermissions": {
                        "access-level": "write",
                        "actions": "ModifyVpcEndpointServicePermissions",
                        "description": "Modifies the permissions for your VPC endpoint service."
                    },
                    "ModifyVpcPeeringConnectionOptions": {
                        "access-level": "write",
                        "actions": "ModifyVpcPeeringConnectionOptions",
                        "description": "Modifies the VPC peering connection options on one side of a VPC peering connection."
                    },
                    "ModifyVpcTenancy": {
                        "access-level": "write",
                        "actions": "ModifyVpcTenancy",
                        "description": "Modifies the instance tenancy attribute of the specified VPC."
                    },
                    "MonitorInstances": {
                        "access-level": "write",
                        "actions": "MonitorInstances",
                        "description": "Enables detailed monitoring for a running instance."
                    },
                    "MoveAddressToVpc": {
                        "access-level": "write",
                        "actions": "MoveAddressToVpc",
                        "description": "Moves an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform."
                    },
                    "ProvisionByoipCidr": {
                        "access-level": "write",
                        "actions": "ProvisionByoipCidr",
                        "description": "Provisions an address range for use with your AWS resources through bring your own IP addresses (BYOIP) and creates a corresponding address pool."
                    },
                    "PurchaseHostReservation": {
                        "access-level": "write",
                        "actions": "PurchaseHostReservation",
                        "description": "Purchase a reservation with configurations that match those of your Dedicated Host."
                    },
                    "PurchaseReservedInstancesOffering": {
                        "access-level": "write",
                        "actions": "PurchaseReservedInstancesOffering",
                        "description": "Purchases a Reserved Instance for use with your account."
                    },
                    "PurchaseScheduledInstances": {
                        "access-level": "write",
                        "actions": "PurchaseScheduledInstances",
                        "description": "Purchases one or more Scheduled Instances with the specified schedule."
                    },
                    "RebootInstances": {
                        "access-level": "write",
                        "actions": "RebootInstances",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ],
                        "description": "Requests a reboot of one or more instances.",
                        "resource-types": "instance*"
                    },
                    "RegisterImage": {
                        "access-level": "write",
                        "actions": "RegisterImage",
                        "description": "Registers an AMI."
                    },
                    "RejectTransitGatewayVpcAttachment": {
                        "access-level": "write",
                        "actions": "RejectTransitGatewayVpcAttachment",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Rejects a request to attach a VPC to a transit gateway.",
                        "resource-types": "transit-gateway-attachment*"
                    },
                    "RejectVpcEndpointConnections": {
                        "access-level": "write",
                        "actions": "RejectVpcEndpointConnections",
                        "description": "Rejects one or more VPC endpoint connection requests to your VPC endpoint service."
                    },
                    "RejectVpcPeeringConnection": {
                        "access-level": "write",
                        "actions": "RejectVpcPeeringConnection",
                        "condition-keys": [
                            "ec2:AccepterVpc",
                            "ec2:Region",
                            "ec2:RequesterVpc",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Rejects a VPC peering connection request.",
                        "resource-types": "vpc-peering-connection*"
                    },
                    "ReleaseAddress": {
                        "access-level": "write",
                        "actions": "ReleaseAddress",
                        "description": "Releases the specified Elastic IP address."
                    },
                    "ReleaseHosts": {
                        "access-level": "write",
                        "actions": "ReleaseHosts",
                        "description": "When you no longer want to use an On-Demand Dedicated Host it can be released"
                    },
                    "ReplaceIamInstanceProfileAssociation": {
                        "access-level": "write",
                        "actions": "ReplaceIamInstanceProfileAssociation",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ],
                        "dependent-actions": "iam:PassRole",
                        "description": "Replaces an IAM instance profile for the specified instance.",
                        "resource-types": "instance*"
                    },
                    "ReplaceNetworkAclAssociation": {
                        "access-level": "write",
                        "actions": "ReplaceNetworkAclAssociation",
                        "description": "Changes which network ACL a subnet is associated with."
                    },
                    "ReplaceNetworkAclEntry": {
                        "access-level": "write",
                        "actions": "ReplaceNetworkAclEntry",
                        "description": "Replaces an entry (rule) in a network ACL."
                    },
                    "ReplaceRoute": {
                        "access-level": "write",
                        "actions": "ReplaceRoute",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ],
                        "description": "Replaces an existing route within a route table in a VPC.",
                        "resource-types": "route-table*"
                    },
                    "ReplaceRouteTableAssociation": {
                        "access-level": "write",
                        "actions": "ReplaceRouteTableAssociation",
                        "description": "Changes the route table associated with a given subnet in a VPC."
                    },
                    "ReplaceTransitGatewayRoute": {
                        "access-level": "write",
                        "actions": "ReplaceTransitGatewayRoute",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ],
                        "description": "Replaces the specified route in the specified transit gateway route table.",
                        "resource-types": "transit-gateway-route-table*"
                    },
                    "ReportInstanceStatus": {
                        "access-level": "write",
                        "actions": "ReportInstanceStatus",
                        "description": "Submits feedback about the status of an instance"
                    },
                    "RequestSpotFleet": {
                        "access-level": "write",
                        "actions": "RequestSpotFleet",
                        "description": "Creates a Spot fleet request"
                    },
                    "RequestSpotInstances": {
                        "access-level": "write",
                        "actions": "RequestSpotInstances",
                        "description": "Creates a Spot instance request"
                    },
                    "ResetFpgaImageAttribute": {
                        "access-level": "write",
                        "actions": "ResetFpgaImageAttribute",
                        "description": "Resets an attribute of an Amazon FPGA Image (AFI) to its default value."
                    },
                    "ResetImageAttribute": {
                        "access-level": "write",
                        "actions": "ResetImageAttribute",
                        "description": "Resets an attribute of an AMI to its default value"
                    },
                    "ResetInstanceAttribute": {
                        "access-level": "write",
                        "actions": "ResetInstanceAttribute",
                        "description": "Resets an attribute of an instance to its default value"
                    },
                    "ResetNetworkInterfaceAttribute": {
                        "access-level": "write",
                        "actions": "ResetNetworkInterfaceAttribute",
                        "description": "Resets a network interface attribute. You can specify only one attribute at a time."
                    },
                    "ResetSnapshotAttribute": {
                        "access-level": "write",
                        "actions": "ResetSnapshotAttribute",
                        "description": "Resets permission settings for the specified snapshot."
                    },
                    "RestoreAddressToClassic": {
                        "access-level": "write",
                        "actions": "RestoreAddressToClassic",
                        "description": "Restores an Elastic IP address that was previously moved to the EC2-VPC platform back to the EC2-Classic platform."
                    },
                    "RevokeSecurityGroupEgress": {
                        "access-level": "write",
                        "actions": "RevokeSecurityGroupEgress",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ],
                        "description": "[EC2-VPC only] Removes one or more egress rules from a security group for EC2-VPC. This action doesn\\'t apply to security groups for use in EC2-Classic.",
                        "resource-types": "security-group*"
                    },
                    "RevokeSecurityGroupIngress": {
                        "access-level": "write",
                        "actions": "RevokeSecurityGroupIngress",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ],
                        "description": "Removes one or more ingress rules from a security group.",
                        "resource-types": "security-group*"
                    },
                    "RunScheduledInstances": {
                        "access-level": "write",
                        "actions": "RunScheduledInstances",
                        "description": "Launches the specified Scheduled Instances."
                    },
                    "StartInstances": {
                        "access-level": "write",
                        "actions": "StartInstances",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ],
                        "description": "Starts an Amazon EBS-backed AMI that you\\'ve previously stopped.",
                        "resource-types": "instance*"
                    },
                    "StopInstances": {
                        "access-level": "write",
                        "actions": "StopInstances",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ],
                        "description": "Stops an Amazon EBS-backed instance.",
                        "resource-types": "instance*"
                    },
                    "TerminateInstances": {
                        "access-level": "write",
                        "actions": "TerminateInstances",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:EbsOptimized",
                            "ec2:InstanceProfile",
                            "ec2:InstanceType",
                            "ec2:PlacementGroup",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:RootDeviceType",
                            "ec2:Tenancy"
                        ],
                        "description": "Shuts down one or more instances.",
                        "resource-types": "instance*"
                    },
                    "UnassignIpv6Addresses": {
                        "access-level": "write",
                        "actions": "UnassignIpv6Addresses",
                        "description": "Unassigns one or more IPv6 addresses from the specified network interface."
                    },
                    "UnassignPrivateIpAddresses": {
                        "access-level": "write",
                        "actions": "UnassignPrivateIpAddresses",
                        "description": "Unassigns one or more secondary private IP addresses from a network interface."
                    },
                    "UnmonitorInstances": {
                        "access-level": "write",
                        "actions": "UnmonitorInstances",
                        "description": "Disables detailed monitoring for a running instance."
                    },
                    "UpdateSecurityGroupRuleDescriptionsEgress": {
                        "access-level": "write",
                        "actions": "UpdateSecurityGroupRuleDescriptionsEgress",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ],
                        "description": "[EC2-VPC only] Update descriptions for one or more egress rules of a security group. This action doesn\\'t apply to security groups for use in EC2-Classic.",
                        "resource-types": "security-group*"
                    },
                    "UpdateSecurityGroupRuleDescriptionsIngress": {
                        "access-level": "write",
                        "actions": "UpdateSecurityGroupRuleDescriptionsIngress",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ],
                        "description": "Update descriptions for one or more ingress rules of a security group.",
                        "resource-types": "security-group*"
                    },
                    "WithdrawByoipCidr": {
                        "access-level": "write",
                        "actions": "WithdrawByoipCidr",
                        "description": "Stops advertising an IPv4 address range that is provisioned as an address pool."
                    },
                    "security-group*": {
                        "access-level": "write",
                        "actions": "security-group*",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Vpc"
                        ]
                    },
                    "subnet": {
                        "access-level": "write",
                        "actions": "subnet",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ]
                    },
                    "transit-gateway-attachment": {
                        "access-level": "write",
                        "actions": "transit-gateway-attachment",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}"
                        ]
                    },
                    "transit-gateway-attachment*": {
                        "access-level": "write",
                        "actions": "transit-gateway-attachment*",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys",
                            "ec2:Region"
                        ]
                    },
                    "transit-gateway-route-table*": {
                        "access-level": "write",
                        "actions": "transit-gateway-route-table*",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ]
                    },
                    "volume*": {
                        "access-level": "write",
                        "actions": "volume*",
                        "condition-keys": [
                            "ec2:AvailabilityZone",
                            "ec2:Encrypted",
                            "ec2:ParentSnapshot",
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:VolumeIops",
                            "ec2:VolumeSize",
                            "ec2:VolumeType"
                        ]
                    },
                    "vpc*": {
                        "access-level": "write",
                        "actions": "vpc*",
                        "condition-keys": [
                            "ec2:Region",
                            "ec2:ResourceTag/${TagKey}",
                            "ec2:Tenancy"
                        ]
                    },
                    "vpc-peering-connection*": {
                        "access-level": "write",
                        "actions": "vpc-peering-connection*",
                        "condition-keys": [
                            "ec2:AccepterVpc",
                            "ec2:Region",
                            "ec2:RequesterVpc",
                            "ec2:ResourceTag/${TagKey}"
                        ]
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "capacity-reservation": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Region ec2:ResourceTag/${TagKey}",
                    "resource-types": "capacity-reservation"
                },
                "customer-gateway": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
                    "condition-keys": "ec2:Region ec2:ResourceTag/${TagKey}",
                    "resource-types": "customer-gateway"
                },
                "dhcp-options": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Region ec2:ResourceTag/${TagKey}",
                    "resource-types": "dhcp-options"
                },
                "elastic-gpu": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:elasticGpu/${ElasticGpuId}",
                    "resource-types": "elastic-gpu"
                },
                "fpga-image": {
                    "arn": "arn:${Partition}:ec2:${Region}::fpga-image/${FpgaImageId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Owner ec2:Public ec2:Region ec2:ResourceTag/${TagKey}",
                    "resource-types": "fpga-image"
                },
                "image": {
                    "arn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:ImageType ec2:Owner ec2:Public ec2:Region ec2:ResourceTag/${TagKey} ec2:RootDeviceType",
                    "resource-types": "image"
                },
                "instance": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:AvailabilityZone ec2:EbsOptimized ec2:InstanceProfile ec2:InstanceType ec2:PlacementGroup ec2:Region ec2:ResourceTag/${TagKey} ec2:RootDeviceType ec2:Tenancy",
                    "resource-types": "instance"
                },
                "internet-gateway": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Region ec2:ResourceTag/${TagKey}",
                    "resource-types": "internet-gateway"
                },
                "key-pair": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
                    "condition-keys": "ec2:Region",
                    "resource-types": "key-pair"
                },
                "launch-template": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
                    "condition-keys": "ec2:Region ec2:ResourceTag/${TagKey}",
                    "resource-types": "launch-template"
                },
                "network-acl": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Region ec2:ResourceTag/${TagKey} ec2:Vpc",
                    "resource-types": "network-acl"
                },
                "network-interface": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:AuthorizedService ec2:AvailabilityZone ec2:Region ec2:ResourceTag/${TagKey} ec2:Subnet ec2:Vpc",
                    "resource-types": "network-interface"
                },
                "placement-group": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
                    "condition-keys": "ec2:PlacementGroupStrategy ec2:Region",
                    "resource-types": "placement-group"
                },
                "reserved-instances": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:reserved-instances/${ReservationId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:AvailabilityZone ec2:InstanceType ec2:Region ec2:ReservedInstancesOfferingType ec2:ResourceTag/${TagKey} ec2:Tenancy",
                    "resource-types": "reserved-instances"
                },
                "route-table": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Region ec2:ResourceTag/${TagKey} ec2:Vpc",
                    "resource-types": "route-table"
                },
                "security-group": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Region ec2:ResourceTag/${TagKey} ec2:Vpc",
                    "resource-types": "security-group"
                },
                "snapshot": {
                    "arn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Owner ec2:ParentVolume ec2:Region ec2:ResourceTag/${TagKey} ec2:SnapshotTime ec2:VolumeSize",
                    "resource-types": "snapshot"
                },
                "spot-instance-request": {
                    "arn": "arn:${Partition}:ec2:${Region}::spot-instance-request/${SpotInstanceRequestId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Region ec2:ResourceTag/${TagKey}",
                    "resource-types": "spot-instance-request"
                },
                "subnet": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:AvailabilityZone ec2:Region ec2:ResourceTag/${TagKey} ec2:Vpc",
                    "resource-types": "subnet"
                },
                "transit-gateway": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Region ec2:ResourceTag/${TagKey}",
                    "resource-types": "transit-gateway"
                },
                "transit-gateway-attachment": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Region ec2:ResourceTag/${TagKey}",
                    "resource-types": "transit-gateway-attachment"
                },
                "transit-gateway-route-table": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Region ec2:ResourceTag/${TagKey}",
                    "resource-types": "transit-gateway-route-table"
                },
                "volume": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:AvailabilityZone ec2:Encrypted ec2:ParentSnapshot ec2:Region ec2:ResourceTag/${TagKey} ec2:VolumeIops ec2:VolumeSize ec2:VolumeType",
                    "resource-types": "volume"
                },
                "vpc": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Region ec2:ResourceTag/${TagKey} ec2:Tenancy",
                    "resource-types": "vpc"
                },
                "vpc-peering-connection": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
                    "condition-keys": "ec2:AccepterVpc ec2:Region ec2:RequesterVpc ec2:ResourceTag/${TagKey}",
                    "resource-types": "vpc-peering-connection"
                },
                "vpn-connection": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys ec2:Region ec2:ResourceTag/${TagKey}",
                    "resource-types": "vpn-connection"
                },
                "vpn-gateway": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
                    "resource-types": "vpn-gateway"
                }
            }
        },
        "ec2autoscaling": {
            "actions": {
                "list": {
                    "DescribeAccountLimits": {
                        "access-level": "list",
                        "actions": "DescribeAccountLimits",
                        "description": "Describes the current Auto Scaling resource limits for your AWS account."
                    },
                    "DescribeAdjustmentTypes": {
                        "access-level": "list",
                        "actions": "DescribeAdjustmentTypes",
                        "description": "Describes the policy adjustment types for use with PutScalingPolicy."
                    },
                    "DescribeAutoScalingGroups": {
                        "access-level": "list",
                        "actions": "DescribeAutoScalingGroups",
                        "description": "Describes one or more Auto Scaling groups. If a list of names is not provided, the call describes all Auto Scaling groups."
                    },
                    "DescribeAutoScalingInstances": {
                        "access-level": "list",
                        "actions": "DescribeAutoScalingInstances",
                        "description": "Describes one or more Auto Scaling instances. If a list is not provided, the call describes all instances."
                    },
                    "DescribeAutoScalingNotificationTypes": {
                        "access-level": "list",
                        "actions": "DescribeAutoScalingNotificationTypes",
                        "description": "Describes the notification types that are supported by Auto Scaling."
                    },
                    "DescribeLaunchConfigurations": {
                        "access-level": "list",
                        "actions": "DescribeLaunchConfigurations",
                        "description": "Describes one or more launch configurations. If you omit the list of names, then the call describes all launch configurations."
                    },
                    "DescribeLifecycleHookTypes": {
                        "access-level": "list",
                        "actions": "DescribeLifecycleHookTypes",
                        "description": "Describes the available types of lifecycle hooks."
                    },
                    "DescribeLifecycleHooks": {
                        "access-level": "list",
                        "actions": "DescribeLifecycleHooks",
                        "description": "Describes the lifecycle hooks for the specified Auto Scaling group."
                    },
                    "DescribeLoadBalancerTargetGroups": {
                        "access-level": "list",
                        "actions": "DescribeLoadBalancerTargetGroups",
                        "description": "Describes the target groups for the specified Auto Scaling group."
                    },
                    "DescribeLoadBalancers": {
                        "access-level": "list",
                        "actions": "DescribeLoadBalancers",
                        "description": "Describes the load balancers for the specified Auto Scaling group."
                    },
                    "DescribeMetricCollectionTypes": {
                        "access-level": "list",
                        "actions": "DescribeMetricCollectionTypes",
                        "description": "Describes the available CloudWatch metrics for Auto Scaling."
                    },
                    "DescribeNotificationConfigurations": {
                        "access-level": "list",
                        "actions": "DescribeNotificationConfigurations",
                        "description": "Describes the notification actions associated with the specified Auto Scaling group."
                    },
                    "DescribePolicies": {
                        "access-level": "list",
                        "actions": "DescribePolicies",
                        "description": "Describes the policies for the specified Auto Scaling group."
                    },
                    "DescribeScalingActivities": {
                        "access-level": "list",
                        "actions": "DescribeScalingActivities",
                        "description": "Describes one or more scaling activities for the specified Auto Scaling group."
                    },
                    "DescribeScalingProcessTypes": {
                        "access-level": "list",
                        "actions": "DescribeScalingProcessTypes",
                        "description": "Describes the scaling process types for use with ResumeProcesses and SuspendProcesses."
                    },
                    "DescribeScheduledActions": {
                        "access-level": "list",
                        "actions": "DescribeScheduledActions",
                        "description": "Describes the actions scheduled for your Auto Scaling group that haven\\'t run."
                    },
                    "DescribeTerminationPolicyTypes": {
                        "access-level": "list",
                        "actions": "DescribeTerminationPolicyTypes",
                        "description": "Describes the termination policies supported by Auto Scaling."
                    }
                },
                "permissions-management": {
                    "DeletePolicy": {
                        "access-level": "permissions-management",
                        "actions": "DeletePolicy",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified Auto Scaling policy.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "ExecutePolicy": {
                        "access-level": "permissions-management",
                        "actions": "ExecutePolicy",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Executes the specified policy.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "PutScalingPolicy": {
                        "access-level": "permissions-management",
                        "actions": "PutScalingPolicy",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Creates or updates a policy for an Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    }
                },
                "read": {
                    "DescribeTags": {
                        "access-level": "read",
                        "actions": "DescribeTags",
                        "description": "Describes the specified tags."
                    }
                },
                "tagging": {
                    "CreateAutoScalingGroup": {
                        "access-level": "tagging",
                        "actions": "CreateAutoScalingGroup",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}",
                            "autoscaling:InstanceTypes",
                            "autoscaling:LaunchConfigurationName",
                            "autoscaling:LoadBalancerNames",
                            "autoscaling:MaxSize",
                            "autoscaling:MinSize",
                            "autoscaling:TargetGroupARNs",
                            "autoscaling:VPCZoneIdentifiers",
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Creates an Auto Scaling group with the specified name and attributes.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "CreateOrUpdateTags": {
                        "access-level": "tagging",
                        "actions": "CreateOrUpdateTags",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}",
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Creates or updates tags for the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "DeleteTags": {
                        "access-level": "tagging",
                        "actions": "DeleteTags",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}",
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Deletes the specified tags.",
                        "resource-types": "autoScalingGroup*"
                    }
                },
                "write": {
                    "AttachInstances": {
                        "access-level": "write",
                        "actions": "AttachInstances",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Attaches one or more EC2 instances to the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "AttachLoadBalancerTargetGroups": {
                        "access-level": "write",
                        "actions": "AttachLoadBalancerTargetGroups",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}",
                            "autoscaling:TargetGroupARNs"
                        ],
                        "description": "Attaches one or more target groups to the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "AttachLoadBalancers": {
                        "access-level": "write",
                        "actions": "AttachLoadBalancers",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}",
                            "autoscaling:LoadBalancerNames"
                        ],
                        "description": "Attaches one or more load balancers to the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "BatchDeleteScheduledAction": {
                        "access-level": "write",
                        "actions": "BatchDeleteScheduledAction",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified scheduled actions.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "BatchPutScheduledUpdateGroupAction": {
                        "access-level": "write",
                        "actions": "BatchPutScheduledUpdateGroupAction",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Creates or updates multiple scheduled scaling actions for an Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "CompleteLifecycleAction": {
                        "access-level": "write",
                        "actions": "CompleteLifecycleAction",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Completes the lifecycle action for the specified token or instance with the specified result.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "CreateLaunchConfiguration": {
                        "access-level": "write",
                        "actions": "CreateLaunchConfiguration",
                        "condition-keys": [
                            "autoscaling:ImageId",
                            "autoscaling:InstanceType",
                            "autoscaling:SpotPrice"
                        ],
                        "description": "Creates a launch configuration.",
                        "resource-types": "launchConfiguration*"
                    },
                    "DeleteAutoScalingGroup": {
                        "access-level": "write",
                        "actions": "DeleteAutoScalingGroup",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "DeleteLaunchConfiguration": {
                        "access-level": "write",
                        "actions": "DeleteLaunchConfiguration",
                        "description": "Deletes the specified launch configuration.",
                        "resource-types": "launchConfiguration*"
                    },
                    "DeleteLifecycleHook": {
                        "access-level": "write",
                        "actions": "DeleteLifecycleHook",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified lifecycle hook.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "DeleteNotificationConfiguration": {
                        "access-level": "write",
                        "actions": "DeleteNotificationConfiguration",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified notification.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "DeleteScheduledAction": {
                        "access-level": "write",
                        "actions": "DeleteScheduledAction",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Deletes the specified scheduled action.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "DetachInstances": {
                        "access-level": "write",
                        "actions": "DetachInstances",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Removes one or more instances from the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "DetachLoadBalancerTargetGroups": {
                        "access-level": "write",
                        "actions": "DetachLoadBalancerTargetGroups",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}",
                            "autoscaling:TargetGroupARNs"
                        ],
                        "description": "Detaches one or more target groups from the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "DetachLoadBalancers": {
                        "access-level": "write",
                        "actions": "DetachLoadBalancers",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}",
                            "autoscaling:LoadBalancerNames"
                        ],
                        "description": "Removes one or more load balancers from the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "DisableMetricsCollection": {
                        "access-level": "write",
                        "actions": "DisableMetricsCollection",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Disables monitoring of the specified metrics for the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "EnableMetricsCollection": {
                        "access-level": "write",
                        "actions": "EnableMetricsCollection",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Enables monitoring of the specified metrics for the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "EnterStandby": {
                        "access-level": "write",
                        "actions": "EnterStandby",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Moves the specified instances into Standby mode.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "ExitStandby": {
                        "access-level": "write",
                        "actions": "ExitStandby",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Moves the specified instances out of Standby mode.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "PutLifecycleHook": {
                        "access-level": "write",
                        "actions": "PutLifecycleHook",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Creates or updates a lifecycle hook for the specified Auto Scaling Group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "PutNotificationConfiguration": {
                        "access-level": "write",
                        "actions": "PutNotificationConfiguration",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Configures an Auto Scaling group to send notifications when specified events take place.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "PutScheduledUpdateGroupAction": {
                        "access-level": "write",
                        "actions": "PutScheduledUpdateGroupAction",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}",
                            "autoscaling:MaxSize",
                            "autoscaling:MinSize"
                        ],
                        "description": "Creates or updates a scheduled scaling action for an Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "RecordLifecycleActionHeartbeat": {
                        "access-level": "write",
                        "actions": "RecordLifecycleActionHeartbeat",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Records a heartbeat for the lifecycle action associated with the specified token or instance.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "ResumeProcesses": {
                        "access-level": "write",
                        "actions": "ResumeProcesses",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Resumes the specified suspended Auto Scaling processes, or all suspended process, for the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "SetDesiredCapacity": {
                        "access-level": "write",
                        "actions": "SetDesiredCapacity",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Sets the size of the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "SetInstanceHealth": {
                        "access-level": "write",
                        "actions": "SetInstanceHealth",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Sets the health status of the specified instance.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "SetInstanceProtection": {
                        "access-level": "write",
                        "actions": "SetInstanceProtection",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Updates the instance protection settings of the specified instances.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "SuspendProcesses": {
                        "access-level": "write",
                        "actions": "SuspendProcesses",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Suspends the specified Auto Scaling processes, or all processes, for the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "TerminateInstanceInAutoScalingGroup": {
                        "access-level": "write",
                        "actions": "TerminateInstanceInAutoScalingGroup",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}"
                        ],
                        "description": "Terminates the specified instance and optionally adjusts the desired group size.",
                        "resource-types": "autoScalingGroup*"
                    },
                    "UpdateAutoScalingGroup": {
                        "access-level": "write",
                        "actions": "UpdateAutoScalingGroup",
                        "condition-keys": [
                            "autoscaling:ResourceTag/${TagKey}",
                            "autoscaling:InstanceTypes",
                            "autoscaling:LaunchConfigurationName",
                            "autoscaling:MaxSize",
                            "autoscaling:MinSize",
                            "autoscaling:VPCZoneIdentifiers"
                        ],
                        "description": "Updates the configuration for the specified Auto Scaling group.",
                        "resource-types": "autoScalingGroup*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "autoscalinggroup": {
                    "arn": "arn:${Partition}:autoscaling:${Region}:${Account}:autoScalingGroup:${GroupId}:autoScalingGroupName/${GroupFriendlyName}",
                    "condition-keys": "autoscaling:ResourceTag/${TagKey}",
                    "resource-types": "autoScalingGroup"
                },
                "launchconfiguration": {
                    "arn": "arn:${Partition}:autoscaling:${Region}:${Account}:launchConfiguration:${Id}:launchConfigurationName/${LaunchConfigurationName}",
                    "resource-types": "launchConfiguration"
                }
            }
        },
        "elasticache": {
            "actions": {
                "list": {
                    "DescribeCacheClusters": {
                        "access-level": "list",
                        "actions": "DescribeCacheClusters",
                        "description": "The DescribeCacheClusters action returns information about all provisioned cache clusters if no cache cluster identifier is specified, or about a specific cache cluster if a cache cluster identifier is supplied."
                    },
                    "DescribeCacheEngineVersions": {
                        "access-level": "list",
                        "actions": "DescribeCacheEngineVersions",
                        "description": "The DescribeCacheEngineVersions action returns a list of the available cache engines and their versions."
                    },
                    "DescribeCacheParameterGroups": {
                        "access-level": "list",
                        "actions": "DescribeCacheParameterGroups",
                        "description": "The DescribeCacheParameterGroups action returns a list of cache parameter group descriptions."
                    },
                    "DescribeCacheParameters": {
                        "access-level": "list",
                        "actions": "DescribeCacheParameters",
                        "description": "The DescribeCacheParameters action returns the detailed parameter list for a particular cache parameter group."
                    },
                    "DescribeCacheSecurityGroups": {
                        "access-level": "list",
                        "actions": "DescribeCacheSecurityGroups",
                        "description": "The DescribeCacheSecurityGroups action returns a list of cache security group descriptions."
                    },
                    "DescribeCacheSubnetGroups": {
                        "access-level": "list",
                        "actions": "DescribeCacheSubnetGroups",
                        "description": "The DescribeCacheSubnetGroups action returns a list of cache subnet group descriptions."
                    },
                    "DescribeEngineDefaultParameters": {
                        "access-level": "list",
                        "actions": "DescribeEngineDefaultParameters",
                        "description": "The DescribeEngineDefaultParameters action returns the default engine and system parameter information for the specified cache engine."
                    },
                    "DescribeEvents": {
                        "access-level": "list",
                        "actions": "DescribeEvents",
                        "description": "The DescribeEvents action returns events related to cache clusters, cache security groups, and cache parameter groups."
                    },
                    "DescribeReplicationGroups": {
                        "access-level": "list",
                        "actions": "DescribeReplicationGroups",
                        "description": "The DescribeReplicationGroups action returns information about a particular replication group."
                    },
                    "DescribeReservedCacheNodes": {
                        "access-level": "list",
                        "actions": "DescribeReservedCacheNodes",
                        "description": "The DescribeReservedCacheNodes action returns information about reserved cache nodes for this account, or about a specified reserved cache node."
                    },
                    "DescribeReservedCacheNodesOfferings": {
                        "access-level": "list",
                        "actions": "DescribeReservedCacheNodesOfferings",
                        "description": "The DescribeReservedCacheNodesOfferings action lists available reserved cache node offerings."
                    },
                    "DescribeSnapshots": {
                        "access-level": "list",
                        "actions": "DescribeSnapshots",
                        "description": "The DescribeSnapshots action returns information about cache cluster snapshots."
                    },
                    "ListAllowedNodeTypeModifications": {
                        "access-level": "list",
                        "actions": "ListAllowedNodeTypeModifications",
                        "description": "List Allowed Node Type Modifications"
                    }
                },
                "read": {
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "The ListTagsForResource action lists all cost allocation tags currently on the named resource."
                    }
                },
                "tagging": {
                    "AddTagsToResource": {
                        "access-level": "tagging",
                        "actions": "AddTagsToResource",
                        "description": "The AddTagsToResource action adds up to 10 cost allocation tags to the named resource."
                    },
                    "RemoveTagsFromResource": {
                        "access-level": "tagging",
                        "actions": "RemoveTagsFromResource",
                        "description": "The RemoveTagsFromResource action removes the tags identified by the TagKeys list from the named resource."
                    }
                },
                "write": {
                    "AuthorizeCacheSecurityGroupIngress": {
                        "access-level": "write",
                        "actions": "AuthorizeCacheSecurityGroupIngress",
                        "dependent-actions": "ec2:AuthorizeSecurityGroupIngress",
                        "description": "The AuthorizeCacheSecurityGroupIngress action allows network ingress to a cache security group."
                    },
                    "CopySnapshot": {
                        "access-level": "write",
                        "actions": "CopySnapshot",
                        "dependent-actions": "s3:DeleteObject s3:GetBucketAcl s3:PutObject",
                        "description": "The CopySnapshot action makes a copy of an existing snapshot."
                    },
                    "CreateCacheCluster": {
                        "access-level": "write",
                        "actions": "CreateCacheCluster",
                        "dependent-actions": "ec2:CreateNetworkInterface ec2:DeleteNetworkInterface ec2:DescribeNetworkInterfaces ec2:DescribeSubnets ec2:DescribeVpcs s3:GetObject",
                        "description": "The CreateCacheCluster action creates a cache cluster."
                    },
                    "CreateCacheParameterGroup": {
                        "access-level": "write",
                        "actions": "CreateCacheParameterGroup",
                        "description": "The CreateCacheParameterGroup action creates a new cache parameter group."
                    },
                    "CreateCacheSecurityGroup": {
                        "access-level": "write",
                        "actions": "CreateCacheSecurityGroup",
                        "description": "The CreateCacheSecurityGroup action creates a new cache security group."
                    },
                    "CreateCacheSubnetGroup": {
                        "access-level": "write",
                        "actions": "CreateCacheSubnetGroup",
                        "description": "The CreateCacheSubnetGroup action creates a new cache subnet group."
                    },
                    "CreateReplicationGroup": {
                        "access-level": "write",
                        "actions": "CreateReplicationGroup",
                        "dependent-actions": "ec2:CreateNetworkInterface ec2:DeleteNetworkInterface ec2:DescribeNetworkInterfaces ec2:DescribeSubnets ec2:DescribeVpcs s3:GetObject",
                        "description": "The CreateReplicationGroup action creates a replication group."
                    },
                    "CreateSnapshot": {
                        "access-level": "write",
                        "actions": "CreateSnapshot",
                        "description": "The CreateSnapshot action creates a copy of an entire cache cluster at a specific moment in time."
                    },
                    "DeleteCacheCluster": {
                        "access-level": "write",
                        "actions": "DeleteCacheCluster",
                        "description": "The DeleteCacheCluster action deletes a previously provisioned cache cluster."
                    },
                    "DeleteCacheParameterGroup": {
                        "access-level": "write",
                        "actions": "DeleteCacheParameterGroup",
                        "description": "The DeleteCacheParameterGroup action deletes the specified cache parameter group."
                    },
                    "DeleteCacheSecurityGroup": {
                        "access-level": "write",
                        "actions": "DeleteCacheSecurityGroup",
                        "description": "The DeleteCacheSecurityGroup action deletes a cache security group."
                    },
                    "DeleteCacheSubnetGroup": {
                        "access-level": "write",
                        "actions": "DeleteCacheSubnetGroup",
                        "description": "The DeleteCacheSubnetGroup action deletes a cache subnet group."
                    },
                    "DeleteReplicationGroup": {
                        "access-level": "write",
                        "actions": "DeleteReplicationGroup",
                        "description": "The DeleteReplicationGroup action deletes an existing replication group."
                    },
                    "DeleteSnapshot": {
                        "access-level": "write",
                        "actions": "DeleteSnapshot",
                        "description": "The DeleteSnapshot action deletes an existing snapshot."
                    },
                    "ModifyCacheCluster": {
                        "access-level": "write",
                        "actions": "ModifyCacheCluster",
                        "description": "The ModifyCacheCluster action modifies the settings for a cache cluster."
                    },
                    "ModifyCacheParameterGroup": {
                        "access-level": "write",
                        "actions": "ModifyCacheParameterGroup",
                        "description": "The ModifyCacheParameterGroup action modifies the parameters of a cache parameter group."
                    },
                    "ModifyCacheSubnetGroup": {
                        "access-level": "write",
                        "actions": "ModifyCacheSubnetGroup",
                        "description": "The ModifyCacheSubnetGroup action modifies an existing cache subnet group."
                    },
                    "ModifyReplicationGroup": {
                        "access-level": "write",
                        "actions": "ModifyReplicationGroup",
                        "description": "The ModifyReplicationGroup action modifies the settings for a replication group."
                    },
                    "PurchaseReservedCacheNodesOffering": {
                        "access-level": "write",
                        "actions": "PurchaseReservedCacheNodesOffering",
                        "description": "The PurchaseReservedCacheNodesOffering action allows you to purchase a reserved cache node offering."
                    },
                    "RebootCacheCluster": {
                        "access-level": "write",
                        "actions": "RebootCacheCluster",
                        "description": "The RebootCacheCluster action reboots some, or all, of the cache nodes within a provisioned cache cluster."
                    },
                    "ResetCacheParameterGroup": {
                        "access-level": "write",
                        "actions": "ResetCacheParameterGroup",
                        "description": "The ResetCacheParameterGroup action modifies the parameters of a cache parameter group to the engine or system default value."
                    },
                    "RevokeCacheSecurityGroupIngress": {
                        "access-level": "write",
                        "actions": "RevokeCacheSecurityGroupIngress",
                        "description": "The RevokeCacheSecurityGroupIngress action revokes ingress from a cache security group."
                    }
                }
            }
        },
        "elasticbeanstalk": {
            "actions": {
                "list": {
                    "DescribeApplicationVersions": {
                        "access-level": "list",
                        "actions": "DescribeApplicationVersions",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Retrieve a list of application versions stored in your AWS Elastic Beanstalk storage bucket",
                        "resource-types": "applicationversion"
                    },
                    "DescribeApplications": {
                        "access-level": "list",
                        "actions": "DescribeApplications",
                        "description": "Returns the descriptions of existing applications",
                        "resource-types": "application"
                    },
                    "DescribeEnvironments": {
                        "access-level": "list",
                        "actions": "DescribeEnvironments",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Returns descriptions for existing environments",
                        "resource-types": "environment"
                    },
                    "ListAvailableSolutionStacks": {
                        "access-level": "list",
                        "actions": "ListAvailableSolutionStacks",
                        "description": "Returns a list of the available solution stack names",
                        "resource-types": "solutionstack"
                    },
                    "ListPlatformVersions": {
                        "access-level": "list",
                        "actions": "ListPlatformVersions",
                        "description": "Lists the available platforms."
                    }
                },
                "read": {
                    "CheckDNSAvailability": {
                        "access-level": "read",
                        "actions": "CheckDNSAvailability",
                        "description": "Checks if the specified CNAME is available"
                    },
                    "DescribeConfigurationOptions": {
                        "access-level": "read",
                        "actions": "DescribeConfigurationOptions",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Describes the configuration options",
                        "resource-types": "configurationtemplate"
                    },
                    "DescribeConfigurationSettings": {
                        "access-level": "read",
                        "actions": "DescribeConfigurationSettings",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Returns a description of the settings for the specified configuration set",
                        "resource-types": "configurationtemplate"
                    },
                    "DescribeEnvironmentHealth": {
                        "access-level": "read",
                        "actions": "DescribeEnvironmentHealth",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Returns information about the overall health of the specified environment",
                        "resource-types": "environment"
                    },
                    "DescribeEnvironmentManagedActionHistory": {
                        "access-level": "read",
                        "actions": "DescribeEnvironmentManagedActionHistory",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Lists an environment\\'s completed and failed managed actions.",
                        "resource-types": "environment"
                    },
                    "DescribeEnvironmentManagedActions": {
                        "access-level": "read",
                        "actions": "DescribeEnvironmentManagedActions",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Lists an environment\\'s upcoming and in-progress managed actions.",
                        "resource-types": "environment"
                    },
                    "DescribeEnvironmentResources": {
                        "access-level": "read",
                        "actions": "DescribeEnvironmentResources",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Returns AWS resources for this environment",
                        "resource-types": "environment"
                    },
                    "DescribeEvents": {
                        "access-level": "read",
                        "actions": "DescribeEvents",
                        "description": "Returns list of event descriptions matching criteria up to the last 6 weeks",
                        "resource-types": "application"
                    },
                    "DescribeInstancesHealth": {
                        "access-level": "read",
                        "actions": "DescribeInstancesHealth",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Returns more detailed information about the health of the specified instances",
                        "resource-types": "environment"
                    },
                    "DescribePlatformVersion": {
                        "access-level": "read",
                        "actions": "DescribePlatformVersion",
                        "description": "Describes the version of the platform."
                    },
                    "RequestEnvironmentInfo": {
                        "access-level": "read",
                        "actions": "RequestEnvironmentInfo",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Initiates a request to compile the specified type of information of the deployed environment",
                        "resource-types": "environment*"
                    },
                    "RetrieveEnvironmentInfo": {
                        "access-level": "read",
                        "actions": "RetrieveEnvironmentInfo",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Retrieves the compiled information from a RequestEnvironmentInfo request",
                        "resource-types": "environment*"
                    },
                    "ValidateConfigurationSettings": {
                        "access-level": "read",
                        "actions": "ValidateConfigurationSettings",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Takes a set of configuration settings and either a configuration template or environment, and determines whether those values are valid",
                        "resource-types": "configurationtemplate"
                    },
                    "applicationversion": {
                        "access-level": "read",
                        "actions": "applicationversion",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ]
                    },
                    "configurationtemplate": {
                        "access-level": "read",
                        "actions": "configurationtemplate",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ]
                    },
                    "environment": {
                        "access-level": "read",
                        "actions": "environment",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ]
                    },
                    "solutionstack": {
                        "access-level": "read",
                        "actions": "solutionstack"
                    }
                },
                "write": {
                    "AbortEnvironmentUpdate": {
                        "access-level": "write",
                        "actions": "AbortEnvironmentUpdate",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Cancels in-progress environment configuration update or application version deployment",
                        "resource-types": "environment*"
                    },
                    "ApplyEnvironmentManagedAction": {
                        "access-level": "write",
                        "actions": "ApplyEnvironmentManagedAction",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Applies a scheduled managed action immediately.",
                        "resource-types": "environment*"
                    },
                    "ComposeEnvironments": {
                        "access-level": "write",
                        "actions": "ComposeEnvironments",
                        "description": "Create or update a group of environments that each run a separate component of a single application",
                        "resource-types": "application*"
                    },
                    "CreateApplication": {
                        "access-level": "write",
                        "actions": "CreateApplication",
                        "description": "Creates an application that has one configuration template named default and no application versions",
                        "resource-types": "application*"
                    },
                    "CreateApplicationVersion": {
                        "access-level": "write",
                        "actions": "CreateApplicationVersion",
                        "description": "Creates an application version for the specified application",
                        "resource-types": "application*"
                    },
                    "CreateConfigurationTemplate": {
                        "access-level": "write",
                        "actions": "CreateConfigurationTemplate",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication",
                            "elasticbeanstalk:FromApplication",
                            "elasticbeanstalk:FromApplicationVersion",
                            "elasticbeanstalk:FromConfigurationTemplate",
                            "elasticbeanstalk:FromEnvironment",
                            "elasticbeanstalk:FromSolutionStack"
                        ],
                        "description": "Creates a configuration template",
                        "resource-types": "configurationtemplate*"
                    },
                    "CreateEnvironment": {
                        "access-level": "write",
                        "actions": "CreateEnvironment",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication",
                            "elasticbeanstalk:FromApplicationVersion",
                            "elasticbeanstalk:FromConfigurationTemplate",
                            "elasticbeanstalk:FromSolutionStack"
                        ],
                        "description": "Launches an environment for the specified application using the specified configuration",
                        "resource-types": "environment*"
                    },
                    "CreatePlatformVersion": {
                        "access-level": "write",
                        "actions": "CreatePlatformVersion",
                        "description": "Create a new version of your custom platform."
                    },
                    "CreateStorageLocation": {
                        "access-level": "write",
                        "actions": "CreateStorageLocation",
                        "description": "Creates the Amazon S3 storage location for the account"
                    },
                    "DeleteApplication": {
                        "access-level": "write",
                        "actions": "DeleteApplication",
                        "description": "Deletes the specified application along with all associated versions and configurations",
                        "resource-types": "application*"
                    },
                    "DeleteApplicationVersion": {
                        "access-level": "write",
                        "actions": "DeleteApplicationVersion",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Deletes the specified version from the specified application",
                        "resource-types": "applicationversion*"
                    },
                    "DeleteConfigurationTemplate": {
                        "access-level": "write",
                        "actions": "DeleteConfigurationTemplate",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Deletes the specified configuration template",
                        "resource-types": "configurationtemplate*"
                    },
                    "DeleteEnvironmentConfiguration": {
                        "access-level": "write",
                        "actions": "DeleteEnvironmentConfiguration",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Deletes the draft configuration associated with the running environment",
                        "resource-types": "environment*"
                    },
                    "DeletePlatformVersion": {
                        "access-level": "write",
                        "actions": "DeletePlatformVersion",
                        "description": "Deletes the specified version of a custom platform."
                    },
                    "RebuildEnvironment": {
                        "access-level": "write",
                        "actions": "RebuildEnvironment",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Deletes and recreates all of the AWS resources for a specified environment and forces a restart",
                        "resource-types": "environment*"
                    },
                    "RestartAppServer": {
                        "access-level": "write",
                        "actions": "RestartAppServer",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Initiates a request to compile the specified type of information of the deployed environment",
                        "resource-types": "environment*"
                    },
                    "SwapEnvironmentCNAMEs": {
                        "access-level": "write",
                        "actions": "SwapEnvironmentCNAMEs",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication",
                            "elasticbeanstalk:FromEnvironment"
                        ],
                        "description": "Swaps the CNAMEs of two environments",
                        "resource-types": "environment*"
                    },
                    "TerminateEnvironment": {
                        "access-level": "write",
                        "actions": "TerminateEnvironment",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Terminates the specified environment",
                        "resource-types": "environment*"
                    },
                    "UpdateApplication": {
                        "access-level": "write",
                        "actions": "UpdateApplication",
                        "description": "Updates the specified application to have the specified properties",
                        "resource-types": "application*"
                    },
                    "UpdateApplicationVersion": {
                        "access-level": "write",
                        "actions": "UpdateApplicationVersion",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Updates the specified application version to have the specified properties",
                        "resource-types": "applicationversion*"
                    },
                    "UpdateConfigurationTemplate": {
                        "access-level": "write",
                        "actions": "UpdateConfigurationTemplate",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ],
                        "description": "Updates the specified configuration template to have the specified properties or configuration option values",
                        "resource-types": "configurationtemplate*"
                    },
                    "UpdateEnvironment": {
                        "access-level": "write",
                        "actions": "UpdateEnvironment",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication",
                            "elasticbeanstalk:FromApplicationVersion",
                            "elasticbeanstalk:FromConfigurationTemplate"
                        ],
                        "description": "Updates the environment",
                        "resource-types": "environment*"
                    },
                    "applicationversion*": {
                        "access-level": "write",
                        "actions": "applicationversion*",
                        "condition-keys": [
                            "elasticbeanstalk:InApplication"
                        ]
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "application": {
                    "arn": "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:application/${ApplicationName}",
                    "resource-types": "application"
                },
                "applicationversion": {
                    "arn": "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:applicationversion/${ApplicationName}/${VersionLabel}",
                    "condition-keys": "elasticbeanstalk:InApplication",
                    "resource-types": "applicationversion"
                },
                "configurationtemplate": {
                    "arn": "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:configurationtemplate/${ApplicationName}/${TemplateName}",
                    "condition-keys": "elasticbeanstalk:InApplication",
                    "resource-types": "configurationtemplate"
                },
                "environment": {
                    "arn": "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:environment/${ApplicationName}/${EnvironmentName}",
                    "condition-keys": "elasticbeanstalk:InApplication",
                    "resource-types": "environment"
                },
                "solutionstack": {
                    "arn": "arn:${Partition}:elasticbeanstalk:${Region}::solutionstack/${SolutionStackName}",
                    "resource-types": "solutionstack"
                }
            }
        },
        "elasticcontainerregistry": {
            "actions": {
                "list": {
                    "DescribeRepositories": {
                        "access-level": "list",
                        "actions": "DescribeRepositories",
                        "description": "Describes image repositories in a registry",
                        "resource-types": "repository"
                    },
                    "ListImages": {
                        "access-level": "list",
                        "actions": "ListImages",
                        "description": "Lists all the image IDs for a given repository.",
                        "resource-types": "repository*"
                    }
                },
                "read": {
                    "BatchCheckLayerAvailability": {
                        "access-level": "read",
                        "actions": "BatchCheckLayerAvailability",
                        "description": "Check the availability of multiple image layers in a specified registry and repository.",
                        "resource-types": "repository*"
                    },
                    "BatchGetImage": {
                        "access-level": "read",
                        "actions": "BatchGetImage",
                        "description": "Gets detailed information for specified images within a specified repository.",
                        "resource-types": "repository*"
                    },
                    "DescribeImages": {
                        "access-level": "read",
                        "actions": "DescribeImages",
                        "description": "Returns metadata about the images in a repository, including image size, image tags, and creation date.",
                        "resource-types": "repository*"
                    },
                    "GetAuthorizationToken": {
                        "access-level": "read",
                        "actions": "GetAuthorizationToken",
                        "description": "Retrieves a token that is valid for a specified registry for 12 hours."
                    },
                    "GetDownloadUrlForLayer": {
                        "access-level": "read",
                        "actions": "GetDownloadUrlForLayer",
                        "description": "Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer.",
                        "resource-types": "repository*"
                    },
                    "GetLifecyclePolicy": {
                        "access-level": "read",
                        "actions": "GetLifecyclePolicy",
                        "description": "Retrieves the specified lifecycle policy.",
                        "resource-types": "repository*"
                    },
                    "GetLifecyclePolicyPreview": {
                        "access-level": "read",
                        "actions": "GetLifecyclePolicyPreview",
                        "description": "Retrieves the results of the specified lifecycle policy preview request.",
                        "resource-types": "repository*"
                    },
                    "GetRepositoryPolicy": {
                        "access-level": "read",
                        "actions": "GetRepositoryPolicy",
                        "description": "Retrieves the repository policy for a specified repository.",
                        "resource-types": "repository*"
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "List the tags for an Amazon ECR resource.",
                        "resource-types": "repository*"
                    }
                },
                "write": {
                    "BatchDeleteImage": {
                        "access-level": "write",
                        "actions": "BatchDeleteImage",
                        "description": "Deletes a list of specified images within a specified repository.",
                        "resource-types": "repository*"
                    },
                    "CompleteLayerUpload": {
                        "access-level": "write",
                        "actions": "CompleteLayerUpload",
                        "description": "Inform Amazon ECR that the image layer upload for a specified registry, repository name, and upload ID, has completed.",
                        "resource-types": "repository*"
                    },
                    "CreateRepository": {
                        "access-level": "write",
                        "actions": "CreateRepository",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Creates an image repository."
                    },
                    "DeleteLifecyclePolicy": {
                        "access-level": "write",
                        "actions": "DeleteLifecyclePolicy",
                        "description": "Deletes the specified lifecycle policy.",
                        "resource-types": "repository*"
                    },
                    "DeleteRepository": {
                        "access-level": "write",
                        "actions": "DeleteRepository",
                        "description": "Deletes an existing image repository.",
                        "resource-types": "repository*"
                    },
                    "DeleteRepositoryPolicy": {
                        "access-level": "write",
                        "actions": "DeleteRepositoryPolicy",
                        "description": "Deletes the repository policy from a specified repository.",
                        "resource-types": "repository*"
                    },
                    "InitiateLayerUpload": {
                        "access-level": "write",
                        "actions": "InitiateLayerUpload",
                        "description": "Notify Amazon ECR that you intend to upload an image layer.",
                        "resource-types": "repository*"
                    },
                    "PutImage": {
                        "access-level": "write",
                        "actions": "PutImage",
                        "description": "Creates or updates the image manifest associated with an image.",
                        "resource-types": "repository*"
                    },
                    "PutLifecyclePolicy": {
                        "access-level": "write",
                        "actions": "PutLifecyclePolicy",
                        "description": "Creates or updates a lifecycle policy.",
                        "resource-types": "repository*"
                    },
                    "SetRepositoryPolicy": {
                        "access-level": "write",
                        "actions": "SetRepositoryPolicy",
                        "description": "Applies a repository policy on a specified repository to control access permissions.",
                        "resource-types": "repository*"
                    },
                    "StartLifecyclePolicyPreview": {
                        "access-level": "write",
                        "actions": "StartLifecyclePolicyPreview",
                        "description": "Starts a preview of the specified lifecycle policy. This allows you to see the results before creating the lifecycle policy.",
                        "resource-types": "repository*"
                    },
                    "TagResource": {
                        "access-level": "write",
                        "actions": "TagResource",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Adds specified tags to a resource with the specified ARN. Existing tags on a resource are not changed if they are not specified in the request parameters.",
                        "resource-types": "repository*"
                    },
                    "UntagResource": {
                        "access-level": "write",
                        "actions": "UntagResource",
                        "description": "Deletes specified tags from a resource.",
                        "resource-types": "repository*"
                    },
                    "UploadLayerPart": {
                        "access-level": "write",
                        "actions": "UploadLayerPart",
                        "description": "Uploads an image layer part to Amazon ECR.",
                        "resource-types": "repository*"
                    }
                }
            }
        },
        "elasticcontainerservice": {
            "actions": {
                "list": {
                    "ListAttributes": {
                        "access-level": "list",
                        "actions": "ListAttributes",
                        "description": "Lists the attributes for Amazon ECS resources within a specified target type and cluster.",
                        "resource-types": "cluster*"
                    },
                    "ListClusters": {
                        "access-level": "list",
                        "actions": "ListClusters",
                        "description": "Returns a list of existing clusters."
                    },
                    "ListContainerInstances": {
                        "access-level": "list",
                        "actions": "ListContainerInstances",
                        "description": "Returns a list of container instances in a specified cluster.",
                        "resource-types": "cluster*"
                    },
                    "ListServices": {
                        "access-level": "list",
                        "actions": "ListServices",
                        "description": "Lists the services that are running in a specified cluster."
                    },
                    "ListTagsForResource": {
                        "access-level": "list",
                        "actions": "ListTagsForResource",
                        "description": "List tags for the specified resource.",
                        "resource-types": "cluster"
                    },
                    "ListTaskDefinitionFamilies": {
                        "access-level": "list",
                        "actions": "ListTaskDefinitionFamilies",
                        "description": "Returns a list of task definition families that are registered to your account (which may include task definition families that no longer have any ACTIVE task definitions)."
                    },
                    "ListTaskDefinitions": {
                        "access-level": "list",
                        "actions": "ListTaskDefinitions",
                        "description": "Returns a list of task definitions that are registered to your account."
                    },
                    "ListTasks": {
                        "access-level": "list",
                        "actions": "ListTasks",
                        "condition-keys": [
                            "ecs:cluster"
                        ],
                        "description": "Returns a list of tasks for a specified cluster.",
                        "resource-types": "container-instance*"
                    },
                    "container-instance": {
                        "access-level": "list",
                        "actions": "container-instance"
                    },
                    "task": {
                        "access-level": "list",
                        "actions": "task"
                    }
                },
                "read": {
                    "DescribeClusters": {
                        "access-level": "read",
                        "actions": "DescribeClusters",
                        "description": "Describes one or more of your clusters.",
                        "resource-types": "cluster*"
                    },
                    "DescribeContainerInstances": {
                        "access-level": "read",
                        "actions": "DescribeContainerInstances",
                        "condition-keys": [
                            "ecs:cluster"
                        ],
                        "description": "Describes Amazon Elastic Container Service container instances.",
                        "resource-types": "container-instance*"
                    },
                    "DescribeServices": {
                        "access-level": "read",
                        "actions": "DescribeServices",
                        "description": "Describes the specified services running in your cluster."
                    },
                    "DescribeTaskDefinition": {
                        "access-level": "read",
                        "actions": "DescribeTaskDefinition",
                        "description": "Describes a task definition. You can specify a family and revision to find information about a specific task definition, or you can simply specify the family to find the latest ACTIVE revision in that family."
                    },
                    "DescribeTasks": {
                        "access-level": "read",
                        "actions": "DescribeTasks",
                        "condition-keys": [
                            "ecs:cluster"
                        ],
                        "description": "Describes a specified task or tasks.",
                        "resource-types": "task*"
                    }
                },
                "write": {
                    "CreateCluster": {
                        "access-level": "write",
                        "actions": "CreateCluster",
                        "description": "Creates a new Amazon ECS cluster."
                    },
                    "CreateService": {
                        "access-level": "write",
                        "actions": "CreateService",
                        "description": "Runs and maintains a desired number of tasks from a specified task definition."
                    },
                    "DeleteAttributes": {
                        "access-level": "write",
                        "actions": "DeleteAttributes",
                        "condition-keys": [
                            "ecs:cluster"
                        ],
                        "description": "Deletes one or more custom attributes from an Amazon ECS resource.",
                        "resource-types": "container-instance*"
                    },
                    "DeleteCluster": {
                        "access-level": "write",
                        "actions": "DeleteCluster",
                        "description": "Deletes the specified cluster.",
                        "resource-types": "cluster*"
                    },
                    "DeleteService": {
                        "access-level": "write",
                        "actions": "DeleteService",
                        "description": "Deletes a specified service within a cluster."
                    },
                    "DeregisterContainerInstance": {
                        "access-level": "write",
                        "actions": "DeregisterContainerInstance",
                        "description": "Deregisters an Amazon ECS container instance from the specified cluster.",
                        "resource-types": "cluster*"
                    },
                    "DeregisterTaskDefinition": {
                        "access-level": "write",
                        "actions": "DeregisterTaskDefinition",
                        "description": "Deregisters the specified task definition by family and revision."
                    },
                    "DiscoverPollEndpoint": {
                        "access-level": "write",
                        "actions": "DiscoverPollEndpoint",
                        "description": "Returns an endpoint for the Amazon ECS agent to poll for updates."
                    },
                    "Poll [permission only]": {
                        "access-level": "write",
                        "actions": "Poll [permission only]",
                        "condition-keys": [
                            "ecs:cluster"
                        ],
                        "description": "Grants permission to an agent to connect with the Amazon ECS service to report status and get commands.",
                        "resource-types": "container-instance*"
                    },
                    "PutAttributes": {
                        "access-level": "write",
                        "actions": "PutAttributes",
                        "condition-keys": [
                            "ecs:cluster"
                        ],
                        "description": "Create or update an attribute on an Amazon ECS resource.",
                        "resource-types": "container-instance*"
                    },
                    "RegisterContainerInstance": {
                        "access-level": "write",
                        "actions": "RegisterContainerInstance",
                        "description": "Registers an EC2 instance into the specified cluster.",
                        "resource-types": "cluster*"
                    },
                    "RegisterTaskDefinition": {
                        "access-level": "write",
                        "actions": "RegisterTaskDefinition",
                        "description": "Registers a new task definition from the supplied family and containerDefinitions."
                    },
                    "RunTask": {
                        "access-level": "write",
                        "actions": "RunTask",
                        "condition-keys": [
                            "ecs:cluster"
                        ],
                        "description": "Start a task using random placement and the default Amazon ECS scheduler.",
                        "resource-types": "task-definition*"
                    },
                    "StartTask": {
                        "access-level": "write",
                        "actions": "StartTask",
                        "condition-keys": [
                            "ecs:cluster",
                            "ecs:container-instances"
                        ],
                        "description": "Starts a new task from the specified task definition on the specified container instance or instances.",
                        "resource-types": "task-definition*"
                    },
                    "StopTask": {
                        "access-level": "write",
                        "actions": "StopTask",
                        "condition-keys": [
                            "ecs:cluster"
                        ],
                        "description": "Stops a running task.",
                        "resource-types": "task*"
                    },
                    "SubmitContainerStateChange": {
                        "access-level": "write",
                        "actions": "SubmitContainerStateChange",
                        "description": "Sent to acknowledge that a container changed states.",
                        "resource-types": "cluster*"
                    },
                    "SubmitTaskStateChange": {
                        "access-level": "write",
                        "actions": "SubmitTaskStateChange",
                        "description": "Sent to acknowledge that a task changed states.",
                        "resource-types": "cluster*"
                    },
                    "TagResource": {
                        "access-level": "write",
                        "actions": "TagResource",
                        "description": "Tags the specified resource.",
                        "resource-types": "cluster"
                    },
                    "UntagResource": {
                        "access-level": "write",
                        "actions": "UntagResource",
                        "description": "Untags the specified resource.",
                        "resource-types": "cluster"
                    },
                    "UpdateContainerAgent": {
                        "access-level": "write",
                        "actions": "UpdateContainerAgent",
                        "condition-keys": [
                            "ecs:cluster"
                        ],
                        "description": "Updates the Amazon ECS container agent on a specified container instance.",
                        "resource-types": "container-instance*"
                    },
                    "UpdateContainerInstancesState": {
                        "access-level": "write",
                        "actions": "UpdateContainerInstancesState",
                        "condition-keys": [
                            "ecs:cluster"
                        ],
                        "description": "Enables the user to modify the status of an Amazon ECS container instance.",
                        "resource-types": "container-instance*"
                    },
                    "UpdateService": {
                        "access-level": "write",
                        "actions": "UpdateService",
                        "description": "Modifies the desired count, deployment configuration, or task definition used in a service."
                    },
                    "container-instance": {
                        "access-level": "write",
                        "actions": "container-instance"
                    },
                    "task": {
                        "access-level": "write",
                        "actions": "task",
                        "condition-keys": [
                            "aws:TagKeys",
                            "aws:RequestTag/${TagKey}"
                        ]
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "cluster": {
                    "arn": "arn:${Partition}:ecs:${Region}:${Account}:cluster/${ClusterName}",
                    "resource-types": "cluster"
                },
                "container": {
                    "arn": "arn:${Partition}:ecs:${Region}:${Account}:container/${ContainerId}",
                    "resource-types": "container"
                },
                "container-instance": {
                    "arn": "arn:${Partition}:ecs:${Region}:${Account}:container-instance/${ContainerInstanceId}",
                    "resource-types": "container-instance"
                },
                "service": {
                    "arn": "arn:${Partition}:ecs:${Region}:${Account}:service/${ServiceName}",
                    "resource-types": "service"
                },
                "task": {
                    "arn": "arn:${Partition}:ecs:${Region}:${Account}:task/${TaskId}",
                    "resource-types": "task"
                },
                "task-definition": {
                    "arn": "arn:${Partition}:ecs:${Region}:${Account}:task-definition/${TaskDefinitionFamilyName}:${TaskDefinitionRevisionNumber}",
                    "resource-types": "task-definition"
                }
            }
        },
        "elasticcontainerserviceforkubernetes": {
            "actions": {
                "list": {
                    "ListClusters": {
                        "access-level": "list",
                        "actions": "ListClusters",
                        "description": "Lists the Amazon EKS clusters in your AWS account (in the specified or default region)."
                    },
                    "ListUpdates": {
                        "access-level": "list",
                        "actions": "ListUpdates",
                        "description": "Lists the updates for a given Amazon EKS cluster (in the specified or default region).",
                        "resource-types": "cluster*"
                    }
                },
                "read": {
                    "DescribeCluster": {
                        "access-level": "read",
                        "actions": "DescribeCluster",
                        "description": "Returns descriptive information about an Amazon EKS cluster.",
                        "resource-types": "cluster*"
                    },
                    "DescribeUpdate": {
                        "access-level": "read",
                        "actions": "DescribeUpdate",
                        "description": "Describes a given update for a given Amazon EKS cluster (in the specified or default region).",
                        "resource-types": "cluster*"
                    }
                },
                "write": {
                    "CreateCluster": {
                        "access-level": "write",
                        "actions": "CreateCluster",
                        "description": "Creates an Amazon EKS cluster."
                    },
                    "DeleteCluster": {
                        "access-level": "write",
                        "actions": "DeleteCluster",
                        "description": "Deletes an Amazon EKS cluster.",
                        "resource-types": "cluster*"
                    },
                    "UpdateClusterVersion": {
                        "access-level": "write",
                        "actions": "UpdateClusterVersion",
                        "description": "Update the Kubernetes version of an Amazon EKS cluster.",
                        "resource-types": "cluster*"
                    }
                }
            }
        },
        "elasticfilesystem": {
            "actions": {
                "list": {
                    "DescribeFileSystems": {
                        "access-level": "list",
                        "actions": "DescribeFileSystems",
                        "description": "Returns the description of a specific Amazon EFS file system if either the file system CreationToken or the FileSystemId is provided; otherwise, returns descriptions of all file systems owned by the caller\\'s AWS account in the AWS region of the endpoint that you\\'re calling.",
                        "resource-types": "file-system"
                    }
                },
                "read": {
                    "DescribeMountTargetSecurityGroups": {
                        "access-level": "read",
                        "actions": "DescribeMountTargetSecurityGroups",
                        "description": "Returns the security groups currently in effect for a mount target.",
                        "resource-types": "file-system*"
                    },
                    "DescribeMountTargets": {
                        "access-level": "read",
                        "actions": "DescribeMountTargets",
                        "description": "Returns the descriptions of all the current mount targets, or a specific mount target, for a file system.",
                        "resource-types": "file-system*"
                    },
                    "DescribeTags": {
                        "access-level": "read",
                        "actions": "DescribeTags",
                        "description": "Returns the tags associated with a file system.",
                        "resource-types": "file-system*"
                    }
                },
                "tagging": {
                    "CreateTags": {
                        "access-level": "tagging",
                        "actions": "CreateTags",
                        "description": "Creates or overwrites tags associated with a file system.",
                        "resource-types": "file-system*"
                    },
                    "DeleteTags": {
                        "access-level": "tagging",
                        "actions": "DeleteTags",
                        "description": "Deletes the specified tags from a file system.",
                        "resource-types": "file-system*"
                    }
                },
                "write": {
                    "CreateFileSystem": {
                        "access-level": "write",
                        "actions": "CreateFileSystem",
                        "description": "Creates a new, empty file system."
                    },
                    "CreateMountTarget": {
                        "access-level": "write",
                        "actions": "CreateMountTarget",
                        "description": "Creates a mount target for a file system.",
                        "resource-types": "file-system*"
                    },
                    "DeleteFileSystem": {
                        "access-level": "write",
                        "actions": "DeleteFileSystem",
                        "description": "Deletes a file system, permanently severing access to its contents.",
                        "resource-types": "file-system*"
                    },
                    "DeleteMountTarget": {
                        "access-level": "write",
                        "actions": "DeleteMountTarget",
                        "description": "Deletes the specified mount target.",
                        "resource-types": "file-system*"
                    },
                    "ModifyMountTargetSecurityGroups": {
                        "access-level": "write",
                        "actions": "ModifyMountTargetSecurityGroups",
                        "description": "Modifies the set of security groups in effect for a mount target.",
                        "resource-types": "file-system*"
                    },
                    "UpdateFileSystem": {
                        "access-level": "write",
                        "actions": "UpdateFileSystem",
                        "description": "Updates the throughput mode or the amount of provisioned throughput of an existing file system.",
                        "resource-types": "file-system*"
                    }
                }
            }
        },
        "elasticinference": {
            "actions": {}
        },
        "elasticloadbalancing": {
            "actions": {
                "list": {
                    "DescribeLoadBalancers": {
                        "access-level": "list",
                        "actions": "DescribeLoadBalancers",
                        "description": "Describes the specified the load balancers. If no load balancers are specified, the call describes all of your load balancers."
                    }
                },
                "read": {
                    "DescribeInstanceHealth": {
                        "access-level": "read",
                        "actions": "DescribeInstanceHealth",
                        "description": "Describes the state of the specified instances with respect to the specified load balancer."
                    },
                    "DescribeLoadBalancerAttributes": {
                        "access-level": "read",
                        "actions": "DescribeLoadBalancerAttributes",
                        "description": "Describes the attributes for the specified load balancer."
                    },
                    "DescribeLoadBalancerPolicies": {
                        "access-level": "read",
                        "actions": "DescribeLoadBalancerPolicies",
                        "description": "Describes the specified policies."
                    },
                    "DescribeLoadBalancerPolicyTypes": {
                        "access-level": "read",
                        "actions": "DescribeLoadBalancerPolicyTypes",
                        "description": "Describes the specified load balancer policy types."
                    },
                    "DescribeTags": {
                        "access-level": "read",
                        "actions": "DescribeTags",
                        "description": "Describes the tags associated with the specified load balancers."
                    }
                },
                "tagging": {
                    "AddTags": {
                        "access-level": "tagging",
                        "actions": "AddTags",
                        "description": "Adds the specified tags to the specified load balancer. Each load balancer can have a maximum of 10 tags.",
                        "resource-types": "loadbalancer*"
                    },
                    "RemoveTags": {
                        "access-level": "tagging",
                        "actions": "RemoveTags",
                        "description": "Removes one or more tags from the specified load balancer.",
                        "resource-types": "loadbalancer*"
                    }
                },
                "write": {
                    "ApplySecurityGroupsToLoadBalancer": {
                        "access-level": "write",
                        "actions": "ApplySecurityGroupsToLoadBalancer",
                        "description": "Associates one or more security groups with your load balancer in a virtual private cloud (VPC).",
                        "resource-types": "loadbalancer*"
                    },
                    "AttachLoadBalancerToSubnets": {
                        "access-level": "write",
                        "actions": "AttachLoadBalancerToSubnets",
                        "description": "Adds one or more subnets to the set of configured subnets for the specified load balancer.",
                        "resource-types": "loadbalancer*"
                    },
                    "ConfigureHealthCheck": {
                        "access-level": "write",
                        "actions": "ConfigureHealthCheck",
                        "description": "Specifies the health check settings to use when evaluating the health state of your back-end instances.",
                        "resource-types": "loadbalancer*"
                    },
                    "CreateAppCookieStickinessPolicy": {
                        "access-level": "write",
                        "actions": "CreateAppCookieStickinessPolicy",
                        "description": "Generates a stickiness policy with sticky session lifetimes that follow that of an application-generated cookie.",
                        "resource-types": "loadbalancer*"
                    },
                    "CreateLBCookieStickinessPolicy": {
                        "access-level": "write",
                        "actions": "CreateLBCookieStickinessPolicy",
                        "description": "Generates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent) or a specified expiration period.",
                        "resource-types": "loadbalancer*"
                    },
                    "CreateLoadBalancer": {
                        "access-level": "write",
                        "actions": "CreateLoadBalancer",
                        "description": "Creates a load balancer.",
                        "resource-types": "loadbalancer"
                    },
                    "CreateLoadBalancerListeners": {
                        "access-level": "write",
                        "actions": "CreateLoadBalancerListeners",
                        "description": "Creates one or more listeners for the specified load balancer.",
                        "resource-types": "loadbalancer*"
                    },
                    "CreateLoadBalancerPolicy": {
                        "access-level": "write",
                        "actions": "CreateLoadBalancerPolicy",
                        "description": "Creates a policy with the specified attributes for the specified load balancer.",
                        "resource-types": "loadbalancer*"
                    },
                    "DeleteLoadBalancer": {
                        "access-level": "write",
                        "actions": "DeleteLoadBalancer",
                        "description": "Deletes the specified load balancer.",
                        "resource-types": "loadbalancer*"
                    },
                    "DeleteLoadBalancerListeners": {
                        "access-level": "write",
                        "actions": "DeleteLoadBalancerListeners",
                        "description": "Deletes the specified listeners from the specified load balancer.",
                        "resource-types": "loadbalancer*"
                    },
                    "DeleteLoadBalancerPolicy": {
                        "access-level": "write",
                        "actions": "DeleteLoadBalancerPolicy",
                        "description": "Deletes the specified policy from the specified load balancer. This policy must not be enabled for any listeners.",
                        "resource-types": "loadbalancer*"
                    },
                    "DeregisterInstancesFromLoadBalancer": {
                        "access-level": "write",
                        "actions": "DeregisterInstancesFromLoadBalancer",
                        "description": "Deregisters the specified instances from the specified load balancer.",
                        "resource-types": "loadbalancer*"
                    },
                    "DetachLoadBalancerFromSubnets": {
                        "access-level": "write",
                        "actions": "DetachLoadBalancerFromSubnets",
                        "description": "Removes the specified subnets from the set of configured subnets for the load balancer.",
                        "resource-types": "loadbalancer*"
                    },
                    "DisableAvailabilityZonesForLoadBalancer": {
                        "access-level": "write",
                        "actions": "DisableAvailabilityZonesForLoadBalancer",
                        "description": "Removes the specified Availability Zones from the set of Availability Zones for the specified load balancer.",
                        "resource-types": "loadbalancer*"
                    },
                    "EnableAvailabilityZonesForLoadBalancer": {
                        "access-level": "write",
                        "actions": "EnableAvailabilityZonesForLoadBalancer",
                        "description": "Adds the specified Availability Zones to the set of Availability Zones for the specified load balancer.",
                        "resource-types": "loadbalancer*"
                    },
                    "ModifyLoadBalancerAttributes": {
                        "access-level": "write",
                        "actions": "ModifyLoadBalancerAttributes",
                        "description": "Modifies the attributes of the specified load balancer.",
                        "resource-types": "loadbalancer*"
                    },
                    "RegisterInstancesWithLoadBalancer": {
                        "access-level": "write",
                        "actions": "RegisterInstancesWithLoadBalancer",
                        "description": "Adds the specified instances to the specified load balancer.",
                        "resource-types": "loadbalancer*"
                    },
                    "SetLoadBalancerListenerSSLCertificate": {
                        "access-level": "write",
                        "actions": "SetLoadBalancerListenerSSLCertificate",
                        "description": "Sets the certificate that terminates the specified listener\\'s SSL connections.",
                        "resource-types": "loadbalancer*"
                    },
                    "SetLoadBalancerPoliciesForBackendServer": {
                        "access-level": "write",
                        "actions": "SetLoadBalancerPoliciesForBackendServer",
                        "description": "Replaces the set of policies associated with the specified port on which the back-end server is listening with a new set of policies.",
                        "resource-types": "loadbalancer*"
                    },
                    "SetLoadBalancerPoliciesOfListener": {
                        "access-level": "write",
                        "actions": "SetLoadBalancerPoliciesOfListener",
                        "description": "Replaces the current set of policies for the specified load balancer port with the specified set of policies.",
                        "resource-types": "loadbalancer*"
                    }
                }
            },
            "condition-keys": [
                "",
                "aws:RequestTag/tag-key",
                "aws:TagKeys",
                "elasticloadbalancing:ResourceTag/tag-key"
            ],
            "resource-types": {
                "listener": {
                    "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener/${LoadBalancerName}/${LoadBalancerId}/${ListenerId}",
                    "resource-types": "listener"
                },
                "loadbalancer": {
                    "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/${LoadBalancerName}",
                    "condition-keys": "aws:RequestTag/tag-key aws:TagKeys elasticloadbalancing:ResourceTag/tag-key",
                    "resource-types": "loadbalancer"
                }
            }
        },
        "elasticloadbalancingv2": {
            "actions": {
                "read": {
                    "DescribeAccountLimits": {
                        "access-level": "read",
                        "actions": "DescribeAccountLimits",
                        "description": "Describes the Elastic Load Balancing resource limits for the AWS account."
                    },
                    "DescribeListenerCertificates": {
                        "access-level": "read",
                        "actions": "DescribeListenerCertificates",
                        "description": "Describes the certificates for the specified secure listener."
                    },
                    "DescribeListeners": {
                        "access-level": "read",
                        "actions": "DescribeListeners",
                        "description": "Describes the specified listeners or the listeners for the specified Application Load Balancer."
                    },
                    "DescribeLoadBalancerAttributes": {
                        "access-level": "read",
                        "actions": "DescribeLoadBalancerAttributes",
                        "description": "Describes the attributes for the specified load balancer."
                    },
                    "DescribeLoadBalancers": {
                        "access-level": "read",
                        "actions": "DescribeLoadBalancers",
                        "description": "Describes the specified the load balancers. If no load balancers are specified, the call describes all of your load balancers."
                    },
                    "DescribeRules": {
                        "access-level": "read",
                        "actions": "DescribeRules",
                        "description": "Describes the specified rules or the rules for the specified listener."
                    },
                    "DescribeSSLPolicies": {
                        "access-level": "read",
                        "actions": "DescribeSSLPolicies",
                        "description": "Describes the specified policies or all policies used for SSL negotiation."
                    },
                    "DescribeTags": {
                        "access-level": "read",
                        "actions": "DescribeTags",
                        "description": "Describes the tags associated with the specified load balancers."
                    },
                    "DescribeTargetGroupAttributes": {
                        "access-level": "read",
                        "actions": "DescribeTargetGroupAttributes",
                        "description": "Describes the attributes for the specified target group."
                    },
                    "DescribeTargetGroups": {
                        "access-level": "read",
                        "actions": "DescribeTargetGroups",
                        "description": "Describes the specified target groups or all of your target groups."
                    },
                    "DescribeTargetHealth": {
                        "access-level": "read",
                        "actions": "DescribeTargetHealth",
                        "description": "Describes the health of the specified targets or all of your targets."
                    }
                },
                "tagging": {
                    "AddTags": {
                        "access-level": "tagging",
                        "actions": "AddTags",
                        "description": "Adds the specified tags to the specified load balancer. Each load balancer can have a maximum of 10 tags.",
                        "resource-types": "loadbalancer/app/"
                    },
                    "RemoveTags": {
                        "access-level": "tagging",
                        "actions": "RemoveTags",
                        "description": "Removes one or more tags from the specified load balancer.",
                        "resource-types": "loadbalancer/app/"
                    },
                    "loadbalancer/net/": {
                        "access-level": "tagging",
                        "actions": "loadbalancer/net/"
                    },
                    "targetgroup": {
                        "access-level": "tagging",
                        "actions": "targetgroup"
                    }
                },
                "write": {
                    "AddListenerCertificates": {
                        "access-level": "write",
                        "actions": "AddListenerCertificates",
                        "description": "Adds the specified certificates to the specified secure listener.",
                        "resource-types": "listener*"
                    },
                    "CreateListener": {
                        "access-level": "write",
                        "actions": "CreateListener",
                        "description": "Creates a listener for the specified Application Load Balancer.",
                        "resource-types": "loadbalancer/app/"
                    },
                    "CreateLoadBalancer": {
                        "access-level": "write",
                        "actions": "CreateLoadBalancer",
                        "description": "Creates a load balancer.",
                        "resource-types": "loadbalancer/app/"
                    },
                    "CreateRule": {
                        "access-level": "write",
                        "actions": "CreateRule",
                        "description": "Creates a rule for the specified listener.",
                        "resource-types": "listener*"
                    },
                    "CreateTargetGroup": {
                        "access-level": "write",
                        "actions": "CreateTargetGroup",
                        "description": "Creates a target group.",
                        "resource-types": "targetgroup*"
                    },
                    "DeleteListener": {
                        "access-level": "write",
                        "actions": "DeleteListener",
                        "description": "Deletes the specified listener.",
                        "resource-types": "listener*"
                    },
                    "DeleteLoadBalancer": {
                        "access-level": "write",
                        "actions": "DeleteLoadBalancer",
                        "description": "Deletes the specified load balancer.",
                        "resource-types": "loadbalancer/app/"
                    },
                    "DeleteRule": {
                        "access-level": "write",
                        "actions": "DeleteRule",
                        "description": "Deletes the specified rule.",
                        "resource-types": "listener-rule*"
                    },
                    "DeleteTargetGroup": {
                        "access-level": "write",
                        "actions": "DeleteTargetGroup",
                        "description": "Deletes the specified target group.",
                        "resource-types": "targetgroup*"
                    },
                    "DeregisterTargets": {
                        "access-level": "write",
                        "actions": "DeregisterTargets",
                        "description": "Deregisters the specified targets from the specified target group.",
                        "resource-types": "targetgroup*"
                    },
                    "ModifyListener": {
                        "access-level": "write",
                        "actions": "ModifyListener",
                        "description": "Modifies the specified properties of the specified listener.",
                        "resource-types": "listener*"
                    },
                    "ModifyLoadBalancerAttributes": {
                        "access-level": "write",
                        "actions": "ModifyLoadBalancerAttributes",
                        "description": "Modifies the attributes of the specified load balancer.",
                        "resource-types": "loadbalancer/app/"
                    },
                    "ModifyRule": {
                        "access-level": "write",
                        "actions": "ModifyRule",
                        "description": "Modifies the specified rule.",
                        "resource-types": "listener-rule*"
                    },
                    "ModifyTargetGroup": {
                        "access-level": "write",
                        "actions": "ModifyTargetGroup",
                        "description": "Modifies the health checks used when evaluating the health state of the targets in the specified target group.",
                        "resource-types": "targetgroup*"
                    },
                    "ModifyTargetGroupAttributes": {
                        "access-level": "write",
                        "actions": "ModifyTargetGroupAttributes",
                        "description": "Modifies the specified attributes of the specified target group.",
                        "resource-types": "targetgroup*"
                    },
                    "RegisterTargets": {
                        "access-level": "write",
                        "actions": "RegisterTargets",
                        "description": "Registers the specified targets with the specified target group.",
                        "resource-types": "targetgroup*"
                    },
                    "RemoveListenerCertificates": {
                        "access-level": "write",
                        "actions": "RemoveListenerCertificates",
                        "description": "Removes the specified certificates of the specified secure listener.",
                        "resource-types": "listener*"
                    },
                    "SetIpAddressType": {
                        "access-level": "write",
                        "actions": "SetIpAddressType",
                        "description": "Not found",
                        "resource-types": "loadbalancer/app/"
                    },
                    "SetRulePriorities": {
                        "access-level": "write",
                        "actions": "SetRulePriorities",
                        "description": "Sets the priorities of the specified rules.",
                        "resource-types": "listener-rule*"
                    },
                    "SetSecurityGroups": {
                        "access-level": "write",
                        "actions": "SetSecurityGroups",
                        "description": "Associates the specified security groups with the specified load balancer.",
                        "resource-types": "loadbalancer/app/"
                    },
                    "SetSubnets": {
                        "access-level": "write",
                        "actions": "SetSubnets",
                        "description": "Enables the Availability Zone for the specified subnets for the specified load balancer.",
                        "resource-types": "loadbalancer/app/"
                    },
                    "SetWebAcl [permission only]": {
                        "access-level": "write",
                        "actions": "SetWebAcl [permission only]",
                        "description": "Gives WebAcl permission to WAF"
                    },
                    "loadbalancer/net/": {
                        "access-level": "write",
                        "actions": "loadbalancer/net/"
                    }
                }
            },
            "condition-keys": [
                "",
                "aws:RequestTag/tag-key",
                "aws:TagKeys",
                "elasticloadbalancing:ResourceTag/tag-key"
            ],
            "resource-types": {
                "listener": {
                    "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener/${LoadBalancerName}/${LoadBalancerId}/${ListenerId}",
                    "resource-types": "listener"
                },
                "listener-rule": {
                    "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener-rule/app/${LoadBalancerName}/${LoadBalancerId}/${ListenerId}/${ListenerRuleId}",
                    "resource-types": "listener-rule"
                },
                "loadbalancer-app": {
                    "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/${LoadBalancerName}/${LoadBalancerId}",
                    "condition-keys": "aws:RequestTag/tag-key aws:TagKeys elasticloadbalancing:ResourceTag/tag-key",
                    "resource-types": "loadbalancer/app/"
                },
                "loadbalancer-net": {
                    "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/net/${LoadBalancerName}/${LoadBalancerId}",
                    "condition-keys": "aws:RequestTag/tag-key aws:TagKeys elasticloadbalancing:ResourceTag/tag-key",
                    "resource-types": "loadbalancer/net/"
                },
                "targetgroup": {
                    "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:targetgroup/${TargetGroupName}/${TargetGroupId}",
                    "condition-keys": "aws:RequestTag/tag-key aws:TagKeys elasticloadbalancing:ResourceTag/tag-key",
                    "resource-types": "targetgroup"
                }
            }
        },
        "elasticmapreduce": {
            "actions": {
                "list": {
                    "ListBootstrapActions": {
                        "access-level": "list",
                        "actions": "ListBootstrapActions",
                        "description": "Provides information about the bootstrap actions associated with a cluster"
                    },
                    "ListClusters": {
                        "access-level": "list",
                        "actions": "ListClusters",
                        "description": "Provides the status of all clusters visible to this AWS account"
                    },
                    "ListInstanceGroups": {
                        "access-level": "list",
                        "actions": "ListInstanceGroups",
                        "description": "Provides all available details about the instance groups in a cluster"
                    },
                    "ListInstances": {
                        "access-level": "list",
                        "actions": "ListInstances",
                        "description": "Provides information about the cluster instances that Amazon EMR provisions on behalf of a user when it creates the cluster"
                    },
                    "ListSecurityConfigurations": {
                        "access-level": "list",
                        "actions": "ListSecurityConfigurations",
                        "description": "Lists all the security configurations visible to this account, providing their creation dates and times, and their names"
                    },
                    "ListSteps": {
                        "access-level": "list",
                        "actions": "ListSteps",
                        "description": "Provides a list of steps for the cluster"
                    },
                    "ViewEventsFromAllClustersInConsole [permission only]": {
                        "access-level": "list",
                        "actions": "ViewEventsFromAllClustersInConsole [permission only]",
                        "description": "Use the console to view events from all clusters in a region"
                    }
                },
                "read": {
                    "DescribeCluster": {
                        "access-level": "read",
                        "actions": "DescribeCluster",
                        "description": "Provides cluster-level details including status, hardware and software configuration, VPC settings, and so on"
                    },
                    "DescribeSecurityConfiguration": {
                        "access-level": "read",
                        "actions": "DescribeSecurityConfiguration",
                        "description": "Provides the details of a security configuration by returning the configuration JSON"
                    },
                    "DescribeStep": {
                        "access-level": "read",
                        "actions": "DescribeStep",
                        "description": "Provides more detail about the cluster step"
                    }
                },
                "tagging": {
                    "AddTags": {
                        "access-level": "tagging",
                        "actions": "AddTags",
                        "description": "Adds tags to an Amazon EMR resource"
                    },
                    "RemoveTags": {
                        "access-level": "tagging",
                        "actions": "RemoveTags",
                        "description": "Removes tags from an Amazon EMR resource"
                    },
                    "RunJobFlow": {
                        "access-level": "tagging",
                        "actions": "RunJobFlow",
                        "description": "Creates and starts running a new job flow"
                    }
                },
                "write": {
                    "AddInstanceGroups": {
                        "access-level": "write",
                        "actions": "AddInstanceGroups",
                        "description": "Adds instance groups to a running cluster"
                    },
                    "AddJobFlowSteps": {
                        "access-level": "write",
                        "actions": "AddJobFlowSteps",
                        "description": "Adds new steps to a running job flow"
                    },
                    "CancelSteps": {
                        "access-level": "write",
                        "actions": "CancelSteps",
                        "description": "Cancels a pending step or steps in a running cluster"
                    },
                    "CreateSecurityConfiguration": {
                        "access-level": "write",
                        "actions": "CreateSecurityConfiguration",
                        "description": "Creates a security configuration which is stored in the service"
                    },
                    "DeleteSecurityConfiguration": {
                        "access-level": "write",
                        "actions": "DeleteSecurityConfiguration",
                        "description": "Deletes a security configuration"
                    },
                    "ModifyInstanceGroups": {
                        "access-level": "write",
                        "actions": "ModifyInstanceGroups",
                        "description": "Modifies the number of nodes and configuration settings of an instance group"
                    },
                    "PutAutoScalingPolicy": {
                        "access-level": "write",
                        "actions": "PutAutoScalingPolicy",
                        "description": "Modifies the number of nodes and configuration settings of an instance group"
                    },
                    "RemoveAutoScalingPolicy": {
                        "access-level": "write",
                        "actions": "RemoveAutoScalingPolicy",
                        "description": "Removes an automatic scaling policy from a specified instance group within an EMR cluster"
                    },
                    "SetTerminationProtection": {
                        "access-level": "write",
                        "actions": "SetTerminationProtection",
                        "description": "Locks a job flow so the Amazon EC2 instances in the cluster cannot be terminated by user intervention, an API call, or in the event of a job-flow error"
                    },
                    "SetVisibleToAllUsers": {
                        "access-level": "write",
                        "actions": "SetVisibleToAllUsers",
                        "description": "Sets whether all AWS Identity and Access Management (IAM) users under your account can access the specified job flows"
                    },
                    "TerminateJobFlows": {
                        "access-level": "write",
                        "actions": "TerminateJobFlows",
                        "description": "Shuts a list of job flows down"
                    }
                }
            }
        },
        "elasticsearchservice": {
            "actions": {
                "list": {
                    "DescribeElasticsearchDomains": {
                        "access-level": "list",
                        "actions": "DescribeElasticsearchDomains",
                        "description": "Grants permission to view a description of the domain configuration for up to five specified Amazon ES domains.",
                        "resource-types": "domain*"
                    },
                    "DescribeElasticsearchInstanceTypeLimits": {
                        "access-level": "list",
                        "actions": "DescribeElasticsearchInstanceTypeLimits",
                        "description": "Grants permission to view the instance count, storage, and master node limits for a given Elasticsearch version and instance type."
                    },
                    "DescribeReservedElasticsearchInstanceOfferings": {
                        "access-level": "list",
                        "actions": "DescribeReservedElasticsearchInstanceOfferings",
                        "description": "Grants permission to fetch reserved instance offerings for ES"
                    },
                    "DescribeReservedElasticsearchInstances": {
                        "access-level": "list",
                        "actions": "DescribeReservedElasticsearchInstances",
                        "description": "Grants permission to fetch ES reserved instances already purchased by customer"
                    },
                    "GetCompatibleElasticsearchVersions": {
                        "access-level": "list",
                        "actions": "GetCompatibleElasticsearchVersions",
                        "description": "Grants permission to fetch list of compatible elastic search versions to which Amazon ES domain can be upgraded",
                        "resource-types": "domain*"
                    },
                    "ListDomainNames": {
                        "access-level": "list",
                        "actions": "ListDomainNames",
                        "description": "Grants permission to display the names of all Amazon ES domains that the current user owns."
                    },
                    "ListElasticsearchInstanceTypes": {
                        "access-level": "list",
                        "actions": "ListElasticsearchInstanceTypes",
                        "description": "Grants permission to list all Elasticsearch instance types that are supported for a given Elasticsearch version."
                    },
                    "ListElasticsearchVersions": {
                        "access-level": "list",
                        "actions": "ListElasticsearchVersions",
                        "description": "Grants permission to list all supported Elasticsearch versions on Amazon ES."
                    }
                },
                "read": {
                    "DescribeElasticsearchDomain": {
                        "access-level": "read",
                        "actions": "DescribeElasticsearchDomain",
                        "description": "Grants permission to view a description of the domain configuration for the specified Amazon ES domain, including the domain ID, domain service endpoint, and domain ARN.",
                        "resource-types": "domain*"
                    },
                    "DescribeElasticsearchDomainConfig": {
                        "access-level": "read",
                        "actions": "DescribeElasticsearchDomainConfig",
                        "description": "Grants permission to view a description of the configuration options and status of an Amazon ES domain.",
                        "resource-types": "domain*"
                    },
                    "ESHttpGet": {
                        "access-level": "read",
                        "actions": "ESHttpGet",
                        "description": "Grants permission to send HTTP GET requests to the Elasticsearch APIs.",
                        "resource-types": "domain"
                    },
                    "ESHttpHead": {
                        "access-level": "read",
                        "actions": "ESHttpHead",
                        "description": "Grants permission to send HTTP HEAD requests to the Elasticsearch APIs.",
                        "resource-types": "domain"
                    },
                    "GetUpgradeHistory": {
                        "access-level": "read",
                        "actions": "GetUpgradeHistory",
                        "description": "Grants permission to fetch upgrade history for given ES domain",
                        "resource-types": "domain*"
                    },
                    "GetUpgradeStatus": {
                        "access-level": "read",
                        "actions": "GetUpgradeStatus",
                        "description": "Grants permission to fetch upgrade status for given ES domain",
                        "resource-types": "domain*"
                    },
                    "ListTags": {
                        "access-level": "read",
                        "actions": "ListTags",
                        "description": "Grants permission to display all of the tags for an Amazon ES domain.",
                        "resource-types": "domain*"
                    }
                },
                "tagging": {
                    "AddTags": {
                        "access-level": "tagging",
                        "actions": "AddTags",
                        "description": "Grants permission to attach resource tags to an Amazon ES domain.",
                        "resource-types": "domain*"
                    },
                    "RemoveTags": {
                        "access-level": "tagging",
                        "actions": "RemoveTags",
                        "description": "Grants permission to remove tags from Amazon ES domains.",
                        "resource-types": "domain*"
                    }
                },
                "write": {
                    "CreateElasticsearchDomain": {
                        "access-level": "write",
                        "actions": "CreateElasticsearchDomain",
                        "description": "Grants permission to create an Amazon ES domain.",
                        "resource-types": "domain"
                    },
                    "DeleteElasticsearchDomain": {
                        "access-level": "write",
                        "actions": "DeleteElasticsearchDomain",
                        "description": "Grants permission to delete an Amazon ES domain and all of its data.",
                        "resource-types": "domain*"
                    },
                    "DeleteElasticsearchServiceRole": {
                        "access-level": "write",
                        "actions": "DeleteElasticsearchServiceRole",
                        "description": "Grants permission to delete the service-linked role required for Amazon ES domains that use VPC access."
                    },
                    "ESHttpDelete": {
                        "access-level": "write",
                        "actions": "ESHttpDelete",
                        "description": "Grants permission to send HTTP DELETE requests to the Elasticsearch APIs.",
                        "resource-types": "domain"
                    },
                    "ESHttpPost": {
                        "access-level": "write",
                        "actions": "ESHttpPost",
                        "description": "Grants permission to send HTTP POST requests to the Elasticsearch APIs.",
                        "resource-types": "domain"
                    },
                    "ESHttpPut": {
                        "access-level": "write",
                        "actions": "ESHttpPut",
                        "description": "Grants permission to send HTTP PUT requests to the Elasticsearch APIs.",
                        "resource-types": "domain"
                    },
                    "PurchaseReservedElasticsearchInstance": {
                        "access-level": "write",
                        "actions": "PurchaseReservedElasticsearchInstance",
                        "description": "Grants permission to purchase ES reserved instances"
                    },
                    "UpdateElasticsearchDomainConfig": {
                        "access-level": "write",
                        "actions": "UpdateElasticsearchDomainConfig",
                        "description": "Grants permission to modify the configuration of an Amazon ES domain, such as the instance type or number of instances.",
                        "resource-types": "domain*"
                    },
                    "UpgradeElasticsearchDomain": {
                        "access-level": "write",
                        "actions": "UpgradeElasticsearchDomain",
                        "description": "Grants permission to initiate upgrade of elastic search domain to given version",
                        "resource-types": "domain*"
                    }
                }
            }
        },
        "elastictranscoder": {
            "actions": {
                "list": {
                    "ListJobsByPipeline": {
                        "access-level": "list",
                        "actions": "ListJobsByPipeline",
                        "description": "Get a list of the jobs that you assigned to a pipeline",
                        "resource-types": "pipeline*"
                    },
                    "ListJobsByStatus": {
                        "access-level": "list",
                        "actions": "ListJobsByStatus",
                        "description": "Get information about all of the jobs associated with the current AWS account that have a specified status"
                    },
                    "ListPipelines": {
                        "access-level": "list",
                        "actions": "ListPipelines",
                        "description": "Get a list of the pipelines associated with the current AWS account"
                    },
                    "ListPresets": {
                        "access-level": "list",
                        "actions": "ListPresets",
                        "description": "Get a list of all presets associated with the current AWS account."
                    }
                },
                "read": {
                    "ReadJob": {
                        "access-level": "read",
                        "actions": "ReadJob",
                        "description": "Get detailed information about a job",
                        "resource-types": "job*"
                    },
                    "ReadPipeline": {
                        "access-level": "read",
                        "actions": "ReadPipeline",
                        "description": "Get detailed information about a pipeline",
                        "resource-types": "pipeline*"
                    },
                    "ReadPreset": {
                        "access-level": "read",
                        "actions": "ReadPreset",
                        "description": "Get detailed information about a preset.",
                        "resource-types": "preset*"
                    }
                },
                "write": {
                    "CancelJob": {
                        "access-level": "write",
                        "actions": "CancelJob",
                        "description": "Cancel a job that Elastic Transcoder has not begun to process",
                        "resource-types": "job*"
                    },
                    "CreateJob": {
                        "access-level": "write",
                        "actions": "CreateJob",
                        "description": "Create a job.",
                        "resource-types": "pipeline*"
                    },
                    "CreatePipeline": {
                        "access-level": "write",
                        "actions": "CreatePipeline",
                        "description": "Create a pipeline",
                        "resource-types": "pipeline*"
                    },
                    "CreatePreset": {
                        "access-level": "write",
                        "actions": "CreatePreset",
                        "description": "Create a preset.",
                        "resource-types": "preset*"
                    },
                    "DeletePipeline": {
                        "access-level": "write",
                        "actions": "DeletePipeline",
                        "description": "Delete a pipeline",
                        "resource-types": "pipeline*"
                    },
                    "DeletePreset": {
                        "access-level": "write",
                        "actions": "DeletePreset",
                        "description": "Delete a preset",
                        "resource-types": "preset*"
                    },
                    "TestRole": {
                        "access-level": "write",
                        "actions": "TestRole",
                        "description": "Test the settings for a pipeline to ensure that Elastic Transcoder can create and process jobs"
                    },
                    "UpdatePipeline": {
                        "access-level": "write",
                        "actions": "UpdatePipeline",
                        "description": "Update settings for a pipeline",
                        "resource-types": "pipeline*"
                    },
                    "UpdatePipelineNotifications": {
                        "access-level": "write",
                        "actions": "UpdatePipelineNotifications",
                        "description": "Update only Amazon Simple Notification Service (Amazon SNS) notifications for a pipeline",
                        "resource-types": "pipeline*"
                    },
                    "UpdatePipelineStatus": {
                        "access-level": "write",
                        "actions": "UpdatePipelineStatus",
                        "description": "Pause or reactivate a pipeline, so the pipeline stops or restarts processing jobs, update the status for the pipeline.",
                        "resource-types": "pipeline*"
                    },
                    "preset*": {
                        "access-level": "write",
                        "actions": "preset*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "job": {
                    "arn": "arn:${Partition}:elastictranscoder:${Region}:${Account}:job/${JobId}",
                    "resource-types": "job"
                },
                "pipeline": {
                    "arn": "arn:${Partition}:elastictranscoder:${Region}:${Account}:pipeline/${PipelineId}",
                    "resource-types": "pipeline"
                },
                "preset": {
                    "arn": "arn:${Partition}:elastictranscoder:${Region}:${Account}:preset/${PresetId}",
                    "resource-types": "preset"
                }
            }
        },
        "elementalmediaconnect": {
            "actions": {
                "list": {
                    "ListEntitlements": {
                        "access-level": "list",
                        "actions": "ListEntitlements",
                        "description": "Grants permission to display a list of all entitlements that have been granted to the account."
                    },
                    "ListFlows": {
                        "access-level": "list",
                        "actions": "ListFlows",
                        "description": "Grants permission to display a list of flows that are associated with this account."
                    }
                },
                "read": {
                    "DescribeFlow": {
                        "access-level": "read",
                        "actions": "DescribeFlow",
                        "description": "Grants permission to display the details of a flow including the flow ARN, name, and Availability Zone, as well as details about the source, outputs, and entitlements."
                    }
                },
                "write": {
                    "AddFlowOutputs": {
                        "access-level": "write",
                        "actions": "AddFlowOutputs",
                        "description": "Grants permission to add outputs to any flow."
                    },
                    "CreateFlow": {
                        "access-level": "write",
                        "actions": "CreateFlow",
                        "description": "Grants permission to create flows."
                    },
                    "DeleteFlow": {
                        "access-level": "write",
                        "actions": "DeleteFlow",
                        "description": "Grants permission to delete flows."
                    },
                    "GrantFlowEntitlements": {
                        "access-level": "write",
                        "actions": "GrantFlowEntitlements",
                        "description": "Grants permission to grant entitlements on any flow."
                    },
                    "RemoveFlowOutput": {
                        "access-level": "write",
                        "actions": "RemoveFlowOutput",
                        "description": "Grants permission to remove outputs from any flow."
                    },
                    "RevokeFlowEntitlement": {
                        "access-level": "write",
                        "actions": "RevokeFlowEntitlement",
                        "description": "Grants permission to revoke entitlements on any flow."
                    },
                    "StartFlow": {
                        "access-level": "write",
                        "actions": "StartFlow",
                        "description": "Grants permission to start flows."
                    },
                    "StopFlow": {
                        "access-level": "write",
                        "actions": "StopFlow",
                        "description": "Grants permission to stop flows."
                    },
                    "UpdateFlowEntitlement": {
                        "access-level": "write",
                        "actions": "UpdateFlowEntitlement",
                        "description": "Grants permission to update entitlements on any flow."
                    },
                    "UpdateFlowOutput": {
                        "access-level": "write",
                        "actions": "UpdateFlowOutput",
                        "description": "Grants permission to update outputs on any flow."
                    },
                    "UpdateFlowSource": {
                        "access-level": "write",
                        "actions": "UpdateFlowSource",
                        "description": "Grants permission to update the source of any flow."
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "entitlement": {
                    "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:entitlement:${FlowId}:${EntitlementName}",
                    "resource-types": "Entitlement"
                },
                "flow": {
                    "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:flow:${FlowId}:${FlowName}",
                    "resource-types": "Flow"
                },
                "output": {
                    "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:output:${OutputId}:${OutputName}",
                    "resource-types": "Output"
                },
                "source": {
                    "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:source:${SourceId}:${SourceName}",
                    "resource-types": "Source"
                }
            }
        },
        "elementalmediaconvert": {
            "actions": {
                "list": {
                    "DescribeEndpoints": {
                        "access-level": "list",
                        "actions": "DescribeEndpoints",
                        "description": "Subscribe to mediaconvert service, returns one (or more) custom endpoints"
                    },
                    "ListJobTemplates": {
                        "access-level": "list",
                        "actions": "ListJobTemplates",
                        "description": "List mediaconvert job templates"
                    },
                    "ListJobs": {
                        "access-level": "list",
                        "actions": "ListJobs",
                        "description": "List mediaconvert jobs"
                    },
                    "ListPresets": {
                        "access-level": "list",
                        "actions": "ListPresets",
                        "description": "List mediaconvert output presets"
                    },
                    "ListQueues": {
                        "access-level": "list",
                        "actions": "ListQueues",
                        "description": "List mediaconvert job queues"
                    }
                },
                "read": {
                    "GetJob": {
                        "access-level": "read",
                        "actions": "GetJob",
                        "description": "Get a mediaconvert job"
                    },
                    "GetJobTemplate": {
                        "access-level": "read",
                        "actions": "GetJobTemplate",
                        "description": "Get a mediaconvert job template"
                    },
                    "GetPreset": {
                        "access-level": "read",
                        "actions": "GetPreset",
                        "description": "Get a mediaconvert output preset"
                    },
                    "GetQueue": {
                        "access-level": "read",
                        "actions": "GetQueue",
                        "description": "Get a mediaconvert job queue"
                    }
                },
                "write": {
                    "CancelJob": {
                        "access-level": "write",
                        "actions": "CancelJob",
                        "description": "Cancel a mediaconvert job that is waiting in queue"
                    },
                    "CreateJob": {
                        "access-level": "write",
                        "actions": "CreateJob",
                        "description": "Create and submit a mediaconvert job"
                    },
                    "CreateJobTemplate": {
                        "access-level": "write",
                        "actions": "CreateJobTemplate",
                        "description": "Create a mediaconvert custom job template"
                    },
                    "CreatePreset": {
                        "access-level": "write",
                        "actions": "CreatePreset",
                        "description": "Create a mediaconvert custom output preset"
                    },
                    "CreateQueue": {
                        "access-level": "write",
                        "actions": "CreateQueue",
                        "description": "Create a mediaconvert job queue"
                    },
                    "DeleteJobTemplate": {
                        "access-level": "write",
                        "actions": "DeleteJobTemplate",
                        "description": "Delete a mediaconvert custom job template"
                    },
                    "DeletePreset": {
                        "access-level": "write",
                        "actions": "DeletePreset",
                        "description": "Delete a mediaconvert custom output preset"
                    },
                    "DeleteQueue": {
                        "access-level": "write",
                        "actions": "DeleteQueue",
                        "description": "Delete a mediaconvert job queue"
                    },
                    "UpdateJobTemplate": {
                        "access-level": "write",
                        "actions": "UpdateJobTemplate",
                        "description": "Update a mediaconvert custom job template"
                    },
                    "UpdatePreset": {
                        "access-level": "write",
                        "actions": "UpdatePreset",
                        "description": "Update a mediaconvert custom output preset"
                    },
                    "UpdateQueue": {
                        "access-level": "write",
                        "actions": "UpdateQueue",
                        "description": "Update a mediaconvert job queue"
                    }
                }
            }
        },
        "elementalmedialive": {
            "actions": {
                "list": {
                    "ListChannels": {
                        "access-level": "list",
                        "actions": "ListChannels",
                        "description": "Grants permission to list channels"
                    },
                    "ListInputSecurityGroups": {
                        "access-level": "list",
                        "actions": "ListInputSecurityGroups",
                        "description": "Grants permission to list input security groups"
                    },
                    "ListInputs": {
                        "access-level": "list",
                        "actions": "ListInputs",
                        "description": "Grants permission to list inputs"
                    },
                    "ListOfferings": {
                        "access-level": "list",
                        "actions": "ListOfferings",
                        "description": "Grants permission to list reservation offerings"
                    },
                    "ListReservations": {
                        "access-level": "list",
                        "actions": "ListReservations",
                        "description": "Grants permission to list reservations"
                    }
                },
                "read": {
                    "DescribeChannel": {
                        "access-level": "read",
                        "actions": "DescribeChannel",
                        "description": "Grants permission to get details about a channel"
                    },
                    "DescribeInput": {
                        "access-level": "read",
                        "actions": "DescribeInput",
                        "description": "Grants permission to describe an input"
                    },
                    "DescribeInputSecurityGroup": {
                        "access-level": "read",
                        "actions": "DescribeInputSecurityGroup",
                        "description": "Grants permission to describe an input security group"
                    },
                    "DescribeOffering": {
                        "access-level": "read",
                        "actions": "DescribeOffering",
                        "description": "Grants permission to get details about a reservation offering"
                    },
                    "DescribeReservation": {
                        "access-level": "read",
                        "actions": "DescribeReservation",
                        "description": "Grants permission to get details about a reservation"
                    },
                    "DescribeSchedule": {
                        "access-level": "read",
                        "actions": "DescribeSchedule",
                        "description": "Grants permission to view a list of actions scheduled on a channel."
                    }
                },
                "write": {
                    "BatchUpdateSchedule": {
                        "access-level": "write",
                        "actions": "BatchUpdateSchedule",
                        "description": "Grants permission to add and remove actions from a channel\\'s schedule."
                    },
                    "CreateChannel": {
                        "access-level": "write",
                        "actions": "CreateChannel",
                        "description": "Grants permission to create a channel"
                    },
                    "CreateInput": {
                        "access-level": "write",
                        "actions": "CreateInput",
                        "description": "Grants permission to create an input"
                    },
                    "CreateInputSecurityGroup": {
                        "access-level": "write",
                        "actions": "CreateInputSecurityGroup",
                        "description": "Grants permission to create an input security group"
                    },
                    "DeleteChannel": {
                        "access-level": "write",
                        "actions": "DeleteChannel",
                        "description": "Grants permission to delete a channel"
                    },
                    "DeleteInput": {
                        "access-level": "write",
                        "actions": "DeleteInput",
                        "description": "Grants permission to delete an input"
                    },
                    "DeleteInputSecurityGroup": {
                        "access-level": "write",
                        "actions": "DeleteInputSecurityGroup",
                        "description": "Grants permission to delete an input security group"
                    },
                    "DeleteReservation": {
                        "access-level": "write",
                        "actions": "DeleteReservation",
                        "description": "Grants permission to delete an expired reservation"
                    },
                    "PurchaseOffering": {
                        "access-level": "write",
                        "actions": "PurchaseOffering",
                        "description": "Grants permission to purchase a reservation offering"
                    },
                    "StartChannel": {
                        "access-level": "write",
                        "actions": "StartChannel",
                        "description": "Grants permission to start a channel"
                    },
                    "StopChannel": {
                        "access-level": "write",
                        "actions": "StopChannel",
                        "description": "Grants permission to stop a channel"
                    },
                    "UpdateChannel": {
                        "access-level": "write",
                        "actions": "UpdateChannel",
                        "description": "Grants permission to update a channel"
                    },
                    "UpdateInput": {
                        "access-level": "write",
                        "actions": "UpdateInput",
                        "description": "Grants permission to update an input"
                    },
                    "UpdateInputSecurityGroup": {
                        "access-level": "write",
                        "actions": "UpdateInputSecurityGroup",
                        "description": "Grants permission to update an input security group"
                    }
                }
            }
        },
        "elementalmediapackage": {
            "actions": {
                "read": {
                    "DescribeChannel": {
                        "access-level": "read",
                        "actions": "DescribeChannel",
                        "description": "Grants permission to view the details of a channel in AWS Elemental MediaPackage."
                    },
                    "DescribeOriginEndpoint": {
                        "access-level": "read",
                        "actions": "DescribeOriginEndpoint",
                        "description": "Grants permission to view the details of an endpoint in AWS Elemental MediaPackage."
                    },
                    "ListChannels": {
                        "access-level": "read",
                        "actions": "ListChannels",
                        "description": "Grants permission to view a list of channels in AWS Elemental MediaPackage."
                    },
                    "ListOriginEndpoints": {
                        "access-level": "read",
                        "actions": "ListOriginEndpoints",
                        "description": "Grants permission to view a list of endpoints in AWS Elemental MediaPackage."
                    }
                },
                "write": {
                    "CreateChannel": {
                        "access-level": "write",
                        "actions": "CreateChannel",
                        "description": "Grants permission to create a channel in AWS Elemental MediaPackage."
                    },
                    "CreateOriginEndpoint": {
                        "access-level": "write",
                        "actions": "CreateOriginEndpoint",
                        "description": "Grants permission to create an endpoint in AWS Elemental MediaPackage."
                    },
                    "DeleteChannel": {
                        "access-level": "write",
                        "actions": "DeleteChannel",
                        "description": "Grants permission to delete a channel in AWS Elemental MediaPackage."
                    },
                    "DeleteOriginEndpoint": {
                        "access-level": "write",
                        "actions": "DeleteOriginEndpoint",
                        "description": "Grants permission to delete an endpoint in AWS Elemental MediaPackage."
                    },
                    "UpdateChannel": {
                        "access-level": "write",
                        "actions": "UpdateChannel",
                        "description": "Grants permission to make changes to a channel in AWS Elemental MediaPackage."
                    },
                    "UpdateOriginEndpoint": {
                        "access-level": "write",
                        "actions": "UpdateOriginEndpoint",
                        "description": "Grants permission to make changes to an endpoint in AWS Elemental MediaPackage."
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "channels": {
                    "arn": "arn:${Partition}:mediapackage:${Region}:${Account}:channels/${ChannelIdentifier}",
                    "resource-types": "channels"
                },
                "origin_endpoints": {
                    "arn": "arn:${Partition}:mediapackage:${Region}:${Account}:origin_endpoints/${OriginEndpointIdentifier}",
                    "resource-types": "origin_endpoints"
                }
            }
        },
        "elementalmediastore": {
            "actions": {
                "list": {
                    "DescribeContainer": {
                        "access-level": "list",
                        "actions": "DescribeContainer",
                        "description": "Retrieves details of a specific container"
                    },
                    "ListContainers": {
                        "access-level": "list",
                        "actions": "ListContainers",
                        "description": "Retrieves a list of storage containers."
                    },
                    "ListItems": {
                        "access-level": "list",
                        "actions": "ListItems",
                        "description": "Retrieves a list of items like objects or folders."
                    }
                },
                "permissions-management": {
                    "DeleteContainerPolicy": {
                        "access-level": "permissions-management",
                        "actions": "DeleteContainerPolicy",
                        "description": "Deletes a container storage policy."
                    },
                    "PutContainerPolicy": {
                        "access-level": "permissions-management",
                        "actions": "PutContainerPolicy",
                        "description": "Adds or modifies a container resource policy."
                    }
                },
                "read": {
                    "DescribeObject": {
                        "access-level": "read",
                        "actions": "DescribeObject",
                        "description": "Retrieves an objects metadata."
                    },
                    "GetContainerPolicy": {
                        "access-level": "read",
                        "actions": "GetContainerPolicy",
                        "description": "Retrieves a container resource policy."
                    },
                    "GetObject": {
                        "access-level": "read",
                        "actions": "GetObject",
                        "description": "Retrieves an object."
                    }
                },
                "write": {
                    "CreateContainer": {
                        "access-level": "write",
                        "actions": "CreateContainer",
                        "description": "Creates a storage container"
                    },
                    "DeleteContainer": {
                        "access-level": "write",
                        "actions": "DeleteContainer",
                        "description": "Deletes a storage container"
                    },
                    "DeleteObject": {
                        "access-level": "write",
                        "actions": "DeleteObject",
                        "description": "Deletes an object."
                    },
                    "PutObject": {
                        "access-level": "write",
                        "actions": "PutObject",
                        "description": "Uploads an object."
                    }
                }
            }
        },
        "firewallmanager": {
            "actions": {
                "list": {
                    "ListComplianceStatus": {
                        "access-level": "list",
                        "actions": "ListComplianceStatus",
                        "description": "Returns an array of PolicyComplianceStatus objects in the response. Use PolicyComplianceStatus to get a summary of which member accounts are protected by the specified policy.",
                        "resource-types": "policy*"
                    },
                    "ListMemberAccounts": {
                        "access-level": "list",
                        "actions": "ListMemberAccounts",
                        "description": "Returns an array of member account ids if the caller is FMS admin account."
                    },
                    "ListPolicies": {
                        "access-level": "list",
                        "actions": "ListPolicies",
                        "description": "Returns an array of PolicySummary objects in the response."
                    }
                },
                "read": {
                    "GetAdminAccount": {
                        "access-level": "read",
                        "actions": "GetAdminAccount",
                        "description": "Returns the AWS Organizations master account that is associated with AWS Firewall Manager as the AWS Firewall Manager administrator."
                    },
                    "GetNotificationChannel": {
                        "access-level": "read",
                        "actions": "GetNotificationChannel",
                        "description": "Returns information about the Amazon Simple Notification Service (SNS) topic that is used to record AWS Firewall Manager SNS logs."
                    },
                    "GetPolicy": {
                        "access-level": "read",
                        "actions": "GetPolicy",
                        "description": "Returns information about the specified AWS Firewall Manager policy.",
                        "resource-types": "policy*"
                    }
                },
                "write": {
                    "AssociateAdminAccount": {
                        "access-level": "write",
                        "actions": "AssociateAdminAccount",
                        "description": "Sets the AWS Firewall Manager administrator account and enables the service in all organization accounts"
                    },
                    "DeleteNotificationChannel": {
                        "access-level": "write",
                        "actions": "DeleteNotificationChannel",
                        "description": "Deletes an AWS Firewall Manager association with the IAM role and the Amazon Simple Notification Service (SNS) topic that is used to notify the FM administrator about major FM events and errors across the organization."
                    },
                    "DeletePolicy": {
                        "access-level": "write",
                        "actions": "DeletePolicy",
                        "description": "Permanently deletes an AWS Firewall Manager policy.",
                        "resource-types": "policy*"
                    },
                    "DisassociateAdminAccount": {
                        "access-level": "write",
                        "actions": "DisassociateAdminAccount",
                        "description": "Disassociates the account that has been set as the AWS Firewall Manager administrator account and and disables the service in all organization accounts"
                    },
                    "GetComplianceDetail": {
                        "access-level": "write",
                        "actions": "GetComplianceDetail",
                        "description": "Returns detailed compliance information about the specified member account. Details include resources that are in and out of compliance with the specified policy.",
                        "resource-types": "policy*"
                    },
                    "PutNotificationChannel": {
                        "access-level": "write",
                        "actions": "PutNotificationChannel",
                        "description": "Designates the IAM role and Amazon Simple Notification Service (SNS) topic that AWS Firewall Manager (FM) could use to notify the FM administrator about major FM events and errors across the organization."
                    },
                    "PutPolicy": {
                        "access-level": "write",
                        "actions": "PutPolicy",
                        "description": "Creates an AWS Firewall Manager policy.",
                        "resource-types": "policy*"
                    }
                }
            }
        },
        "freertos": {
            "actions": {
                "list": {
                    "ListFreeRTOSVersions": {
                        "access-level": "list",
                        "actions": "ListFreeRTOSVersions",
                        "description": "Lists versions of AmazonFreeRTOS."
                    },
                    "ListHardwarePlatforms": {
                        "access-level": "list",
                        "actions": "ListHardwarePlatforms",
                        "description": "Lists the hardware platforms."
                    },
                    "ListHardwareVendors": {
                        "access-level": "list",
                        "actions": "ListHardwareVendors",
                        "description": "Lists the hardware vendors."
                    },
                    "ListSoftwareConfigurations": {
                        "access-level": "list",
                        "actions": "ListSoftwareConfigurations",
                        "description": "Lists the software configurations."
                    }
                },
                "read": {
                    "DescribeHardwarePlatform": {
                        "access-level": "read",
                        "actions": "DescribeHardwarePlatform",
                        "description": "Describes the hardware platform."
                    },
                    "DescribeSoftwareConfiguration": {
                        "access-level": "read",
                        "actions": "DescribeSoftwareConfiguration",
                        "description": "Describes the software configuration."
                    },
                    "GetSoftwareURL": {
                        "access-level": "read",
                        "actions": "GetSoftwareURL",
                        "description": "Get the URL for Amazon FreeRTOS software download."
                    },
                    "GetSoftwareURLForConfiguration": {
                        "access-level": "read",
                        "actions": "GetSoftwareURLForConfiguration",
                        "description": "Get the URL for Amazon FreeRTOS software download based on the configuration."
                    }
                },
                "write": {
                    "CreateSoftwareConfiguration": {
                        "access-level": "write",
                        "actions": "CreateSoftwareConfiguration",
                        "description": "Creates a software configuration."
                    },
                    "DeleteSoftwareConfiguration": {
                        "access-level": "write",
                        "actions": "DeleteSoftwareConfiguration",
                        "description": "Deletes the software configuration."
                    },
                    "UpdateSoftwareConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateSoftwareConfiguration",
                        "description": "Updates the software configuration."
                    }
                }
            }
        },
        "fsx": {
            "actions": {
                "read": {
                    "DescribeBackups": {
                        "access-level": "read",
                        "actions": "DescribeBackups",
                        "description": "This action returns the description of specific Amazon FSx backups, if one or more BackupIds are provided for that backup. Otherwise, it returns all backups owned by your AWS account in the AWS Region of the endpoint that you\\'re calling."
                    },
                    "DescribeFileSystems": {
                        "access-level": "read",
                        "actions": "DescribeFileSystems",
                        "description": "This action returns the description of specific Amazon FSx file systems, if a FileSystemIds value is provided for that file system. Otherwise, it returns descriptions of all file systems owned by your AWS account in the AWS Region of the endpoint that you\\'re calling."
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "This action lists tags for an Amazon FSx resource.",
                        "resource-types": "backup"
                    },
                    "file-system": {
                        "access-level": "read",
                        "actions": "file-system"
                    }
                },
                "tagging": {
                    "CreateBackup": {
                        "access-level": "tagging",
                        "actions": "CreateBackup",
                        "description": "This action creates a new backup.",
                        "resource-types": "backup*"
                    },
                    "CreateFileSystem": {
                        "access-level": "tagging",
                        "actions": "CreateFileSystem",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "This action creates a new, empty, Amazon FSx file system",
                        "resource-types": "file-system*"
                    },
                    "CreateFileSystemFromBackup": {
                        "access-level": "tagging",
                        "actions": "CreateFileSystemFromBackup",
                        "description": "This action creates a new Amazon FSx file system from an existing backup.",
                        "resource-types": "backup*"
                    },
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "description": "This action tags an Amazon FSx resource.",
                        "resource-types": "backup"
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "This action removes a tag from an Amazon FSx resource.",
                        "resource-types": "backup"
                    },
                    "file-system": {
                        "access-level": "tagging",
                        "actions": "file-system",
                        "condition-keys": [
                            "aws:TagKeys",
                            "aws:RequestTag/${TagKey}"
                        ]
                    },
                    "file-system*": {
                        "access-level": "tagging",
                        "actions": "file-system*",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ]
                    }
                },
                "write": {
                    "DeleteBackup": {
                        "access-level": "write",
                        "actions": "DeleteBackup",
                        "description": "This action deletes a backup, deleting its contents. After deletion, the backup no longer exists, and its data is gone.",
                        "resource-types": "backup*"
                    },
                    "DeleteFileSystem": {
                        "access-level": "write",
                        "actions": "DeleteFileSystem",
                        "description": "This action deletes a file system, deleting its contents.",
                        "resource-types": "file-system*"
                    },
                    "UpdateFileSystem": {
                        "access-level": "write",
                        "actions": "UpdateFileSystem",
                        "description": "This action updates file system configuration.",
                        "resource-types": "file-system*"
                    }
                }
            },
            "condition-keys": [
                "",
                "aws:ResourceTag/${TagKey}"
            ],
            "resource-types": {
                "backup": {
                    "arn": "arn:${Partition}:fsx:${Region}:${Account}:backup/*",
                    "condition-keys": "aws:ResourceTag/${TagKey}",
                    "resource-types": "backup"
                },
                "file-system": {
                    "arn": "arn:${Partition}:fsx:${Region}:${Account}:file-system/*",
                    "condition-keys": "aws:ResourceTag/${TagKey}",
                    "resource-types": "file-system"
                }
            }
        },
        "gamelift": {
            "actions": {
                "list": {
                    "ListAliases": {
                        "access-level": "list",
                        "actions": "ListAliases",
                        "description": "Retrieves the fleet aliases used with this AWS account"
                    },
                    "ListBuilds": {
                        "access-level": "list",
                        "actions": "ListBuilds",
                        "description": "Retrieves the builds for this AWS account"
                    },
                    "ListFleets": {
                        "access-level": "list",
                        "actions": "ListFleets",
                        "description": "Retrieves the fleet for this AWS account"
                    }
                },
                "read": {
                    "DescribeAlias": {
                        "access-level": "read",
                        "actions": "DescribeAlias",
                        "description": "Retrieves properties for an alias"
                    },
                    "DescribeBuild": {
                        "access-level": "read",
                        "actions": "DescribeBuild",
                        "description": "Retrieves properties for a build"
                    },
                    "DescribeEC2InstanceLimits": {
                        "access-level": "read",
                        "actions": "DescribeEC2InstanceLimits",
                        "description": "Retrieves maximum allowed usage and current usage for all EC2 instance types or a specified type"
                    },
                    "DescribeFleetAttributes": {
                        "access-level": "read",
                        "actions": "DescribeFleetAttributes",
                        "description": "Retrieves general fleet properties for a fleet"
                    },
                    "DescribeFleetCapacity": {
                        "access-level": "read",
                        "actions": "DescribeFleetCapacity",
                        "description": "Retrieves the current capacity status for a fleet"
                    },
                    "DescribeFleetEvents": {
                        "access-level": "read",
                        "actions": "DescribeFleetEvents",
                        "description": "Retrieves entries from a fleet\\'s event log"
                    },
                    "DescribeFleetPortSettings": {
                        "access-level": "read",
                        "actions": "DescribeFleetPortSettings",
                        "description": "Retrieves the inbound connection permissions set for a fleet"
                    },
                    "DescribeFleetUtilization": {
                        "access-level": "read",
                        "actions": "DescribeFleetUtilization",
                        "description": "Retrieves utilization statistics for a fleet"
                    },
                    "DescribeGameSessionDetails": {
                        "access-level": "read",
                        "actions": "DescribeGameSessionDetails",
                        "description": "Retrieves game session properties plus game session protection policy"
                    },
                    "DescribeGameSessions": {
                        "access-level": "read",
                        "actions": "DescribeGameSessions",
                        "description": "Retrieves game session properties for a fleet"
                    },
                    "DescribeInstances": {
                        "access-level": "read",
                        "actions": "DescribeInstances",
                        "description": "Retrieves information about a fleet\\'s instances, including instance IDs."
                    },
                    "DescribePlayerSessions": {
                        "access-level": "read",
                        "actions": "DescribePlayerSessions",
                        "description": "Retrieves player session properties for a game session"
                    },
                    "DescribeRuntimeConfiguration": {
                        "access-level": "read",
                        "actions": "DescribeRuntimeConfiguration",
                        "description": "Retrieves the runtime configuration for a fleet"
                    },
                    "DescribeScalingPolicies": {
                        "access-level": "read",
                        "actions": "DescribeScalingPolicies",
                        "description": "Retrieves all scaling policies applied to a fleet"
                    },
                    "GetGameSessionLogUrl": {
                        "access-level": "read",
                        "actions": "GetGameSessionLogUrl",
                        "description": "Retrieves the location of stored logs for a game session"
                    },
                    "GetInstanceAccess": {
                        "access-level": "read",
                        "actions": "GetInstanceAccess",
                        "description": "Requests remote access to a fleet instance."
                    },
                    "RequestUploadCredentials": {
                        "access-level": "read",
                        "actions": "RequestUploadCredentials",
                        "description": "Retrieves a fresh set of upload credentials and the Amazon S3 storage location for a specific build"
                    },
                    "ResolveAlias": {
                        "access-level": "read",
                        "actions": "ResolveAlias",
                        "description": "Retrieves the fleet ID associated with an alias"
                    },
                    "SearchGameSessions": {
                        "access-level": "read",
                        "actions": "SearchGameSessions",
                        "description": "Retrieves game sessions that match the search criteria and sorts them as specified"
                    }
                },
                "write": {
                    "CreateAlias": {
                        "access-level": "write",
                        "actions": "CreateAlias",
                        "description": "Creates an alias for a fleet"
                    },
                    "CreateBuild": {
                        "access-level": "write",
                        "actions": "CreateBuild",
                        "description": "Initializes a new build record and generates information required to upload a game build to Amazon GameLift"
                    },
                    "CreateFleet": {
                        "access-level": "write",
                        "actions": "CreateFleet",
                        "description": "Creates a new fleet of computing resources to run your game servers"
                    },
                    "CreateGameSession": {
                        "access-level": "write",
                        "actions": "CreateGameSession",
                        "description": "Creates a game session for players to join"
                    },
                    "CreatePlayerSession": {
                        "access-level": "write",
                        "actions": "CreatePlayerSession",
                        "description": "Adds a player to a game session"
                    },
                    "CreatePlayerSessions": {
                        "access-level": "write",
                        "actions": "CreatePlayerSessions",
                        "description": "Adds a group of players to a game session"
                    },
                    "DeleteAlias": {
                        "access-level": "write",
                        "actions": "DeleteAlias",
                        "description": "Deletes an alias"
                    },
                    "DeleteBuild": {
                        "access-level": "write",
                        "actions": "DeleteBuild",
                        "description": "Deletes a build"
                    },
                    "DeleteFleet": {
                        "access-level": "write",
                        "actions": "DeleteFleet",
                        "description": "Deletes an empty fleet"
                    },
                    "DeleteScalingPolicy": {
                        "access-level": "write",
                        "actions": "DeleteScalingPolicy",
                        "description": "Deletes a set of scaling rules"
                    },
                    "PutScalingPolicy": {
                        "access-level": "write",
                        "actions": "PutScalingPolicy",
                        "description": "Creates or updates a fleet scaling policy"
                    },
                    "UpdateAlias": {
                        "access-level": "write",
                        "actions": "UpdateAlias",
                        "description": "Updates properties for an alias"
                    },
                    "UpdateBuild": {
                        "access-level": "write",
                        "actions": "UpdateBuild",
                        "description": "Updates a build\\'s name and version"
                    },
                    "UpdateFleetAttributes": {
                        "access-level": "write",
                        "actions": "UpdateFleetAttributes",
                        "description": "Sets a fleet\\'s general properties"
                    },
                    "UpdateFleetCapacity": {
                        "access-level": "write",
                        "actions": "UpdateFleetCapacity",
                        "description": "Sets a fleet\\'s capacity settings"
                    },
                    "UpdateFleetPortSettings": {
                        "access-level": "write",
                        "actions": "UpdateFleetPortSettings",
                        "description": "Sets a fleet\\'s port settings"
                    },
                    "UpdateGameSession": {
                        "access-level": "write",
                        "actions": "UpdateGameSession",
                        "description": "Sets game session properties"
                    },
                    "UpdateRuntimeConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateRuntimeConfiguration",
                        "description": "Sets a fleet\\'s runtime configuration, which specifies how to launch server processes on the fleet"
                    }
                }
            }
        },
        "glacier": {
            "actions": {
                "list": {
                    "ListJobs": {
                        "access-level": "list",
                        "actions": "ListJobs",
                        "description": "Lists jobs for a vault that are in-progress and jobs that have recently finished",
                        "resource-types": "vault*"
                    },
                    "ListMultipartUploads": {
                        "access-level": "list",
                        "actions": "ListMultipartUploads",
                        "description": "Lists in-progress multipart uploads for the specified vault",
                        "resource-types": "vault*"
                    },
                    "ListParts": {
                        "access-level": "list",
                        "actions": "ListParts",
                        "description": "Lists the parts of an archive that have been uploaded in a specific multipart upload",
                        "resource-types": "vault*"
                    },
                    "ListProvisionedCapacity": {
                        "access-level": "list",
                        "actions": "ListProvisionedCapacity",
                        "description": "This operation lists the provisioned capacity for the specified AWS account."
                    },
                    "ListTagsForVault": {
                        "access-level": "list",
                        "actions": "ListTagsForVault",
                        "description": "Lists all the tags attached to a vault",
                        "resource-types": "vault*"
                    },
                    "ListVaults": {
                        "access-level": "list",
                        "actions": "ListVaults",
                        "description": "Lists all vaults"
                    }
                },
                "permissions-management": {
                    "AbortVaultLock": {
                        "access-level": "permissions-management",
                        "actions": "AbortVaultLock",
                        "description": "Aborts the vault locking process if the vault lock is not in the Locked state",
                        "resource-types": "vault*"
                    },
                    "CompleteVaultLock": {
                        "access-level": "permissions-management",
                        "actions": "CompleteVaultLock",
                        "description": "Completes the vault locking process",
                        "resource-types": "vault*"
                    },
                    "DeleteVaultAccessPolicy": {
                        "access-level": "permissions-management",
                        "actions": "DeleteVaultAccessPolicy",
                        "description": "Deletes the access policy associated with the specified vault",
                        "resource-types": "vault*"
                    },
                    "InitiateVaultLock": {
                        "access-level": "permissions-management",
                        "actions": "InitiateVaultLock",
                        "description": "Initiates the vault locking process",
                        "resource-types": "vault*"
                    },
                    "SetDataRetrievalPolicy": {
                        "access-level": "permissions-management",
                        "actions": "SetDataRetrievalPolicy",
                        "description": "Sets and then enacts a data retrieval policy in the region specified in the PUT request"
                    },
                    "SetVaultAccessPolicy": {
                        "access-level": "permissions-management",
                        "actions": "SetVaultAccessPolicy",
                        "description": "Configures an access policy for a vault and will overwrite an existing policy",
                        "resource-types": "vault*"
                    }
                },
                "read": {
                    "DescribeJob": {
                        "access-level": "read",
                        "actions": "DescribeJob",
                        "description": "Returns information about a job you previously initiated",
                        "resource-types": "vault*"
                    },
                    "DescribeVault": {
                        "access-level": "read",
                        "actions": "DescribeVault",
                        "description": "Returns information about a vault",
                        "resource-types": "vault*"
                    },
                    "GetDataRetrievalPolicy": {
                        "access-level": "read",
                        "actions": "GetDataRetrievalPolicy",
                        "description": "Returns the current data retrieval policy for the account and region specified in the GET request"
                    },
                    "GetJobOutput": {
                        "access-level": "read",
                        "actions": "GetJobOutput",
                        "description": "Downloads the output of the job you initiated",
                        "resource-types": "vault*"
                    },
                    "GetVaultAccessPolicy": {
                        "access-level": "read",
                        "actions": "GetVaultAccessPolicy",
                        "description": "Retrieves the access-policy subresource set on the vault",
                        "resource-types": "vault*"
                    },
                    "GetVaultLock": {
                        "access-level": "read",
                        "actions": "GetVaultLock",
                        "description": "Retrieves attributes from the lock-policy subresource set on the specified vault",
                        "resource-types": "vault*"
                    },
                    "GetVaultNotifications": {
                        "access-level": "read",
                        "actions": "GetVaultNotifications",
                        "description": "Retrieves the notification-configuration subresource set on the vault",
                        "resource-types": "vault*"
                    }
                },
                "tagging": {
                    "AddTagsToVault": {
                        "access-level": "tagging",
                        "actions": "AddTagsToVault",
                        "description": "Adds the specified tags to a vault",
                        "resource-types": "vault*"
                    },
                    "RemoveTagsFromVault": {
                        "access-level": "tagging",
                        "actions": "RemoveTagsFromVault",
                        "description": "Removes one or more tags from the set of tags attached to a vault",
                        "resource-types": "vault*"
                    }
                },
                "write": {
                    "AbortMultipartUpload": {
                        "access-level": "write",
                        "actions": "AbortMultipartUpload",
                        "description": "Aborts a multipart upload identified by the upload ID",
                        "resource-types": "vault*"
                    },
                    "CompleteMultipartUpload": {
                        "access-level": "write",
                        "actions": "CompleteMultipartUpload",
                        "description": "Completes a multipart upload process",
                        "resource-types": "vault*"
                    },
                    "CreateVault": {
                        "access-level": "write",
                        "actions": "CreateVault",
                        "description": "Creates a new vault with the specified name",
                        "resource-types": "vault*"
                    },
                    "DeleteArchive": {
                        "access-level": "write",
                        "actions": "DeleteArchive",
                        "condition-keys": [
                            "glacier:ArchiveAgeInDays"
                        ],
                        "description": "Deletes an archive from a vault",
                        "resource-types": "vault*"
                    },
                    "DeleteVault": {
                        "access-level": "write",
                        "actions": "DeleteVault",
                        "description": "Deletes a vault",
                        "resource-types": "vault*"
                    },
                    "DeleteVaultNotifications": {
                        "access-level": "write",
                        "actions": "DeleteVaultNotifications",
                        "description": "Deletes the notification configuration set for a vault",
                        "resource-types": "vault*"
                    },
                    "InitiateJob": {
                        "access-level": "write",
                        "actions": "InitiateJob",
                        "condition-keys": [
                            "glacier:ArchiveAgeInDays"
                        ],
                        "description": "Initiates a job of the specified type",
                        "resource-types": "vault*"
                    },
                    "InitiateMultipartUpload": {
                        "access-level": "write",
                        "actions": "InitiateMultipartUpload",
                        "description": "Initiates a multipart upload",
                        "resource-types": "vault*"
                    },
                    "PurchaseProvisionedCapacity": {
                        "access-level": "write",
                        "actions": "PurchaseProvisionedCapacity",
                        "description": "This operation purchases a provisioned capacity unit for an AWS account."
                    },
                    "SetVaultNotifications": {
                        "access-level": "write",
                        "actions": "SetVaultNotifications",
                        "description": "Configures vault notifications",
                        "resource-types": "vault*"
                    },
                    "UploadArchive": {
                        "access-level": "write",
                        "actions": "UploadArchive",
                        "description": "Adds an archive to a vault",
                        "resource-types": "vault*"
                    },
                    "UploadMultipartPart": {
                        "access-level": "write",
                        "actions": "UploadMultipartPart",
                        "description": "Uploads a part of an archive",
                        "resource-types": "vault*"
                    }
                }
            }
        },
        "globalaccelerator": {
            "actions": {
                "list": {
                    "ListAccelerators": {
                        "access-level": "list",
                        "actions": "ListAccelerators",
                        "description": "List the accelerators."
                    },
                    "ListEndpointGroups": {
                        "access-level": "list",
                        "actions": "ListEndpointGroups",
                        "description": "List the endpoint groups.",
                        "resource-types": "listener*"
                    },
                    "ListListeners": {
                        "access-level": "list",
                        "actions": "ListListeners",
                        "description": "List the listeners.",
                        "resource-types": "accelerator*"
                    }
                },
                "read": {
                    "DescribeAccelerator": {
                        "access-level": "read",
                        "actions": "DescribeAccelerator",
                        "description": "Describe the accelerator.",
                        "resource-types": "accelerator*"
                    },
                    "DescribeAcceleratorAttributes": {
                        "access-level": "read",
                        "actions": "DescribeAcceleratorAttributes",
                        "description": "Describe the accelerator Attributes.",
                        "resource-types": "accelerator*"
                    },
                    "DescribeEndpointGroup": {
                        "access-level": "read",
                        "actions": "DescribeEndpointGroup",
                        "description": "Describe the endpoint group.",
                        "resource-types": "endpointgroup*"
                    },
                    "DescribeListener": {
                        "access-level": "read",
                        "actions": "DescribeListener",
                        "description": "Describe the listener.",
                        "resource-types": "listener*"
                    }
                },
                "write": {
                    "CreateAccelerator": {
                        "access-level": "write",
                        "actions": "CreateAccelerator",
                        "description": "Create an accelerator."
                    },
                    "CreateEndpointGroup": {
                        "access-level": "write",
                        "actions": "CreateEndpointGroup",
                        "description": "Add an endpoint group.",
                        "resource-types": "listener*"
                    },
                    "CreateListener": {
                        "access-level": "write",
                        "actions": "CreateListener",
                        "description": "Add a listener.",
                        "resource-types": "accelerator*"
                    },
                    "DeleteAccelerator": {
                        "access-level": "write",
                        "actions": "DeleteAccelerator",
                        "description": "Delete the accelerator.",
                        "resource-types": "accelerator*"
                    },
                    "DeleteEndpointGroup": {
                        "access-level": "write",
                        "actions": "DeleteEndpointGroup",
                        "description": "Delete the endpoint group.",
                        "resource-types": "endpointgroup*"
                    },
                    "DeleteListener": {
                        "access-level": "write",
                        "actions": "DeleteListener",
                        "description": "Delete the listener.",
                        "resource-types": "listener*"
                    },
                    "UpdateAccelerator": {
                        "access-level": "write",
                        "actions": "UpdateAccelerator",
                        "description": "Update the accelerator.",
                        "resource-types": "accelerator*"
                    },
                    "UpdateAcceleratorAttributes": {
                        "access-level": "write",
                        "actions": "UpdateAcceleratorAttributes",
                        "description": "Update the accelerator attributes.",
                        "resource-types": "accelerator*"
                    },
                    "UpdateEndpointGroup": {
                        "access-level": "write",
                        "actions": "UpdateEndpointGroup",
                        "description": "Update the endpoint group.",
                        "resource-types": "endpointgroup*"
                    },
                    "UpdateListener": {
                        "access-level": "write",
                        "actions": "UpdateListener",
                        "description": "Update the listener.",
                        "resource-types": "listener*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "accelerator": {
                    "arn": "arn:${Partition}:globalaccelerator::${Account}:accelerator/${AcceleratorId}",
                    "resource-types": "accelerator"
                },
                "endpointgroup": {
                    "arn": "arn:${Partition}:globalaccelerator::${Account}:accelerator/${AcceleratorId}/listener/${ListenerId}/endpoint-group/${EndpointGroupId}",
                    "resource-types": "endpointgroup"
                },
                "listener": {
                    "arn": "arn:${Partition}:globalaccelerator::${Account}:accelerator/${AcceleratorId}/listener/${ListenerId}",
                    "resource-types": "listener"
                }
            }
        },
        "glue": {
            "actions": {
                "read": {
                    "BatchGetPartition": {
                        "access-level": "read",
                        "actions": "BatchGetPartition",
                        "description": "Grants permission to retrieve one or more partitions"
                    },
                    "GetCatalogImportStatus": {
                        "access-level": "read",
                        "actions": "GetCatalogImportStatus",
                        "description": "Grants permission to retrieve the catalog import status"
                    },
                    "GetClassifier": {
                        "access-level": "read",
                        "actions": "GetClassifier",
                        "description": "Grants permission to retrieve a classifier"
                    },
                    "GetClassifiers": {
                        "access-level": "read",
                        "actions": "GetClassifiers",
                        "description": "Grants permission to list all classifiers"
                    },
                    "GetConnection": {
                        "access-level": "read",
                        "actions": "GetConnection",
                        "description": "Grants permission to retrieve a connection"
                    },
                    "GetConnections": {
                        "access-level": "read",
                        "actions": "GetConnections",
                        "description": "Grants permission to retrieve a list of connections"
                    },
                    "GetCrawler": {
                        "access-level": "read",
                        "actions": "GetCrawler",
                        "description": "Grants permission to retrieve a crawler"
                    },
                    "GetCrawlerMetrics": {
                        "access-level": "read",
                        "actions": "GetCrawlerMetrics",
                        "description": "Grants permission to retrieve metrics about crawlers"
                    },
                    "GetCrawlers": {
                        "access-level": "read",
                        "actions": "GetCrawlers",
                        "description": "Grants permission to retrieve all crawlers"
                    },
                    "GetDataCatalogEncryptionSettings": {
                        "access-level": "read",
                        "actions": "GetDataCatalogEncryptionSettings",
                        "description": "Grants permission to retrieve catalog encryption settings"
                    },
                    "GetDatabase": {
                        "access-level": "read",
                        "actions": "GetDatabase",
                        "description": "Grants permission to retrieve a database"
                    },
                    "GetDatabases": {
                        "access-level": "read",
                        "actions": "GetDatabases",
                        "description": "Grants permission to retrieve all databases"
                    },
                    "GetDataflowGraph": {
                        "access-level": "read",
                        "actions": "GetDataflowGraph",
                        "description": "Grants permission to transform a script into a directed acyclic graph (DAG)"
                    },
                    "GetDevEndpoint": {
                        "access-level": "read",
                        "actions": "GetDevEndpoint",
                        "description": "Grants permission to retrieve a development endpoint"
                    },
                    "GetDevEndpoints": {
                        "access-level": "read",
                        "actions": "GetDevEndpoints",
                        "description": "Grants permission to retrieve all development endpoints"
                    },
                    "GetJob": {
                        "access-level": "read",
                        "actions": "GetJob",
                        "description": "Grants permission to retrieve a job"
                    },
                    "GetJobRun": {
                        "access-level": "read",
                        "actions": "GetJobRun",
                        "description": "Grants permission to retrieve a job run"
                    },
                    "GetJobRuns": {
                        "access-level": "read",
                        "actions": "GetJobRuns",
                        "description": "Grants permission to retrieve all job runs of a job"
                    },
                    "GetJobs": {
                        "access-level": "read",
                        "actions": "GetJobs",
                        "description": "Grants permission to retrieve all current jobs"
                    },
                    "GetPartition": {
                        "access-level": "read",
                        "actions": "GetPartition",
                        "description": "Grants permission to retrieve a partition"
                    },
                    "GetPartitions": {
                        "access-level": "read",
                        "actions": "GetPartitions",
                        "description": "Grants permission to retrieve the partitions of a table"
                    },
                    "GetPlan": {
                        "access-level": "read",
                        "actions": "GetPlan",
                        "description": "Grants permission to retrieve a mapping for a script"
                    },
                    "GetResourcePolicy": {
                        "access-level": "read",
                        "actions": "GetResourcePolicy",
                        "description": "Grants permission to retrieve a resource policy",
                        "resource-types": "catalog*"
                    },
                    "GetSecurityConfiguration": {
                        "access-level": "read",
                        "actions": "GetSecurityConfiguration",
                        "description": "Grants permission to retrieve a security configuration"
                    },
                    "GetSecurityConfigurations": {
                        "access-level": "read",
                        "actions": "GetSecurityConfigurations",
                        "description": "Grants permission to retrieve one or more security configurations"
                    },
                    "GetTable": {
                        "access-level": "read",
                        "actions": "GetTable",
                        "description": "Grants permission to retrieve a table"
                    },
                    "GetTableVersions": {
                        "access-level": "read",
                        "actions": "GetTableVersions",
                        "description": "Grants permission to retrieve a list of versions of a table"
                    },
                    "GetTables": {
                        "access-level": "read",
                        "actions": "GetTables",
                        "description": "Grants permission to retrieve the tables in a database"
                    },
                    "GetTrigger": {
                        "access-level": "read",
                        "actions": "GetTrigger",
                        "description": "Grants permission to retrieve a trigger"
                    },
                    "GetTriggers": {
                        "access-level": "read",
                        "actions": "GetTriggers",
                        "description": "Grants permission to retrieve the triggers associated with a job"
                    },
                    "GetUserDefinedFunction": {
                        "access-level": "read",
                        "actions": "GetUserDefinedFunction",
                        "description": "Grants permission to retrieve a function definition."
                    },
                    "GetUserDefinedFunctions": {
                        "access-level": "read",
                        "actions": "GetUserDefinedFunctions",
                        "description": "Grants permission to retrieve multiple function definitions"
                    }
                },
                "write": {
                    "BatchCreatePartition": {
                        "access-level": "write",
                        "actions": "BatchCreatePartition",
                        "description": "Grants permission to create one or more partitions"
                    },
                    "BatchDeleteConnection": {
                        "access-level": "write",
                        "actions": "BatchDeleteConnection",
                        "description": "Grants permission to delete one or more connections"
                    },
                    "BatchDeletePartition": {
                        "access-level": "write",
                        "actions": "BatchDeletePartition",
                        "description": "Grants permission to delete one or more partitions"
                    },
                    "BatchDeleteTable": {
                        "access-level": "write",
                        "actions": "BatchDeleteTable",
                        "description": "Grants permission to delete one or more tables"
                    },
                    "CreateClassifier": {
                        "access-level": "write",
                        "actions": "CreateClassifier",
                        "description": "Grants permission to create a classifier"
                    },
                    "CreateConnection": {
                        "access-level": "write",
                        "actions": "CreateConnection",
                        "description": "Grants permission to create a connection"
                    },
                    "CreateCrawler": {
                        "access-level": "write",
                        "actions": "CreateCrawler",
                        "description": "Grants permission to create a crawler"
                    },
                    "CreateDatabase": {
                        "access-level": "write",
                        "actions": "CreateDatabase",
                        "description": "Grants permission to create a database"
                    },
                    "CreateDevEndpoint": {
                        "access-level": "write",
                        "actions": "CreateDevEndpoint",
                        "description": "Grants permission to create a development endpoint"
                    },
                    "CreateJob": {
                        "access-level": "write",
                        "actions": "CreateJob",
                        "description": "Grants permission to create a job"
                    },
                    "CreatePartition": {
                        "access-level": "write",
                        "actions": "CreatePartition",
                        "description": "Grants permission to create a partition"
                    },
                    "CreateScript": {
                        "access-level": "write",
                        "actions": "CreateScript",
                        "description": "Grants permission to create a script"
                    },
                    "CreateSecurityConfiguration": {
                        "access-level": "write",
                        "actions": "CreateSecurityConfiguration",
                        "description": "Grants permission to create a security configuration"
                    },
                    "CreateTable": {
                        "access-level": "write",
                        "actions": "CreateTable",
                        "description": "Grants permission to create a table"
                    },
                    "CreateTrigger": {
                        "access-level": "write",
                        "actions": "CreateTrigger",
                        "description": "Grants permission to create a trigger"
                    },
                    "CreateUserDefinedFunction": {
                        "access-level": "write",
                        "actions": "CreateUserDefinedFunction",
                        "description": "Grants permission to create a function definition"
                    },
                    "DeleteClassifier": {
                        "access-level": "write",
                        "actions": "DeleteClassifier",
                        "description": "Grants permission to delete a classifier"
                    },
                    "DeleteConnection": {
                        "access-level": "write",
                        "actions": "DeleteConnection",
                        "description": "Grants permission to delete a connection"
                    },
                    "DeleteCrawler": {
                        "access-level": "write",
                        "actions": "DeleteCrawler",
                        "description": "Grants permission to delete a crawler"
                    },
                    "DeleteDatabase": {
                        "access-level": "write",
                        "actions": "DeleteDatabase",
                        "description": "Grants permission to delete a database"
                    },
                    "DeleteDevEndpoint": {
                        "access-level": "write",
                        "actions": "DeleteDevEndpoint",
                        "description": "Grants permission to delete a development endpoint"
                    },
                    "DeleteJob": {
                        "access-level": "write",
                        "actions": "DeleteJob",
                        "description": "Grants permission to delete a job"
                    },
                    "DeletePartition": {
                        "access-level": "write",
                        "actions": "DeletePartition",
                        "description": "Grants permission to delete a partition"
                    },
                    "DeleteResourcePolicy": {
                        "access-level": "write",
                        "actions": "DeleteResourcePolicy",
                        "description": "Grants permission to delete a resource policy",
                        "resource-types": "catalog*"
                    },
                    "DeleteSecurityConfiguration": {
                        "access-level": "write",
                        "actions": "DeleteSecurityConfiguration",
                        "description": "Grants permission to delete a security configuration"
                    },
                    "DeleteTable": {
                        "access-level": "write",
                        "actions": "DeleteTable",
                        "description": "Grants permission to delete a table"
                    },
                    "DeleteTrigger": {
                        "access-level": "write",
                        "actions": "DeleteTrigger",
                        "description": "Grants permission to delete a trigger"
                    },
                    "DeleteUserDefinedFunction": {
                        "access-level": "write",
                        "actions": "DeleteUserDefinedFunction",
                        "description": "Grants permission to delete a function definition"
                    },
                    "GetMapping": {
                        "access-level": "write",
                        "actions": "GetMapping",
                        "description": "Grants permission to create a mapping"
                    },
                    "ImportCatalogToGlue": {
                        "access-level": "write",
                        "actions": "ImportCatalogToGlue",
                        "description": "Grants permission to import an Athena data catalog into AWS Glue"
                    },
                    "PutDataCatalogEncryptionSettings": {
                        "access-level": "write",
                        "actions": "PutDataCatalogEncryptionSettings",
                        "description": "Grants permission to update catalog encryption settings"
                    },
                    "PutResourcePolicy": {
                        "access-level": "write",
                        "actions": "PutResourcePolicy",
                        "description": "Grants permission to update a resource policy",
                        "resource-types": "catalog*"
                    },
                    "ResetJobBookmark": {
                        "access-level": "write",
                        "actions": "ResetJobBookmark",
                        "description": "Grants permission to reset a job bookmark"
                    },
                    "StartCrawler": {
                        "access-level": "write",
                        "actions": "StartCrawler",
                        "description": "Grants permission to start a crawler"
                    },
                    "StartCrawlerSchedule": {
                        "access-level": "write",
                        "actions": "StartCrawlerSchedule",
                        "description": "Grants permission to change the schedule state of a crawler to SCHEDULED"
                    },
                    "StartJobRun": {
                        "access-level": "write",
                        "actions": "StartJobRun",
                        "description": "Grants permission to start running a job"
                    },
                    "StartTrigger": {
                        "access-level": "write",
                        "actions": "StartTrigger",
                        "description": "Grants permission to start a trigger"
                    },
                    "StopCrawler": {
                        "access-level": "write",
                        "actions": "StopCrawler",
                        "description": "Grants permission to stop a running crawler"
                    },
                    "StopCrawlerSchedule": {
                        "access-level": "write",
                        "actions": "StopCrawlerSchedule",
                        "description": "Grants permission to set the schedule state of a crawler to NOT_SCHEDULED"
                    },
                    "StopTrigger": {
                        "access-level": "write",
                        "actions": "StopTrigger",
                        "description": "Grants permission to stop a trigger"
                    },
                    "UpdateClassifier": {
                        "access-level": "write",
                        "actions": "UpdateClassifier",
                        "description": "Grants permission to update a classifier"
                    },
                    "UpdateConnection": {
                        "access-level": "write",
                        "actions": "UpdateConnection",
                        "description": "Grants permission to update a connection"
                    },
                    "UpdateCrawler": {
                        "access-level": "write",
                        "actions": "UpdateCrawler",
                        "description": "Grants permission to update a crawler"
                    },
                    "UpdateDatabase": {
                        "access-level": "write",
                        "actions": "UpdateDatabase",
                        "description": "Grants permission to update a database"
                    },
                    "UpdateDevEndpoint": {
                        "access-level": "write",
                        "actions": "UpdateDevEndpoint",
                        "description": "Grants permission to update a development endpoint"
                    },
                    "UpdateJob": {
                        "access-level": "write",
                        "actions": "UpdateJob",
                        "description": "Grants permission to update a job"
                    },
                    "UpdatePartition": {
                        "access-level": "write",
                        "actions": "UpdatePartition",
                        "description": "Grants permission to update a partition"
                    },
                    "UpdateTable": {
                        "access-level": "write",
                        "actions": "UpdateTable",
                        "description": "Grants permission to update a table"
                    },
                    "UpdateTrigger": {
                        "access-level": "write",
                        "actions": "UpdateTrigger",
                        "description": "Grants permission to update a trigger"
                    },
                    "UpdateUserDefinedFunction": {
                        "access-level": "write",
                        "actions": "UpdateUserDefinedFunction",
                        "description": "Grants permission to update a function definition"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "catalog": {
                    "arn": "arn:${Partition}:glue:${Region}:${Account}:catalog/${CatalogName}",
                    "resource-types": "catalog"
                },
                "connection": {
                    "arn": "arn:${Partition}:glue:${Region}:${Account}:connection/${ConnectionName}",
                    "resource-types": "connection"
                },
                "database": {
                    "arn": "arn:${Partition}:glue:${Region}:${Account}:database/${DatabaseName}",
                    "resource-types": "database"
                },
                "devendpoint": {
                    "arn": "arn:${Partition}:glue:${Region}:${Account}:devendpoint/${DevEndpointName}",
                    "resource-types": "devendpoint"
                },
                "partition": {
                    "arn": "arn:${Partition}:glue:${Region}:${Account}:partition/${PartitionName}",
                    "resource-types": "partition"
                },
                "table": {
                    "arn": "arn:${Partition}:glue:${Region}:${Account}:table/${TableName}",
                    "resource-types": "table"
                },
                "tableversion": {
                    "arn": "arn:${Partition}:glue:${Region}:${Account}:tableVersion/${TableVersionName}",
                    "resource-types": "tableversion"
                },
                "userdefinedfunction": {
                    "arn": "arn:${Partition}:glue:${Region}:${Account}:userDefinedFunction/${UserDefinedFunctionName}",
                    "resource-types": "userdefinedfunction"
                }
            }
        },
        "greengrass": {
            "actions": {
                "list": {
                    "ListCoreDefinitionVersions": {
                        "access-level": "list",
                        "actions": "ListCoreDefinitionVersions",
                        "description": "Lists versions of a core definition."
                    },
                    "ListCoreDefinitions": {
                        "access-level": "list",
                        "actions": "ListCoreDefinitions",
                        "description": "Retrieves a list of core definitions."
                    },
                    "ListDeployments": {
                        "access-level": "list",
                        "actions": "ListDeployments",
                        "description": "Returns a history of deployments for the group."
                    },
                    "ListDeviceDefinitionVersions": {
                        "access-level": "list",
                        "actions": "ListDeviceDefinitionVersions",
                        "description": "Lists the versions of a device definition."
                    },
                    "ListDeviceDefinitions": {
                        "access-level": "list",
                        "actions": "ListDeviceDefinitions",
                        "description": "Retrieves a list of device definitions."
                    },
                    "ListFunctionDefinitionVersions": {
                        "access-level": "list",
                        "actions": "ListFunctionDefinitionVersions",
                        "description": "Lists the versions of a Lambda function definition."
                    },
                    "ListFunctionDefinitions": {
                        "access-level": "list",
                        "actions": "ListFunctionDefinitions",
                        "description": "Retrieves a list of Lambda function definitions."
                    },
                    "ListGroupCertificateAuthorities": {
                        "access-level": "list",
                        "actions": "ListGroupCertificateAuthorities",
                        "description": "Retrieves the current CAs for a group."
                    },
                    "ListGroupVersions": {
                        "access-level": "list",
                        "actions": "ListGroupVersions",
                        "description": "Lists the versions of a group."
                    },
                    "ListGroups": {
                        "access-level": "list",
                        "actions": "ListGroups",
                        "description": "Retrieves a list of groups."
                    },
                    "ListLoggerDefinitionVersions": {
                        "access-level": "list",
                        "actions": "ListLoggerDefinitionVersions",
                        "description": "Lists the versions of a logger definition."
                    },
                    "ListLoggerDefinitions": {
                        "access-level": "list",
                        "actions": "ListLoggerDefinitions",
                        "description": "Retrieves a list of logger definitions."
                    },
                    "ListResourceDefinitionVersions": {
                        "access-level": "list",
                        "actions": "ListResourceDefinitionVersions",
                        "description": "Lists the versions of a resource definition."
                    },
                    "ListResourceDefinitions": {
                        "access-level": "list",
                        "actions": "ListResourceDefinitions",
                        "description": "Retrieves a list of resource definitions."
                    },
                    "ListSubscriptionDefinitionVersions": {
                        "access-level": "list",
                        "actions": "ListSubscriptionDefinitionVersions",
                        "description": "Lists the versions of a subscription definition."
                    },
                    "ListSubscriptionDefinitions": {
                        "access-level": "list",
                        "actions": "ListSubscriptionDefinitions",
                        "description": "Retrieves a list of subscription definitions."
                    }
                },
                "permissions-management": {
                    "AssociateServiceRoleToAccount": {
                        "access-level": "permissions-management",
                        "actions": "AssociateServiceRoleToAccount",
                        "description": "Associates a role with the account. AWS Greengrass uses the role to access your Lambda functions and AWS IoT resources."
                    }
                },
                "read": {
                    "GetAssociatedRole": {
                        "access-level": "read",
                        "actions": "GetAssociatedRole",
                        "description": "Retrieves the role associated with a particular group."
                    },
                    "GetConnectivityInfo": {
                        "access-level": "read",
                        "actions": "GetConnectivityInfo",
                        "description": "Retrieves the connectivity information for a core."
                    },
                    "GetCoreDefinition": {
                        "access-level": "read",
                        "actions": "GetCoreDefinition",
                        "description": "Retrieves information about a core definition version."
                    },
                    "GetCoreDefinitionVersion": {
                        "access-level": "read",
                        "actions": "GetCoreDefinitionVersion",
                        "description": "Retrieves information about a core definition version."
                    },
                    "GetDeploymentStatus": {
                        "access-level": "read",
                        "actions": "GetDeploymentStatus",
                        "description": "Returns the status of a deployment."
                    },
                    "GetDeviceDefinition": {
                        "access-level": "read",
                        "actions": "GetDeviceDefinition",
                        "description": "Retrieves information about a device definition."
                    },
                    "GetDeviceDefinitionVersion": {
                        "access-level": "read",
                        "actions": "GetDeviceDefinitionVersion",
                        "description": "Retrieves information about a device definition."
                    },
                    "GetFunctionDefinition": {
                        "access-level": "read",
                        "actions": "GetFunctionDefinition",
                        "description": "Retrieves information about a Lambda function definition, such as its creation time and latest version."
                    },
                    "GetFunctionDefinitionVersion": {
                        "access-level": "read",
                        "actions": "GetFunctionDefinitionVersion",
                        "description": "Retrieves information about a Lambda function definition version, such as which Lambda functions are included in the version and their configurations."
                    },
                    "GetGroup": {
                        "access-level": "read",
                        "actions": "GetGroup",
                        "description": "Retrieves information about a group."
                    },
                    "GetGroupCertificateAuthority": {
                        "access-level": "read",
                        "actions": "GetGroupCertificateAuthority",
                        "description": "Retreives the CA associated with a group. Returns the public key of the CA."
                    },
                    "GetGroupCertificateConfiguration": {
                        "access-level": "read",
                        "actions": "GetGroupCertificateConfiguration",
                        "description": "Retrieves the current configuration for the CA used by the group."
                    },
                    "GetGroupVersion": {
                        "access-level": "read",
                        "actions": "GetGroupVersion",
                        "description": "Retrieves information about a group version."
                    },
                    "GetLoggerDefinition": {
                        "access-level": "read",
                        "actions": "GetLoggerDefinition",
                        "description": "Retrieves information about a logger definition."
                    },
                    "GetLoggerDefinitionVersion": {
                        "access-level": "read",
                        "actions": "GetLoggerDefinitionVersion",
                        "description": "Retrieves information about a logger definition version"
                    },
                    "GetResourceDefinition": {
                        "access-level": "read",
                        "actions": "GetResourceDefinition",
                        "description": "Retrieves information about a resource definition, such as its creation time and latest version."
                    },
                    "GetResourceDefinitionVersion": {
                        "access-level": "read",
                        "actions": "GetResourceDefinitionVersion",
                        "description": "Retrieves information about a resource definition version, such as which resources are included in the version."
                    },
                    "GetServiceRoleForAccount": {
                        "access-level": "read",
                        "actions": "GetServiceRoleForAccount",
                        "description": "Retrieves the service role that is attached to the account."
                    },
                    "GetSubscriptionDefinition": {
                        "access-level": "read",
                        "actions": "GetSubscriptionDefinition",
                        "description": "Retrieves information about a subscription definition."
                    },
                    "GetSubscriptionDefinitionVersion": {
                        "access-level": "read",
                        "actions": "GetSubscriptionDefinitionVersion",
                        "description": "Retrieves information about a subscription definition version."
                    }
                },
                "write": {
                    "AssociateRoleToGroup": {
                        "access-level": "write",
                        "actions": "AssociateRoleToGroup",
                        "description": "Associates a role with a group"
                    },
                    "CreateCoreDefinition": {
                        "access-level": "write",
                        "actions": "CreateCoreDefinition",
                        "description": "Creates a core definition."
                    },
                    "CreateCoreDefinitionVersion": {
                        "access-level": "write",
                        "actions": "CreateCoreDefinitionVersion",
                        "description": "Creates a version of a core definition that has already been defined. AWS Greengrass Groups must each contain exactly 1 AWS Greengrass Core."
                    },
                    "CreateDeployment": {
                        "access-level": "write",
                        "actions": "CreateDeployment",
                        "description": "Creates a deployment."
                    },
                    "CreateDeviceDefinition": {
                        "access-level": "write",
                        "actions": "CreateDeviceDefinition",
                        "description": "Creates a device definition."
                    },
                    "CreateDeviceDefinitionVersion": {
                        "access-level": "write",
                        "actions": "CreateDeviceDefinitionVersion",
                        "description": "Creates a version of a device definition that has already been defined."
                    },
                    "CreateFunctionDefinition": {
                        "access-level": "write",
                        "actions": "CreateFunctionDefinition",
                        "description": "Creates a Lambda function definition which contains a list of Lambda functions and their configurations to be used in a group."
                    },
                    "CreateFunctionDefinitionVersion": {
                        "access-level": "write",
                        "actions": "CreateFunctionDefinitionVersion",
                        "description": "Create a version of a Lambda function definition that has already been defined."
                    },
                    "CreateGroup": {
                        "access-level": "write",
                        "actions": "CreateGroup",
                        "description": "Creates a group. You may provide the group configuration data now or use CreateGroupVersion later"
                    },
                    "CreateGroupCertificateAuthority": {
                        "access-level": "write",
                        "actions": "CreateGroupCertificateAuthority",
                        "description": "Creates a CA for the group. If a CA already exists, it will rotate the existing CA."
                    },
                    "CreateGroupVersion": {
                        "access-level": "write",
                        "actions": "CreateGroupVersion",
                        "description": "Creates a version of a group which has already been defined."
                    },
                    "CreateLoggerDefinition": {
                        "access-level": "write",
                        "actions": "CreateLoggerDefinition",
                        "description": "Creates a logger definition."
                    },
                    "CreateLoggerDefinitionVersion": {
                        "access-level": "write",
                        "actions": "CreateLoggerDefinitionVersion",
                        "description": "Creates a version of a logger definition that has already been defined."
                    },
                    "CreateResourceDefinition": {
                        "access-level": "write",
                        "actions": "CreateResourceDefinition",
                        "description": "Creates a resource definition which contains a list of resources to be used in a group. You can create an initial version of the definition by providing a list of resources now, or use ``CreateResourceDefinitionVersion`` later."
                    },
                    "CreateResourceDefinitionVersion": {
                        "access-level": "write",
                        "actions": "CreateResourceDefinitionVersion",
                        "description": "Create a version of a resource definition that has already been defined."
                    },
                    "CreateSoftwareUpdateJob": {
                        "access-level": "write",
                        "actions": "CreateSoftwareUpdateJob",
                        "description": "Creates an Iot Job that will trigger your Greengrass Cores to update the software they are running."
                    },
                    "CreateSubscriptionDefinition": {
                        "access-level": "write",
                        "actions": "CreateSubscriptionDefinition",
                        "description": "Creates a subscription definition."
                    },
                    "CreateSubscriptionDefinitionVersion": {
                        "access-level": "write",
                        "actions": "CreateSubscriptionDefinitionVersion",
                        "description": "Creates a version of a subscription definition which has already been defined."
                    },
                    "DeleteCoreDefinition": {
                        "access-level": "write",
                        "actions": "DeleteCoreDefinition",
                        "description": "Deletes a core definition. The core definition must not have been used in a deployment."
                    },
                    "DeleteDeviceDefinition": {
                        "access-level": "write",
                        "actions": "DeleteDeviceDefinition",
                        "description": "Deletes a device definition. The device definition must not have been used in a deployment."
                    },
                    "DeleteFunctionDefinition": {
                        "access-level": "write",
                        "actions": "DeleteFunctionDefinition",
                        "description": "Deletes a Lambda function definition. The Lambda function definition must not have been used in a deployment."
                    },
                    "DeleteGroup": {
                        "access-level": "write",
                        "actions": "DeleteGroup",
                        "description": "Deletes a group. The group must not have been used in deployment."
                    },
                    "DeleteLoggerDefinition": {
                        "access-level": "write",
                        "actions": "DeleteLoggerDefinition",
                        "description": "Deletes a logger definition. The logger definition must not have been used in a deployment."
                    },
                    "DeleteResourceDefinition": {
                        "access-level": "write",
                        "actions": "DeleteResourceDefinition",
                        "description": "Deletes a resource definition."
                    },
                    "DeleteSubscriptionDefinition": {
                        "access-level": "write",
                        "actions": "DeleteSubscriptionDefinition",
                        "description": "Deletes a subscription definition. The subscription definition must not have been used in a deployment."
                    },
                    "DisassociateRoleFromGroup": {
                        "access-level": "write",
                        "actions": "DisassociateRoleFromGroup",
                        "description": "Disassociates the role from a group."
                    },
                    "DisassociateServiceRoleFromAccount": {
                        "access-level": "write",
                        "actions": "DisassociateServiceRoleFromAccount",
                        "description": "Disassociates the service role from the account. Without a service role, deployments will not work."
                    },
                    "ResetDeployments": {
                        "access-level": "write",
                        "actions": "ResetDeployments",
                        "description": "Resets a group\\'s deployments."
                    },
                    "UpdateConnectivityInfo": {
                        "access-level": "write",
                        "actions": "UpdateConnectivityInfo",
                        "description": "Updates the connectivity information for the core. Any devices that belong to the group which has this core will receive this information in order to find the location of the core and connect to it."
                    },
                    "UpdateCoreDefinition": {
                        "access-level": "write",
                        "actions": "UpdateCoreDefinition",
                        "description": "Updates a core definition."
                    },
                    "UpdateDeviceDefinition": {
                        "access-level": "write",
                        "actions": "UpdateDeviceDefinition",
                        "description": "Updates a device definition."
                    },
                    "UpdateFunctionDefinition": {
                        "access-level": "write",
                        "actions": "UpdateFunctionDefinition",
                        "description": "Updates a Lambda function definition."
                    },
                    "UpdateGroup": {
                        "access-level": "write",
                        "actions": "UpdateGroup",
                        "description": "Updates a group."
                    },
                    "UpdateGroupCertificateConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateGroupCertificateConfiguration",
                        "description": "Updates the Certificate expiry time for a group."
                    },
                    "UpdateLoggerDefinition": {
                        "access-level": "write",
                        "actions": "UpdateLoggerDefinition",
                        "description": "Updates a logger definition."
                    },
                    "UpdateResourceDefinition": {
                        "access-level": "write",
                        "actions": "UpdateResourceDefinition",
                        "description": "Updates a resource definition."
                    },
                    "UpdateSubscriptionDefinition": {
                        "access-level": "write",
                        "actions": "UpdateSubscriptionDefinition",
                        "description": "Updates a subscription definition."
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "artifact": {
                    "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}/deployments/${DeploymentId}/artifacts/lambda/${ArtifactId}",
                    "resource-types": "artifact"
                },
                "certficateauthority": {
                    "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}/certificateauthorities/${CertificateAuthorityId}",
                    "resource-types": "certficateAuthority"
                },
                "definition": {
                    "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/${DefinitionName}/${DefinitionId}",
                    "resource-types": "definition"
                },
                "definitionversion": {
                    "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/${DefinitionName}/${DefinitionId}/versions/${VersionId}",
                    "resource-types": "definitionVersion"
                },
                "deployment": {
                    "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}/deployments/${DeploymentId}",
                    "resource-types": "deployment"
                },
                "group": {
                    "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}",
                    "resource-types": "group"
                },
                "groupversion": {
                    "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}/versions/${VersionId}",
                    "resource-types": "groupVersion"
                },
                "resourcedefinition": {
                    "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/resources/${ResourceDefinitionId}",
                    "resource-types": "resourceDefinition"
                },
                "resourcedefinitionversion": {
                    "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/resources/${ResourceDefinitionId}/versions/${VersionId}",
                    "resource-types": "resourceDefinitionVersion"
                }
            }
        },
        "groundtruthlabeling": {
            "actions": {
                "read": {
                    "DescribeConsoleJob": {
                        "access-level": "read",
                        "actions": "DescribeConsoleJob",
                        "description": "Get status of GroundTruthLabeling Jobs"
                    },
                    "ListDatasetObjects": {
                        "access-level": "read",
                        "actions": "ListDatasetObjects",
                        "description": "Paginated list api to list dataset objects in a manifest file"
                    }
                },
                "write": {
                    "RunFilterOrSampleDatasetJob": {
                        "access-level": "write",
                        "actions": "RunFilterOrSampleDatasetJob",
                        "description": "Filter records from a manifest file using S3 select. Get Sample entries based on random sampling."
                    },
                    "RunGenerateManifestByCrawlingJob": {
                        "access-level": "write",
                        "actions": "RunGenerateManifestByCrawlingJob",
                        "description": "List a S3 prefix and create manifest files from objects in there."
                    }
                }
            }
        },
        "guardduty": {
            "actions": {
                "list": {
                    "ListDetectors": {
                        "access-level": "list",
                        "actions": "ListDetectors",
                        "description": "Lists detectorIds of all existing enabled Amazon GuardDuty detectors in the AWS account."
                    },
                    "ListFindings": {
                        "access-level": "list",
                        "actions": "ListFindings",
                        "description": "Lists Amazon GuardDuty findings for the specified detector ID.",
                        "resource-types": "detector*"
                    },
                    "ListIPSets": {
                        "access-level": "list",
                        "actions": "ListIPSets",
                        "description": "Lists the IPSets of the GuardDuty service specified by the detector ID.",
                        "resource-types": "detector*"
                    },
                    "ListInvitations": {
                        "access-level": "list",
                        "actions": "ListInvitations",
                        "description": "Lists all GuardDuty membership invitations that were sent to the current AWS account."
                    },
                    "ListMembers": {
                        "access-level": "list",
                        "actions": "ListMembers",
                        "description": "Lists details about all member accounts for the current GuardDuty master account.",
                        "resource-types": "detector*"
                    },
                    "ListThreatIntelSets": {
                        "access-level": "list",
                        "actions": "ListThreatIntelSets",
                        "description": "Lists the ThreatIntelSets of the GuardDuty service specified by the detector ID.",
                        "resource-types": "detector*"
                    }
                },
                "read": {
                    "GetDetector": {
                        "access-level": "read",
                        "actions": "GetDetector",
                        "description": "Returns the properties of the Amazon GuardDuty detector that is specified by the detectorId.",
                        "resource-types": "detector*"
                    },
                    "GetFindings": {
                        "access-level": "read",
                        "actions": "GetFindings",
                        "description": "Describes Amazon GuardDuty findings specified by finding IDs.",
                        "resource-types": "detector*"
                    },
                    "GetFindingsStatistics": {
                        "access-level": "read",
                        "actions": "GetFindingsStatistics",
                        "description": "Lists Amazon GuardDuty findings\\' statistics for the specified detector ID.",
                        "resource-types": "detector*"
                    },
                    "GetIPSet": {
                        "access-level": "read",
                        "actions": "GetIPSet",
                        "description": "Returns the properties of the IPSet specified by the IPSet ID.",
                        "resource-types": "detector*"
                    },
                    "GetInvitationsCount": {
                        "access-level": "read",
                        "actions": "GetInvitationsCount",
                        "description": "Returns the count of all GuardDuty membership invitations that were sent to the current member account, not including the currently accepted invitation."
                    },
                    "GetMasterAccount": {
                        "access-level": "read",
                        "actions": "GetMasterAccount",
                        "description": "Provides the details for the GuardDuty master account to the current GuardDuty member account.",
                        "resource-types": "detector*"
                    },
                    "GetMembers": {
                        "access-level": "read",
                        "actions": "GetMembers",
                        "description": "Returns the details on the GuardDuty member accounts specified by the account IDs.",
                        "resource-types": "detector*"
                    },
                    "GetThreatIntelSet": {
                        "access-level": "read",
                        "actions": "GetThreatIntelSet",
                        "description": "Returns the properties of the ThreatIntelSet that is specified by the ThreatIntelSet ID.",
                        "resource-types": "detector*"
                    },
                    "ipset*": {
                        "access-level": "read",
                        "actions": "ipset*"
                    },
                    "threatintelset*": {
                        "access-level": "read",
                        "actions": "threatintelset*"
                    }
                },
                "write": {
                    "AcceptInvitation": {
                        "access-level": "write",
                        "actions": "AcceptInvitation",
                        "description": "Accepts the invitation to be monitored by a master GuardDuty account.",
                        "resource-types": "detector*"
                    },
                    "ArchiveFindings": {
                        "access-level": "write",
                        "actions": "ArchiveFindings",
                        "description": "Archives Amazon GuardDuty findings specified by the list of finding IDs.",
                        "resource-types": "detector*"
                    },
                    "CreateDetector": {
                        "access-level": "write",
                        "actions": "CreateDetector",
                        "description": "Creates an object representing the Amazon GuardDuty service."
                    },
                    "CreateIPSet": {
                        "access-level": "write",
                        "actions": "CreateIPSet",
                        "description": "Creates a new IPSet - a list of trusted IP addresses that have been whitelisted for secure communication with your AWS environment.",
                        "resource-types": "detector*"
                    },
                    "CreateMembers": {
                        "access-level": "write",
                        "actions": "CreateMembers",
                        "description": "Creates member GuardDuty accounts to the current AWS account (which becomes the master GuardDuty account) that has GuardDuty enabled.",
                        "resource-types": "detector*"
                    },
                    "CreateSampleFindings": {
                        "access-level": "write",
                        "actions": "CreateSampleFindings",
                        "description": "Creates sample findings of the types specified by a list of GuardDuty finding types. If \\'NULL\\' is specified for findingTypes, the operation creates sample findings of all supported GuardDuty finding types.",
                        "resource-types": "detector*"
                    },
                    "CreateThreatIntelSet": {
                        "access-level": "write",
                        "actions": "CreateThreatIntelSet",
                        "description": "Create a new ThreatIntelSet. ThreatIntelSets consist of known malicious IP addresses. GuardDuty generates findings based on ThreatIntelSets.",
                        "resource-types": "detector*"
                    },
                    "DeclineInvitations": {
                        "access-level": "write",
                        "actions": "DeclineInvitations",
                        "description": "Declines invitations sent to this AWS account (invitee) by the AWS accounts (inviters) specified by the account IDs."
                    },
                    "DeleteDetector": {
                        "access-level": "write",
                        "actions": "DeleteDetector",
                        "description": "Deletes the Amazon GuardDuty detector specified by the detector ID.",
                        "resource-types": "detector*"
                    },
                    "DeleteIPSet": {
                        "access-level": "write",
                        "actions": "DeleteIPSet",
                        "description": "Deletes the IPSet specified by the IPSet ID.",
                        "resource-types": "detector*"
                    },
                    "DeleteInvitations": {
                        "access-level": "write",
                        "actions": "DeleteInvitations",
                        "description": "Deletes invitations sent to this AWS account (invitee) by the AWS accounts (inviters) specified by their account IDs."
                    },
                    "DeleteMembers": {
                        "access-level": "write",
                        "actions": "DeleteMembers",
                        "description": "Deletes GuardDuty member accounts specified by the account IDs.",
                        "resource-types": "detector*"
                    },
                    "DeleteThreatIntelSet": {
                        "access-level": "write",
                        "actions": "DeleteThreatIntelSet",
                        "description": "Deletes the ThreatIntelSet specified by the ThreatIntelSet ID.",
                        "resource-types": "detector*"
                    },
                    "DisassociateFromMasterAccount": {
                        "access-level": "write",
                        "actions": "DisassociateFromMasterAccount",
                        "description": "Disassociates the current GuardDuty member account from its GuardDuty master account.",
                        "resource-types": "detector*"
                    },
                    "DisassociateMembers": {
                        "access-level": "write",
                        "actions": "DisassociateMembers",
                        "description": "Disassociates GuardDuty member accounts specified by the account IDs from their master GuardDuty account.",
                        "resource-types": "detector*"
                    },
                    "InviteMembers": {
                        "access-level": "write",
                        "actions": "InviteMembers",
                        "description": "Invites other AWS accounts to enable GuardDuty and become GuardDuty member accounts, thus allowing the master GuardDuty account to view and manage their GuardDuty findings on their behalf.",
                        "resource-types": "detector*"
                    },
                    "StartMonitoringMembers": {
                        "access-level": "write",
                        "actions": "StartMonitoringMembers",
                        "description": "Re-enables GuardDuty to monitor findings of the member accounts specified by the account IDs. A master GuardDuty account can run this command after disabling GuardDuty from monitoring these members\\' findings by running StopMonitoringMembers.",
                        "resource-types": "detector*"
                    },
                    "StopMonitoringMembers": {
                        "access-level": "write",
                        "actions": "StopMonitoringMembers",
                        "description": "Disables GuardDuty from monitoring findings of the member accounts specified by the account IDs. After running this command, a master GuardDuty account can run StartMonitoringMembers to re-enable GuardDuty to monitor these members\\' findings.",
                        "resource-types": "detector*"
                    },
                    "UnarchiveFindings": {
                        "access-level": "write",
                        "actions": "UnarchiveFindings",
                        "description": "Unarchives Amazon GuardDuty findings specified by the list of finding IDs.",
                        "resource-types": "detector*"
                    },
                    "UpdateDetector": {
                        "access-level": "write",
                        "actions": "UpdateDetector",
                        "description": "Updates the Amazon GuardDuty detector specified by the detectorId.",
                        "resource-types": "detector*"
                    },
                    "UpdateFindingsFeedback": {
                        "access-level": "write",
                        "actions": "UpdateFindingsFeedback",
                        "description": "Marks specified Amazon GuardDuty findings as useful or not useful.",
                        "resource-types": "detector*"
                    },
                    "UpdateIPSet": {
                        "access-level": "write",
                        "actions": "UpdateIPSet",
                        "description": "Updates the IPSet specified by the IPSet ID.",
                        "resource-types": "detector*"
                    },
                    "UpdateThreatIntelSet": {
                        "access-level": "write",
                        "actions": "UpdateThreatIntelSet",
                        "description": "Updates the ThreatIntelSet specified by ThreatIntelSet ID.",
                        "resource-types": "detector*"
                    },
                    "ipset*": {
                        "access-level": "write",
                        "actions": "ipset*"
                    },
                    "threatintelset*": {
                        "access-level": "write",
                        "actions": "threatintelset*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "detector": {
                    "arn": "arn:${Partition}:guardduty:${Region}:${Account}:detector/${DetectorId}",
                    "resource-types": "detector"
                },
                "ipset": {
                    "arn": "arn:${Partition}:guardduty:${Region}:${Account}:detector/${DetectorId}/ipset/${IPSetId}",
                    "resource-types": "ipset"
                },
                "threatintelset": {
                    "arn": "arn:${Partition}:guardduty:${Region}:${Account}:detector/${DetectorId}/threatintelset/${ThreatIntelSetId}",
                    "resource-types": "threatintelset"
                }
            }
        },
        "healthapisandnotifications": {
            "actions": {
                "read": {
                    "DescribeAffectedEntities": {
                        "access-level": "read",
                        "actions": "DescribeAffectedEntities",
                        "condition-keys": [
                            "health:eventTypeCode",
                            "health:service"
                        ],
                        "description": "Gets a list of entities that have been affected by the specified events.",
                        "resource-types": "event*"
                    },
                    "DescribeEntityAggregates": {
                        "access-level": "read",
                        "actions": "DescribeEntityAggregates",
                        "description": "Returns the number of entities that are affected by each of the specified events."
                    },
                    "DescribeEventAggregates": {
                        "access-level": "read",
                        "actions": "DescribeEventAggregates",
                        "description": "Returns the number of events of each event type (issue, scheduled change, and account notification)."
                    },
                    "DescribeEventDetails": {
                        "access-level": "read",
                        "actions": "DescribeEventDetails",
                        "condition-keys": [
                            "health:eventTypeCode",
                            "health:service"
                        ],
                        "description": "Returns detailed information about one or more specified events.",
                        "resource-types": "event*"
                    },
                    "DescribeEventTypes": {
                        "access-level": "read",
                        "actions": "DescribeEventTypes",
                        "description": "Returns the event types that meet the specified filter criteria."
                    },
                    "DescribeEvents": {
                        "access-level": "read",
                        "actions": "DescribeEvents",
                        "description": "Returns information about events that meet the specified filter criteria."
                    }
                }
            }
        },
        "iam_completions": [],
        "identityandaccessmanagement": {
            "actions": {
                "list": {
                    "GetAccountSummary": {
                        "access-level": "list",
                        "actions": "GetAccountSummary",
                        "description": "Retrieves information about IAM entity usage and IAM quotas in the AWS account."
                    },
                    "GetLoginProfile": {
                        "access-level": "list",
                        "actions": "GetLoginProfile",
                        "description": "Retrieves the user name and password-creation date for the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "ListAccessKeys": {
                        "access-level": "list",
                        "actions": "ListAccessKeys",
                        "description": "Returns information about the access key IDs associated with the specified IAM user. If there are none, the action returns an empty list.",
                        "resource-types": "user*"
                    },
                    "ListAccountAliases": {
                        "access-level": "list",
                        "actions": "ListAccountAliases",
                        "condition-keys": [
                            "Lists",
                            "the",
                            "account",
                            "alias",
                            "associated",
                            "with",
                            "the",
                            "AWS",
                            "account",
                            "(Note:",
                            "you",
                            "can",
                            "have",
                            "only",
                            "one)."
                        ]
                    },
                    "ListAttachedGroupPolicies": {
                        "access-level": "list",
                        "actions": "ListAttachedGroupPolicies",
                        "description": "Lists all managed policies that are attached to the specified IAM group.",
                        "resource-types": "group*"
                    },
                    "ListAttachedRolePolicies": {
                        "access-level": "list",
                        "actions": "ListAttachedRolePolicies",
                        "description": "Lists all managed policies that are attached to the specified IAM role.",
                        "resource-types": "role*"
                    },
                    "ListAttachedUserPolicies": {
                        "access-level": "list",
                        "actions": "ListAttachedUserPolicies",
                        "description": "Lists all managed policies that are attached to the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "ListEntitiesForPolicy": {
                        "access-level": "list",
                        "actions": "ListEntitiesForPolicy",
                        "description": "Lists all IAM users, groups, and roles that the specified managed policy is attached to.",
                        "resource-types": "policy*"
                    },
                    "ListGroupPolicies": {
                        "access-level": "list",
                        "actions": "ListGroupPolicies",
                        "description": "Lists the names of the inline policies that are embedded in the specified IAM group.",
                        "resource-types": "group*"
                    },
                    "ListGroups": {
                        "access-level": "list",
                        "actions": "ListGroups",
                        "description": "Lists the IAM groups that have the specified path prefix."
                    },
                    "ListGroupsForUser": {
                        "access-level": "list",
                        "actions": "ListGroupsForUser",
                        "description": "Lists the IAM groups that the specified IAM user belongs to.",
                        "resource-types": "user*"
                    },
                    "ListInstanceProfiles": {
                        "access-level": "list",
                        "actions": "ListInstanceProfiles",
                        "description": "Lists the instance profiles that have the specified path prefix.",
                        "resource-types": "instance-profile*"
                    },
                    "ListInstanceProfilesForRole": {
                        "access-level": "list",
                        "actions": "ListInstanceProfilesForRole",
                        "description": "Lists the instance profiles that have the specified associated IAM role.",
                        "resource-types": "role*"
                    },
                    "ListMFADevices": {
                        "access-level": "list",
                        "actions": "ListMFADevices",
                        "description": "Lists the MFA devices for an IAM user.",
                        "resource-types": "user"
                    },
                    "ListOpenIDConnectProviders": {
                        "access-level": "list",
                        "actions": "ListOpenIDConnectProviders",
                        "description": "Lists information about the IAM OpenID Connect (OIDC) provider resource objects defined in the AWS account."
                    },
                    "ListPolicies": {
                        "access-level": "list",
                        "actions": "ListPolicies",
                        "description": "Lists all the managed policies that are available in your AWS account, including your own customer-defined managed policies and all AWS managed policies."
                    },
                    "ListPolicyVersions": {
                        "access-level": "list",
                        "actions": "ListPolicyVersions",
                        "description": "Lists information about the versions of the specified managed policy, including the version that is currently set as the policy\\'s default version.",
                        "resource-types": "policy*"
                    },
                    "ListRolePolicies": {
                        "access-level": "list",
                        "actions": "ListRolePolicies",
                        "description": "Lists the names of the inline policies that are embedded in the specified IAM role.",
                        "resource-types": "role*"
                    },
                    "ListRoleTags": {
                        "access-level": "list",
                        "actions": "ListRoleTags",
                        "description": "Lists the tags that are attached to the specified role.",
                        "resource-types": "role*"
                    },
                    "ListRoles": {
                        "access-level": "list",
                        "actions": "ListRoles",
                        "description": "Lists the IAM roles that have the specified path prefix."
                    },
                    "ListSAMLProviders": {
                        "access-level": "list",
                        "actions": "ListSAMLProviders",
                        "description": "Lists the SAML provider resource objects defined in IAM in the account."
                    },
                    "ListSSHPublicKeys": {
                        "access-level": "list",
                        "actions": "ListSSHPublicKeys",
                        "description": "Returns information about the SSH public keys associated with the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "ListServerCertificates": {
                        "access-level": "list",
                        "actions": "ListServerCertificates",
                        "description": "Lists the server certificates stored in IAM that have the specified path prefix. If none exist, the action returns an empty list."
                    },
                    "ListServiceSpecificCredentials": {
                        "access-level": "list",
                        "actions": "ListServiceSpecificCredentials",
                        "description": "List service-specific credentials associated with the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "ListSigningCertificates": {
                        "access-level": "list",
                        "actions": "ListSigningCertificates",
                        "description": "Returns information about the signing certificates associated with the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "ListUserPolicies": {
                        "access-level": "list",
                        "actions": "ListUserPolicies",
                        "description": "Lists the names of the inline policies embedded in the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "ListUserTags": {
                        "access-level": "list",
                        "actions": "ListUserTags",
                        "description": "Lists the tags that are attached to the specified user.",
                        "resource-types": "user*"
                    },
                    "ListUsers": {
                        "access-level": "list",
                        "actions": "ListUsers",
                        "description": "Lists the IAM users that have the specified path prefix."
                    },
                    "ListVirtualMFADevices": {
                        "access-level": "list",
                        "actions": "ListVirtualMFADevices",
                        "description": "Lists the virtual MFA devices defined in the AWS account by assignment status."
                    }
                },
                "permissions-management": {
                    "AttachGroupPolicy": {
                        "access-level": "permissions-management",
                        "actions": "AttachGroupPolicy",
                        "condition-keys": [
                            "iam:PolicyARN"
                        ],
                        "description": "Attaches the specified managed policy to the specified IAM group.",
                        "resource-types": "group*"
                    },
                    "AttachRolePolicy": {
                        "access-level": "permissions-management",
                        "actions": "AttachRolePolicy",
                        "condition-keys": [
                            "iam:PolicyARN",
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Attaches the specified managed policy to the specified IAM role.",
                        "resource-types": "role*"
                    },
                    "AttachUserPolicy": {
                        "access-level": "permissions-management",
                        "actions": "AttachUserPolicy",
                        "condition-keys": [
                            "iam:PolicyARN",
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Attaches the specified managed policy to the specified user.",
                        "resource-types": "user*"
                    },
                    "CreatePolicy": {
                        "access-level": "permissions-management",
                        "actions": "CreatePolicy",
                        "description": "Creates a new managed policy for your AWS account.",
                        "resource-types": "policy*"
                    },
                    "CreatePolicyVersion": {
                        "access-level": "permissions-management",
                        "actions": "CreatePolicyVersion",
                        "description": "Creates a new version of the specified managed policy.",
                        "resource-types": "policy*"
                    },
                    "DeleteAccountPasswordPolicy": {
                        "access-level": "permissions-management",
                        "actions": "DeleteAccountPasswordPolicy",
                        "description": "Deletes the password policy for the AWS account."
                    },
                    "DeleteGroupPolicy": {
                        "access-level": "permissions-management",
                        "actions": "DeleteGroupPolicy",
                        "description": "Deletes the specified inline policy that is embedded in the specified IAM group.",
                        "resource-types": "group*"
                    },
                    "DeletePolicy": {
                        "access-level": "permissions-management",
                        "actions": "DeletePolicy",
                        "description": "Deletes the specified managed policy.",
                        "resource-types": "policy*"
                    },
                    "DeletePolicyVersion": {
                        "access-level": "permissions-management",
                        "actions": "DeletePolicyVersion",
                        "description": "Deletes the specified version from the specified managed policy.",
                        "resource-types": "policy*"
                    },
                    "DeleteRolePermissionsBoundary": {
                        "access-level": "permissions-management",
                        "actions": "DeleteRolePermissionsBoundary",
                        "condition-keys": [
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Deletes the permissions boundary from a role.",
                        "resource-types": "role*"
                    },
                    "DeleteRolePolicy": {
                        "access-level": "permissions-management",
                        "actions": "DeleteRolePolicy",
                        "condition-keys": [
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Deletes the specified inline policy that is embedded in the specified IAM role.",
                        "resource-types": "role*"
                    },
                    "DeleteUserPermissionsBoundary": {
                        "access-level": "permissions-management",
                        "actions": "DeleteUserPermissionsBoundary",
                        "condition-keys": [
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Deletes the permissions boundary from the user.",
                        "resource-types": "user*"
                    },
                    "DeleteUserPolicy": {
                        "access-level": "permissions-management",
                        "actions": "DeleteUserPolicy",
                        "condition-keys": [
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Deletes the specified inline policy that is embedded in the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "DetachGroupPolicy": {
                        "access-level": "permissions-management",
                        "actions": "DetachGroupPolicy",
                        "condition-keys": [
                            "iam:PolicyARN"
                        ],
                        "description": "Removes the specified managed policy from the specified IAM group.",
                        "resource-types": "group*"
                    },
                    "DetachRolePolicy": {
                        "access-level": "permissions-management",
                        "actions": "DetachRolePolicy",
                        "condition-keys": [
                            "iam:PolicyARN",
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Removes the specified managed policy from the specified role.",
                        "resource-types": "role*"
                    },
                    "DetachUserPolicy": {
                        "access-level": "permissions-management",
                        "actions": "DetachUserPolicy",
                        "condition-keys": [
                            "iam:PolicyARN",
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Removes the specified managed policy from the specified user.",
                        "resource-types": "user*"
                    },
                    "PutGroupPolicy": {
                        "access-level": "permissions-management",
                        "actions": "PutGroupPolicy",
                        "description": "Adds or updates an inline policy document that is embedded in the specified IAM group.",
                        "resource-types": "group*"
                    },
                    "PutRolePermissionsBoundary": {
                        "access-level": "permissions-management",
                        "actions": "PutRolePermissionsBoundary",
                        "condition-keys": [
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Put a policy to a role as permissions boundary",
                        "resource-types": "role*"
                    },
                    "PutRolePolicy": {
                        "access-level": "permissions-management",
                        "actions": "PutRolePolicy",
                        "condition-keys": [
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Adds or updates an inline policy document that is embedded in the specified IAM role.",
                        "resource-types": "role*"
                    },
                    "PutUserPermissionsBoundary": {
                        "access-level": "permissions-management",
                        "actions": "PutUserPermissionsBoundary",
                        "condition-keys": [
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Put a policy to a user as permissions boundary",
                        "resource-types": "user*"
                    },
                    "PutUserPolicy": {
                        "access-level": "permissions-management",
                        "actions": "PutUserPolicy",
                        "condition-keys": [
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Adds or updates an inline policy document that is embedded in the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "SetDefaultPolicyVersion": {
                        "access-level": "permissions-management",
                        "actions": "SetDefaultPolicyVersion",
                        "description": "Sets the specified version of the specified policy as the policy\\'s default (operative) version.",
                        "resource-types": "policy*"
                    },
                    "UpdateAssumeRolePolicy": {
                        "access-level": "permissions-management",
                        "actions": "UpdateAssumeRolePolicy",
                        "description": "Updates the policy that grants an IAM entity permission to assume a role.",
                        "resource-types": "role*"
                    }
                },
                "read": {
                    "GenerateCredentialReport": {
                        "access-level": "read",
                        "actions": "GenerateCredentialReport",
                        "description": "Generates a credential report for the AWS account."
                    },
                    "GetAccessKeyLastUsed": {
                        "access-level": "read",
                        "actions": "GetAccessKeyLastUsed",
                        "description": "Retrieves information about when the specified access key was last used.",
                        "resource-types": "user*"
                    },
                    "GetAccountAuthorizationDetails": {
                        "access-level": "read",
                        "actions": "GetAccountAuthorizationDetails",
                        "description": "Retrieves information about all IAM users, groups, roles, and policies in your AWS account, including their relationships to one another."
                    },
                    "GetAccountPasswordPolicy": {
                        "access-level": "read",
                        "actions": "GetAccountPasswordPolicy",
                        "description": "Retrieves the password policy for the AWS account."
                    },
                    "GetContextKeysForCustomPolicy": {
                        "access-level": "read",
                        "actions": "GetContextKeysForCustomPolicy",
                        "description": "Gets a list of all of the context keys referenced in the input policies."
                    },
                    "GetContextKeysForPrincipalPolicy": {
                        "access-level": "read",
                        "actions": "GetContextKeysForPrincipalPolicy",
                        "description": "Gets a list of all of the context keys referenced in all of the IAM policies attached to the specified IAM entity.",
                        "resource-types": "group"
                    },
                    "GetCredentialReport": {
                        "access-level": "read",
                        "actions": "GetCredentialReport",
                        "description": "Retrieves a credential report for the AWS account. For more information about the credential report."
                    },
                    "GetGroup": {
                        "access-level": "read",
                        "actions": "GetGroup",
                        "description": "Returns a list of IAM users that are in the specified IAM group.",
                        "resource-types": "group*"
                    },
                    "GetGroupPolicy": {
                        "access-level": "read",
                        "actions": "GetGroupPolicy",
                        "description": "Retrieves the specified inline policy document that is embedded in the specified IAM group.",
                        "resource-types": "group*"
                    },
                    "GetInstanceProfile": {
                        "access-level": "read",
                        "actions": "GetInstanceProfile",
                        "description": "Retrieves information about the specified instance profile, including the instance profile\\'s path, GUID, ARN, and role.",
                        "resource-types": "instance-profile*"
                    },
                    "GetOpenIDConnectProvider": {
                        "access-level": "read",
                        "actions": "GetOpenIDConnectProvider",
                        "description": "Returns information about the specified OpenID Connect (OIDC) provider resource object in IAM.",
                        "resource-types": "oidc-provider*"
                    },
                    "GetPolicy": {
                        "access-level": "read",
                        "actions": "GetPolicy",
                        "description": "Retrieves information about the specified managed policy, including the policy\\'s default version and the total number of IAM users, groups, and roles to which the policy is attached.",
                        "resource-types": "policy*"
                    },
                    "GetPolicyVersion": {
                        "access-level": "read",
                        "actions": "GetPolicyVersion",
                        "description": "Retrieves information about the specified version of the specified managed policy, including the policy document.",
                        "resource-types": "policy*"
                    },
                    "GetRole": {
                        "access-level": "read",
                        "actions": "GetRole",
                        "description": "Retrieves information about the specified role, including the role\\'s path, GUID, ARN, and the role\\'s trust policy that grants permission to assume the role.",
                        "resource-types": "role*"
                    },
                    "GetRolePolicy": {
                        "access-level": "read",
                        "actions": "GetRolePolicy",
                        "description": "Retrieves the specified inline policy document that is embedded with the specified IAM role.",
                        "resource-types": "role*"
                    },
                    "GetSAMLProvider": {
                        "access-level": "read",
                        "actions": "GetSAMLProvider",
                        "description": "Returns the SAML provider metadocument that was uploaded when the IAM SAML provider resource object was created or updated.",
                        "resource-types": "saml-provider*"
                    },
                    "GetSSHPublicKey": {
                        "access-level": "read",
                        "actions": "GetSSHPublicKey",
                        "description": "Retrieves the specified SSH public key, including metadata about the key.",
                        "resource-types": "user*"
                    },
                    "GetServerCertificate": {
                        "access-level": "read",
                        "actions": "GetServerCertificate",
                        "description": "Retrieves information about the specified server certificate stored in IAM.",
                        "resource-types": "server-certificate*"
                    },
                    "GetServiceLinkedRoleDeletionStatus": {
                        "access-level": "read",
                        "actions": "GetServiceLinkedRoleDeletionStatus",
                        "description": "Retrieves an IAM service linked role deletion status.",
                        "resource-types": "role*"
                    },
                    "GetUser": {
                        "access-level": "read",
                        "actions": "GetUser",
                        "description": "Retrieves information about the specified IAM user, including the user\\'s creation date, path, unique ID, and ARN.",
                        "resource-types": "user*"
                    },
                    "GetUserPolicy": {
                        "access-level": "read",
                        "actions": "GetUserPolicy",
                        "description": "Retrieves the specified inline policy document that is embedded in the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "SimulateCustomPolicy": {
                        "access-level": "read",
                        "actions": "SimulateCustomPolicy",
                        "description": "Simulate how a set of IAM policies and optionally a resource-based policy works with a list of API actions and AWS resources to determine the policies\\' effective permissions."
                    },
                    "SimulatePrincipalPolicy": {
                        "access-level": "read",
                        "actions": "SimulatePrincipalPolicy",
                        "description": "Simulate how a set of IAM policies attached to an IAM entity works with a list of API actions and AWS resources to determine the policies\\' effective permissions.",
                        "resource-types": "group"
                    },
                    "role": {
                        "access-level": "read",
                        "actions": "role"
                    },
                    "user": {
                        "access-level": "read",
                        "actions": "user"
                    }
                },
                "tagging": {
                    "CreateRole": {
                        "access-level": "tagging",
                        "actions": "CreateRole",
                        "condition-keys": [
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Creates a new role for your AWS account.",
                        "resource-types": "role*"
                    },
                    "CreateUser": {
                        "access-level": "tagging",
                        "actions": "CreateUser",
                        "condition-keys": [
                            "iam:PermissionsBoundary"
                        ],
                        "description": "Creates a new IAM user for your AWS account.",
                        "resource-types": "user*"
                    },
                    "DeleteRole": {
                        "access-level": "tagging",
                        "actions": "DeleteRole",
                        "description": "Deletes the specified role.",
                        "resource-types": "role*"
                    },
                    "DeleteUser": {
                        "access-level": "tagging",
                        "actions": "DeleteUser",
                        "description": "Deletes the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "TagRole": {
                        "access-level": "tagging",
                        "actions": "TagRole",
                        "description": "Adds one or more tags to an IAM role.",
                        "resource-types": "role*"
                    },
                    "TagUser": {
                        "access-level": "tagging",
                        "actions": "TagUser",
                        "description": "Adds one or more tags to an IAM user.",
                        "resource-types": "user*"
                    },
                    "UntagRole": {
                        "access-level": "tagging",
                        "actions": "UntagRole",
                        "description": "Removes the specified tags from the role.",
                        "resource-types": "role*"
                    },
                    "UntagUser": {
                        "access-level": "tagging",
                        "actions": "UntagUser",
                        "description": "Removes the specified tags from the user.",
                        "resource-types": "user*"
                    }
                },
                "write": {
                    "AddClientIDToOpenIDConnectProvider": {
                        "access-level": "write",
                        "actions": "AddClientIDToOpenIDConnectProvider",
                        "description": "Adds a new client ID (also known as audience) to the list of client IDs already registered for the specified IAM OpenID Connect (OIDC) provider resource.",
                        "resource-types": "oidc-provider*"
                    },
                    "AddRoleToInstanceProfile": {
                        "access-level": "write",
                        "actions": "AddRoleToInstanceProfile",
                        "description": "Adds the specified IAM role to the specified instance profile.",
                        "resource-types": "instance-profile*"
                    },
                    "AddUserToGroup": {
                        "access-level": "write",
                        "actions": "AddUserToGroup",
                        "description": "Adds the specified user to the specified group.",
                        "resource-types": "group*"
                    },
                    "ChangePassword": {
                        "access-level": "write",
                        "actions": "ChangePassword",
                        "description": "Changes the password of the IAM user who is calling this action.",
                        "resource-types": "user*"
                    },
                    "CreateAccessKey": {
                        "access-level": "write",
                        "actions": "CreateAccessKey",
                        "description": "Creates a new AWS secret access key and corresponding AWS access key ID for the specified user.",
                        "resource-types": "user*"
                    },
                    "CreateAccountAlias": {
                        "access-level": "write",
                        "actions": "CreateAccountAlias",
                        "description": "Creates an alias for your AWS account."
                    },
                    "CreateGroup": {
                        "access-level": "write",
                        "actions": "CreateGroup",
                        "description": "Creates a new group.",
                        "resource-types": "group*"
                    },
                    "CreateInstanceProfile": {
                        "access-level": "write",
                        "actions": "CreateInstanceProfile",
                        "description": "Creates a new instance profile.",
                        "resource-types": "instance-profile*"
                    },
                    "CreateLoginProfile": {
                        "access-level": "write",
                        "actions": "CreateLoginProfile",
                        "description": "Creates a password for the specified user, giving the user the ability to access AWS services through the AWS Management Console.",
                        "resource-types": "user*"
                    },
                    "CreateOpenIDConnectProvider": {
                        "access-level": "write",
                        "actions": "CreateOpenIDConnectProvider",
                        "description": "Creates an IAM entity to describe an identity provider (IdP) that supports OpenID Connect (OIDC).",
                        "resource-types": "oidc-provider*"
                    },
                    "CreateSAMLProvider": {
                        "access-level": "write",
                        "actions": "CreateSAMLProvider",
                        "description": "Creates an IAM resource that describes an identity provider (IdP) that supports SAML 2.0.",
                        "resource-types": "saml-provider*"
                    },
                    "CreateServiceLinkedRole": {
                        "access-level": "write",
                        "actions": "CreateServiceLinkedRole",
                        "condition-keys": [
                            "iam:AWSServiceName"
                        ],
                        "description": "Creates an IAM role that is linked to a specific AWS service.",
                        "resource-types": "role*"
                    },
                    "CreateServiceSpecificCredential": {
                        "access-level": "write",
                        "actions": "CreateServiceSpecificCredential",
                        "description": "Creates a new service-specific credential for an IAM user.",
                        "resource-types": "user*"
                    },
                    "CreateVirtualMFADevice": {
                        "access-level": "write",
                        "actions": "CreateVirtualMFADevice",
                        "description": "Creates a new virtual MFA device for the AWS account.",
                        "resource-types": "mfa*"
                    },
                    "DeactivateMFADevice": {
                        "access-level": "write",
                        "actions": "DeactivateMFADevice",
                        "description": "Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.",
                        "resource-types": "user*"
                    },
                    "DeleteAccessKey": {
                        "access-level": "write",
                        "actions": "DeleteAccessKey",
                        "description": "Deletes the access key pair associated with the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "DeleteAccountAlias": {
                        "access-level": "write",
                        "actions": "DeleteAccountAlias",
                        "description": "Deletes the specified AWS account alias. For information about using an AWS account alias."
                    },
                    "DeleteGroup": {
                        "access-level": "write",
                        "actions": "DeleteGroup",
                        "description": "Deletes the specified IAM group.",
                        "resource-types": "group*"
                    },
                    "DeleteInstanceProfile": {
                        "access-level": "write",
                        "actions": "DeleteInstanceProfile",
                        "description": "Deletes the specified instance profile.",
                        "resource-types": "instance-profile*"
                    },
                    "DeleteLoginProfile": {
                        "access-level": "write",
                        "actions": "DeleteLoginProfile",
                        "description": "Deletes the password for the specified IAM user, which terminates the user\\'s ability to access AWS services through the AWS Management Console.",
                        "resource-types": "user*"
                    },
                    "DeleteOpenIDConnectProvider": {
                        "access-level": "write",
                        "actions": "DeleteOpenIDConnectProvider",
                        "description": "Deletes an OpenID Connect identity provider (IdP) resource object in IAM.",
                        "resource-types": "oidc-provider*"
                    },
                    "DeleteSAMLProvider": {
                        "access-level": "write",
                        "actions": "DeleteSAMLProvider",
                        "description": "Deletes a SAML provider resource in IAM.",
                        "resource-types": "saml-provider*"
                    },
                    "DeleteSSHPublicKey": {
                        "access-level": "write",
                        "actions": "DeleteSSHPublicKey",
                        "description": "Deletes the specified SSH public key.",
                        "resource-types": "user*"
                    },
                    "DeleteServerCertificate": {
                        "access-level": "write",
                        "actions": "DeleteServerCertificate",
                        "description": "Deletes the specified server certificate.",
                        "resource-types": "server-certificate*"
                    },
                    "DeleteServiceLinkedRole": {
                        "access-level": "write",
                        "actions": "DeleteServiceLinkedRole",
                        "description": "Deletes an IAM role that is linked to a specific AWS service.",
                        "resource-types": "role*"
                    },
                    "DeleteServiceSpecificCredential": {
                        "access-level": "write",
                        "actions": "DeleteServiceSpecificCredential",
                        "description": "Deletes the specified service-specific credential for an IAM user.",
                        "resource-types": "user*"
                    },
                    "DeleteSigningCertificate": {
                        "access-level": "write",
                        "actions": "DeleteSigningCertificate",
                        "description": "Deletes a signing certificate associated with the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "DeleteVirtualMFADevice": {
                        "access-level": "write",
                        "actions": "DeleteVirtualMFADevice",
                        "description": "Deletes a virtual MFA device.",
                        "resource-types": "mfa"
                    },
                    "EnableMFADevice": {
                        "access-level": "write",
                        "actions": "EnableMFADevice",
                        "description": "Enables the specified MFA device and associates it with the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "PassRole [permission only]": {
                        "access-level": "write",
                        "actions": "PassRole [permission only]",
                        "condition-keys": [
                            "iam:PassedToService"
                        ],
                        "description": "Enables passing a role to a service.",
                        "resource-types": "role*"
                    },
                    "RemoveClientIDFromOpenIDConnectProvider": {
                        "access-level": "write",
                        "actions": "RemoveClientIDFromOpenIDConnectProvider",
                        "description": "Removes the specified client ID (also known as audience) from the list of client IDs registered for the specified IAM OpenID Connect (OIDC) provider resource object.",
                        "resource-types": "oidc-provider*"
                    },
                    "RemoveRoleFromInstanceProfile": {
                        "access-level": "write",
                        "actions": "RemoveRoleFromInstanceProfile",
                        "description": "Removes the specified IAM role from the specified EC2 instance profile.",
                        "resource-types": "instance-profile*"
                    },
                    "RemoveUserFromGroup": {
                        "access-level": "write",
                        "actions": "RemoveUserFromGroup",
                        "description": "Removes the specified user from the specified group.",
                        "resource-types": "group*"
                    },
                    "ResetServiceSpecificCredential": {
                        "access-level": "write",
                        "actions": "ResetServiceSpecificCredential",
                        "description": "Resets the password for an existing service-specific credential for an IAM user.",
                        "resource-types": "user*"
                    },
                    "ResyncMFADevice": {
                        "access-level": "write",
                        "actions": "ResyncMFADevice",
                        "description": "Synchronizes the specified MFA device with its IAM resource object on the AWS servers.",
                        "resource-types": "user*"
                    },
                    "UpdateAccessKey": {
                        "access-level": "write",
                        "actions": "UpdateAccessKey",
                        "description": "Changes the status of the specified access key from Active to Inactive, or vice versa.",
                        "resource-types": "user*"
                    },
                    "UpdateAccountPasswordPolicy": {
                        "access-level": "write",
                        "actions": "UpdateAccountPasswordPolicy",
                        "description": "Updates the password policy settings for the AWS account."
                    },
                    "UpdateGroup": {
                        "access-level": "write",
                        "actions": "UpdateGroup",
                        "description": "Updates the name and/or the path of the specified IAM group.",
                        "resource-types": "group*"
                    },
                    "UpdateLoginProfile": {
                        "access-level": "write",
                        "actions": "UpdateLoginProfile",
                        "description": "Changes the password for the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "UpdateOpenIDConnectProviderThumbprint": {
                        "access-level": "write",
                        "actions": "UpdateOpenIDConnectProviderThumbprint",
                        "description": "Replaces the existing list of server certificate thumbprints associated with an OpenID Connect (OIDC) provider resource object with a new list of thumbprints.",
                        "resource-types": "oidc-provider*"
                    },
                    "UpdateRole": {
                        "access-level": "write",
                        "actions": "UpdateRole",
                        "description": "Updates the description or maximum session duration setting of a role.",
                        "resource-types": "role*"
                    },
                    "UpdateRoleDescription": {
                        "access-level": "write",
                        "actions": "UpdateRoleDescription",
                        "description": "Modifies only the description of a role. This operation performs the same function as the Description parameter in the UpdateRole operation.",
                        "resource-types": "role*"
                    },
                    "UpdateSAMLProvider": {
                        "access-level": "write",
                        "actions": "UpdateSAMLProvider",
                        "description": "Updates the metadata document for an existing SAML provider resource object.",
                        "resource-types": "saml-provider*"
                    },
                    "UpdateSSHPublicKey": {
                        "access-level": "write",
                        "actions": "UpdateSSHPublicKey",
                        "description": "Sets the status of an IAM user\\'s SSH public key to active or inactive.",
                        "resource-types": "user*"
                    },
                    "UpdateServerCertificate": {
                        "access-level": "write",
                        "actions": "UpdateServerCertificate",
                        "description": "Updates the name and/or the path of the specified server certificate stored in IAM.",
                        "resource-types": "server-certificate*"
                    },
                    "UpdateServiceSpecificCredential": {
                        "access-level": "write",
                        "actions": "UpdateServiceSpecificCredential",
                        "description": "Sets the status of a service-specific credential to active or inactive for an IAM user.",
                        "resource-types": "user*"
                    },
                    "UpdateSigningCertificate": {
                        "access-level": "write",
                        "actions": "UpdateSigningCertificate",
                        "description": "Changes the status of the specified user signing certificate from active to disabled, or vice versa.",
                        "resource-types": "user*"
                    },
                    "UpdateUser": {
                        "access-level": "write",
                        "actions": "UpdateUser",
                        "description": "Updates the name and/or the path of the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "UploadSSHPublicKey": {
                        "access-level": "write",
                        "actions": "UploadSSHPublicKey",
                        "description": "Uploads an SSH public key and associates it with the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "UploadServerCertificate": {
                        "access-level": "write",
                        "actions": "UploadServerCertificate",
                        "description": "Uploads a server certificate entity for the AWS account",
                        "resource-types": "server-certificate*"
                    },
                    "UploadSigningCertificate": {
                        "access-level": "write",
                        "actions": "UploadSigningCertificate",
                        "description": "Uploads an X.509 signing certificate and associates it with the specified IAM user.",
                        "resource-types": "user*"
                    },
                    "sms-mfa": {
                        "access-level": "write",
                        "actions": "sms-mfa"
                    }
                }
            },
            "condition-keys": [
                "",
                "iam:ResourceTag/tag-key"
            ],
            "resource-types": {
                "assumed-role": {
                    "arn": "arn:${Partition}:iam::${Account}:assumed-role/${RoleName}/${RoleSessionName}",
                    "resource-types": "assumed-role"
                },
                "federated-user": {
                    "arn": "arn:${Partition}:iam::${Account}:federated-user/${UserName}",
                    "resource-types": "federated-user"
                },
                "group": {
                    "arn": "arn:${Partition}:iam::${Account}:group/${GroupNameWithPath}",
                    "resource-types": "group"
                },
                "instance-profile": {
                    "arn": "arn:${Partition}:iam::${Account}:instance-profile/${InstanceProfileNameWithPath}",
                    "resource-types": "instance-profile"
                },
                "mfa": {
                    "arn": "arn:${Partition}:iam::${Account}:mfa/${Path}/${MfaTokenId}",
                    "resource-types": "mfa"
                },
                "oidc-provider": {
                    "arn": "arn:${Partition}:iam::${Account}:oidc-provider/${OidcProviderName}",
                    "resource-types": "oidc-provider"
                },
                "policy": {
                    "arn": "arn:${Partition}:iam::${Account}:policy/${PolicyNameWithPath}",
                    "resource-types": "policy"
                },
                "role": {
                    "arn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}",
                    "condition-keys": "iam:ResourceTag/tag-key",
                    "resource-types": "role"
                },
                "saml-provider": {
                    "arn": "arn:${Partition}:iam::${Account}:saml-provider/${SamlProviderName}",
                    "resource-types": "saml-provider"
                },
                "server-certificate": {
                    "arn": "arn:${Partition}:iam::${Account}:server-certificate/${CertificateNameWithPath}",
                    "resource-types": "server-certificate"
                },
                "sms-mfa": {
                    "arn": "arn:${Partition}:iam::${Account}:sms-mfa/${MfaTokenIdWithPath}",
                    "resource-types": "sms-mfa"
                },
                "user": {
                    "arn": "arn:${Partition}:iam::${Account}:user/${UserNameWithPath}",
                    "condition-keys": "iam:ResourceTag/tag-key",
                    "resource-types": "user"
                }
            }
        },
        "importexportdiskservice": {
            "actions": {
                "list": {
                    "ListJobs": {
                        "access-level": "list",
                        "actions": "ListJobs",
                        "description": "This action returns the jobs associated with the requester."
                    }
                },
                "read": {
                    "GetShippingLabel": {
                        "access-level": "read",
                        "actions": "GetShippingLabel",
                        "description": "This action generates a pre-paid shipping label that you will use to ship your device to AWS for processing."
                    },
                    "GetStatus": {
                        "access-level": "read",
                        "actions": "GetStatus",
                        "description": "This action returns information about a job, including where the job is in the processing pipeline, the status of the results, and the signature value associated with the job."
                    }
                },
                "write": {
                    "CancelJob": {
                        "access-level": "write",
                        "actions": "CancelJob",
                        "description": "This action cancels a specified job. Only the job owner can cancel it. The action fails if the job has already started or is complete."
                    },
                    "CreateJob": {
                        "access-level": "write",
                        "actions": "CreateJob",
                        "description": "This action initiates the process of scheduling an upload or download of your data."
                    },
                    "UpdateJob": {
                        "access-level": "write",
                        "actions": "UpdateJob",
                        "description": "You use this action to change the parameters specified in the original manifest file by supplying a new manifest file."
                    }
                }
            }
        },
        "inspector": {
            "actions": {
                "list": {
                    "ListAssessmentRunAgents": {
                        "access-level": "list",
                        "actions": "ListAssessmentRunAgents",
                        "description": "Lists the agents of the assessment runs that are specified by the ARNs of the assessment runs."
                    },
                    "ListAssessmentRuns": {
                        "access-level": "list",
                        "actions": "ListAssessmentRuns",
                        "description": "Lists the assessment runs that correspond to the assessment templates that are specified by the ARNs of the assessment templates."
                    },
                    "ListAssessmentTargets": {
                        "access-level": "list",
                        "actions": "ListAssessmentTargets",
                        "description": "Lists the ARNs of the assessment targets within this AWS account."
                    },
                    "ListAssessmentTemplates": {
                        "access-level": "list",
                        "actions": "ListAssessmentTemplates",
                        "description": "Lists the assessment templates that correspond to the assessment targets that are specified by the ARNs of the assessment targets."
                    },
                    "ListEventSubscriptions": {
                        "access-level": "list",
                        "actions": "ListEventSubscriptions",
                        "description": "Lists all the event subscriptions for the assessment template that is specified by the ARN of the assessment template."
                    },
                    "ListFindings": {
                        "access-level": "list",
                        "actions": "ListFindings",
                        "description": "Lists findings that are generated by the assessment runs that are specified by the ARNs of the assessment runs."
                    },
                    "ListRulesPackages": {
                        "access-level": "list",
                        "actions": "ListRulesPackages",
                        "description": "Lists all available Amazon Inspector rules packages."
                    },
                    "ListTagsForResource": {
                        "access-level": "list",
                        "actions": "ListTagsForResource",
                        "description": "Lists all tags associated with an assessment template."
                    }
                },
                "read": {
                    "DescribeAssessmentRuns": {
                        "access-level": "read",
                        "actions": "DescribeAssessmentRuns",
                        "description": "Describes the assessment runs that are specified by the ARNs of the assessment runs."
                    },
                    "DescribeAssessmentTargets": {
                        "access-level": "read",
                        "actions": "DescribeAssessmentTargets",
                        "description": "Describes the assessment targets that are specified by the ARNs of the assessment targets."
                    },
                    "DescribeAssessmentTemplates": {
                        "access-level": "read",
                        "actions": "DescribeAssessmentTemplates",
                        "description": "Describes the assessment templates that are specified by the ARNs of the assessment templates."
                    },
                    "DescribeCrossAccountAccessRole": {
                        "access-level": "read",
                        "actions": "DescribeCrossAccountAccessRole",
                        "description": "Describes the IAM role that enables Amazon Inspector to access your AWS account."
                    },
                    "DescribeFindings": {
                        "access-level": "read",
                        "actions": "DescribeFindings",
                        "description": "Describes the findings that are specified by the ARNs of the findings."
                    },
                    "DescribeResourceGroups": {
                        "access-level": "read",
                        "actions": "DescribeResourceGroups",
                        "description": "Describes the resource groups that are specified by the ARNs of the resource groups."
                    },
                    "DescribeRulesPackages": {
                        "access-level": "read",
                        "actions": "DescribeRulesPackages",
                        "description": "Describes the rules packages that are specified by the ARNs of the rules packages."
                    },
                    "GetTelemetryMetadata": {
                        "access-level": "read",
                        "actions": "GetTelemetryMetadata",
                        "description": "Information about the data that is collected for the specified assessment run."
                    },
                    "PreviewAgents": {
                        "access-level": "read",
                        "actions": "PreviewAgents",
                        "description": "Previews the agents installed on the EC2 instances that are part of the specified assessment target."
                    }
                },
                "tagging": {
                    "SetTagsForResource": {
                        "access-level": "tagging",
                        "actions": "SetTagsForResource",
                        "description": "Sets tags (key and value pairs) to the assessment template that is specified by the ARN of the assessment template."
                    }
                },
                "write": {
                    "AddAttributesToFindings": {
                        "access-level": "write",
                        "actions": "AddAttributesToFindings",
                        "description": "Assigns attributes (key and value pairs) to the findings that are specified by the ARNs of the findings."
                    },
                    "CreateAssessmentTarget": {
                        "access-level": "write",
                        "actions": "CreateAssessmentTarget",
                        "description": "Creates a new assessment target using the ARN of the resource group that is generated by CreateResourceGroup."
                    },
                    "CreateAssessmentTemplate": {
                        "access-level": "write",
                        "actions": "CreateAssessmentTemplate",
                        "description": "Creates an assessment template for the assessment target that is specified by the ARN of the assessment target."
                    },
                    "CreateResourceGroup": {
                        "access-level": "write",
                        "actions": "CreateResourceGroup",
                        "description": "Creates a resource group using the specified set of tags (key and value pairs) that are used to select the EC2 instances to be included in an Amazon Inspector assessment target."
                    },
                    "DeleteAssessmentRun": {
                        "access-level": "write",
                        "actions": "DeleteAssessmentRun",
                        "description": "Deletes the assessment run that is specified by the ARN of the assessment run."
                    },
                    "DeleteAssessmentTarget": {
                        "access-level": "write",
                        "actions": "DeleteAssessmentTarget",
                        "description": "Deletes the assessment target that is specified by the ARN of the assessment target."
                    },
                    "DeleteAssessmentTemplate": {
                        "access-level": "write",
                        "actions": "DeleteAssessmentTemplate",
                        "description": "Deletes the assessment template that is specified by the ARN of the assessment template."
                    },
                    "RegisterCrossAccountAccessRole": {
                        "access-level": "write",
                        "actions": "RegisterCrossAccountAccessRole",
                        "description": "Registers the IAM role that Amazon Inspector uses to list your EC2 instances at the start of the assessment run or when you call the PreviewAgents action."
                    },
                    "RemoveAttributesFromFindings": {
                        "access-level": "write",
                        "actions": "RemoveAttributesFromFindings",
                        "description": "Removes entire attributes (key and value pairs) from the findings that are specified by the ARNs of the findings where an attribute with the specified key exists."
                    },
                    "StartAssessmentRun": {
                        "access-level": "write",
                        "actions": "StartAssessmentRun",
                        "description": "Starts the assessment run specified by the ARN of the assessment template."
                    },
                    "StopAssessmentRun": {
                        "access-level": "write",
                        "actions": "StopAssessmentRun",
                        "description": "Stops the assessment run that is specified by the ARN of the assessment run."
                    },
                    "SubscribeToEvent": {
                        "access-level": "write",
                        "actions": "SubscribeToEvent",
                        "description": "Enables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic."
                    },
                    "UnsubscribeFromEvent": {
                        "access-level": "write",
                        "actions": "UnsubscribeFromEvent",
                        "description": "Disables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic."
                    },
                    "UpdateAssessmentTarget": {
                        "access-level": "write",
                        "actions": "UpdateAssessmentTarget",
                        "description": "Updates the assessment target that is specified by the ARN of the assessment target."
                    }
                }
            }
        },
        "iot": {
            "actions": {
                "list": {
                    "ListAttachedPolicies": {
                        "access-level": "list",
                        "actions": "ListAttachedPolicies",
                        "description": "Lists the policies attached to the specified thing group."
                    },
                    "ListAuthorizers": {
                        "access-level": "list",
                        "actions": "ListAuthorizers",
                        "description": "Lists the authorizers registered in your account."
                    },
                    "ListBillingGroups": {
                        "access-level": "list",
                        "actions": "ListBillingGroups",
                        "description": "Lists all billing groups."
                    },
                    "ListCACertificates": {
                        "access-level": "list",
                        "actions": "ListCACertificates",
                        "description": "Lists the CA certificates registered for your AWS account."
                    },
                    "ListCertificates": {
                        "access-level": "list",
                        "actions": "ListCertificates",
                        "description": "Lists your certificates."
                    },
                    "ListCertificatesByCA": {
                        "access-level": "list",
                        "actions": "ListCertificatesByCA",
                        "description": "List the device certificates signed by the specified CA certificate."
                    },
                    "ListIndices": {
                        "access-level": "list",
                        "actions": "ListIndices",
                        "description": "Lists all indices for fleet index"
                    },
                    "ListJobExecutionsForJob": {
                        "access-level": "list",
                        "actions": "ListJobExecutionsForJob",
                        "description": "Lists the job executions for a job.",
                        "resource-types": "job*"
                    },
                    "ListJobExecutionsForThing": {
                        "access-level": "list",
                        "actions": "ListJobExecutionsForThing",
                        "description": "Lists the job executions for the specified thing.",
                        "resource-types": "thing*"
                    },
                    "ListJobs": {
                        "access-level": "list",
                        "actions": "ListJobs",
                        "description": "Lists jobs."
                    },
                    "ListOTAUpdates": {
                        "access-level": "list",
                        "actions": "ListOTAUpdates",
                        "description": "Lists OTA update jobs in the account."
                    },
                    "ListOutgoingCertificates": {
                        "access-level": "list",
                        "actions": "ListOutgoingCertificates",
                        "description": "Lists certificates that are being transfered but not yet accepted."
                    },
                    "ListPolicies": {
                        "access-level": "list",
                        "actions": "ListPolicies",
                        "description": "Lists your policies."
                    },
                    "ListPolicyPrincipals": {
                        "access-level": "list",
                        "actions": "ListPolicyPrincipals",
                        "description": "Lists the principals associated with the specified policy."
                    },
                    "ListPolicyVersions": {
                        "access-level": "list",
                        "actions": "ListPolicyVersions",
                        "description": "Lists the versions of the specified policy, and identifies the default version."
                    },
                    "ListPrincipalPolicies": {
                        "access-level": "list",
                        "actions": "ListPrincipalPolicies",
                        "description": "Lists the policies attached to the specified principal. If you use an Amazon Cognito identity, the ID needs to be in Amazon Cognito Identity format."
                    },
                    "ListPrincipalThings": {
                        "access-level": "list",
                        "actions": "ListPrincipalThings",
                        "description": "Lists the things associated with the specified principal."
                    },
                    "ListRoleAliases": {
                        "access-level": "list",
                        "actions": "ListRoleAliases",
                        "description": "Lists role aliases."
                    },
                    "ListStreams": {
                        "access-level": "list",
                        "actions": "ListStreams",
                        "description": "Lists the streams in your account."
                    },
                    "ListTagsForResource": {
                        "access-level": "list",
                        "actions": "ListTagsForResource",
                        "description": "Lists all tags for a given resource."
                    },
                    "ListTargetsForPolicy": {
                        "access-level": "list",
                        "actions": "ListTargetsForPolicy",
                        "description": "List targets for the specified policy.",
                        "resource-types": "policy*"
                    },
                    "ListThingGroups": {
                        "access-level": "list",
                        "actions": "ListThingGroups",
                        "description": "Lists all thing groups."
                    },
                    "ListThingGroupsForThing": {
                        "access-level": "list",
                        "actions": "ListThingGroupsForThing",
                        "description": "List thing groups to which the specified thing belongs.",
                        "resource-types": "thing*"
                    },
                    "ListThingPrincipals": {
                        "access-level": "list",
                        "actions": "ListThingPrincipals",
                        "description": "Lists the principals associated with the specified thing."
                    },
                    "ListThingRegistrationTaskReports": {
                        "access-level": "list",
                        "actions": "ListThingRegistrationTaskReports",
                        "description": "Lists information about bulk thing registration tasks."
                    },
                    "ListThingRegistrationTasks": {
                        "access-level": "list",
                        "actions": "ListThingRegistrationTasks",
                        "description": "Lists bulk thing registration tasks."
                    },
                    "ListThingTypes": {
                        "access-level": "list",
                        "actions": "ListThingTypes",
                        "description": "Lists all thing types."
                    },
                    "ListThings": {
                        "access-level": "list",
                        "actions": "ListThings",
                        "description": "Lists all things."
                    },
                    "ListThingsInBillingGroup": {
                        "access-level": "list",
                        "actions": "ListThingsInBillingGroup",
                        "description": "Lists all things in the specified billing group.",
                        "resource-types": "billinggroup*"
                    },
                    "ListThingsInThingGroup": {
                        "access-level": "list",
                        "actions": "ListThingsInThingGroup",
                        "description": "Lists all things in the specified thing group.",
                        "resource-types": "thinggroup*"
                    },
                    "ListTopicRules": {
                        "access-level": "list",
                        "actions": "ListTopicRules",
                        "description": "Lists the rules for the specific topic."
                    },
                    "ListV2LoggingLevels": {
                        "access-level": "list",
                        "actions": "ListV2LoggingLevels",
                        "description": "Lists the v2 logging levels."
                    }
                },
                "permissions-management": {
                    "AttachPolicy": {
                        "access-level": "permissions-management",
                        "actions": "AttachPolicy",
                        "description": "Attaches a policy to the specified target.",
                        "resource-types": "cert"
                    },
                    "AttachPrincipalPolicy": {
                        "access-level": "permissions-management",
                        "actions": "AttachPrincipalPolicy",
                        "description": "Attaches the specified policy to the specified principal (certificate or other credential).",
                        "resource-types": "cert"
                    },
                    "DetachPolicy": {
                        "access-level": "permissions-management",
                        "actions": "DetachPolicy",
                        "description": "Detaches a policy from the specified target.",
                        "resource-types": "cert"
                    },
                    "DetachPrincipalPolicy": {
                        "access-level": "permissions-management",
                        "actions": "DetachPrincipalPolicy",
                        "description": "Removes the specified policy from the specified certificate.",
                        "resource-types": "cert"
                    },
                    "SetDefaultAuthorizer": {
                        "access-level": "permissions-management",
                        "actions": "SetDefaultAuthorizer",
                        "description": "Sets the default authorizer. This will be used if a websocket connection is made without specifying an authorizer.",
                        "resource-types": "authorizer*"
                    },
                    "SetDefaultPolicyVersion": {
                        "access-level": "permissions-management",
                        "actions": "SetDefaultPolicyVersion",
                        "description": "Sets the specified version of the specified policy as the policy\\'s default (operative) version.",
                        "resource-types": "policy*"
                    },
                    "thinggroup": {
                        "access-level": "permissions-management",
                        "actions": "thinggroup"
                    }
                },
                "read": {
                    "DescribeAuthorizer": {
                        "access-level": "read",
                        "actions": "DescribeAuthorizer",
                        "description": "Describes an authorizer.",
                        "resource-types": "authorizer*"
                    },
                    "DescribeBillingGroup": {
                        "access-level": "read",
                        "actions": "DescribeBillingGroup",
                        "description": "Gets information about the specified billing group.",
                        "resource-types": "billinggroup*"
                    },
                    "DescribeCACertificate": {
                        "access-level": "read",
                        "actions": "DescribeCACertificate",
                        "description": "Describes a registered CA certificate.",
                        "resource-types": "cacert*"
                    },
                    "DescribeCertificate": {
                        "access-level": "read",
                        "actions": "DescribeCertificate",
                        "description": "Gets information about the specified certificate.",
                        "resource-types": "cert*"
                    },
                    "DescribeDefaultAuthorizer": {
                        "access-level": "read",
                        "actions": "DescribeDefaultAuthorizer",
                        "description": "Describes the default authorizer."
                    },
                    "DescribeEndpoint": {
                        "access-level": "read",
                        "actions": "DescribeEndpoint",
                        "description": "Returns a unique endpoint specific to the AWS account making the call."
                    },
                    "DescribeEventConfigurations": {
                        "access-level": "read",
                        "actions": "DescribeEventConfigurations",
                        "description": "Returns account event configurations."
                    },
                    "DescribeIndex": {
                        "access-level": "read",
                        "actions": "DescribeIndex",
                        "description": "Gets information about the specified index.",
                        "resource-types": "index*"
                    },
                    "DescribeJob": {
                        "access-level": "read",
                        "actions": "DescribeJob",
                        "description": "Describes a job.",
                        "resource-types": "job*"
                    },
                    "DescribeJobExecution": {
                        "access-level": "read",
                        "actions": "DescribeJobExecution",
                        "description": "Describes a job execution.",
                        "resource-types": "job"
                    },
                    "DescribeRoleAlias": {
                        "access-level": "read",
                        "actions": "DescribeRoleAlias",
                        "description": "Describes a role alias.",
                        "resource-types": "rolealias*"
                    },
                    "DescribeStream": {
                        "access-level": "read",
                        "actions": "DescribeStream",
                        "description": "Gets information about the specified stream.",
                        "resource-types": "stream*"
                    },
                    "DescribeThing": {
                        "access-level": "read",
                        "actions": "DescribeThing",
                        "description": "Gets information about the specified thing.",
                        "resource-types": "thing*"
                    },
                    "DescribeThingGroup": {
                        "access-level": "read",
                        "actions": "DescribeThingGroup",
                        "description": "Gets information about the specified thing group.",
                        "resource-types": "thinggroup*"
                    },
                    "DescribeThingRegistrationTask": {
                        "access-level": "read",
                        "actions": "DescribeThingRegistrationTask",
                        "description": "Gets information about the bulk thing registration task."
                    },
                    "DescribeThingType": {
                        "access-level": "read",
                        "actions": "DescribeThingType",
                        "description": "Gets information about the specified thing type.",
                        "resource-types": "thingtype*"
                    },
                    "GetEffectivePolicies": {
                        "access-level": "read",
                        "actions": "GetEffectivePolicies",
                        "description": "Gets effective policies.",
                        "resource-types": "cert"
                    },
                    "GetIndexingConfiguration": {
                        "access-level": "read",
                        "actions": "GetIndexingConfiguration",
                        "description": "Gets current fleet indexing configuration"
                    },
                    "GetJobDocument": {
                        "access-level": "read",
                        "actions": "GetJobDocument",
                        "description": "Gets a job document.",
                        "resource-types": "job*"
                    },
                    "GetLoggingOptions": {
                        "access-level": "read",
                        "actions": "GetLoggingOptions",
                        "description": "Gets the logging options."
                    },
                    "GetOTAUpdate": {
                        "access-level": "read",
                        "actions": "GetOTAUpdate",
                        "description": "Gets the information about the OTA update job.",
                        "resource-types": "otaupdate*"
                    },
                    "GetPendingJobExecutions": {
                        "access-level": "read",
                        "actions": "GetPendingJobExecutions",
                        "description": "Gets the list of all jobs for a thing that are not in a terminal state.",
                        "resource-types": "thing*"
                    },
                    "GetPolicy": {
                        "access-level": "read",
                        "actions": "GetPolicy",
                        "description": "Gets information about the specified policy with the policy document of the default version.",
                        "resource-types": "policy*"
                    },
                    "GetPolicyVersion": {
                        "access-level": "read",
                        "actions": "GetPolicyVersion",
                        "description": "Gets information about the specified policy version.",
                        "resource-types": "policy*"
                    },
                    "GetRegistrationCode": {
                        "access-level": "read",
                        "actions": "GetRegistrationCode",
                        "description": "Gets a registration code used to register a CA certificate with AWS IoT."
                    },
                    "GetThingShadow": {
                        "access-level": "read",
                        "actions": "GetThingShadow",
                        "description": "Gets the thing shadow.",
                        "resource-types": "thing*"
                    },
                    "GetTopicRule": {
                        "access-level": "read",
                        "actions": "GetTopicRule",
                        "description": "Gets information about the specified rule."
                    },
                    "GetV2LoggingOptions": {
                        "access-level": "read",
                        "actions": "GetV2LoggingOptions",
                        "description": "Gets v2 logging options."
                    },
                    "SearchIndex": {
                        "access-level": "read",
                        "actions": "SearchIndex",
                        "description": "Search IoT fleet index",
                        "resource-types": "index*"
                    },
                    "TestAuthorization": {
                        "access-level": "read",
                        "actions": "TestAuthorization",
                        "description": "Test the policies evaluation for group policies",
                        "resource-types": "cert"
                    },
                    "TestInvokeAuthorizer": {
                        "access-level": "read",
                        "actions": "TestInvokeAuthorizer",
                        "description": "Invoke the specified custom authorizer for testing purposes.",
                        "resource-types": "authorizer*"
                    },
                    "thing": {
                        "access-level": "read",
                        "actions": "thing"
                    }
                },
                "tagging": {
                    "CreateBillingGroup": {
                        "access-level": "tagging",
                        "actions": "CreateBillingGroup",
                        "description": "Creates a billing group.",
                        "resource-types": "billinggroup*"
                    },
                    "CreateThingGroup": {
                        "access-level": "tagging",
                        "actions": "CreateThingGroup",
                        "description": "Creates a thing group.",
                        "resource-types": "thinggroup*"
                    },
                    "CreateThingType": {
                        "access-level": "tagging",
                        "actions": "CreateThingType",
                        "description": "Creates a new thing type.",
                        "resource-types": "thingtype*"
                    },
                    "DeleteBillingGroup": {
                        "access-level": "tagging",
                        "actions": "DeleteBillingGroup",
                        "description": "Deletes the specified billing group.",
                        "resource-types": "billinggroup*"
                    },
                    "DeleteThingGroup": {
                        "access-level": "tagging",
                        "actions": "DeleteThingGroup",
                        "description": "Deletes the specified thing group.",
                        "resource-types": "thinggroup*"
                    },
                    "DeleteThingType": {
                        "access-level": "tagging",
                        "actions": "DeleteThingType",
                        "description": "Deletes the specified thing type.",
                        "resource-types": "thingtype*"
                    },
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "description": "Tag a specified resource"
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "Untag a specified resource"
                    }
                },
                "write": {
                    "AcceptCertificateTransfer": {
                        "access-level": "write",
                        "actions": "AcceptCertificateTransfer",
                        "description": "Accepts a pending certificate transfer."
                    },
                    "AddThingToBillingGroup": {
                        "access-level": "write",
                        "actions": "AddThingToBillingGroup",
                        "description": "Adds a thing to the specified billing group.",
                        "resource-types": "billinggroup*"
                    },
                    "AddThingToThingGroup": {
                        "access-level": "write",
                        "actions": "AddThingToThingGroup",
                        "description": "Adds a thing to the specified thing group.",
                        "resource-types": "thing*"
                    },
                    "AssociateTargetsWithJob": {
                        "access-level": "write",
                        "actions": "AssociateTargetsWithJob",
                        "description": "Associates a group with a continuous job.",
                        "resource-types": "job*"
                    },
                    "AttachThingPrincipal": {
                        "access-level": "write",
                        "actions": "AttachThingPrincipal",
                        "description": "Attaches the specified principal to the specified thing."
                    },
                    "CancelCertificateTransfer": {
                        "access-level": "write",
                        "actions": "CancelCertificateTransfer",
                        "description": "Cancels a pending transfer for the specified certificate."
                    },
                    "CancelJob": {
                        "access-level": "write",
                        "actions": "CancelJob",
                        "description": "Cancels a job.",
                        "resource-types": "job*"
                    },
                    "CancelJobExecution": {
                        "access-level": "write",
                        "actions": "CancelJobExecution",
                        "description": "Cancels a job execution on a particular device.",
                        "resource-types": "job*"
                    },
                    "ClearDefaultAuthorizer": {
                        "access-level": "write",
                        "actions": "ClearDefaultAuthorizer",
                        "description": "Clears the default authorizer."
                    },
                    "Connect": {
                        "access-level": "write",
                        "actions": "Connect",
                        "description": "Connect as the specified client",
                        "resource-types": "client*"
                    },
                    "CreateAuthorizer": {
                        "access-level": "write",
                        "actions": "CreateAuthorizer",
                        "description": "Creates an authorizer.",
                        "resource-types": "authorizer*"
                    },
                    "CreateCertificateFromCsr": {
                        "access-level": "write",
                        "actions": "CreateCertificateFromCsr",
                        "description": "Creates an X.509 certificate using the specified certificate signing request."
                    },
                    "CreateJob": {
                        "access-level": "write",
                        "actions": "CreateJob",
                        "description": "Creates a job.",
                        "resource-types": "thing*"
                    },
                    "CreateKeysAndCertificate": {
                        "access-level": "write",
                        "actions": "CreateKeysAndCertificate",
                        "description": "Creates a 2048 bit RSA key pair and issues an X.509 certificate using the issued public key."
                    },
                    "CreateOTAUpdate": {
                        "access-level": "write",
                        "actions": "CreateOTAUpdate",
                        "description": "Creates an OTA update job."
                    },
                    "CreatePolicy": {
                        "access-level": "write",
                        "actions": "CreatePolicy",
                        "description": "Creates an AWS IoT policy."
                    },
                    "CreatePolicyVersion": {
                        "access-level": "write",
                        "actions": "CreatePolicyVersion",
                        "description": "Creates a new version of the specified AWS IoT policy.",
                        "resource-types": "policy*"
                    },
                    "CreateRoleAlias": {
                        "access-level": "write",
                        "actions": "CreateRoleAlias",
                        "description": "Creates a role alias.",
                        "resource-types": "role*"
                    },
                    "CreateStream": {
                        "access-level": "write",
                        "actions": "CreateStream",
                        "description": "Creates a new AWS IoT stream"
                    },
                    "CreateThing": {
                        "access-level": "write",
                        "actions": "CreateThing",
                        "description": "Creates a thing in the thing registry.",
                        "resource-types": "thing*"
                    },
                    "CreateTopicRule": {
                        "access-level": "write",
                        "actions": "CreateTopicRule",
                        "description": "Creates a rule."
                    },
                    "DeleteAuthorizer": {
                        "access-level": "write",
                        "actions": "DeleteAuthorizer",
                        "description": "Deletes the specified authorizer.",
                        "resource-types": "authorizer*"
                    },
                    "DeleteCACertificate": {
                        "access-level": "write",
                        "actions": "DeleteCACertificate",
                        "description": "Deletes a registered CA certificate.",
                        "resource-types": "cacert*"
                    },
                    "DeleteCertificate": {
                        "access-level": "write",
                        "actions": "DeleteCertificate",
                        "description": "Deletes the specified certificate.",
                        "resource-types": "cert*"
                    },
                    "DeleteJob": {
                        "access-level": "write",
                        "actions": "DeleteJob",
                        "description": "Deletes a job and its related job executions.",
                        "resource-types": "job*"
                    },
                    "DeleteJobExecution": {
                        "access-level": "write",
                        "actions": "DeleteJobExecution",
                        "description": "Deletes a job execution.",
                        "resource-types": "job*"
                    },
                    "DeleteOTAUpdate": {
                        "access-level": "write",
                        "actions": "DeleteOTAUpdate",
                        "description": "Deletes an OTA update job.",
                        "resource-types": "otaupdate*"
                    },
                    "DeletePolicy": {
                        "access-level": "write",
                        "actions": "DeletePolicy",
                        "description": "Deletes the specified policy.",
                        "resource-types": "policy*"
                    },
                    "DeletePolicyVersion": {
                        "access-level": "write",
                        "actions": "DeletePolicyVersion",
                        "description": "Deletes the specified version of the specified policy.",
                        "resource-types": "policy*"
                    },
                    "DeleteRegistrationCode": {
                        "access-level": "write",
                        "actions": "DeleteRegistrationCode",
                        "description": "Deletes a CA certificate registration code."
                    },
                    "DeleteRoleAlias": {
                        "access-level": "write",
                        "actions": "DeleteRoleAlias",
                        "description": "Deletes the specified role alias.",
                        "resource-types": "rolealias*"
                    },
                    "DeleteStream": {
                        "access-level": "write",
                        "actions": "DeleteStream",
                        "description": "Deletes a specified stream.",
                        "resource-types": "stream*"
                    },
                    "DeleteThing": {
                        "access-level": "write",
                        "actions": "DeleteThing",
                        "description": "Deletes the specified thing.",
                        "resource-types": "thing*"
                    },
                    "DeleteThingShadow": {
                        "access-level": "write",
                        "actions": "DeleteThingShadow",
                        "description": "Deletes the specified thing shadow.",
                        "resource-types": "thing*"
                    },
                    "DeleteTopicRule": {
                        "access-level": "write",
                        "actions": "DeleteTopicRule",
                        "description": "Deletes the specified rule."
                    },
                    "DeleteV2LoggingLevel": {
                        "access-level": "write",
                        "actions": "DeleteV2LoggingLevel",
                        "description": "Deletes the specified v2 logging level."
                    },
                    "DeprecateThingType": {
                        "access-level": "write",
                        "actions": "DeprecateThingType",
                        "description": "Deprecates the specified thing type.",
                        "resource-types": "thingtype*"
                    },
                    "DetachThingPrincipal": {
                        "access-level": "write",
                        "actions": "DetachThingPrincipal",
                        "description": "Detaches the specified principal from the specified thing."
                    },
                    "DisableTopicRule": {
                        "access-level": "write",
                        "actions": "DisableTopicRule",
                        "description": "Disables the specified rule."
                    },
                    "EnableTopicRule": {
                        "access-level": "write",
                        "actions": "EnableTopicRule",
                        "description": "Enables the specified rule."
                    },
                    "Publish": {
                        "access-level": "write",
                        "actions": "Publish",
                        "description": "Publish to the specified topic.",
                        "resource-types": "topic*"
                    },
                    "Receive": {
                        "access-level": "write",
                        "actions": "Receive",
                        "description": "Receive from the specified topic.",
                        "resource-types": "topic*"
                    },
                    "RegisterCACertificate": {
                        "access-level": "write",
                        "actions": "RegisterCACertificate",
                        "description": "Registers a CA certificate with AWS IoT."
                    },
                    "RegisterCertificate": {
                        "access-level": "write",
                        "actions": "RegisterCertificate",
                        "description": "Registers a device certificate with AWS IoT."
                    },
                    "RegisterThing": {
                        "access-level": "write",
                        "actions": "RegisterThing",
                        "description": "Registers your thing."
                    },
                    "RejectCertificateTransfer": {
                        "access-level": "write",
                        "actions": "RejectCertificateTransfer",
                        "description": "Rejects a pending certificate transfer.",
                        "resource-types": "cert*"
                    },
                    "RemoveThingFromBillingGroup": {
                        "access-level": "write",
                        "actions": "RemoveThingFromBillingGroup",
                        "description": "Removes thing from the specified billing group.",
                        "resource-types": "billinggroup*"
                    },
                    "RemoveThingFromThingGroup": {
                        "access-level": "write",
                        "actions": "RemoveThingFromThingGroup",
                        "description": "Removes thing from the specified thing group.",
                        "resource-types": "thing*"
                    },
                    "ReplaceTopicRule": {
                        "access-level": "write",
                        "actions": "ReplaceTopicRule",
                        "description": "Replaces the specified rule."
                    },
                    "SetLoggingOptions": {
                        "access-level": "write",
                        "actions": "SetLoggingOptions",
                        "description": "Sets the logging options."
                    },
                    "SetV2LoggingLevel": {
                        "access-level": "write",
                        "actions": "SetV2LoggingLevel",
                        "description": "Sets the v2 logging level."
                    },
                    "SetV2LoggingOptions": {
                        "access-level": "write",
                        "actions": "SetV2LoggingOptions",
                        "description": "Sets the v2 logging options."
                    },
                    "StartNextPendingJobExecution": {
                        "access-level": "write",
                        "actions": "StartNextPendingJobExecution",
                        "description": "Gets and starts the next pending job execution for a thing.",
                        "resource-types": "thing*"
                    },
                    "StartThingRegistrationTask": {
                        "access-level": "write",
                        "actions": "StartThingRegistrationTask",
                        "description": "Starts a bulk thing registration task."
                    },
                    "StopThingRegistrationTask": {
                        "access-level": "write",
                        "actions": "StopThingRegistrationTask",
                        "description": "Stops a bulk thing registration task."
                    },
                    "Subscribe": {
                        "access-level": "write",
                        "actions": "Subscribe",
                        "description": "Subscribe to the specified TopicFilter.",
                        "resource-types": "topicfilter*"
                    },
                    "TransferCertificate": {
                        "access-level": "write",
                        "actions": "TransferCertificate",
                        "description": "Transfers the specified certificate to the specified AWS account.",
                        "resource-types": "cert*"
                    },
                    "UpdateAuthorizer": {
                        "access-level": "write",
                        "actions": "UpdateAuthorizer",
                        "description": "Updates an authorizer",
                        "resource-types": "authorizer*"
                    },
                    "UpdateBillingGroup": {
                        "access-level": "write",
                        "actions": "UpdateBillingGroup",
                        "description": "Updates information associated with the specified billing group.",
                        "resource-types": "billinggroup*"
                    },
                    "UpdateCACertificate": {
                        "access-level": "write",
                        "actions": "UpdateCACertificate",
                        "description": "Updates a registered CA certificate.",
                        "resource-types": "cacert*"
                    },
                    "UpdateCertificate": {
                        "access-level": "write",
                        "actions": "UpdateCertificate",
                        "description": "Updates the status of the specified certificate. This operation is idempotent.",
                        "resource-types": "cert*"
                    },
                    "UpdateEventConfigurations": {
                        "access-level": "write",
                        "actions": "UpdateEventConfigurations",
                        "description": "Updates event configurations."
                    },
                    "UpdateIndexingConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateIndexingConfiguration",
                        "description": "Updates fleet indexing configuration"
                    },
                    "UpdateJob": {
                        "access-level": "write",
                        "actions": "UpdateJob",
                        "description": "Updates a job.",
                        "resource-types": "job*"
                    },
                    "UpdateJobExecution": {
                        "access-level": "write",
                        "actions": "UpdateJobExecution",
                        "description": "Updates a job execution.",
                        "resource-types": "thing*"
                    },
                    "UpdateRoleAlias": {
                        "access-level": "write",
                        "actions": "UpdateRoleAlias",
                        "description": "Updates the role alias",
                        "resource-types": "rolealias*"
                    },
                    "UpdateStream": {
                        "access-level": "write",
                        "actions": "UpdateStream",
                        "description": "Updates the data for a stream.",
                        "resource-types": "stream*"
                    },
                    "UpdateThing": {
                        "access-level": "write",
                        "actions": "UpdateThing",
                        "description": "Updates information associated with the specified thing.",
                        "resource-types": "thing*"
                    },
                    "UpdateThingGroup": {
                        "access-level": "write",
                        "actions": "UpdateThingGroup",
                        "description": "Updates information associated with the specified thing group.",
                        "resource-types": "thinggroup*"
                    },
                    "UpdateThingGroupsForThing": {
                        "access-level": "write",
                        "actions": "UpdateThingGroupsForThing",
                        "description": "Updates the thing groups to which the thing belongs.",
                        "resource-types": "thing*"
                    },
                    "UpdateThingShadow": {
                        "access-level": "write",
                        "actions": "UpdateThingShadow",
                        "description": "Updates the thing shadow.",
                        "resource-types": "thing*"
                    },
                    "billinggroup": {
                        "access-level": "write",
                        "actions": "billinggroup"
                    },
                    "role": {
                        "access-level": "write",
                        "actions": "role"
                    },
                    "rolealias*": {
                        "access-level": "write",
                        "actions": "rolealias*"
                    },
                    "thing*": {
                        "access-level": "write",
                        "actions": "thing*"
                    },
                    "thinggroup": {
                        "access-level": "write",
                        "actions": "thinggroup"
                    },
                    "thinggroup*": {
                        "access-level": "write",
                        "actions": "thinggroup*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "authorizer": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:authorizer/${AuthorizerName}",
                    "resource-types": "authorizer"
                },
                "billinggroup": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:billinggroup/${BillingGroupName}",
                    "resource-types": "billinggroup"
                },
                "cacert": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:cacert/${CACertificate}",
                    "resource-types": "cacert"
                },
                "cert": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:cert/${Certificate}",
                    "resource-types": "cert"
                },
                "client": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:client/${ClientId}",
                    "resource-types": "client"
                },
                "index": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:index/${IndexName}",
                    "resource-types": "index"
                },
                "job": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:job/${JobId}",
                    "resource-types": "job"
                },
                "otaupdate": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:otaupdate/${otaUpdateId}",
                    "resource-types": "otaupdate"
                },
                "policy": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:policy/${PolicyName}",
                    "resource-types": "policy"
                },
                "role": {
                    "arn": "arn:${Partition}:iam::${Account}:role/${Role}",
                    "resource-types": "role"
                },
                "rolealias": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:rolealias/${RoleAlias}",
                    "resource-types": "rolealias"
                },
                "stream": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:stream/${streamId}",
                    "resource-types": "stream"
                },
                "thing": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:thing/${ThingName}",
                    "resource-types": "thing"
                },
                "thinggroup": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:thinggroup/${ThingGroupName}",
                    "resource-types": "thinggroup"
                },
                "thingtype": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:thingtype/${ThingTypeName}",
                    "resource-types": "thingtype"
                },
                "topic": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:topic/${TopicName}",
                    "resource-types": "topic"
                },
                "topicfilter": {
                    "arn": "arn:${Partition}:iot:${Region}:${Account}:topicfilter/${TopicFilter}",
                    "resource-types": "topicfilter"
                }
            }
        },
        "iot1click": {
            "actions": {
                "list": {
                    "ListDevices": {
                        "access-level": "list",
                        "actions": "ListDevices",
                        "description": "List all devices"
                    },
                    "ListProjects": {
                        "access-level": "list",
                        "actions": "ListProjects",
                        "description": "List all projects"
                    }
                },
                "read": {
                    "ClaimDeviceByClaimCode": {
                        "access-level": "read",
                        "actions": "ClaimDeviceByClaimCode",
                        "description": "Claim a batch of devices with a claim code."
                    },
                    "DescribeDevice": {
                        "access-level": "read",
                        "actions": "DescribeDevice",
                        "description": "Describe a device",
                        "resource-types": "device*"
                    },
                    "DescribePlacement": {
                        "access-level": "read",
                        "actions": "DescribePlacement",
                        "description": "Describe a placement",
                        "resource-types": "project*"
                    },
                    "DescribeProject": {
                        "access-level": "read",
                        "actions": "DescribeProject",
                        "description": "Describe a project",
                        "resource-types": "project*"
                    },
                    "FinalizeDeviceClaim": {
                        "access-level": "read",
                        "actions": "FinalizeDeviceClaim",
                        "description": "Finalize a device claim",
                        "resource-types": "device*"
                    },
                    "GetDeviceMethods": {
                        "access-level": "read",
                        "actions": "GetDeviceMethods",
                        "description": "Get available methods of a device",
                        "resource-types": "device*"
                    },
                    "GetDevicesInPlacement": {
                        "access-level": "read",
                        "actions": "GetDevicesInPlacement",
                        "description": "Get devices associated to a placement",
                        "resource-types": "project*"
                    },
                    "InitializeDeviceClaim": {
                        "access-level": "read",
                        "actions": "InitializeDeviceClaim",
                        "description": "Initialize a device claim",
                        "resource-types": "device*"
                    },
                    "ListDeviceEvents": {
                        "access-level": "read",
                        "actions": "ListDeviceEvents",
                        "description": "List past events published by a device",
                        "resource-types": "device*"
                    },
                    "ListPlacements": {
                        "access-level": "read",
                        "actions": "ListPlacements",
                        "description": "List placements in a project",
                        "resource-types": "project*"
                    },
                    "UnclaimDevice": {
                        "access-level": "read",
                        "actions": "UnclaimDevice",
                        "description": "Unclaim a device",
                        "resource-types": "device*"
                    }
                },
                "write": {
                    "AssociateDeviceWithPlacement": {
                        "access-level": "write",
                        "actions": "AssociateDeviceWithPlacement",
                        "description": "Associate a device to a placement",
                        "resource-types": "project*"
                    },
                    "CreatePlacement": {
                        "access-level": "write",
                        "actions": "CreatePlacement",
                        "description": "Create a new placement in a project",
                        "resource-types": "project*"
                    },
                    "CreateProject": {
                        "access-level": "write",
                        "actions": "CreateProject",
                        "description": "Create a new project",
                        "resource-types": "project*"
                    },
                    "DeletePlacement": {
                        "access-level": "write",
                        "actions": "DeletePlacement",
                        "description": "Delete a placement from a project",
                        "resource-types": "project*"
                    },
                    "DeleteProject": {
                        "access-level": "write",
                        "actions": "DeleteProject",
                        "description": "Delete a project",
                        "resource-types": "project*"
                    },
                    "DisassociateDeviceFromPlacement": {
                        "access-level": "write",
                        "actions": "DisassociateDeviceFromPlacement",
                        "description": "Disassociate a device from a placement",
                        "resource-types": "project*"
                    },
                    "InvokeDeviceMethod": {
                        "access-level": "write",
                        "actions": "InvokeDeviceMethod",
                        "description": "Invoke a device method",
                        "resource-types": "device*"
                    },
                    "UpdateDeviceState": {
                        "access-level": "write",
                        "actions": "UpdateDeviceState",
                        "description": "Update device state",
                        "resource-types": "device*"
                    },
                    "UpdatePlacement": {
                        "access-level": "write",
                        "actions": "UpdatePlacement",
                        "description": "Update a placement",
                        "resource-types": "project*"
                    },
                    "UpdateProject": {
                        "access-level": "write",
                        "actions": "UpdateProject",
                        "description": "Update a project",
                        "resource-types": "project*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "device": {
                    "arn": "arn:${Partition}:iot1click:${Region}:${Account}:devices/${DeviceId}",
                    "resource-types": "device"
                },
                "project": {
                    "arn": "arn:${Partition}:iot1click:${Region}:${Account}:projects/${ProjectName}",
                    "resource-types": "project"
                }
            }
        },
        "iotanalytics": {
            "actions": {
                "list": {
                    "ListChannels": {
                        "access-level": "list",
                        "actions": "ListChannels",
                        "description": "Lists the channels for the account."
                    },
                    "ListDatasets": {
                        "access-level": "list",
                        "actions": "ListDatasets",
                        "description": "Lists the datasets for the account."
                    },
                    "ListDatastores": {
                        "access-level": "list",
                        "actions": "ListDatastores",
                        "description": "Lists the datastores for the account."
                    },
                    "ListPipelines": {
                        "access-level": "list",
                        "actions": "ListPipelines",
                        "description": "Lists the pipelines for the account."
                    }
                },
                "read": {
                    "DescribeChannel": {
                        "access-level": "read",
                        "actions": "DescribeChannel",
                        "description": "Describes the specified channel.",
                        "resource-types": "channel*"
                    },
                    "DescribeDataset": {
                        "access-level": "read",
                        "actions": "DescribeDataset",
                        "description": "Describes the specified dataset.",
                        "resource-types": "dataset*"
                    },
                    "DescribeDatastore": {
                        "access-level": "read",
                        "actions": "DescribeDatastore",
                        "description": "Describes the specified datastore.",
                        "resource-types": "datastore*"
                    },
                    "DescribeLoggingOptions": {
                        "access-level": "read",
                        "actions": "DescribeLoggingOptions",
                        "description": "Describes logging options for the the account."
                    },
                    "DescribePipeline": {
                        "access-level": "read",
                        "actions": "DescribePipeline",
                        "description": "Describes the specified pipeline.",
                        "resource-types": "pipeline*"
                    },
                    "GetDatasetContent": {
                        "access-level": "read",
                        "actions": "GetDatasetContent",
                        "description": "Gets the content of the specified dataset.",
                        "resource-types": "dataset*"
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "Lists the tags (metadata) which you have assigned to the resource.",
                        "resource-types": "channel"
                    },
                    "RunPipelineActivity": {
                        "access-level": "read",
                        "actions": "RunPipelineActivity",
                        "description": "Runs the specified pipeline activity."
                    },
                    "SampleChannelData": {
                        "access-level": "read",
                        "actions": "SampleChannelData",
                        "description": "Samples the specified channel\\'s data.",
                        "resource-types": "channel*"
                    },
                    "dataset": {
                        "access-level": "read",
                        "actions": "dataset"
                    },
                    "datastore": {
                        "access-level": "read",
                        "actions": "datastore"
                    },
                    "pipeline": {
                        "access-level": "read",
                        "actions": "pipeline"
                    }
                },
                "tagging": {
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "description": "Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource.",
                        "resource-types": "channel"
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "Removes the given tags (metadata) from the resource.",
                        "resource-types": "channel"
                    },
                    "dataset": {
                        "access-level": "tagging",
                        "actions": "dataset"
                    },
                    "datastore": {
                        "access-level": "tagging",
                        "actions": "datastore"
                    },
                    "pipeline": {
                        "access-level": "tagging",
                        "actions": "pipeline",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ]
                    }
                },
                "write": {
                    "BatchPutMessage": {
                        "access-level": "write",
                        "actions": "BatchPutMessage",
                        "description": "Puts a batch of messages into the specified channel.",
                        "resource-types": "channel*"
                    },
                    "CancelPipelineReprocessing": {
                        "access-level": "write",
                        "actions": "CancelPipelineReprocessing",
                        "description": "Cancels reprocessing for the specified pipeline.",
                        "resource-types": "pipeline*"
                    },
                    "CreateChannel": {
                        "access-level": "write",
                        "actions": "CreateChannel",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Creates a channel.",
                        "resource-types": "channel*"
                    },
                    "CreateDataset": {
                        "access-level": "write",
                        "actions": "CreateDataset",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Creates a dataset.",
                        "resource-types": "dataset*"
                    },
                    "CreateDatasetContent": {
                        "access-level": "write",
                        "actions": "CreateDatasetContent",
                        "description": "Generates content of the specified dataset (by executing the dataset actions).",
                        "resource-types": "dataset*"
                    },
                    "CreateDatastore": {
                        "access-level": "write",
                        "actions": "CreateDatastore",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Creates a datastore.",
                        "resource-types": "datastore*"
                    },
                    "CreatePipeline": {
                        "access-level": "write",
                        "actions": "CreatePipeline",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Creates a pipeline.",
                        "resource-types": "pipeline*"
                    },
                    "DeleteChannel": {
                        "access-level": "write",
                        "actions": "DeleteChannel",
                        "description": "Deletes the specified channel.",
                        "resource-types": "channel*"
                    },
                    "DeleteDataset": {
                        "access-level": "write",
                        "actions": "DeleteDataset",
                        "description": "Deletes the specified dataset.",
                        "resource-types": "dataset*"
                    },
                    "DeleteDatasetContent": {
                        "access-level": "write",
                        "actions": "DeleteDatasetContent",
                        "description": "Deletes the content of the specified dataset.",
                        "resource-types": "dataset*"
                    },
                    "DeleteDatastore": {
                        "access-level": "write",
                        "actions": "DeleteDatastore",
                        "description": "Deletes the specified datastore.",
                        "resource-types": "datastore*"
                    },
                    "DeletePipeline": {
                        "access-level": "write",
                        "actions": "DeletePipeline",
                        "description": "Deletes the specified pipeline.",
                        "resource-types": "pipeline*"
                    },
                    "PutLoggingOptions": {
                        "access-level": "write",
                        "actions": "PutLoggingOptions",
                        "description": "Puts logging options for the the account."
                    },
                    "StartPipelineReprocessing": {
                        "access-level": "write",
                        "actions": "StartPipelineReprocessing",
                        "description": "Starts reprocessing for the specified pipeline.",
                        "resource-types": "pipeline*"
                    },
                    "UpdateChannel": {
                        "access-level": "write",
                        "actions": "UpdateChannel",
                        "description": "Updates the specified channel.",
                        "resource-types": "channel*"
                    },
                    "UpdateDataset": {
                        "access-level": "write",
                        "actions": "UpdateDataset",
                        "description": "Updates the specified dataset.",
                        "resource-types": "dataset*"
                    },
                    "UpdateDatastore": {
                        "access-level": "write",
                        "actions": "UpdateDatastore",
                        "description": "Updates the specified datastore.",
                        "resource-types": "datastore*"
                    },
                    "UpdatePipeline": {
                        "access-level": "write",
                        "actions": "UpdatePipeline",
                        "description": "Updates the specified pipeline.",
                        "resource-types": "pipeline*"
                    }
                }
            },
            "condition-keys": [
                "",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "iotanalytics:ResourceTag/${TagKey}"
            ],
            "resource-types": {
                "channel": {
                    "arn": "arn:${Partition}:iotanalytics:${Region}:${Account}:channel/${ChannelName}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys iotanalytics:ResourceTag/${TagKey}",
                    "resource-types": "channel"
                },
                "dataset": {
                    "arn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys iotanalytics:ResourceTag/${TagKey}",
                    "resource-types": "dataset"
                },
                "datastore": {
                    "arn": "arn:${Partition}:iotanalytics:${Region}:${Account}:datastore/${DatastoreName}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys iotanalytics:ResourceTag/${TagKey}",
                    "resource-types": "datastore"
                },
                "pipeline": {
                    "arn": "arn:${Partition}:iotanalytics:${Region}:${Account}:pipeline/${PipelineName}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys iotanalytics:ResourceTag/${TagKey}",
                    "resource-types": "pipeline"
                }
            }
        },
        "iotevents": {
            "actions": {
                "list": {
                    "ListDetectorModelVersions": {
                        "access-level": "list",
                        "actions": "ListDetectorModelVersions",
                        "description": "Lists all the versions of a detector model. Only the metadata associated with each detector model version is returned.",
                        "resource-types": "detectorModel*"
                    },
                    "ListDetectorModels": {
                        "access-level": "list",
                        "actions": "ListDetectorModels",
                        "description": "Lists the detector models you have created. Only the metadata associated with each detector model is returned."
                    },
                    "ListDetectors": {
                        "access-level": "list",
                        "actions": "ListDetectors",
                        "description": "Lists detectors (the instances of a detector model).",
                        "resource-types": "detectorModel*"
                    },
                    "ListInputs": {
                        "access-level": "list",
                        "actions": "ListInputs",
                        "description": "Lists the inputs you have created."
                    }
                },
                "read": {
                    "DescribeDetector": {
                        "access-level": "read",
                        "actions": "DescribeDetector",
                        "description": "Returns information about the specified detector (instance).",
                        "resource-types": "detectorModel*"
                    },
                    "DescribeDetectorModel": {
                        "access-level": "read",
                        "actions": "DescribeDetectorModel",
                        "description": "Describes a detector model.",
                        "resource-types": "detectorModel*"
                    },
                    "DescribeInput": {
                        "access-level": "read",
                        "actions": "DescribeInput",
                        "description": "Describes an input.",
                        "resource-types": "input*"
                    },
                    "DescribeLoggingOptions": {
                        "access-level": "read",
                        "actions": "DescribeLoggingOptions",
                        "description": "Retrieves the current settings of the AWS IoT Events logging options."
                    }
                },
                "write": {
                    "BatchPutMessage": {
                        "access-level": "write",
                        "actions": "BatchPutMessage",
                        "description": "Sends a set of messages to the AWS IoT Events system.",
                        "resource-types": "input*"
                    },
                    "CreateDetectorModel": {
                        "access-level": "write",
                        "actions": "CreateDetectorModel",
                        "description": "Creates a detector model."
                    },
                    "CreateInput": {
                        "access-level": "write",
                        "actions": "CreateInput",
                        "description": "Creates an input."
                    },
                    "DeleteDetectorModel": {
                        "access-level": "write",
                        "actions": "DeleteDetectorModel",
                        "description": "Deletes a detector model.",
                        "resource-types": "detectorModel*"
                    },
                    "DeleteInput": {
                        "access-level": "write",
                        "actions": "DeleteInput",
                        "description": "Deletes an input.",
                        "resource-types": "input*"
                    },
                    "PutLoggingOptions": {
                        "access-level": "write",
                        "actions": "PutLoggingOptions",
                        "description": "Sets or updates the AWS IoT Events logging options."
                    },
                    "UpdateDetectorModel": {
                        "access-level": "write",
                        "actions": "UpdateDetectorModel",
                        "description": "Updates a detector model.",
                        "resource-types": "detectorModel*"
                    },
                    "UpdateInput": {
                        "access-level": "write",
                        "actions": "UpdateInput",
                        "description": "Updates an input.",
                        "resource-types": "input*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "detectormodel": {
                    "arn": "arn:${Partition}:iotevents:${Region}:${Account}:detectorModel/${DetectorModelName}",
                    "resource-types": "detectorModel"
                },
                "input": {
                    "arn": "arn:${Partition}:iotevents:${Region}:${Account}:input/${inputName}",
                    "resource-types": "input"
                }
            }
        },
        "keymanagementservice": {
            "actions": {
                "list": {
                    "ListAliases": {
                        "access-level": "list",
                        "actions": "ListAliases",
                        "description": "Grants permission to view the aliases that are defined in the account. Aliases are optional display names that you can associate with customer master keys."
                    },
                    "ListGrants": {
                        "access-level": "list",
                        "actions": "ListGrants",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to view all grants for a customer master key.",
                        "resource-types": "key*"
                    },
                    "ListKeyPolicies": {
                        "access-level": "list",
                        "actions": "ListKeyPolicies",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to view the names of key policies for a customer master key.",
                        "resource-types": "key*"
                    },
                    "ListKeys": {
                        "access-level": "list",
                        "actions": "ListKeys",
                        "description": "Grants permission to view the key ID and Amazon Resource Name (ARN) of all customer master keys in the account."
                    },
                    "ListRetirableGrants": {
                        "access-level": "list",
                        "actions": "ListRetirableGrants",
                        "description": "Grants permission to view grants in which the specified principal is the retiring principal. Other principals might be able to retire the grant and this principal might be able to retire other grants.",
                        "resource-types": "key*"
                    }
                },
                "permissions-management": {
                    "CreateGrant": {
                        "access-level": "permissions-management",
                        "actions": "CreateGrant",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:GrantConstraintType",
                            "kms:GrantIsForAWSResource",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to add a grant to a customer master key. You can use grants to add permissions without changing the key policy or IAM policy.",
                        "resource-types": "key*"
                    },
                    "PutKeyPolicy": {
                        "access-level": "permissions-management",
                        "actions": "PutKeyPolicy",
                        "condition-keys": [
                            "kms:BypassPolicyLockoutSafetyCheck",
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to replace the key policy for the specified customer master key.",
                        "resource-types": "key*"
                    },
                    "RetireGrant": {
                        "access-level": "permissions-management",
                        "actions": "RetireGrant",
                        "description": "Grants permission to retire a grant. The RetireGrant operation is typically called by the grant user after they complete the tasks that the grant allowed them to perform.",
                        "resource-types": "key*"
                    },
                    "RevokeGrant": {
                        "access-level": "permissions-management",
                        "actions": "RevokeGrant",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to revoke a grant, which denies permission for all operations that depend on the grant.",
                        "resource-types": "key*"
                    }
                },
                "read": {
                    "DescribeKey": {
                        "access-level": "read",
                        "actions": "DescribeKey",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to view detailed information about a customer master key.",
                        "resource-types": "key*"
                    },
                    "GetKeyPolicy": {
                        "access-level": "read",
                        "actions": "GetKeyPolicy",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to view the key policy for the specified customer master key.",
                        "resource-types": "key*"
                    },
                    "GetKeyRotationStatus": {
                        "access-level": "read",
                        "actions": "GetKeyRotationStatus",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to determine whether automatic key rotation is enabled on the customer master key.",
                        "resource-types": "key*"
                    },
                    "GetParametersForImport": {
                        "access-level": "read",
                        "actions": "GetParametersForImport",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService",
                            "kms:WrappingAlgorithm",
                            "kms:WrappingKeySpec"
                        ],
                        "description": "Grants permission to get data that is required to import cryptographic material into a customer managed key, including a public key and import token.",
                        "resource-types": "key*"
                    },
                    "ListResourceTags": {
                        "access-level": "read",
                        "actions": "ListResourceTags",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to view all tags that are attached to a customer master key.",
                        "resource-types": "key*"
                    }
                },
                "tagging": {
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to create or update tags that are attached to a customer master key.",
                        "resource-types": "key*"
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to delete tags that are attached to a customer master key.",
                        "resource-types": "key*"
                    }
                },
                "write": {
                    "CancelKeyDeletion": {
                        "access-level": "write",
                        "actions": "CancelKeyDeletion",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to cancel the scheduled deletion of a customer master key.",
                        "resource-types": "key*"
                    },
                    "CreateAlias": {
                        "access-level": "write",
                        "actions": "CreateAlias",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to create an alias for a customer master key (CMK). Aliases are optional display names that you can associate with CMKs.",
                        "resource-types": "key*"
                    },
                    "CreateKey": {
                        "access-level": "write",
                        "actions": "CreateKey",
                        "condition-keys": [
                            "kms:BypassPolicyLockoutSafetyCheck",
                            "kms:KeyOrigin"
                        ],
                        "description": "Grants permission to create a customer master key that can be used to protect data keys and other sensitive information."
                    },
                    "Decrypt": {
                        "access-level": "write",
                        "actions": "Decrypt",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:EncryptionContextKeys",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to decrypt ciphertext that was encrypted under a customer master key.",
                        "resource-types": "key*"
                    },
                    "DeleteAlias": {
                        "access-level": "write",
                        "actions": "DeleteAlias",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to delete an alias, which is an optional friendly name for a customer master key.",
                        "resource-types": "alias*"
                    },
                    "DeleteImportedKeyMaterial": {
                        "access-level": "write",
                        "actions": "DeleteImportedKeyMaterial",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to delete cryptographic material that you imported into a customer master key. This action makes the key unusable.",
                        "resource-types": "key*"
                    },
                    "DisableKey": {
                        "access-level": "write",
                        "actions": "DisableKey",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to disable a customer master key, which prevents it from being used in cryptographic operations.",
                        "resource-types": "key*"
                    },
                    "DisableKeyRotation": {
                        "access-level": "write",
                        "actions": "DisableKeyRotation",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to disable automatic rotation of a customer managed customer master key.",
                        "resource-types": "key*"
                    },
                    "EnableKey": {
                        "access-level": "write",
                        "actions": "EnableKey",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to change the state of a customer master key (CMK) to enabled. This allows the CMK to be used in cryptographic operations.",
                        "resource-types": "key*"
                    },
                    "EnableKeyRotation": {
                        "access-level": "write",
                        "actions": "EnableKeyRotation",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to enable automatic rotation of the cryptographic material in a customer master key.",
                        "resource-types": "key*"
                    },
                    "Encrypt": {
                        "access-level": "write",
                        "actions": "Encrypt",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:EncryptionContextKeys",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to use the specified customer master key to encrypt data and data keys.",
                        "resource-types": "key*"
                    },
                    "GenerateDataKey": {
                        "access-level": "write",
                        "actions": "GenerateDataKey",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:EncryptionContextKeys",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to use the customer master key to generate data keys. You can use the data keys to encrypt data outside of AWS KMS.",
                        "resource-types": "key*"
                    },
                    "GenerateDataKeyWithoutPlaintext": {
                        "access-level": "write",
                        "actions": "GenerateDataKeyWithoutPlaintext",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:EncryptionContextKeys",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to use the customer master key to generate a data key. Unlike the GenerateDataKey operation, this operation returns an encrypted data key without a plaintext version of the data key.",
                        "resource-types": "key*"
                    },
                    "GenerateRandom": {
                        "access-level": "write",
                        "actions": "GenerateRandom",
                        "description": "Grants permission to get a cryptographically secure random byte string from AWS KMS."
                    },
                    "ImportKeyMaterial": {
                        "access-level": "write",
                        "actions": "ImportKeyMaterial",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ExpirationModel",
                            "kms:ValidTo",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to import cryptographic material into a customer master key.",
                        "resource-types": "key*"
                    },
                    "ReEncryptFrom": {
                        "access-level": "write",
                        "actions": "ReEncryptFrom",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:EncryptionContextKeys",
                            "kms:ReEncryptOnSameKey",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to decrypt data as part of the process that decrypts and reencrypts the data within AWS KMS.",
                        "resource-types": "key*"
                    },
                    "ReEncryptTo": {
                        "access-level": "write",
                        "actions": "ReEncryptTo",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:EncryptionContextKeys",
                            "kms:ReEncryptOnSameKey",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to encrypt data as part of the process that decrypts and reencrypts the data within AWS KMS.",
                        "resource-types": "key*"
                    },
                    "ScheduleKeyDeletion": {
                        "access-level": "write",
                        "actions": "ScheduleKeyDeletion",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to schedule deletion of a customer master key.",
                        "resource-types": "key*"
                    },
                    "UpdateAlias": {
                        "access-level": "write",
                        "actions": "UpdateAlias",
                        "description": "Grants permission to associate an alias with a different customer master key.",
                        "resource-types": "alias*"
                    },
                    "UpdateKeyDescription": {
                        "access-level": "write",
                        "actions": "UpdateKeyDescription",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ],
                        "description": "Grants permission to delete or change the description of a customer master key.",
                        "resource-types": "key*"
                    },
                    "key*": {
                        "access-level": "write",
                        "actions": "key*",
                        "condition-keys": [
                            "kms:CallerAccount",
                            "kms:ViaService"
                        ]
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "alias": {
                    "arn": "arn:${Partition}:kms:${Region}:${Account}:alias/${Alias}",
                    "resource-types": "alias"
                },
                "key": {
                    "arn": "arn:${Partition}:kms:${Region}:${Account}:key/${KeyId}",
                    "resource-types": "key"
                }
            }
        },
        "kinesis": {
            "actions": {
                "list": {
                    "ListShards": {
                        "access-level": "list",
                        "actions": "ListShards",
                        "description": "Lists the shards in a stream and provides information about each shard."
                    },
                    "ListStreamConsumers": {
                        "access-level": "list",
                        "actions": "ListStreamConsumers",
                        "description": "Lists the stream consumers registered to receive data from a Kinesis stream using enhanced fan-out, and provides information about each consumer."
                    },
                    "ListStreams": {
                        "access-level": "list",
                        "actions": "ListStreams",
                        "description": "Lists your streams."
                    }
                },
                "read": {
                    "DescribeLimits": {
                        "access-level": "read",
                        "actions": "DescribeLimits",
                        "description": "Describes the shard limits and usage for the account."
                    },
                    "DescribeStream": {
                        "access-level": "read",
                        "actions": "DescribeStream",
                        "description": "Describes the specified stream.",
                        "resource-types": "stream*"
                    },
                    "DescribeStreamConsumer": {
                        "access-level": "read",
                        "actions": "DescribeStreamConsumer",
                        "description": "Gets the description of a registered stream consumer.",
                        "resource-types": "consumer*"
                    },
                    "DescribeStreamSummary": {
                        "access-level": "read",
                        "actions": "DescribeStreamSummary",
                        "description": "Provides a summarized description of the specified Kinesis data stream without the shard list.",
                        "resource-types": "stream*"
                    },
                    "GetRecords": {
                        "access-level": "read",
                        "actions": "GetRecords",
                        "description": "Gets data records from a shard.",
                        "resource-types": "stream*"
                    },
                    "GetShardIterator": {
                        "access-level": "read",
                        "actions": "GetShardIterator",
                        "description": "Gets a shard iterator. A shard iterator expires five minutes after it is returned to the requester.",
                        "resource-types": "stream*"
                    },
                    "ListTagsForStream": {
                        "access-level": "read",
                        "actions": "ListTagsForStream",
                        "description": "Lists the tags for the specified Amazon Kinesis stream.",
                        "resource-types": "stream*"
                    },
                    "SubscribeToShard": {
                        "access-level": "read",
                        "actions": "SubscribeToShard",
                        "description": "Listening to a specific shard with enhanced fan-out.",
                        "resource-types": "consumer*"
                    },
                    "stream*": {
                        "access-level": "read",
                        "actions": "stream*"
                    }
                },
                "tagging": {
                    "AddTagsToStream": {
                        "access-level": "tagging",
                        "actions": "AddTagsToStream",
                        "description": "Adds or updates tags for the specified Amazon Kinesis stream. Each stream can have up to 10 tags.",
                        "resource-types": "stream*"
                    },
                    "RemoveTagsFromStream": {
                        "access-level": "tagging",
                        "actions": "RemoveTagsFromStream",
                        "description": "Description for SplitShard",
                        "resource-types": "stream*"
                    }
                },
                "write": {
                    "CreateStream": {
                        "access-level": "write",
                        "actions": "CreateStream",
                        "description": "Creates a Amazon Kinesis stream.",
                        "resource-types": "stream*"
                    },
                    "DecreaseStreamRetentionPeriod": {
                        "access-level": "write",
                        "actions": "DecreaseStreamRetentionPeriod",
                        "description": "Decreases the stream\\'s retention period, which is the length of time data records are accessible after they are added to the stream.",
                        "resource-types": "stream*"
                    },
                    "DeleteStream": {
                        "access-level": "write",
                        "actions": "DeleteStream",
                        "description": "Deletes a stream and all its shards and data.",
                        "resource-types": "stream*"
                    },
                    "DeregisterStreamConsumer": {
                        "access-level": "write",
                        "actions": "DeregisterStreamConsumer",
                        "description": "Deregisters a stream consumer with a Kinesis data stream.",
                        "resource-types": "consumer*"
                    },
                    "DisableEnhancedMonitoring": {
                        "access-level": "write",
                        "actions": "DisableEnhancedMonitoring",
                        "description": "Disables enhanced monitoring."
                    },
                    "EnableEnhancedMonitoring": {
                        "access-level": "write",
                        "actions": "EnableEnhancedMonitoring",
                        "description": "API_EnableEnhancedMonitoring.html"
                    },
                    "IncreaseStreamRetentionPeriod": {
                        "access-level": "write",
                        "actions": "IncreaseStreamRetentionPeriod",
                        "description": "Increases the stream\\'s retention period, which is the length of time data records are accessible after they are added to the stream.",
                        "resource-types": "stream*"
                    },
                    "MergeShards": {
                        "access-level": "write",
                        "actions": "MergeShards",
                        "description": "Merges two adjacent shards in a stream and combines them into a single shard to reduce the stream\\'s capacity to ingest and transport data.",
                        "resource-types": "stream*"
                    },
                    "PutRecord": {
                        "access-level": "write",
                        "actions": "PutRecord",
                        "description": "Writes a single data record from a producer into an Amazon Kinesis stream.",
                        "resource-types": "stream*"
                    },
                    "PutRecords": {
                        "access-level": "write",
                        "actions": "PutRecords",
                        "description": "Writes multiple data records from a producer into an Amazon Kinesis stream in a single call (also referred to as a PutRecords request).",
                        "resource-types": "stream*"
                    },
                    "RegisterStreamConsumer": {
                        "access-level": "write",
                        "actions": "RegisterStreamConsumer",
                        "description": "Registers a stream consumer with a Kinesis data stream.",
                        "resource-types": "consumer*"
                    },
                    "SplitShard": {
                        "access-level": "write",
                        "actions": "SplitShard",
                        "description": "Description for SplitShard",
                        "resource-types": "stream*"
                    },
                    "UpdateShardCount": {
                        "access-level": "write",
                        "actions": "UpdateShardCount",
                        "description": "Updates the shard count of the specified stream to the specified number of shards."
                    },
                    "stream*": {
                        "access-level": "write",
                        "actions": "stream*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "consumer": {
                    "arn": "arn:${Partition}:kinesis:${Region}:${Account}:${StreamType}/${StreamName}/consumer/${ConsumerName}:${ConsumerCreationTimpstamp}",
                    "resource-types": "consumer"
                },
                "stream": {
                    "arn": "arn:${Partition}:kinesis:${Region}:${Account}:stream/${StreamName}",
                    "resource-types": "stream"
                }
            }
        },
        "kinesisanalytics": {
            "actions": {
                "list": {
                    "ListApplications": {
                        "access-level": "list",
                        "actions": "ListApplications",
                        "description": "List applications for the account"
                    }
                },
                "read": {
                    "DescribeApplication": {
                        "access-level": "read",
                        "actions": "DescribeApplication",
                        "description": "Describes the specified application.",
                        "resource-types": "application*"
                    },
                    "DiscoverInputSchema": {
                        "access-level": "read",
                        "actions": "DiscoverInputSchema",
                        "description": "Discovers the input schema for the application."
                    }
                },
                "write": {
                    "AddApplicationInput": {
                        "access-level": "write",
                        "actions": "AddApplicationInput",
                        "description": "Adds input to the application.",
                        "resource-types": "application*"
                    },
                    "AddApplicationOutput": {
                        "access-level": "write",
                        "actions": "AddApplicationOutput",
                        "description": "Adds output to the application.",
                        "resource-types": "application*"
                    },
                    "AddApplicationReferenceDataSource": {
                        "access-level": "write",
                        "actions": "AddApplicationReferenceDataSource",
                        "description": "Adds reference data source to the application.",
                        "resource-types": "application*"
                    },
                    "CreateApplication": {
                        "access-level": "write",
                        "actions": "CreateApplication",
                        "description": "Creates an application."
                    },
                    "DeleteApplication": {
                        "access-level": "write",
                        "actions": "DeleteApplication",
                        "description": "Deletes the application.",
                        "resource-types": "application*"
                    },
                    "DeleteApplicationOutput": {
                        "access-level": "write",
                        "actions": "DeleteApplicationOutput",
                        "description": "Deletes the specified output of the application.",
                        "resource-types": "application*"
                    },
                    "DeleteApplicationReferenceDataSource": {
                        "access-level": "write",
                        "actions": "DeleteApplicationReferenceDataSource",
                        "description": "Deletes the specified reference data source of the application.",
                        "resource-types": "application*"
                    },
                    "StartApplication": {
                        "access-level": "write",
                        "actions": "StartApplication",
                        "description": "Starts the application.",
                        "resource-types": "application*"
                    },
                    "StopApplication": {
                        "access-level": "write",
                        "actions": "StopApplication",
                        "description": "Stops the application.",
                        "resource-types": "application*"
                    },
                    "UpdateApplication": {
                        "access-level": "write",
                        "actions": "UpdateApplication",
                        "description": "Updates the application.",
                        "resource-types": "application*"
                    }
                }
            }
        },
        "kinesisfirehose": {
            "actions": {
                "list": {
                    "DescribeDeliveryStream": {
                        "access-level": "list",
                        "actions": "DescribeDeliveryStream",
                        "description": "Describes the specified delivery stream and gets the status.",
                        "resource-types": "deliverystream*"
                    },
                    "ListDeliveryStreams": {
                        "access-level": "list",
                        "actions": "ListDeliveryStreams",
                        "description": "Lists your delivery streams."
                    },
                    "ListTagsForDeliveryStream": {
                        "access-level": "list",
                        "actions": "ListTagsForDeliveryStream",
                        "description": "Lists the tags for the specified delivery stream.",
                        "resource-types": "deliverystream*"
                    }
                },
                "write": {
                    "CreateDeliveryStream": {
                        "access-level": "write",
                        "actions": "CreateDeliveryStream",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Creates a delivery stream.",
                        "resource-types": "deliverystream*"
                    },
                    "DeleteDeliveryStream": {
                        "access-level": "write",
                        "actions": "DeleteDeliveryStream",
                        "description": "Deletes a delivery stream and its data.",
                        "resource-types": "deliverystream*"
                    },
                    "PutRecord": {
                        "access-level": "write",
                        "actions": "PutRecord",
                        "description": "Writes a single data record into an Amazon Kinesis Firehose delivery stream.",
                        "resource-types": "deliverystream*"
                    },
                    "PutRecordBatch": {
                        "access-level": "write",
                        "actions": "PutRecordBatch",
                        "description": "Writes multiple data records into a delivery stream in a single call, which can achieve higher throughput per producer than when writing single records.",
                        "resource-types": "deliverystream*"
                    },
                    "StartDeliveryStreamEncryption": {
                        "access-level": "write",
                        "actions": "StartDeliveryStreamEncryption",
                        "description": "Enables server-side encryption (SSE) for the delivery stream.",
                        "resource-types": "deliverystream*"
                    },
                    "StopDeliveryStreamEncryption": {
                        "access-level": "write",
                        "actions": "StopDeliveryStreamEncryption",
                        "description": "Disables the specified destination of the specified delivery stream.",
                        "resource-types": "deliverystream*"
                    },
                    "TagDeliveryStream": {
                        "access-level": "write",
                        "actions": "TagDeliveryStream",
                        "condition-keys": [
                            "aws:RequestTag/${TagKey}",
                            "aws:TagKeys"
                        ],
                        "description": "Adds or updates tags for the specified delivery stream.",
                        "resource-types": "deliverystream*"
                    },
                    "UntagDeliveryStream": {
                        "access-level": "write",
                        "actions": "UntagDeliveryStream",
                        "condition-keys": [
                            "aws:TagKeys"
                        ],
                        "description": "Removes tags from the specified delivery stream.",
                        "resource-types": "deliverystream*"
                    },
                    "UpdateDestination": {
                        "access-level": "write",
                        "actions": "UpdateDestination",
                        "description": "Updates the specified destination of the specified delivery stream.",
                        "resource-types": "deliverystream*"
                    }
                }
            }
        },
        "kinesisvideostreams": {
            "actions": {
                "list": {
                    "DescribeStream": {
                        "access-level": "list",
                        "actions": "DescribeStream",
                        "description": "Describe the specified Kinesis video stream.",
                        "resource-types": "stream*"
                    },
                    "ListFragments": {
                        "access-level": "list",
                        "actions": "ListFragments",
                        "description": "List the fragments from archival storage based on the pagination token or selector type with range specified.",
                        "resource-types": "stream*"
                    },
                    "ListStreams": {
                        "access-level": "list",
                        "actions": "ListStreams",
                        "description": "List your Kinesis video streams."
                    }
                },
                "read": {
                    "GetDataEndpoint": {
                        "access-level": "read",
                        "actions": "GetDataEndpoint",
                        "description": "Gets an endpoint for a specified stream for either reading or writing media data to Kinesis Video Streams.",
                        "resource-types": "stream*"
                    },
                    "GetHLSStreamingSessionURL": {
                        "access-level": "read",
                        "actions": "GetHLSStreamingSessionURL",
                        "description": "Creates a URL for HLS video streaming.",
                        "resource-types": "stream*"
                    },
                    "GetMedia": {
                        "access-level": "read",
                        "actions": "GetMedia",
                        "description": "Returns media content of a Kinesis video stream.",
                        "resource-types": "stream*"
                    },
                    "GetMediaForFragmentList": {
                        "access-level": "read",
                        "actions": "GetMediaForFragmentList",
                        "description": "Read and return media data only from persisted storage.",
                        "resource-types": "stream*"
                    },
                    "ListTagsForStream": {
                        "access-level": "read",
                        "actions": "ListTagsForStream",
                        "description": "Fetch the tags associated with Kinesis video stream.",
                        "resource-types": "stream*"
                    }
                },
                "tagging": {
                    "TagStream": {
                        "access-level": "tagging",
                        "actions": "TagStream",
                        "description": "Attach set of tags to your Kinesis video streams.",
                        "resource-types": "stream*"
                    },
                    "UntagStream": {
                        "access-level": "tagging",
                        "actions": "UntagStream",
                        "description": "Remove one or more tags from your Kinesis video streams.",
                        "resource-types": "stream*"
                    }
                },
                "write": {
                    "CreateStream": {
                        "access-level": "write",
                        "actions": "CreateStream",
                        "description": "Create a Kinesis video stream."
                    },
                    "DeleteStream": {
                        "access-level": "write",
                        "actions": "DeleteStream",
                        "description": "Delete an existing Kinesis video stream.",
                        "resource-types": "stream*"
                    },
                    "PutMedia": {
                        "access-level": "write",
                        "actions": "PutMedia",
                        "description": "Send media data to a Kinesis video stream.",
                        "resource-types": "stream*"
                    },
                    "UpdateDataRetention": {
                        "access-level": "write",
                        "actions": "UpdateDataRetention",
                        "description": "Update the data retention period of your Kinesis video stream.",
                        "resource-types": "stream*"
                    },
                    "UpdateStream": {
                        "access-level": "write",
                        "actions": "UpdateStream",
                        "description": "Update an existing Kinesis video stream.",
                        "resource-types": "stream*"
                    }
                }
            }
        },
        "lambda": {
            "actions": {
                "list": {
                    "ListAliases": {
                        "access-level": "list",
                        "actions": "ListAliases",
                        "description": "Returns list of aliases created for a Lambda function.",
                        "resource-types": "function*"
                    },
                    "ListEventSourceMappings": {
                        "access-level": "list",
                        "actions": "ListEventSourceMappings",
                        "description": "Returns a list of event source mappings you created using the CreateEventSourceMapping."
                    },
                    "ListFunctions": {
                        "access-level": "list",
                        "actions": "ListFunctions",
                        "description": "Returns a list of your Lambda functions."
                    },
                    "ListLayerVersions": {
                        "access-level": "list",
                        "actions": "ListLayerVersions",
                        "description": "Returns a list of your Lambda layer versions."
                    },
                    "ListLayers": {
                        "access-level": "list",
                        "actions": "ListLayers",
                        "description": "Lists function layers and shows information about the latest version of each."
                    },
                    "ListVersionsByFunction": {
                        "access-level": "list",
                        "actions": "ListVersionsByFunction",
                        "description": "List all versions of a function.",
                        "resource-types": "function*"
                    }
                },
                "permissions-management": {
                    "AddLayerVersionPermission": {
                        "access-level": "permissions-management",
                        "actions": "AddLayerVersionPermission",
                        "description": "Adds a permission policy to a version of a function layer.",
                        "resource-types": "layerVersion*"
                    },
                    "AddPermission": {
                        "access-level": "permissions-management",
                        "actions": "AddPermission",
                        "condition-keys": [
                            "lambda:Principal"
                        ],
                        "description": "Adds a permission to the resource policy associated with the specified AWS Lambda function.",
                        "resource-types": "function*"
                    },
                    "EnableReplication": {
                        "access-level": "permissions-management",
                        "actions": "EnableReplication",
                        "description": "Adds a permission to resource policy that gives Lambda replication service permission to get function code and configuration.",
                        "resource-types": "function*"
                    },
                    "RemoveLayerVersionPermission": {
                        "access-level": "permissions-management",
                        "actions": "RemoveLayerVersionPermission",
                        "description": "Removes a statement from the permissions policy for a layer version.",
                        "resource-types": "layerVersion*"
                    },
                    "RemovePermission": {
                        "access-level": "permissions-management",
                        "actions": "RemovePermission",
                        "condition-keys": [
                            "lambda:Principal"
                        ],
                        "description": "You can remove individual permissions from an resource policy associated with a Lambda function by providing a statement ID that you provided when you added the permission.",
                        "resource-types": "function*"
                    }
                },
                "read": {
                    "GetAccountSettings": {
                        "access-level": "read",
                        "actions": "GetAccountSettings",
                        "description": "Returns account limits and usage statistics, such as concurrency and code storage."
                    },
                    "GetAlias": {
                        "access-level": "read",
                        "actions": "GetAlias",
                        "description": "Returns the specified alias information such as the alias ARN, description, and function version it is pointing to.",
                        "resource-types": "function*"
                    },
                    "GetEventSourceMapping": {
                        "access-level": "read",
                        "actions": "GetEventSourceMapping",
                        "description": "Returns configuration information for the specified event source mapping."
                    },
                    "GetFunction": {
                        "access-level": "read",
                        "actions": "GetFunction",
                        "description": "Returns the configuration information of the Lambda function and a presigned URL link to the .zip file you uploaded with CreateFunction so you can download the .zip file.",
                        "resource-types": "function*"
                    },
                    "GetFunctionConfiguration": {
                        "access-level": "read",
                        "actions": "GetFunctionConfiguration",
                        "description": "Returns the configuration information of the Lambda function.",
                        "resource-types": "function*"
                    },
                    "GetLayerVersion": {
                        "access-level": "read",
                        "actions": "GetLayerVersion",
                        "description": "Returns information about a version of a function layer, with a link to download the layer archive that is valid for 10 minutes.",
                        "resource-types": "layerVersion*"
                    },
                    "GetLayerVersionPolicy": {
                        "access-level": "read",
                        "actions": "GetLayerVersionPolicy",
                        "description": "Returns the permissions policy for a layer version.",
                        "resource-types": "layerVersion*"
                    },
                    "GetPolicy": {
                        "access-level": "read",
                        "actions": "GetPolicy",
                        "description": "Returns the resource policy associated with the specified Lambda function.",
                        "resource-types": "function*"
                    },
                    "ListTags": {
                        "access-level": "read",
                        "actions": "ListTags",
                        "description": "Lists tags for a Lambda function.",
                        "resource-types": "function*"
                    }
                },
                "write": {
                    "CreateAlias": {
                        "access-level": "write",
                        "actions": "CreateAlias",
                        "description": "Creates an alias that points to the specified Lambda function version.",
                        "resource-types": "function*"
                    },
                    "CreateEventSourceMapping": {
                        "access-level": "write",
                        "actions": "CreateEventSourceMapping",
                        "condition-keys": [
                            "lambda:FunctionArn"
                        ],
                        "description": "Identifies a stream as an event source for a Lambda function."
                    },
                    "CreateFunction": {
                        "access-level": "write",
                        "actions": "CreateFunction",
                        "condition-keys": [
                            "lambda:Layer"
                        ],
                        "description": "Creates a new Lambda function.",
                        "resource-types": "function*"
                    },
                    "DeleteAlias": {
                        "access-level": "write",
                        "actions": "DeleteAlias",
                        "description": "Deletes the specified Lambda function alias.",
                        "resource-types": "function*"
                    },
                    "DeleteEventSourceMapping": {
                        "access-level": "write",
                        "actions": "DeleteEventSourceMapping",
                        "condition-keys": [
                            "lambda:FunctionArn"
                        ],
                        "description": "Removes an event source mapping.",
                        "resource-types": "eventSourceMapping*"
                    },
                    "DeleteFunction": {
                        "access-level": "write",
                        "actions": "DeleteFunction",
                        "description": "Deletes the specified Lambda function code and configuration.",
                        "resource-types": "function*"
                    },
                    "DeleteFunctionConcurrency": {
                        "access-level": "write",
                        "actions": "DeleteFunctionConcurrency",
                        "description": "Remove concurrency limit set on a Lambda function.",
                        "resource-types": "function*"
                    },
                    "DeleteLayerVersion": {
                        "access-level": "write",
                        "actions": "DeleteLayerVersion",
                        "description": "Deletes a version of a function layer.",
                        "resource-types": "layerVersion*"
                    },
                    "InvokeAsync": {
                        "access-level": "write",
                        "actions": "InvokeAsync",
                        "description": "Submits an invocation request to AWS Lambda. Is deprecated",
                        "resource-types": "function*"
                    },
                    "InvokeFunction": {
                        "access-level": "write",
                        "actions": "InvokeFunction",
                        "description": "Invokes a specific Lambda function.",
                        "resource-types": "function*"
                    },
                    "PublishLayerVersion": {
                        "access-level": "write",
                        "actions": "PublishLayerVersion",
                        "description": "Creates a function layer from a ZIP archive. Each time you call PublishLayerVersion with the same version name, a new version is created.",
                        "resource-types": "layer*"
                    },
                    "PublishVersion": {
                        "access-level": "write",
                        "actions": "PublishVersion",
                        "description": "Publishes a version of your function from the current snapshot of $LATEST.",
                        "resource-types": "function*"
                    },
                    "PutFunctionConcurrency": {
                        "access-level": "write",
                        "actions": "PutFunctionConcurrency",
                        "description": "Adds concurrency limit to a Lambda function.",
                        "resource-types": "function*"
                    },
                    "TagResource": {
                        "access-level": "write",
                        "actions": "TagResource",
                        "description": "Adds tags to a Lambda function.",
                        "resource-types": "function*"
                    },
                    "UntagResource": {
                        "access-level": "write",
                        "actions": "UntagResource",
                        "description": "Removes tags from a Lambda function.",
                        "resource-types": "function*"
                    },
                    "UpdateAlias": {
                        "access-level": "write",
                        "actions": "UpdateAlias",
                        "description": "Using this API you can update the function version to which the alias points and the alias description.",
                        "resource-types": "function*"
                    },
                    "UpdateEventSourceMapping": {
                        "access-level": "write",
                        "actions": "UpdateEventSourceMapping",
                        "description": "You can update an event source mapping."
                    },
                    "UpdateFunctionCode": {
                        "access-level": "write",
                        "actions": "UpdateFunctionCode",
                        "description": "Updates the code for the specified Lambda function.",
                        "resource-types": "function*"
                    },
                    "UpdateFunctionConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateFunctionConfiguration",
                        "condition-keys": [
                            "lambda:Layer"
                        ],
                        "description": "Updates the configuration parameters for the specified Lambda function by using the values provided in the request.",
                        "resource-types": "function*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "eventsourcemapping": {
                    "arn": "arn:${Partition}:lambda:${Region}:${Account}:event-source-mapping:${UUID}",
                    "resource-types": "eventSourceMapping"
                },
                "function": {
                    "arn": "arn:${Partition}:lambda:${Region}:${Account}:function:${FunctionName}",
                    "resource-types": "function"
                },
                "layer": {
                    "arn": "arn:${Partition}:lambda:${Region}:${Account}:layer:${LayerName}",
                    "resource-types": "layer"
                },
                "layerversion": {
                    "arn": "arn:${Partition}:lambda:${Region}:${Account}:layer:${LayerName}:${LayerVersion}",
                    "resource-types": "layerVersion"
                }
            }
        },
        "lex": {
            "actions": {
                "list": {
                    "GetBotAliases": {
                        "access-level": "list",
                        "actions": "GetBotAliases",
                        "description": "Returns a list of aliases for a given Amazon Lex bot.",
                        "resource-types": "bot*"
                    },
                    "GetBotChannelAssociations": {
                        "access-level": "list",
                        "actions": "GetBotChannelAssociations",
                        "description": "Returns a list of all of the channels associated with a single bot.",
                        "resource-types": "channel*"
                    },
                    "GetBotVersions": {
                        "access-level": "list",
                        "actions": "GetBotVersions",
                        "description": "Returns information for all versions of a specific bot.",
                        "resource-types": "bot*"
                    },
                    "GetBots": {
                        "access-level": "list",
                        "actions": "GetBots",
                        "description": "Returns information for the $LATEST version of all bots, subject to filters provided by the client."
                    },
                    "GetIntentVersions": {
                        "access-level": "list",
                        "actions": "GetIntentVersions",
                        "description": "Returns information for all versions of a specific intent.",
                        "resource-types": "intent*"
                    },
                    "GetIntents": {
                        "access-level": "list",
                        "actions": "GetIntents",
                        "description": "Returns information for the $LATEST version of all intents, subject to filters provided by the client."
                    },
                    "GetSlotTypeVersions": {
                        "access-level": "list",
                        "actions": "GetSlotTypeVersions",
                        "description": "Returns information for all versions of a specific slot type.",
                        "resource-types": "slottype*"
                    },
                    "GetSlotTypes": {
                        "access-level": "list",
                        "actions": "GetSlotTypes",
                        "description": "Returns information for the $LATEST version of all slot types, subject to filters provided by the client."
                    },
                    "GetUtterancesView": {
                        "access-level": "list",
                        "actions": "GetUtterancesView",
                        "description": "Returns a view of aggregate utterance data for versions of a bot for a recent time period.",
                        "resource-types": "bot*"
                    }
                },
                "read": {
                    "GetBot": {
                        "access-level": "read",
                        "actions": "GetBot",
                        "description": "Returns information for a specific bot. In addition to the bot name, the bot version or alias is required.",
                        "resource-types": "bot*"
                    },
                    "GetBotAlias": {
                        "access-level": "read",
                        "actions": "GetBotAlias",
                        "description": "Returns information about a Amazon Lex bot alias.",
                        "resource-types": "bot*"
                    },
                    "GetBotChannelAssociation": {
                        "access-level": "read",
                        "actions": "GetBotChannelAssociation",
                        "description": "Returns information about the association between a Amazon Lex bot and a messaging platform.",
                        "resource-types": "channel*"
                    },
                    "GetBuiltinIntent": {
                        "access-level": "read",
                        "actions": "GetBuiltinIntent",
                        "description": "Returns information about a built-in intent."
                    },
                    "GetBuiltinIntents": {
                        "access-level": "read",
                        "actions": "GetBuiltinIntents",
                        "description": "Gets a list of built-in intents that meet the specified criteria."
                    },
                    "GetBuiltinSlotTypes": {
                        "access-level": "read",
                        "actions": "GetBuiltinSlotTypes",
                        "description": "Gets a list of built-in slot types that meet the specified criteria."
                    },
                    "GetIntent": {
                        "access-level": "read",
                        "actions": "GetIntent",
                        "description": "Returns information for a specific intent. In addition to the intent name, you must also specify the intent version.",
                        "resource-types": "intent*"
                    },
                    "GetSlotType": {
                        "access-level": "read",
                        "actions": "GetSlotType",
                        "description": "Returns information about a specific version of a slot type. In addition to specifying the slot type name, you must also specify the slot type version.",
                        "resource-types": "slottype*"
                    }
                },
                "write": {
                    "CreateBotVersion": {
                        "access-level": "write",
                        "actions": "CreateBotVersion",
                        "description": "Creates a new version based on the $LATEST version of the specified bot.",
                        "resource-types": "bot*"
                    },
                    "CreateIntentVersion": {
                        "access-level": "write",
                        "actions": "CreateIntentVersion",
                        "description": "Creates a new version based on the $LATEST version of the specified intent.",
                        "resource-types": "intent*"
                    },
                    "CreateSlotTypeVersion": {
                        "access-level": "write",
                        "actions": "CreateSlotTypeVersion",
                        "description": "Creates a new version based on the $LATEST version of the specified slot type.",
                        "resource-types": "slottype*"
                    },
                    "DeleteBot": {
                        "access-level": "write",
                        "actions": "DeleteBot",
                        "description": "Deletes all versions of a bot.",
                        "resource-types": "bot*"
                    },
                    "DeleteBotAlias": {
                        "access-level": "write",
                        "actions": "DeleteBotAlias",
                        "description": "Deletes an alias for a specific bot.",
                        "resource-types": "bot*"
                    },
                    "DeleteBotChannelAssociation": {
                        "access-level": "write",
                        "actions": "DeleteBotChannelAssociation",
                        "description": "Deletes the association between a Amazon Lex bot alias and a messaging platform.",
                        "resource-types": "channel*"
                    },
                    "DeleteBotVersion": {
                        "access-level": "write",
                        "actions": "DeleteBotVersion",
                        "description": "Deletes a specific version of a bot.",
                        "resource-types": "bot*"
                    },
                    "DeleteIntent": {
                        "access-level": "write",
                        "actions": "DeleteIntent",
                        "description": "Deletes all versions of an intent.",
                        "resource-types": "intent*"
                    },
                    "DeleteIntentVersion": {
                        "access-level": "write",
                        "actions": "DeleteIntentVersion",
                        "description": "Deletes a specific version of an intent.",
                        "resource-types": "intent*"
                    },
                    "DeleteSlotType": {
                        "access-level": "write",
                        "actions": "DeleteSlotType",
                        "description": "Deletes all versions of a slot type.",
                        "resource-types": "slottype*"
                    },
                    "DeleteSlotTypeVersion": {
                        "access-level": "write",
                        "actions": "DeleteSlotTypeVersion",
                        "description": "Deletes a specific version of a slot type.",
                        "resource-types": "slottype*"
                    },
                    "DeleteUtterances": {
                        "access-level": "write",
                        "actions": "DeleteUtterances",
                        "description": "Deletes the information Amazon Lex maintains for utterances on a specific bot and userId.",
                        "resource-types": "bot*"
                    },
                    "PostContent": {
                        "access-level": "write",
                        "actions": "PostContent",
                        "description": "Sends user input (text or speech) to Amazon Lex.",
                        "resource-types": "bot*"
                    },
                    "PostText": {
                        "access-level": "write",
                        "actions": "PostText",
                        "description": "Sends user input (text-only) to Amazon Lex.",
                        "resource-types": "bot*"
                    },
                    "PutBot": {
                        "access-level": "write",
                        "actions": "PutBot",
                        "description": "Creates or updates the $LATEST version of a Amazon Lex conversational bot.",
                        "resource-types": "bot*"
                    },
                    "PutBotAlias": {
                        "access-level": "write",
                        "actions": "PutBotAlias",
                        "description": "Creates or updates an alias for the specific bot.",
                        "resource-types": "bot*"
                    },
                    "PutIntent": {
                        "access-level": "write",
                        "actions": "PutIntent",
                        "description": "Creates or updates the $LATEST version of an intent.",
                        "resource-types": "intent*"
                    },
                    "PutSlotType": {
                        "access-level": "write",
                        "actions": "PutSlotType",
                        "description": "Creates or updates the $LATEST version of a slot type.",
                        "resource-types": "slottype*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "bot": {
                    "arn": "arn:${Partition}:lex:${Region}:${Account}:bot:${BotName}:${BotVersionOrAlias}",
                    "resource-types": "bot"
                },
                "channel": {
                    "arn": "arn:${Partition}:lex:${Region}:${Account}:bot-channel:${BotName}:${BotAlias}:${ChannelName}",
                    "resource-types": "channel"
                },
                "intent": {
                    "arn": "arn:${Partition}:lex:${Region}:${Account}:intent:${IntentName}:${IntentVersion}",
                    "resource-types": "intent"
                },
                "slottype": {
                    "arn": "arn:${Partition}:lex:${Region}:${Account}:slottype:${SlotName}:${SlotVersion}",
                    "resource-types": "slottype"
                }
            }
        },
        "licensemanager": {
            "actions": {
                "list": {
                    "GetLicenseConfiguration": {
                        "access-level": "list",
                        "actions": "GetLicenseConfiguration",
                        "description": "Gets a license configuration",
                        "resource-types": "license-configuration*"
                    },
                    "GetServiceSettings": {
                        "access-level": "list",
                        "actions": "GetServiceSettings",
                        "description": "Gets service settings"
                    },
                    "ListAssociationsForLicenseConfiguration": {
                        "access-level": "list",
                        "actions": "ListAssociationsForLicenseConfiguration",
                        "description": "Lists associations for a selected license configuration",
                        "resource-types": "license-configuration*"
                    },
                    "ListLicenseConfigurations": {
                        "access-level": "list",
                        "actions": "ListLicenseConfigurations",
                        "description": "Lists license configurations"
                    },
                    "ListLicenseSpecificationsForResource": {
                        "access-level": "list",
                        "actions": "ListLicenseSpecificationsForResource",
                        "description": "Lists license specifications associated with a selected resource"
                    },
                    "ListResourceInventory": {
                        "access-level": "list",
                        "actions": "ListResourceInventory",
                        "description": "Lists resource inventory"
                    },
                    "ListTagsForResource": {
                        "access-level": "list",
                        "actions": "ListTagsForResource",
                        "description": "Lists tags for a selected resource",
                        "resource-types": "license-configuration*"
                    },
                    "ListUsageForLicenseConfiguration": {
                        "access-level": "list",
                        "actions": "ListUsageForLicenseConfiguration",
                        "description": "Lists usage records for selected license configuration",
                        "resource-types": "license-configuration*"
                    }
                },
                "permissions-management": {
                    "UpdateServiceSettings": {
                        "access-level": "permissions-management",
                        "actions": "UpdateServiceSettings",
                        "description": "Updates service settings"
                    }
                },
                "tagging": {
                    "CreateLicenseConfiguration": {
                        "access-level": "tagging",
                        "actions": "CreateLicenseConfiguration",
                        "description": "Creates a new license configuration"
                    },
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "description": "Tags a selected resource",
                        "resource-types": "license-configuration*"
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "Untags a selected resource",
                        "resource-types": "license-configuration*"
                    }
                },
                "write": {
                    "DeleteLicenseConfiguration": {
                        "access-level": "write",
                        "actions": "DeleteLicenseConfiguration",
                        "description": "Permanently deletes a license configuration",
                        "resource-types": "license-configuration*"
                    },
                    "UpdateLicenseConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateLicenseConfiguration",
                        "description": "Updates an existing license configuration",
                        "resource-types": "license-configuration*"
                    },
                    "UpdateLicenseSpecificationsForResource": {
                        "access-level": "write",
                        "actions": "UpdateLicenseSpecificationsForResource",
                        "description": "Updates license specifications for a selected resource",
                        "resource-types": "license-configuration*"
                    }
                }
            }
        },
        "lightsail": {
            "actions": {
                "list": {
                    "GetBlueprints": {
                        "access-level": "list",
                        "actions": "GetBlueprints",
                        "description": "Returns the list of available instance images, or blueprints. You can use a blueprint to create a new instance already running a specific operating system, as well as a preinstalled app or development stack. The software each instance is running depends on the blueprint image you choose."
                    },
                    "GetBundles": {
                        "access-level": "list",
                        "actions": "GetBundles",
                        "description": "Returns the list of bundles that are available for purchase. A bundle describes the specifications for your instance."
                    },
                    "GetDomain": {
                        "access-level": "list",
                        "actions": "GetDomain",
                        "description": "Returns information about a specific domain recordset.",
                        "resource-types": "Domain*"
                    },
                    "GetInstanceSnapshots": {
                        "access-level": "list",
                        "actions": "GetInstanceSnapshots",
                        "description": "Returns all instance snapshots for the user\\'s account.",
                        "resource-types": "InstanceSnapshot*"
                    },
                    "GetInstances": {
                        "access-level": "list",
                        "actions": "GetInstances",
                        "description": "Returns information about all Amazon Lightsail instances.",
                        "resource-types": "Instance*"
                    },
                    "GetKeyPair": {
                        "access-level": "list",
                        "actions": "GetKeyPair",
                        "description": "Returns information about a specific key pair.",
                        "resource-types": "KeyPair*"
                    },
                    "GetRegions": {
                        "access-level": "list",
                        "actions": "GetRegions",
                        "description": "Returns a list of all valid regions for Amazon Lightsail."
                    },
                    "GetStaticIps": {
                        "access-level": "list",
                        "actions": "GetStaticIps",
                        "description": "Returns information about all static IPs in the user\\'s account.",
                        "resource-types": "StaticIp*"
                    },
                    "IsVpcPeered": {
                        "access-level": "list",
                        "actions": "IsVpcPeered",
                        "description": "Returns a Boolean value indicating whether your Lightsail VPC is peered."
                    }
                },
                "read": {
                    "DownloadDefaultKeyPair": {
                        "access-level": "read",
                        "actions": "DownloadDefaultKeyPair",
                        "description": "Downloads the default SSH key pair from the user\\'s account.",
                        "resource-types": "KeyPair*"
                    },
                    "GetActiveNames": {
                        "access-level": "read",
                        "actions": "GetActiveNames",
                        "description": "Returns the names of all active (not deleted) resources."
                    },
                    "GetDomains": {
                        "access-level": "read",
                        "actions": "GetDomains",
                        "description": "Returns a list of all domains in the user\\'s account.",
                        "resource-types": "Domain*"
                    },
                    "GetInstance": {
                        "access-level": "read",
                        "actions": "GetInstance",
                        "description": "Returns information about a specific Amazon Lightsail instance.",
                        "resource-types": "Instance*"
                    },
                    "GetInstanceAccessDetails": {
                        "access-level": "read",
                        "actions": "GetInstanceAccessDetails",
                        "description": "Returns temporary SSH keys you can use to connect to a specific instance.",
                        "resource-types": "Instance*"
                    },
                    "GetInstanceMetricData": {
                        "access-level": "read",
                        "actions": "GetInstanceMetricData",
                        "description": "Returns the data points for the specified Amazon Lightsail instance metric, given an instance name.",
                        "resource-types": "Instance*"
                    },
                    "GetInstancePortStates": {
                        "access-level": "read",
                        "actions": "GetInstancePortStates",
                        "description": "Returns the port states for a specific instance.",
                        "resource-types": "Instance*"
                    },
                    "GetInstanceSnapshot": {
                        "access-level": "read",
                        "actions": "GetInstanceSnapshot",
                        "description": "Returns information about a specific instance snapshot.",
                        "resource-types": "InstanceSnapshot*"
                    },
                    "GetInstanceState": {
                        "access-level": "read",
                        "actions": "GetInstanceState",
                        "description": "Returns the state of a specific instance.",
                        "resource-types": "Instance*"
                    },
                    "GetKeyPairs": {
                        "access-level": "read",
                        "actions": "GetKeyPairs",
                        "description": "Returns information about all key pairs in the user\\'s account.",
                        "resource-types": "KeyPair*"
                    },
                    "GetOperation": {
                        "access-level": "read",
                        "actions": "GetOperation",
                        "description": "Returns information about a specific operation. Operations include events such as when you create an instance, allocate a static IP, attach a static IP, and so on."
                    },
                    "GetOperations": {
                        "access-level": "read",
                        "actions": "GetOperations",
                        "description": "Returns information about all operations."
                    },
                    "GetOperationsForResource": {
                        "access-level": "read",
                        "actions": "GetOperationsForResource",
                        "description": "Gets operations for a specific resource.",
                        "resource-types": "Domain"
                    },
                    "GetStaticIp": {
                        "access-level": "read",
                        "actions": "GetStaticIp",
                        "description": "Returns information about a specific static IP.",
                        "resource-types": "StaticIp*"
                    },
                    "Instance": {
                        "access-level": "read",
                        "actions": "Instance"
                    },
                    "InstanceSnapshot": {
                        "access-level": "read",
                        "actions": "InstanceSnapshot"
                    },
                    "KeyPair": {
                        "access-level": "read",
                        "actions": "KeyPair"
                    },
                    "StaticIp": {
                        "access-level": "read",
                        "actions": "StaticIp"
                    }
                },
                "write": {
                    "AllocateStaticIp": {
                        "access-level": "write",
                        "actions": "AllocateStaticIp",
                        "description": "Allocates a static IP address.",
                        "resource-types": "StaticIp*"
                    },
                    "AttachStaticIp": {
                        "access-level": "write",
                        "actions": "AttachStaticIp",
                        "description": "Attaches a static IP address to a specific Amazon Lightsail instance.",
                        "resource-types": "Instance*"
                    },
                    "CloseInstancePublicPorts": {
                        "access-level": "write",
                        "actions": "CloseInstancePublicPorts",
                        "description": "Closes the public ports on a specific Amazon Lightsail instance.",
                        "resource-types": "Instance*"
                    },
                    "CreateDomain": {
                        "access-level": "write",
                        "actions": "CreateDomain",
                        "description": "Creates a domain resource for the specified domain.",
                        "resource-types": "Domain*"
                    },
                    "CreateDomainEntry": {
                        "access-level": "write",
                        "actions": "CreateDomainEntry",
                        "condition-keys": [
                            "Creates",
                            "one",
                            "of",
                            "the",
                            "following",
                            "entry",
                            "records",
                            "associated",
                            "with",
                            "the",
                            "domain:",
                            "A",
                            "record,",
                            "CNAME",
                            "record,",
                            "TXT",
                            "record,",
                            "or",
                            "MX",
                            "record."
                        ],
                        "resource-types": "Domain*"
                    },
                    "CreateInstanceSnapshot": {
                        "access-level": "write",
                        "actions": "CreateInstanceSnapshot",
                        "description": "Creates a snapshot of a specific instance. You can use a snapshot to create a new instance that is based on that snapshot.",
                        "resource-types": "Instance*"
                    },
                    "CreateInstances": {
                        "access-level": "write",
                        "actions": "CreateInstances",
                        "description": "Creates one or more Amazon Lightsail instances.",
                        "resource-types": "KeyPair*"
                    },
                    "CreateInstancesFromSnapshot": {
                        "access-level": "write",
                        "actions": "CreateInstancesFromSnapshot",
                        "description": "Uses a specific snapshot as a blueprint for creating one or more new instances that are based on that identical configuration.",
                        "resource-types": "Instance*"
                    },
                    "CreateKeyPair": {
                        "access-level": "write",
                        "actions": "CreateKeyPair",
                        "description": "Creates sn SSH key pair.",
                        "resource-types": "KeyPair*"
                    },
                    "DeleteDomain": {
                        "access-level": "write",
                        "actions": "DeleteDomain",
                        "description": "Deletes the specified domain recordset and all of its domain records.",
                        "resource-types": "Domain*"
                    },
                    "DeleteDomainEntry": {
                        "access-level": "write",
                        "actions": "DeleteDomainEntry",
                        "description": "Deletes a specific domain entry.",
                        "resource-types": "Domain*"
                    },
                    "DeleteInstance": {
                        "access-level": "write",
                        "actions": "DeleteInstance",
                        "description": "Deletes a specific Amazon Lightsail instance.",
                        "resource-types": "Instance*"
                    },
                    "DeleteInstanceSnapshot": {
                        "access-level": "write",
                        "actions": "DeleteInstanceSnapshot",
                        "description": "Deletes a specific snapshot of an instance.",
                        "resource-types": "InstanceSnapshot*"
                    },
                    "DeleteKeyPair": {
                        "access-level": "write",
                        "actions": "DeleteKeyPair",
                        "description": "Deletes a specific SSH key pair.",
                        "resource-types": "KeyPair*"
                    },
                    "DetachStaticIp": {
                        "access-level": "write",
                        "actions": "DetachStaticIp",
                        "description": "Detaches a static IP from the Amazon Lightsail instance to which it is attached.",
                        "resource-types": "Instance*"
                    },
                    "ImportKeyPair": {
                        "access-level": "write",
                        "actions": "ImportKeyPair",
                        "description": "Imports a public SSH key from a specific key pair.",
                        "resource-types": "KeyPair*"
                    },
                    "InstanceSnapshot*": {
                        "access-level": "write",
                        "actions": "InstanceSnapshot*"
                    },
                    "OpenInstancePublicPorts": {
                        "access-level": "write",
                        "actions": "OpenInstancePublicPorts",
                        "description": "Adds public ports to an Amazon Lightsail instance.",
                        "resource-types": "Instance*"
                    },
                    "PeerVpc": {
                        "access-level": "write",
                        "actions": "PeerVpc",
                        "description": "Tries to peer the Lightsail VPC with the user\\'s default VPC."
                    },
                    "RebootInstance": {
                        "access-level": "write",
                        "actions": "RebootInstance",
                        "description": "Restarts a specific instance. When your Amazon Lightsail instance is finished rebooting, Lightsail assigns a new public IP address. To use the same IP address after restarting, create a static IP address and attach it to the instance.",
                        "resource-types": "Instance*"
                    },
                    "ReleaseStaticIp": {
                        "access-level": "write",
                        "actions": "ReleaseStaticIp",
                        "description": "Deletes a specific static IP from your account.",
                        "resource-types": "StaticIp*"
                    },
                    "StartInstance": {
                        "access-level": "write",
                        "actions": "StartInstance",
                        "description": "Starts a specific Amazon Lightsail instance from a stopped state. To restart an instance, use the reboot instance operation.",
                        "resource-types": "Instance*"
                    },
                    "StaticIp*": {
                        "access-level": "write",
                        "actions": "StaticIp*"
                    },
                    "StopInstance": {
                        "access-level": "write",
                        "actions": "StopInstance",
                        "description": "Stops a specific Amazon Lightsail instance that is currently running.",
                        "resource-types": "Instance*"
                    },
                    "UnpeerVpc": {
                        "access-level": "write",
                        "actions": "UnpeerVpc",
                        "description": "Attempts to unpeer the Lightsail VPC from the user\\'s default VPC."
                    },
                    "UpdateDomainEntry": {
                        "access-level": "write",
                        "actions": "UpdateDomainEntry",
                        "description": "Updates a domain RecordSet after it is created.",
                        "resource-types": "Domain*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "domain": {
                    "arn": "arn:${Partition}:lightsail:${Region}:${Account}:Domain/${Id}",
                    "resource-types": "Domain"
                },
                "instance": {
                    "arn": "arn:${Partition}:lightsail:${Region}:${Account}:Instance/${Id}",
                    "resource-types": "Instance"
                },
                "instancesnapshot": {
                    "arn": "arn:${Partition}:lightsail:${Region}:${Account}:InstanceSnapshot/${Id}",
                    "resource-types": "InstanceSnapshot"
                },
                "keypair": {
                    "arn": "arn:${Partition}:lightsail:${Region}:${Account}:KeyPair/${Id}",
                    "resource-types": "KeyPair"
                },
                "staticip": {
                    "arn": "arn:${Partition}:lightsail:${Region}:${Account}:StaticIp/${Id}",
                    "resource-types": "StaticIp"
                }
            }
        },
        "machinelearning": {
            "actions": {
                "list": {
                    "DescribeBatchPredictions": {
                        "access-level": "list",
                        "actions": "DescribeBatchPredictions",
                        "description": "Returns a list of BatchPrediction operations that match the search criteria in the request"
                    },
                    "DescribeDataSources": {
                        "access-level": "list",
                        "actions": "DescribeDataSources",
                        "description": "Returns a list of DataSource that match the search criteria in the request"
                    },
                    "DescribeEvaluations": {
                        "access-level": "list",
                        "actions": "DescribeEvaluations",
                        "description": "Returns a list of DescribeEvaluations that match the search criteria in the request"
                    },
                    "DescribeMLModels": {
                        "access-level": "list",
                        "actions": "DescribeMLModels",
                        "description": "Returns a list of MLModel that match the search criteria in the request"
                    },
                    "DescribeTags": {
                        "access-level": "list",
                        "actions": "DescribeTags",
                        "description": "Describes one or more of the tags for your Amazon ML object",
                        "resource-types": "batchprediction"
                    },
                    "datasource": {
                        "access-level": "list",
                        "actions": "datasource"
                    },
                    "evaluation": {
                        "access-level": "list",
                        "actions": "evaluation"
                    },
                    "mlmodel": {
                        "access-level": "list",
                        "actions": "mlmodel"
                    }
                },
                "read": {
                    "GetBatchPrediction": {
                        "access-level": "read",
                        "actions": "GetBatchPrediction",
                        "description": "Returns a BatchPrediction that includes detailed metadata, status, and data file information",
                        "resource-types": "batchprediction*"
                    },
                    "GetDataSource": {
                        "access-level": "read",
                        "actions": "GetDataSource",
                        "description": "Returns a DataSource that includes metadata and data file information, as well as the current status of the DataSource",
                        "resource-types": "datasource*"
                    },
                    "GetEvaluation": {
                        "access-level": "read",
                        "actions": "GetEvaluation",
                        "description": "Returns an Evaluation that includes metadata as well as the current status of the Evaluation",
                        "resource-types": "datasource*"
                    },
                    "GetMLModel": {
                        "access-level": "read",
                        "actions": "GetMLModel",
                        "description": "Returns an MLModel that includes detailed metadata, and data source information as well as the current status of the MLModel",
                        "resource-types": "mlmodel*"
                    }
                },
                "tagging": {
                    "AddTags": {
                        "access-level": "tagging",
                        "actions": "AddTags",
                        "description": "Adds one or more tags to an object, up to a limit of 10. Each tag consists of a key and an optional value",
                        "resource-types": "batchprediction"
                    },
                    "DeleteTags": {
                        "access-level": "tagging",
                        "actions": "DeleteTags",
                        "description": "Deletes the specified tags associated with an ML object. After this operation is complete, you can\\'t recover deleted tags",
                        "resource-types": "batchprediction"
                    },
                    "datasource": {
                        "access-level": "tagging",
                        "actions": "datasource"
                    },
                    "evaluation": {
                        "access-level": "tagging",
                        "actions": "evaluation"
                    },
                    "mlmodel": {
                        "access-level": "tagging",
                        "actions": "mlmodel"
                    }
                },
                "write": {
                    "CreateBatchPrediction": {
                        "access-level": "write",
                        "actions": "CreateBatchPrediction",
                        "description": "Generates predictions for a group of observations",
                        "resource-types": "batchprediction*"
                    },
                    "CreateDataSourceFromRDS": {
                        "access-level": "write",
                        "actions": "CreateDataSourceFromRDS",
                        "description": "Creates a DataSource object from an Amazon RDS",
                        "resource-types": "datasource*"
                    },
                    "CreateDataSourceFromRedshift": {
                        "access-level": "write",
                        "actions": "CreateDataSourceFromRedshift",
                        "description": "Creates a DataSource from a database hosted on an Amazon Redshift cluster",
                        "resource-types": "datasource*"
                    },
                    "CreateDataSourceFromS3": {
                        "access-level": "write",
                        "actions": "CreateDataSourceFromS3",
                        "description": "Creates a DataSource object from S3",
                        "resource-types": "datasource*"
                    },
                    "CreateEvaluation": {
                        "access-level": "write",
                        "actions": "CreateEvaluation",
                        "description": "Creates a new Evaluation of an MLModel",
                        "resource-types": "datasource*"
                    },
                    "CreateMLModel": {
                        "access-level": "write",
                        "actions": "CreateMLModel",
                        "description": "Creates a new MLModel",
                        "resource-types": "datasource*"
                    },
                    "CreateRealtimeEndpoint": {
                        "access-level": "write",
                        "actions": "CreateRealtimeEndpoint",
                        "description": "Creates a real-time endpoint for the MLModel",
                        "resource-types": "mlmodel*"
                    },
                    "DeleteBatchPrediction": {
                        "access-level": "write",
                        "actions": "DeleteBatchPrediction",
                        "description": "Assigns the DELETED status to a BatchPrediction, rendering it unusable",
                        "resource-types": "batchprediction*"
                    },
                    "DeleteDataSource": {
                        "access-level": "write",
                        "actions": "DeleteDataSource",
                        "description": "Assigns the DELETED status to a DataSource, rendering it unusable",
                        "resource-types": "datasource*"
                    },
                    "DeleteEvaluation": {
                        "access-level": "write",
                        "actions": "DeleteEvaluation",
                        "description": "Assigns the DELETED status to an Evaluation, rendering it unusable",
                        "resource-types": "evaluation*"
                    },
                    "DeleteMLModel": {
                        "access-level": "write",
                        "actions": "DeleteMLModel",
                        "description": "Assigns the DELETED status to an MLModel, rendering it unusable",
                        "resource-types": "mlmodel*"
                    },
                    "DeleteRealtimeEndpoint": {
                        "access-level": "write",
                        "actions": "DeleteRealtimeEndpoint",
                        "description": "Deletes a real time endpoint of an MLModel",
                        "resource-types": "mlmodel*"
                    },
                    "Predict": {
                        "access-level": "write",
                        "actions": "Predict",
                        "description": "Generates a prediction for the observation using the specified ML Model",
                        "resource-types": "mlmodel*"
                    },
                    "UpdateBatchPrediction": {
                        "access-level": "write",
                        "actions": "UpdateBatchPrediction",
                        "description": "Updates the BatchPredictionName of a BatchPrediction",
                        "resource-types": "batchprediction*"
                    },
                    "UpdateDataSource": {
                        "access-level": "write",
                        "actions": "UpdateDataSource",
                        "description": "Updates the DataSourceName of a DataSource",
                        "resource-types": "datasource*"
                    },
                    "UpdateEvaluation": {
                        "access-level": "write",
                        "actions": "UpdateEvaluation",
                        "description": "Updates the EvaluationName of an Evaluation",
                        "resource-types": "evaluation*"
                    },
                    "UpdateMLModel": {
                        "access-level": "write",
                        "actions": "UpdateMLModel",
                        "description": "Updates the MLModelName and the ScoreThreshold of an MLModel",
                        "resource-types": "mlmodel*"
                    },
                    "datasource*": {
                        "access-level": "write",
                        "actions": "datasource*"
                    },
                    "evaluation*": {
                        "access-level": "write",
                        "actions": "evaluation*"
                    },
                    "mlmodel*": {
                        "access-level": "write",
                        "actions": "mlmodel*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "batchprediction": {
                    "arn": "arn:${Partition}:machinelearning:${Region}:${Account}:batchprediction/${BatchPredictionId}",
                    "resource-types": "batchprediction"
                },
                "datasource": {
                    "arn": "arn:${Partition}:machinelearning:${Region}:${Account}:datasource/${DatasourceId}",
                    "resource-types": "datasource"
                },
                "evaluation": {
                    "arn": "arn:${Partition}:machinelearning:${Region}:${Account}:evaluation/${EvaluationId}",
                    "resource-types": "evaluation"
                },
                "mlmodel": {
                    "arn": "arn:${Partition}:machinelearning:${Region}:${Account}:mlmodel/${MlModelId}",
                    "resource-types": "mlmodel"
                }
            }
        },
        "macie": {
            "actions": {
                "list": {
                    "ListMemberAccounts": {
                        "access-level": "list",
                        "actions": "ListMemberAccounts",
                        "description": "Enables the user to list all Amazon Macie member accounts for the current Macie master account."
                    },
                    "ListS3Resources": {
                        "access-level": "list",
                        "actions": "ListS3Resources",
                        "description": "Enables the user to list all the S3 resources associated with Amazon Macie."
                    }
                },
                "write": {
                    "AssociateMemberAccount": {
                        "access-level": "write",
                        "actions": "AssociateMemberAccount",
                        "description": "Enables the user to associate a specified AWS account with Amazon Macie as a member account."
                    },
                    "AssociateS3Resources": {
                        "access-level": "write",
                        "actions": "AssociateS3Resources",
                        "condition-keys": [
                            "aws:SourceArn"
                        ],
                        "description": "Enables the user to associate specified S3 resources with Amazon Macie for monitoring and data classification."
                    },
                    "DisassociateMemberAccount": {
                        "access-level": "write",
                        "actions": "DisassociateMemberAccount",
                        "description": "Enables the user to remove the specified member account from Amazon Macie."
                    },
                    "DisassociateS3Resources": {
                        "access-level": "write",
                        "actions": "DisassociateS3Resources",
                        "condition-keys": [
                            "aws:SourceArn"
                        ],
                        "description": "Enables the user to remove specified S3 resources from being monitored by Amazon Macie."
                    },
                    "UpdateS3Resources": {
                        "access-level": "write",
                        "actions": "UpdateS3Resources",
                        "condition-keys": [
                            "aws:SourceArn"
                        ],
                        "description": "Enables the user to update the classification types for the specified S3 resources."
                    }
                }
            }
        },
        "manageapigateway": {
            "actions": {
                "read": {
                    "GET": {
                        "access-level": "read",
                        "actions": "GET",
                        "description": "Used to get information about resources",
                        "resource-types": "apigateway-general*"
                    }
                },
                "write": {
                    "DELETE": {
                        "access-level": "write",
                        "actions": "DELETE",
                        "description": "Used to delete resources",
                        "resource-types": "apigateway-general*"
                    },
                    "PATCH": {
                        "access-level": "write",
                        "actions": "PATCH",
                        "description": "Used to update resources",
                        "resource-types": "apigateway-general*"
                    },
                    "POST": {
                        "access-level": "write",
                        "actions": "POST",
                        "description": "Used to create child resources",
                        "resource-types": "apigateway-general*"
                    },
                    "PUT": {
                        "access-level": "write",
                        "actions": "PUT",
                        "description": "Used to update resources (and, although not recommended, can be used to create child resources)",
                        "resource-types": "apigateway-general*"
                    },
                    "UpdateRestApiPolicy": {
                        "access-level": "write",
                        "actions": "UpdateRestApiPolicy",
                        "description": "Used to update the Resource Policy for a given API",
                        "resource-types": "apigateway-general*"
                    }
                }
            }
        },
        "managedstreamingforkafka": {
            "actions": {
                "list": {
                    "ListClusters": {
                        "access-level": "list",
                        "actions": "ListClusters",
                        "description": "Grants permission to return a list of all clusters in the current account."
                    },
                    "ListNodes": {
                        "access-level": "list",
                        "actions": "ListNodes",
                        "description": "Grants permission to return a list of nodes in a cluster."
                    }
                },
                "read": {
                    "DescribeCluster": {
                        "access-level": "read",
                        "actions": "DescribeCluster",
                        "description": "Grants permission to describe a cluster."
                    },
                    "GetBootstrapBrokers": {
                        "access-level": "read",
                        "actions": "GetBootstrapBrokers",
                        "description": "Grants permission to get connection details for the broker nodes in a cluster."
                    }
                },
                "write": {
                    "CreateCluster": {
                        "access-level": "write",
                        "actions": "CreateCluster",
                        "dependent-actions": "ec2:DescribeSecurityGroups ec2:DescribeSubnets ec2:DescribeVpcs iam:AttachRolePolicy iam:CreateServiceLinkedRole iam:PutRolePolicy kms:CreateGrant kms:DescribeKey",
                        "description": "Grants permission to create a cluster."
                    },
                    "DeleteCluster": {
                        "access-level": "write",
                        "actions": "DeleteCluster",
                        "description": "Grants permission to delete a cluster."
                    }
                }
            }
        },
        "marketplace": {
            "actions": {
                "list": {
                    "ViewSubscriptions": {
                        "access-level": "list",
                        "actions": "ViewSubscriptions",
                        "description": "Allows users to see subscribed software. Without this permission, no other permissions will work."
                    }
                },
                "write": {
                    "Subscribe": {
                        "access-level": "write",
                        "actions": "Subscribe",
                        "description": "Allows users to add new software subscriptions on the Your Software page."
                    },
                    "Unsubscribe": {
                        "access-level": "write",
                        "actions": "Unsubscribe",
                        "description": "Allows users to remove software subscriptions from the Your Software page."
                    }
                }
            }
        },
        "marketplacemanagementportal": {
            "actions": {
                "list": {
                    "viewMarketing": {
                        "access-level": "list",
                        "actions": "viewMarketing",
                        "description": "Allows a user to access the Marketing page inside the AWS Marketplace Management Portal."
                    },
                    "viewReports": {
                        "access-level": "list",
                        "actions": "viewReports",
                        "description": "Allows a user to access the Reports page inside the AWS Marketplace Management Portal."
                    },
                    "viewSettings": {
                        "access-level": "list",
                        "actions": "viewSettings",
                        "description": "Allows a user to access the Settings page inside the AWS Marketplace Management Portal."
                    },
                    "viewSupport": {
                        "access-level": "list",
                        "actions": "viewSupport",
                        "description": "Allows a user to access the Customer Support Eligibility page inside the AWS Marketplace Management Portal."
                    }
                },
                "write": {
                    "uploadFiles": {
                        "access-level": "write",
                        "actions": "uploadFiles",
                        "description": "Allows a user to access the File Upload page inside the AWS Marketplace Management Portal."
                    }
                }
            }
        },
        "marketplacemeteringservice": {
            "actions": {
                "write": {
                    "BatchMeterUsage": {
                        "access-level": "write",
                        "actions": "BatchMeterUsage",
                        "description": "Called from a SaaS application listed on the AWS Marketplace to post metering records for a set of customers."
                    },
                    "MeterUsage": {
                        "access-level": "write",
                        "actions": "MeterUsage",
                        "description": "Emits metering records."
                    },
                    "RegisterUsage": {
                        "access-level": "write",
                        "actions": "RegisterUsage",
                        "description": "Allows you to verify that the customer running your paid software is subscribed to your product on AWS Marketplace, enabling you to guard against unauthorized use. Meters software use per ECS task, per hour, with usage prorated to the second."
                    },
                    "ResolveCustomer": {
                        "access-level": "write",
                        "actions": "ResolveCustomer",
                        "description": "Resolves a registration token to obtain a CustomerIdentifier and product code."
                    }
                }
            }
        },
        "mechanicalturk": {
            "actions": {
                "read": {
                    "GetAccountBalance": {
                        "access-level": "read",
                        "actions": "GetAccountBalance",
                        "description": "The GetAccountBalance operation retrieves the amount of money in your Amazon Mechanical Turk account"
                    },
                    "GetAssignment": {
                        "access-level": "read",
                        "actions": "GetAssignment",
                        "description": "The GetAssignment operation retrieves an assignment with an AssignmentStatus value of Submitted, Approved, or Rejected, using the assignment\\'s ID"
                    },
                    "GetAssignmentsForHIT": {
                        "access-level": "read",
                        "actions": "GetAssignmentsForHIT",
                        "description": "The GetAssignmentsForHIT operation retrieves completed assignments for a HIT"
                    },
                    "GetBlockedWorkers": {
                        "access-level": "read",
                        "actions": "GetBlockedWorkers",
                        "description": "The GetBlockedWorkers operation retrieves a list of Workers who are blocked from working on your HITs"
                    },
                    "GetBonusPayments": {
                        "access-level": "read",
                        "actions": "GetBonusPayments",
                        "description": "The GetBonusPayments operation retrieves the amounts of bonuses you have paid to Workers for a given HIT or assignment"
                    },
                    "GetFileUploadURL": {
                        "access-level": "read",
                        "actions": "GetFileUploadURL",
                        "description": "The GetFileUploadURL operation generates and returns a temporary URL"
                    },
                    "GetHIT": {
                        "access-level": "read",
                        "actions": "GetHIT",
                        "description": "The GetHIT operation retrieves the details of the specified HIT"
                    },
                    "GetHITsForQualificationType": {
                        "access-level": "read",
                        "actions": "GetHITsForQualificationType",
                        "description": "The GetHITsForQualificationType operation returns the HITs that use the given Qualification type for a Qualification requirement"
                    },
                    "GetQualificationRequests": {
                        "access-level": "read",
                        "actions": "GetQualificationRequests",
                        "description": "The GetQualificationRequests operation retrieves requests for Qualifications of a particular Qualification type"
                    },
                    "GetQualificationScore": {
                        "access-level": "read",
                        "actions": "GetQualificationScore",
                        "description": "The GetQualificationScore operation returns the value of a Worker\\'s Qualification for a given Qualification type"
                    },
                    "GetQualificationType": {
                        "access-level": "read",
                        "actions": "GetQualificationType",
                        "description": "The GetQualificationType operation retrieves information about a Qualification type using its ID"
                    },
                    "GetQualificationsForQualificationType": {
                        "access-level": "read",
                        "actions": "GetQualificationsForQualificationType",
                        "description": "The GetQualificationsForQualificationType operation returns all of the Qualifications granted to Workers for a given Qualification type"
                    },
                    "GetRequesterStatistic": {
                        "access-level": "read",
                        "actions": "GetRequesterStatistic",
                        "description": "The GetRequesterStatistic operation retrieves statistics about you (the Requester calling the operation)"
                    },
                    "GetRequesterWorkerStatistic": {
                        "access-level": "read",
                        "actions": "GetRequesterWorkerStatistic",
                        "description": "The GetRequesterWorkerStatistic operation retrieves statistics about a specific Worker who has completed Human Intelligence Tasks (HITs) for you"
                    },
                    "GetReviewResultsForHIT": {
                        "access-level": "read",
                        "actions": "GetReviewResultsForHIT",
                        "description": "The GetReviewResultsForHIT operation retrieves the computed results and the actions taken in the course of executing your Review Policies during a CreateHIT operation"
                    },
                    "GetReviewableHITs": {
                        "access-level": "read",
                        "actions": "GetReviewableHITs",
                        "description": "The GetReviewableHITs operation retrieves the HITs with Status equal to Reviewable or Status equal to Reviewing that belong to the Requester calling the operation"
                    },
                    "SearchHITs": {
                        "access-level": "read",
                        "actions": "SearchHITs",
                        "description": "The SearchHITs operation returns all of a Requester\\'s HITs, on behalf of the Requester"
                    },
                    "SearchQualificationTypes": {
                        "access-level": "read",
                        "actions": "SearchQualificationTypes",
                        "description": "The SearchQualificationTypes operation searches for Qualification types using the specified search query, and returns a list of Qualification types"
                    }
                },
                "write": {
                    "ApproveAssignment": {
                        "access-level": "write",
                        "actions": "ApproveAssignment",
                        "description": "The ApproveAssignment operation approves the results of a completed assignment"
                    },
                    "ApproveRejectedAssignment": {
                        "access-level": "write",
                        "actions": "ApproveRejectedAssignment",
                        "description": "The ApproveRejectedAssignment operation approves an assignment that was previously rejected"
                    },
                    "AssignQualification": {
                        "access-level": "write",
                        "actions": "AssignQualification",
                        "description": "The AssignQualification operation gives a Worker a Qualification"
                    },
                    "BlockWorker": {
                        "access-level": "write",
                        "actions": "BlockWorker",
                        "description": "The BlockWorker operation allows you to prevent a Worker from working on your HITs"
                    },
                    "ChangeHITTypeOfHIT": {
                        "access-level": "write",
                        "actions": "ChangeHITTypeOfHIT",
                        "description": "The BlockWorker operation allows you to prevent a Worker from working on your HITs"
                    },
                    "CreateHIT": {
                        "access-level": "write",
                        "actions": "CreateHIT",
                        "description": "The CreateHIT operation creates a new Human Intelligence Task (HIT)"
                    },
                    "CreateQualificationType": {
                        "access-level": "write",
                        "actions": "CreateQualificationType",
                        "description": "The CreateQualificationType operation creates a new Qualification type, which is represented by a QualificationType data structure"
                    },
                    "DisableHIT": {
                        "access-level": "write",
                        "actions": "DisableHIT",
                        "description": "The DisableHIT operation removes a HIT from the Amazon Mechanical Turk marketplace, approves any submitted assignments pending approval or rejection, and disposes of the HIT and all assignment data"
                    },
                    "DisposeHIT": {
                        "access-level": "write",
                        "actions": "DisposeHIT",
                        "description": "The DisposeHIT operation disposes of a HIT that is no longer needed"
                    },
                    "DisposeQualificationType": {
                        "access-level": "write",
                        "actions": "DisposeQualificationType",
                        "description": "The DisposeQualificationType operation disposes a Qualification type and disposes any HIT types that are associated with the Qualification type"
                    },
                    "ExtendHIT": {
                        "access-level": "write",
                        "actions": "ExtendHIT",
                        "description": "The ExtendHIT operation increases the maximum number of assignments, or extends the expiration date, of an existing HIT"
                    },
                    "ForceExpireHIT": {
                        "access-level": "write",
                        "actions": "ForceExpireHIT",
                        "description": "The ForceExpireHIT operation causes a HIT to expire immediately, as if the LifetimeInSeconds parameter of the HIT had elapsed"
                    },
                    "GrantBonus": {
                        "access-level": "write",
                        "actions": "GrantBonus",
                        "description": "The GrantBonus operation issues a payment of money from your account to a Worker"
                    },
                    "GrantQualification": {
                        "access-level": "write",
                        "actions": "GrantQualification",
                        "description": "The GrantQualification operation grants a Worker\\'s request for a Qualification"
                    },
                    "NotifyWorkers": {
                        "access-level": "write",
                        "actions": "NotifyWorkers",
                        "description": "The NotifyWorkers operation sends an email to one or more Workers that you specify with the Worker ID"
                    },
                    "RegisterHITType": {
                        "access-level": "write",
                        "actions": "RegisterHITType",
                        "description": "The RegisterHITType operation creates a new HIT type"
                    },
                    "RejectAssignment": {
                        "access-level": "write",
                        "actions": "RejectAssignment",
                        "description": "The RejectAssignment operation rejects the results of a completed assignment"
                    },
                    "RejectQualificationRequest": {
                        "access-level": "write",
                        "actions": "RejectQualificationRequest",
                        "description": "The RejectQualificationRequest operation rejects a user\\'s request for a Qualification"
                    },
                    "RevokeQualification": {
                        "access-level": "write",
                        "actions": "RevokeQualification",
                        "description": "The RevokeQualification operation revokes a previously granted Qualification from a user"
                    },
                    "SendTestEventNotification": {
                        "access-level": "write",
                        "actions": "SendTestEventNotification",
                        "description": "The SendTestEventNotification operation causes Amazon Mechanical Turk to send a notification message as if a HIT event occurred, according to the provided notification specification"
                    },
                    "SetHITAsReviewing": {
                        "access-level": "write",
                        "actions": "SetHITAsReviewing",
                        "description": "The SetHITAsReviewing operation updates the status of a HIT"
                    },
                    "SetHITTypeNotification": {
                        "access-level": "write",
                        "actions": "SetHITTypeNotification",
                        "description": "The SetHITTypeNotification operation creates, updates, disables or re-enables notifications for a HIT type"
                    },
                    "UnblockWorker": {
                        "access-level": "write",
                        "actions": "UnblockWorker",
                        "description": "The UnblockWorker operation allows you to reinstate a blocked Worker to work on your HITs"
                    },
                    "UpdateQualificationScore": {
                        "access-level": "write",
                        "actions": "UpdateQualificationScore",
                        "description": "The UpdateQualificationScore operation changes the value of a Qualification previously granted to a Worker"
                    },
                    "UpdateQualificationType": {
                        "access-level": "write",
                        "actions": "UpdateQualificationType",
                        "description": "The UpdateQualificationType operation modifies the attributes of an existing Qualification type, which is represented by a QualificationType data structure"
                    }
                }
            }
        },
        "messagedeliveryservice": {
            "actions": {
                "read": {
                    "GetEndpoint": {
                        "access-level": "read",
                        "actions": "GetEndpoint",
                        "description": "Routes traffic to the correct endpoint based on the given destination for the messages"
                    },
                    "GetMessages": {
                        "access-level": "read",
                        "actions": "GetMessages",
                        "description": "Delivers messages to clients/instances using long polling"
                    }
                },
                "write": {
                    "AcknowledgeMessage": {
                        "access-level": "write",
                        "actions": "AcknowledgeMessage",
                        "description": "Acknowledges a message, ensuring it will not be delivered again"
                    },
                    "DeleteMessage": {
                        "access-level": "write",
                        "actions": "DeleteMessage",
                        "description": "Deletes a message"
                    },
                    "FailMessage": {
                        "access-level": "write",
                        "actions": "FailMessage",
                        "description": "Fails a message, signifying the message could not be processed successfully, ensuring it cannot be replied to or delivered again"
                    },
                    "SendReply": {
                        "access-level": "write",
                        "actions": "SendReply",
                        "description": "Sends replies from clients/instances to upstream service"
                    }
                }
            }
        },
        "migrationhub": {
            "actions": {
                "list": {
                    "ListCreatedArtifacts": {
                        "access-level": "list",
                        "actions": "ListCreatedArtifacts",
                        "description": "List associated created artifacts for a MigrationTask",
                        "resource-types": "migrationTask*"
                    },
                    "ListDiscoveredResources": {
                        "access-level": "list",
                        "actions": "ListDiscoveredResources",
                        "description": "List associated ADS resources from MigrationTask",
                        "resource-types": "migrationTask*"
                    },
                    "ListMigrationTasks": {
                        "access-level": "list",
                        "actions": "ListMigrationTasks",
                        "description": "List MigrationTasks"
                    },
                    "ListProgressUpdateStreams": {
                        "access-level": "list",
                        "actions": "ListProgressUpdateStreams",
                        "description": "List ProgressUpdateStreams"
                    }
                },
                "read": {
                    "DescribeApplicationState": {
                        "access-level": "read",
                        "actions": "DescribeApplicationState",
                        "description": "Get an Application Discovery Service Application\\'s state"
                    },
                    "DescribeMigrationTask": {
                        "access-level": "read",
                        "actions": "DescribeMigrationTask",
                        "description": "Describe a MigrationTask",
                        "resource-types": "migrationTask*"
                    }
                },
                "write": {
                    "AssociateCreatedArtifact": {
                        "access-level": "write",
                        "actions": "AssociateCreatedArtifact",
                        "description": "Associate a given AWS artifact to a MigrationTask",
                        "resource-types": "migrationTask*"
                    },
                    "AssociateDiscoveredResource": {
                        "access-level": "write",
                        "actions": "AssociateDiscoveredResource",
                        "description": "Associate a given ADS resource to a MigrationTask",
                        "resource-types": "migrationTask*"
                    },
                    "CreateProgressUpdateStream": {
                        "access-level": "write",
                        "actions": "CreateProgressUpdateStream",
                        "description": "Create a ProgressUpdateStream",
                        "resource-types": "progressUpdateStream*"
                    },
                    "DeleteProgressUpdateStream": {
                        "access-level": "write",
                        "actions": "DeleteProgressUpdateStream",
                        "description": "Delete a ProgressUpdateStream",
                        "resource-types": "progressUpdateStream*"
                    },
                    "DisassociateCreatedArtifact": {
                        "access-level": "write",
                        "actions": "DisassociateCreatedArtifact",
                        "description": "Disassociate a given AWS artifact from a MigrationTask",
                        "resource-types": "migrationTask*"
                    },
                    "DisassociateDiscoveredResource": {
                        "access-level": "write",
                        "actions": "DisassociateDiscoveredResource",
                        "description": "Disassociate a given ADS resource from a MigrationTask",
                        "resource-types": "migrationTask*"
                    },
                    "ImportMigrationTask": {
                        "access-level": "write",
                        "actions": "ImportMigrationTask",
                        "description": "Import a MigrationTask",
                        "resource-types": "migrationTask*"
                    },
                    "NotifyApplicationState": {
                        "access-level": "write",
                        "actions": "NotifyApplicationState",
                        "description": "Update an Application Discovery Service Application\\'s state"
                    },
                    "NotifyMigrationTaskState": {
                        "access-level": "write",
                        "actions": "NotifyMigrationTaskState",
                        "description": "Notify latest MigrationTask state",
                        "resource-types": "migrationTask*"
                    },
                    "PutResourceAttributes": {
                        "access-level": "write",
                        "actions": "PutResourceAttributes",
                        "description": "Put ResourceAttributes",
                        "resource-types": "migrationTask*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "migrationtask": {
                    "arn": "arn:${Partition}:mgh:${Region}:${Account}:progressUpdateStream/${Stream}/migrationTask/${Task}",
                    "resource-types": "migrationTask"
                },
                "progressupdatestream": {
                    "arn": "arn:${Partition}:mgh:${Region}:${Account}:progressUpdateStream/${Stream}",
                    "resource-types": "progressUpdateStream"
                }
            }
        },
        "mobileanalytics": {
            "actions": {
                "read": {
                    "GetFinancialReports": {
                        "access-level": "read",
                        "actions": "GetFinancialReports",
                        "description": "Grant access to financial metrics for an app"
                    },
                    "GetReports": {
                        "access-level": "read",
                        "actions": "GetReports",
                        "description": "Grant access to standard metrics for an app"
                    }
                },
                "write": {
                    "PutEvents": {
                        "access-level": "write",
                        "actions": "PutEvents",
                        "description": "The PutEvents operation records one or more events"
                    }
                }
            }
        },
        "mobilehub": {
            "actions": {
                "list": {
                    "ListAvailableConnectors": {
                        "access-level": "list",
                        "actions": "ListAvailableConnectors",
                        "description": "List the available SaaS (Software as a Service) connectors"
                    },
                    "ListAvailableFeatures": {
                        "access-level": "list",
                        "actions": "ListAvailableFeatures",
                        "description": "List available features"
                    },
                    "ListAvailableRegions": {
                        "access-level": "list",
                        "actions": "ListAvailableRegions",
                        "description": "List available regions for projects"
                    },
                    "ListBundles": {
                        "access-level": "list",
                        "actions": "ListBundles",
                        "description": "List the available download bundles"
                    },
                    "ListProjectSnapshots": {
                        "access-level": "list",
                        "actions": "ListProjectSnapshots",
                        "description": "List saved snapshots of project configuration"
                    },
                    "ListProjects": {
                        "access-level": "list",
                        "actions": "ListProjects",
                        "description": "List projects"
                    }
                },
                "read": {
                    "DescribeBundle": {
                        "access-level": "read",
                        "actions": "DescribeBundle",
                        "description": "Describe the download bundle"
                    },
                    "ExportBundle": {
                        "access-level": "read",
                        "actions": "ExportBundle",
                        "description": "Export the download bundle"
                    },
                    "ExportProject": {
                        "access-level": "read",
                        "actions": "ExportProject",
                        "description": "Export the project configuration",
                        "resource-types": "project*"
                    },
                    "GetProject": {
                        "access-level": "read",
                        "actions": "GetProject",
                        "description": "Get project configuration and resources",
                        "resource-types": "project*"
                    },
                    "GetProjectSnapshot": {
                        "access-level": "read",
                        "actions": "GetProjectSnapshot",
                        "description": "Fetch the previously exported project configuration snapshot"
                    },
                    "VerifyServiceRole": {
                        "access-level": "read",
                        "actions": "VerifyServiceRole",
                        "description": "Verify AWS Mobile Hub is enabled in the account"
                    }
                },
                "write": {
                    "CreateProject": {
                        "access-level": "write",
                        "actions": "CreateProject",
                        "description": "Create a project"
                    },
                    "CreateServiceRole": {
                        "access-level": "write",
                        "actions": "CreateServiceRole",
                        "description": "Enable AWS Mobile Hub in the account by creating the required service role"
                    },
                    "DeleteProject": {
                        "access-level": "write",
                        "actions": "DeleteProject",
                        "description": "Delete the specified project",
                        "resource-types": "project*"
                    },
                    "DeleteProjectSnapshot": {
                        "access-level": "write",
                        "actions": "DeleteProjectSnapshot",
                        "description": "Delete a saved snapshot of project configuration"
                    },
                    "DeployToStage": {
                        "access-level": "write",
                        "actions": "DeployToStage",
                        "description": "Deploy changes to the specified stage"
                    },
                    "GenerateProjectParameters": {
                        "access-level": "write",
                        "actions": "GenerateProjectParameters",
                        "description": "Generate project parameters required for code generation",
                        "resource-types": "project*"
                    },
                    "ImportProject": {
                        "access-level": "write",
                        "actions": "ImportProject",
                        "description": "Create a new project from the previously exported project configuration"
                    },
                    "InstallBundle": {
                        "access-level": "write",
                        "actions": "InstallBundle",
                        "description": "Install a bundle in the project deployments S3 bucket"
                    },
                    "SynchronizeProject": {
                        "access-level": "write",
                        "actions": "SynchronizeProject",
                        "description": "Synchronize state of resources into project",
                        "resource-types": "project*"
                    },
                    "UpdateProject": {
                        "access-level": "write",
                        "actions": "UpdateProject",
                        "description": "Update project",
                        "resource-types": "project*"
                    }
                }
            }
        },
        "mq": {
            "actions": {
                "list": {
                    "ListBrokers": {
                        "access-level": "list",
                        "actions": "ListBrokers",
                        "description": "Grants permission to return a list of all brokers."
                    },
                    "ListConfigurationRevisions": {
                        "access-level": "list",
                        "actions": "ListConfigurationRevisions",
                        "description": "Grants permission to return a list of all existing revisions for the specified configuration."
                    },
                    "ListConfigurations": {
                        "access-level": "list",
                        "actions": "ListConfigurations",
                        "description": "Grants permission to return a list of all configurations."
                    },
                    "ListTags": {
                        "access-level": "list",
                        "actions": "ListTags",
                        "description": "Grants permission to return a list of tags."
                    },
                    "ListUsers": {
                        "access-level": "list",
                        "actions": "ListUsers",
                        "description": "Grants permission to return a list of all ActiveMQ users."
                    }
                },
                "read": {
                    "DescribeBroker": {
                        "access-level": "read",
                        "actions": "DescribeBroker",
                        "description": "Grants permission to return information about the specified broker."
                    },
                    "DescribeConfiguration": {
                        "access-level": "read",
                        "actions": "DescribeConfiguration",
                        "description": "Grants permission to return information about the specified configuration."
                    },
                    "DescribeConfigurationRevision": {
                        "access-level": "read",
                        "actions": "DescribeConfigurationRevision",
                        "description": "Grants permission to return the specified configuration revision for the specified configuration."
                    },
                    "DescribeUser": {
                        "access-level": "read",
                        "actions": "DescribeUser",
                        "description": "Grants permission to return information about an ActiveMQ user."
                    }
                },
                "write": {
                    "CreateBroker": {
                        "access-level": "write",
                        "actions": "CreateBroker",
                        "description": "Grants permission to create a broker."
                    },
                    "CreateConfiguration": {
                        "access-level": "write",
                        "actions": "CreateConfiguration",
                        "description": "Grants permission to create a new configuration for the specified configuration name. Amazon MQ uses the default configuration (the engine type and engine version)."
                    },
                    "CreateTags": {
                        "access-level": "write",
                        "actions": "CreateTags",
                        "description": "Grants permission to create tags."
                    },
                    "CreateUser": {
                        "access-level": "write",
                        "actions": "CreateUser",
                        "description": "Grants permission to create an ActiveMQ user."
                    },
                    "DeleteBroker": {
                        "access-level": "write",
                        "actions": "DeleteBroker",
                        "description": "Grants permission to delete a broker."
                    },
                    "DeleteTags": {
                        "access-level": "write",
                        "actions": "DeleteTags",
                        "description": "Grants permission to delete tags."
                    },
                    "DeleteUser": {
                        "access-level": "write",
                        "actions": "DeleteUser",
                        "description": "Grants permission to delete an ActiveMQ user."
                    },
                    "RebootBroker": {
                        "access-level": "write",
                        "actions": "RebootBroker",
                        "description": "Grants permission to reboot a broker."
                    },
                    "UpdateBroker": {
                        "access-level": "write",
                        "actions": "UpdateBroker",
                        "description": "Grants permission to add a pending configuration change to a broker."
                    },
                    "UpdateConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateConfiguration",
                        "description": "Grants permission to update the specified configuration."
                    },
                    "UpdateUser": {
                        "access-level": "write",
                        "actions": "UpdateUser",
                        "description": "Grants permission to update the information for an ActiveMQ user."
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "brokers": {
                    "arn": "arn:${Partition}:mq:${Region}:${Account}:broker:${broker-id}",
                    "resource-types": "brokers"
                },
                "configurations": {
                    "arn": "arn:${Partition}:mq:${Region}:${Account}:configuration:${configuration-id}",
                    "resource-types": "configurations"
                }
            }
        },
        "name2stub": {},
        "neptune": {
            "actions": {}
        },
        "opsworks": {
            "actions": {
                "list": {
                    "DescribeAgentVersions": {
                        "access-level": "list",
                        "actions": "DescribeAgentVersions",
                        "description": "Describes the available AWS OpsWorks agent versions",
                        "resource-types": "stack"
                    },
                    "DescribeApps": {
                        "access-level": "list",
                        "actions": "DescribeApps",
                        "description": "Requests a description of a specified set of apps",
                        "resource-types": "stack"
                    },
                    "DescribeCommands": {
                        "access-level": "list",
                        "actions": "DescribeCommands",
                        "description": "Describes the results of specified commands",
                        "resource-types": "stack"
                    },
                    "DescribeDeployments": {
                        "access-level": "list",
                        "actions": "DescribeDeployments",
                        "description": "Requests a description of a specified set of deployments",
                        "resource-types": "stack"
                    },
                    "DescribeEcsClusters": {
                        "access-level": "list",
                        "actions": "DescribeEcsClusters",
                        "description": "Describes Amazon ECS clusters that are registered with a stack",
                        "resource-types": "stack"
                    },
                    "DescribeElasticIps": {
                        "access-level": "list",
                        "actions": "DescribeElasticIps",
                        "description": "Describes Elastic IP addresses",
                        "resource-types": "stack"
                    },
                    "DescribeElasticLoadBalancers": {
                        "access-level": "list",
                        "actions": "DescribeElasticLoadBalancers",
                        "description": "Describes a stack\\'s Elastic Load Balancing instances",
                        "resource-types": "stack"
                    },
                    "DescribeInstances": {
                        "access-level": "list",
                        "actions": "DescribeInstances",
                        "description": "Requests a description of a set of instances",
                        "resource-types": "stack"
                    },
                    "DescribeLayers": {
                        "access-level": "list",
                        "actions": "DescribeLayers",
                        "description": "Requests a description of one or more layers in a specified stack",
                        "resource-types": "stack"
                    },
                    "DescribeLoadBasedAutoScaling": {
                        "access-level": "list",
                        "actions": "DescribeLoadBasedAutoScaling",
                        "description": "Describes load-based auto scaling configurations for specified layers",
                        "resource-types": "stack"
                    },
                    "DescribeMyUserProfile": {
                        "access-level": "list",
                        "actions": "DescribeMyUserProfile",
                        "description": "Describes a user\\'s SSH information"
                    },
                    "DescribePermissions": {
                        "access-level": "list",
                        "actions": "DescribePermissions",
                        "description": "Describes the permissions for a specified stack",
                        "resource-types": "stack"
                    },
                    "DescribeRaidArrays": {
                        "access-level": "list",
                        "actions": "DescribeRaidArrays",
                        "description": "Describe an instance\\'s RAID arrays",
                        "resource-types": "stack"
                    },
                    "DescribeRdsDbInstances": {
                        "access-level": "list",
                        "actions": "DescribeRdsDbInstances",
                        "description": "Describes Amazon RDS instances",
                        "resource-types": "stack"
                    },
                    "DescribeServiceErrors": {
                        "access-level": "list",
                        "actions": "DescribeServiceErrors",
                        "description": "Describes AWS OpsWorks service errors",
                        "resource-types": "stack"
                    },
                    "DescribeStackProvisioningParameters": {
                        "access-level": "list",
                        "actions": "DescribeStackProvisioningParameters",
                        "description": "Requests a description of a stack\\'s provisioning parameters",
                        "resource-types": "stack"
                    },
                    "DescribeStackSummary": {
                        "access-level": "list",
                        "actions": "DescribeStackSummary",
                        "description": "Describes the number of layers and apps in a specified stack, and the number of instances in each state, such as running_setup or online",
                        "resource-types": "stack"
                    },
                    "DescribeStacks": {
                        "access-level": "list",
                        "actions": "DescribeStacks",
                        "description": "Requests a description of one or more stacks",
                        "resource-types": "stack"
                    },
                    "DescribeTimeBasedAutoScaling": {
                        "access-level": "list",
                        "actions": "DescribeTimeBasedAutoScaling",
                        "description": "Describes time-based auto scaling configurations for specified instances",
                        "resource-types": "stack"
                    },
                    "DescribeUserProfiles": {
                        "access-level": "list",
                        "actions": "DescribeUserProfiles",
                        "description": "Describe specified users"
                    },
                    "DescribeVolumes": {
                        "access-level": "list",
                        "actions": "DescribeVolumes",
                        "description": "Describes an instance\\'s Amazon EBS volumes",
                        "resource-types": "stack"
                    },
                    "ListTags": {
                        "access-level": "list",
                        "actions": "ListTags",
                        "description": "Returns a list of tags that are applied to the specified stack or layer",
                        "resource-types": "stack"
                    }
                },
                "permissions-management": {
                    "SetPermission": {
                        "access-level": "permissions-management",
                        "actions": "SetPermission",
                        "description": "Specifies a user\\'s permissions",
                        "resource-types": "stack"
                    },
                    "UpdateUserProfile": {
                        "access-level": "permissions-management",
                        "actions": "UpdateUserProfile",
                        "description": "Updates a specified user profile"
                    }
                },
                "read": {
                    "GetHostnameSuggestion": {
                        "access-level": "read",
                        "actions": "GetHostnameSuggestion",
                        "description": "Gets a generated host name for the specified layer, based on the current host name theme",
                        "resource-types": "stack"
                    }
                },
                "write": {
                    "AssignInstance": {
                        "access-level": "write",
                        "actions": "AssignInstance",
                        "description": "Assign a registered instance to a layer",
                        "resource-types": "stack"
                    },
                    "AssignVolume": {
                        "access-level": "write",
                        "actions": "AssignVolume",
                        "description": "Assigns one of the stack\\'s registered Amazon EBS volumes to a specified instance",
                        "resource-types": "stack"
                    },
                    "AssociateElasticIp": {
                        "access-level": "write",
                        "actions": "AssociateElasticIp",
                        "description": "Associates one of the stack\\'s registered Elastic IP addresses with a specified instance",
                        "resource-types": "stack"
                    },
                    "AttachElasticLoadBalancer": {
                        "access-level": "write",
                        "actions": "AttachElasticLoadBalancer",
                        "description": "Attaches an Elastic Load Balancing load balancer to a specified layer",
                        "resource-types": "stack"
                    },
                    "CloneStack": {
                        "access-level": "write",
                        "actions": "CloneStack",
                        "description": "Creates a clone of a specified stack",
                        "resource-types": "stack"
                    },
                    "CreateApp": {
                        "access-level": "write",
                        "actions": "CreateApp",
                        "description": "Creates an app for a specified stack",
                        "resource-types": "stack"
                    },
                    "CreateDeployment": {
                        "access-level": "write",
                        "actions": "CreateDeployment",
                        "description": "Runs deployment or stack commands",
                        "resource-types": "stack"
                    },
                    "CreateInstance": {
                        "access-level": "write",
                        "actions": "CreateInstance",
                        "description": "Creates an instance in a specified stack",
                        "resource-types": "stack"
                    },
                    "CreateLayer": {
                        "access-level": "write",
                        "actions": "CreateLayer",
                        "description": "Creates a layer",
                        "resource-types": "stack"
                    },
                    "CreateStack": {
                        "access-level": "write",
                        "actions": "CreateStack",
                        "description": "Creates a new stack"
                    },
                    "CreateUserProfile": {
                        "access-level": "write",
                        "actions": "CreateUserProfile",
                        "description": "Creates a new user profile"
                    },
                    "DeleteApp": {
                        "access-level": "write",
                        "actions": "DeleteApp",
                        "description": "Deletes a specified app",
                        "resource-types": "stack"
                    },
                    "DeleteInstance": {
                        "access-level": "write",
                        "actions": "DeleteInstance",
                        "description": "Deletes a specified instance, which terminates the associated Amazon EC2 instance",
                        "resource-types": "stack"
                    },
                    "DeleteLayer": {
                        "access-level": "write",
                        "actions": "DeleteLayer",
                        "description": "Deletes a specified layer",
                        "resource-types": "stack"
                    },
                    "DeleteStack": {
                        "access-level": "write",
                        "actions": "DeleteStack",
                        "description": "Deletes a specified stack",
                        "resource-types": "stack"
                    },
                    "DeleteUserProfile": {
                        "access-level": "write",
                        "actions": "DeleteUserProfile",
                        "description": "Deletes a user profile"
                    },
                    "DeregisterEcsCluster": {
                        "access-level": "write",
                        "actions": "DeregisterEcsCluster",
                        "description": "Deletes a user profile",
                        "resource-types": "stack"
                    },
                    "DeregisterElasticIp": {
                        "access-level": "write",
                        "actions": "DeregisterElasticIp",
                        "description": "Deregisters a specified Elastic IP address",
                        "resource-types": "stack"
                    },
                    "DeregisterInstance": {
                        "access-level": "write",
                        "actions": "DeregisterInstance",
                        "description": "Deregister a registered Amazon EC2 or on-premises instance",
                        "resource-types": "stack"
                    },
                    "DeregisterRdsDbInstance": {
                        "access-level": "write",
                        "actions": "DeregisterRdsDbInstance",
                        "description": "Deregisters an Amazon RDS instance",
                        "resource-types": "stack"
                    },
                    "DeregisterVolume": {
                        "access-level": "write",
                        "actions": "DeregisterVolume",
                        "description": "Deregisters an Amazon EBS volume",
                        "resource-types": "stack"
                    },
                    "DetachElasticLoadBalancer": {
                        "access-level": "write",
                        "actions": "DetachElasticLoadBalancer",
                        "description": "Detaches a specified Elastic Load Balancing instance from its layer",
                        "resource-types": "stack"
                    },
                    "DisassociateElasticIp": {
                        "access-level": "write",
                        "actions": "DisassociateElasticIp",
                        "description": "Disassociates an Elastic IP address from its instance",
                        "resource-types": "stack"
                    },
                    "GrantAccess": {
                        "access-level": "write",
                        "actions": "GrantAccess",
                        "description": "Grants RDP access to a Windows instance for a specified time period",
                        "resource-types": "stack"
                    },
                    "RebootInstance": {
                        "access-level": "write",
                        "actions": "RebootInstance",
                        "description": "Reboots a specified instance",
                        "resource-types": "stack"
                    },
                    "RegisterEcsCluster": {
                        "access-level": "write",
                        "actions": "RegisterEcsCluster",
                        "description": "Registers a specified Amazon ECS cluster with a stack",
                        "resource-types": "stack"
                    },
                    "RegisterElasticIp": {
                        "access-level": "write",
                        "actions": "RegisterElasticIp",
                        "description": "Registers an Elastic IP address with a specified stack",
                        "resource-types": "stack"
                    },
                    "RegisterInstance": {
                        "access-level": "write",
                        "actions": "RegisterInstance",
                        "description": "Registers instances with a specified stack that were created outside of AWS OpsWorks",
                        "resource-types": "stack"
                    },
                    "RegisterRdsDbInstance": {
                        "access-level": "write",
                        "actions": "RegisterRdsDbInstance",
                        "description": "Registers an Amazon RDS instance with a stack",
                        "resource-types": "stack"
                    },
                    "RegisterVolume": {
                        "access-level": "write",
                        "actions": "RegisterVolume",
                        "description": "Registers an Amazon EBS volume with a specified stack",
                        "resource-types": "stack"
                    },
                    "SetLoadBasedAutoScaling": {
                        "access-level": "write",
                        "actions": "SetLoadBasedAutoScaling",
                        "description": "Specify the load-based auto scaling configuration for a specified layer",
                        "resource-types": "stack"
                    },
                    "SetTimeBasedAutoScaling": {
                        "access-level": "write",
                        "actions": "SetTimeBasedAutoScaling",
                        "description": "Specify the time-based auto scaling configuration for a specified instance",
                        "resource-types": "stack"
                    },
                    "StartInstance": {
                        "access-level": "write",
                        "actions": "StartInstance",
                        "description": "Starts a specified instance",
                        "resource-types": "stack"
                    },
                    "StartStack": {
                        "access-level": "write",
                        "actions": "StartStack",
                        "description": "Starts a stack\\'s instances",
                        "resource-types": "stack"
                    },
                    "StopInstance": {
                        "access-level": "write",
                        "actions": "StopInstance",
                        "description": "Stops a specified instance",
                        "resource-types": "stack"
                    },
                    "StopStack": {
                        "access-level": "write",
                        "actions": "StopStack",
                        "description": "Stops a specified stack",
                        "resource-types": "stack"
                    },
                    "TagResource": {
                        "access-level": "write",
                        "actions": "TagResource",
                        "description": "Apply tags to a specified stack or layer",
                        "resource-types": "stack"
                    },
                    "UnassignInstance": {
                        "access-level": "write",
                        "actions": "UnassignInstance",
                        "description": "Unassigns a registered instance from all of it\\'s layers",
                        "resource-types": "stack"
                    },
                    "UnassignVolume": {
                        "access-level": "write",
                        "actions": "UnassignVolume",
                        "description": "Unassigns an assigned Amazon EBS volume",
                        "resource-types": "stack"
                    },
                    "UntagResource": {
                        "access-level": "write",
                        "actions": "UntagResource",
                        "description": "Removes tags from a specified stack or layer",
                        "resource-types": "stack"
                    },
                    "UpdateApp": {
                        "access-level": "write",
                        "actions": "UpdateApp",
                        "description": "Updates a specified app",
                        "resource-types": "stack"
                    },
                    "UpdateElasticIp": {
                        "access-level": "write",
                        "actions": "UpdateElasticIp",
                        "description": "Updates a registered Elastic IP address\\'s name",
                        "resource-types": "stack"
                    },
                    "UpdateInstance": {
                        "access-level": "write",
                        "actions": "UpdateInstance",
                        "description": "Updates a specified instance",
                        "resource-types": "stack"
                    },
                    "UpdateLayer": {
                        "access-level": "write",
                        "actions": "UpdateLayer",
                        "description": "Updates a specified layer",
                        "resource-types": "stack"
                    },
                    "UpdateMyUserProfile": {
                        "access-level": "write",
                        "actions": "UpdateMyUserProfile",
                        "description": "Updates a user\\'s SSH public key"
                    },
                    "UpdateRdsDbInstance": {
                        "access-level": "write",
                        "actions": "UpdateRdsDbInstance",
                        "description": "Updates an Amazon RDS instance",
                        "resource-types": "stack"
                    },
                    "UpdateStack": {
                        "access-level": "write",
                        "actions": "UpdateStack",
                        "description": "Updates a specified stack",
                        "resource-types": "stack"
                    },
                    "UpdateVolume": {
                        "access-level": "write",
                        "actions": "UpdateVolume",
                        "description": "Updates an Amazon EBS volume\\'s name or mount point",
                        "resource-types": "stack"
                    }
                }
            }
        },
        "opsworksconfigurationmanagement": {
            "actions": {
                "list": {
                    "DescribeAccountAttributes": {
                        "access-level": "list",
                        "actions": "DescribeAccountAttributes",
                        "description": "Describe the service limits for the user\\'s account."
                    },
                    "DescribeBackups": {
                        "access-level": "list",
                        "actions": "DescribeBackups",
                        "description": "Describe a single backup, all backups of a specified server or all backups of the user\\'s account."
                    },
                    "DescribeEvents": {
                        "access-level": "list",
                        "actions": "DescribeEvents",
                        "description": "Describe all events of the specified server."
                    },
                    "DescribeNodeAssociationStatus": {
                        "access-level": "list",
                        "actions": "DescribeNodeAssociationStatus",
                        "description": "Describe the association status for the specified node token and the specified server."
                    },
                    "DescribeServers": {
                        "access-level": "list",
                        "actions": "DescribeServers",
                        "description": "Describes the specified server or all servers of the user\\'s account."
                    }
                },
                "write": {
                    "AssociateNode": {
                        "access-level": "write",
                        "actions": "AssociateNode",
                        "description": "Associate a node to a configuration management server."
                    },
                    "CreateBackup": {
                        "access-level": "write",
                        "actions": "CreateBackup",
                        "description": "Create a backup for the specified server."
                    },
                    "CreateServer": {
                        "access-level": "write",
                        "actions": "CreateServer",
                        "description": "Create a new server."
                    },
                    "DeleteBackup": {
                        "access-level": "write",
                        "actions": "DeleteBackup",
                        "description": "Delete the specified backup and possibly its S3 bucket."
                    },
                    "DeleteServer": {
                        "access-level": "write",
                        "actions": "DeleteServer",
                        "description": "Deletes the specified server with his corresponding CF stack and possibly the S3 bucket."
                    },
                    "DisassociateNode": {
                        "access-level": "write",
                        "actions": "DisassociateNode",
                        "description": "Disassociates a specified node from a server."
                    },
                    "RestoreServer": {
                        "access-level": "write",
                        "actions": "RestoreServer",
                        "description": "Applies a backup to specified server. Possibly swaps out the ec2-instance if specified."
                    },
                    "StartMaintenance": {
                        "access-level": "write",
                        "actions": "StartMaintenance",
                        "description": "Start the server maintenance immediately."
                    },
                    "UpdateServer": {
                        "access-level": "write",
                        "actions": "UpdateServer",
                        "description": "Update general server settings."
                    },
                    "UpdateServerEngineAttributes": {
                        "access-level": "write",
                        "actions": "UpdateServerEngineAttributes",
                        "description": "Update server settings specific to the configuration management type."
                    }
                }
            }
        },
        "organizations": {
            "actions": {
                "list": {
                    "ListAWSServiceAccessForOrganization": {
                        "access-level": "list",
                        "actions": "ListAWSServiceAccessForOrganization",
                        "description": "Grants permission to retrieve the list of the AWS services for which you enabled integration with your organization."
                    },
                    "ListAccounts": {
                        "access-level": "list",
                        "actions": "ListAccounts",
                        "description": "Grants permission to list all of the the accounts in the organization."
                    },
                    "ListAccountsForParent": {
                        "access-level": "list",
                        "actions": "ListAccountsForParent",
                        "description": "Grants permission to list the accounts in an organization that are contained by a root or organizational unit (OU).",
                        "resource-types": "organizationalunit"
                    },
                    "ListChildren": {
                        "access-level": "list",
                        "actions": "ListChildren",
                        "description": "Grants permission to list all of the OUs or accounts that are contained in a parent OU or root.",
                        "resource-types": "organizationalunit"
                    },
                    "ListCreateAccountStatus": {
                        "access-level": "list",
                        "actions": "ListCreateAccountStatus",
                        "description": "Grants permission to list the asynchronous account creation requests that are currently being tracked for the organization."
                    },
                    "ListHandshakesForAccount": {
                        "access-level": "list",
                        "actions": "ListHandshakesForAccount",
                        "description": "Grants permission to list all of the handshakes that are associated with an account."
                    },
                    "ListHandshakesForOrganization": {
                        "access-level": "list",
                        "actions": "ListHandshakesForOrganization",
                        "description": "Grants permission to list the handshakes that are associated with the organization."
                    },
                    "ListOrganizationalUnitsForParent": {
                        "access-level": "list",
                        "actions": "ListOrganizationalUnitsForParent",
                        "description": "Grants permission to lists all of the organizational units (OUs) in a parent organizational unit or root.",
                        "resource-types": "organizationalunit"
                    },
                    "ListParents": {
                        "access-level": "list",
                        "actions": "ListParents",
                        "description": "Grants permission to list the root or organizational units (OUs) that serve as the immediate parent of a child OU or account.",
                        "resource-types": "account"
                    },
                    "ListPolicies": {
                        "access-level": "list",
                        "actions": "ListPolicies",
                        "description": "Grants permission to list all of the policies in an organization."
                    },
                    "ListPoliciesForTarget": {
                        "access-level": "list",
                        "actions": "ListPoliciesForTarget",
                        "description": "Grants permission to list all of the policies that are directly attached to a root, organizational unit (OU), or account.",
                        "resource-types": "account"
                    },
                    "ListRoots": {
                        "access-level": "list",
                        "actions": "ListRoots",
                        "description": "Grants permission to list all of the roots that are defined in the organization."
                    },
                    "ListTargetsForPolicy": {
                        "access-level": "list",
                        "actions": "ListTargetsForPolicy",
                        "description": "Grants permission to list all the roots, OUs, and accounts to which a policy is attached.",
                        "resource-types": "policy*"
                    },
                    "organizationalunit": {
                        "access-level": "list",
                        "actions": "organizationalunit"
                    },
                    "root": {
                        "access-level": "list",
                        "actions": "root"
                    }
                },
                "read": {
                    "DescribeAccount": {
                        "access-level": "read",
                        "actions": "DescribeAccount",
                        "description": "Grants permission to retrieve Organizations-related details about the specified account.",
                        "resource-types": "account*"
                    },
                    "DescribeCreateAccountStatus": {
                        "access-level": "read",
                        "actions": "DescribeCreateAccountStatus",
                        "description": "Grants permission to retrieve the current status of an asynchronous request to create an account."
                    },
                    "DescribeHandshake": {
                        "access-level": "read",
                        "actions": "DescribeHandshake",
                        "description": "Grants permission to retrieve details about a previously requested handshake.",
                        "resource-types": "handshake*"
                    },
                    "DescribeOrganization": {
                        "access-level": "read",
                        "actions": "DescribeOrganization",
                        "description": "Grants permission to retrieves details about the organization that the calling credentials belong to."
                    },
                    "DescribeOrganizationalUnit": {
                        "access-level": "read",
                        "actions": "DescribeOrganizationalUnit",
                        "description": "Grants permission to retrieve details about an organizational unit (OU).",
                        "resource-types": "organizationalunit*"
                    },
                    "DescribePolicy": {
                        "access-level": "read",
                        "actions": "DescribePolicy",
                        "description": "Grants permission to retrieves details about a policy.",
                        "resource-types": "policy*"
                    }
                },
                "write": {
                    "AcceptHandshake": {
                        "access-level": "write",
                        "actions": "AcceptHandshake",
                        "description": "Grants permission to send a response to the originator of a handshake agreeing to the action proposed by the handshake request.",
                        "resource-types": "handshake*"
                    },
                    "AttachPolicy": {
                        "access-level": "write",
                        "actions": "AttachPolicy",
                        "description": "Grants permission to attach a policy to a root, an organizational unit, or an individual account.",
                        "resource-types": "policy*"
                    },
                    "CancelHandshake": {
                        "access-level": "write",
                        "actions": "CancelHandshake",
                        "description": "Grants permission to cancel a handshake.",
                        "resource-types": "handshake*"
                    },
                    "CreateAccount": {
                        "access-level": "write",
                        "actions": "CreateAccount",
                        "description": "Grants permission to create an AWS account that is automatically a member of the organization with the credentials that made the request."
                    },
                    "CreateOrganization": {
                        "access-level": "write",
                        "actions": "CreateOrganization",
                        "description": "Grants permission to create an organization. The account with the credentials that calls the CreateOrganization operation automatically becomes the master account of the new organization."
                    },
                    "CreateOrganizationalUnit": {
                        "access-level": "write",
                        "actions": "CreateOrganizationalUnit",
                        "description": "Grants permission to create an organizational unit (OU) within a root or parent OU.",
                        "resource-types": "organizationalunit"
                    },
                    "CreatePolicy": {
                        "access-level": "write",
                        "actions": "CreatePolicy",
                        "description": "Grants permission to create a policy that you can attach to a root, an organizational unit (OU), or an individual AWS account."
                    },
                    "DeclineHandshake": {
                        "access-level": "write",
                        "actions": "DeclineHandshake",
                        "description": "Grants permission to decline a handshake request. This sets the handshake state to DECLINED and effectively deactivates the request.",
                        "resource-types": "handshake*"
                    },
                    "DeleteOrganization": {
                        "access-level": "write",
                        "actions": "DeleteOrganization",
                        "description": "Grants permission to delete the organization."
                    },
                    "DeleteOrganizationalUnit": {
                        "access-level": "write",
                        "actions": "DeleteOrganizationalUnit",
                        "description": "Grants permission to delete an organizational unit from a root or another OU.",
                        "resource-types": "organizationalunit*"
                    },
                    "DeletePolicy": {
                        "access-level": "write",
                        "actions": "DeletePolicy",
                        "description": "Grants permission to delete a policy from your organization.",
                        "resource-types": "policy*"
                    },
                    "DetachPolicy": {
                        "access-level": "write",
                        "actions": "DetachPolicy",
                        "description": "Grants permission to detach a policy from a target root, organizational unit, or account.",
                        "resource-types": "policy*"
                    },
                    "DisableAWSServiceAccess": {
                        "access-level": "write",
                        "actions": "DisableAWSServiceAccess",
                        "condition-keys": [
                            "organizations:ServicePrincipal"
                        ],
                        "description": "Grants permission to disable integration of an AWS service (the service that is specified by ServicePrincipal) with AWS Organizations."
                    },
                    "DisablePolicyType": {
                        "access-level": "write",
                        "actions": "DisablePolicyType",
                        "description": "Grants permission to disable an organization policy type in a root.",
                        "resource-types": "root*"
                    },
                    "EnableAWSServiceAccess": {
                        "access-level": "write",
                        "actions": "EnableAWSServiceAccess",
                        "condition-keys": [
                            "organizations:ServicePrincipal"
                        ],
                        "description": "Grants permission to enable integration of an AWS service (the service that is specified by ServicePrincipal) with AWS Organizations."
                    },
                    "EnableAllFeatures": {
                        "access-level": "write",
                        "actions": "EnableAllFeatures",
                        "description": "Grants permission to start the process to enable all features in an organization, upgrading it from supporting only Consolidated Billing features."
                    },
                    "EnablePolicyType": {
                        "access-level": "write",
                        "actions": "EnablePolicyType",
                        "description": "Grants permission to enable a policy type in a root.",
                        "resource-types": "root*"
                    },
                    "InviteAccountToOrganization": {
                        "access-level": "write",
                        "actions": "InviteAccountToOrganization",
                        "description": "Grants permission to send an invitation to another AWS account, asking it to join your organization as a member account.",
                        "resource-types": "account"
                    },
                    "LeaveOrganization": {
                        "access-level": "write",
                        "actions": "LeaveOrganization",
                        "description": "Grants permission to remove a member account from its parent organization."
                    },
                    "MoveAccount": {
                        "access-level": "write",
                        "actions": "MoveAccount",
                        "description": "Grants permission to move an account from its current root or OU to another parent root or OU.",
                        "resource-types": "account*"
                    },
                    "RemoveAccountFromOrganization": {
                        "access-level": "write",
                        "actions": "RemoveAccountFromOrganization",
                        "description": "Grants permission to removes the specified account from the organization.",
                        "resource-types": "account*"
                    },
                    "UpdateOrganizationalUnit": {
                        "access-level": "write",
                        "actions": "UpdateOrganizationalUnit",
                        "description": "Grants permission to rename an organizational unit (OU).",
                        "resource-types": "organizationalunit*"
                    },
                    "UpdatePolicy": {
                        "access-level": "write",
                        "actions": "UpdatePolicy",
                        "description": "Grants permission to update an existing policy with a new name, description, or content.",
                        "resource-types": "policy*"
                    },
                    "account": {
                        "access-level": "write",
                        "actions": "account"
                    },
                    "organizationalunit": {
                        "access-level": "write",
                        "actions": "organizationalunit"
                    },
                    "root": {
                        "access-level": "write",
                        "actions": "root"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "account": {
                    "arn": "arn:${Partition}:organizations::${MasterAccountId}:account/o-${OrganizationId}/${AccountId}",
                    "resource-types": "account"
                },
                "awspolicy": {
                    "arn": "arn:${Partition}:organizations::aws:policy/${PolicyType}/p-${PolicyId}",
                    "resource-types": "awspolicy"
                },
                "handshake": {
                    "arn": "arn:${Partition}:organizations::${MasterAccountId}:handshake/o-${OrganizationId}/${HandshakeType}/h-${HandshakeId}",
                    "resource-types": "handshake"
                },
                "organization": {
                    "arn": "arn:${Partition}:organizations::${MasterAccountId}:organization/o-${OrganizationId}",
                    "resource-types": "organization"
                },
                "organizationalunit": {
                    "arn": "arn:${Partition}:organizations::${MasterAccountId}:ou/o-${OrganizationId}/ou-${OrganizationalUnitId}",
                    "resource-types": "organizationalunit"
                },
                "policy": {
                    "arn": "arn:${Partition}:organizations::${MasterAccountId}:policy/o-${OrganizationId}/${PolicyType}/p-${PolicyId}",
                    "resource-types": "policy"
                },
                "root": {
                    "arn": "arn:${Partition}:organizations::${MasterAccountId}:root/o-${OrganizationId}/r-${RootId}",
                    "resource-types": "root"
                }
            }
        },
        "performanceinsights": {
            "actions": {
                "read": {
                    "DescribeDimensionKeys": {
                        "access-level": "read",
                        "actions": "DescribeDimensionKeys",
                        "description": "For a specific time period, retrieve the top N dimension keys for a metric.",
                        "resource-types": "metric-resource*"
                    },
                    "GetResourceMetrics": {
                        "access-level": "read",
                        "actions": "GetResourceMetrics",
                        "description": "Retrieve PI metrics for a set of data sources, over a time period.",
                        "resource-types": "metric-resource*"
                    }
                }
            }
        },
        "pinpoint": {
            "actions": {
                "list": {
                    "GetApplicationSettings": {
                        "access-level": "list",
                        "actions": "GetApplicationSettings",
                        "description": "Retrieve the default settings for an app.",
                        "resource-types": "apps*"
                    },
                    "GetCampaigns": {
                        "access-level": "list",
                        "actions": "GetCampaigns",
                        "description": "Retrieve information about all campaigns for an app.",
                        "resource-types": "apps*"
                    },
                    "GetImportJobs": {
                        "access-level": "list",
                        "actions": "GetImportJobs",
                        "description": "Retrieve information about all import jobs for an app.",
                        "resource-types": "apps*"
                    },
                    "GetSegments": {
                        "access-level": "list",
                        "actions": "GetSegments",
                        "description": "Retrieve information about the segments for an app.",
                        "resource-types": "apps*"
                    }
                },
                "read": {
                    "GetApnsChannel": {
                        "access-level": "read",
                        "actions": "GetApnsChannel",
                        "description": "Retrieve information about the APNs channel for an app.",
                        "resource-types": "apps*"
                    },
                    "GetCampaign": {
                        "access-level": "read",
                        "actions": "GetCampaign",
                        "description": "Retrieve information about a specific campaign.",
                        "resource-types": "apps*"
                    },
                    "GetCampaignActivities": {
                        "access-level": "read",
                        "actions": "GetCampaignActivities",
                        "description": "Retrieve information about the activities performed by a campaign.",
                        "resource-types": "apps*"
                    },
                    "GetCampaignVersion": {
                        "access-level": "read",
                        "actions": "GetCampaignVersion",
                        "description": "Retrieve information about a specific campaign version.",
                        "resource-types": "apps*"
                    },
                    "GetCampaignVersions": {
                        "access-level": "read",
                        "actions": "GetCampaignVersions",
                        "description": "Retrieve information about the current and prior versions of a campaign.",
                        "resource-types": "apps*"
                    },
                    "GetEndpoint": {
                        "access-level": "read",
                        "actions": "GetEndpoint",
                        "description": "Retrieve information about a specific endpoint.",
                        "resource-types": "apps*"
                    },
                    "GetGcmChannel": {
                        "access-level": "read",
                        "actions": "GetGcmChannel",
                        "description": "Retrieve information about the GCM channel for an app.",
                        "resource-types": "apps*"
                    },
                    "GetImportJob": {
                        "access-level": "read",
                        "actions": "GetImportJob",
                        "description": "Retrieve information about a specific import job.",
                        "resource-types": "apps*"
                    },
                    "GetReports [permission only]": {
                        "access-level": "read",
                        "actions": "GetReports [permission only]",
                        "description": "View analytics in the console."
                    },
                    "GetSegment": {
                        "access-level": "read",
                        "actions": "GetSegment",
                        "description": "Retrieve information about a specific segment.",
                        "resource-types": "apps*"
                    },
                    "GetSegmentImportJobs": {
                        "access-level": "read",
                        "actions": "GetSegmentImportJobs",
                        "description": "Retrieve information about jobs that create segments by importing endpoint definitions from .",
                        "resource-types": "apps*"
                    },
                    "GetSegmentVersion": {
                        "access-level": "read",
                        "actions": "GetSegmentVersion",
                        "description": "Retrieve information about a specific segment version.",
                        "resource-types": "apps*"
                    },
                    "GetSegmentVersions": {
                        "access-level": "read",
                        "actions": "GetSegmentVersions",
                        "description": "Retrieve information about the current and prior versions of a segment.",
                        "resource-types": "apps*"
                    },
                    "campaigns*": {
                        "access-level": "read",
                        "actions": "campaigns*"
                    },
                    "segments*": {
                        "access-level": "read",
                        "actions": "segments*"
                    }
                },
                "write": {
                    "CreateCampaign": {
                        "access-level": "write",
                        "actions": "CreateCampaign",
                        "description": "Create a campaign for an app.",
                        "resource-types": "apps*"
                    },
                    "CreateImportJob": {
                        "access-level": "write",
                        "actions": "CreateImportJob",
                        "description": "Import endpoint definitions from to create a segment.",
                        "resource-types": "apps*"
                    },
                    "CreateSegment": {
                        "access-level": "write",
                        "actions": "CreateSegment",
                        "condition-keys": [
                            "Create",
                            "a",
                            "segment",
                            "that",
                            "is",
                            "based",
                            "on",
                            "endpoint",
                            "data",
                            "reported",
                            "to",
                            "Pinpoint",
                            "by",
                            "your",
                            "app.",
                            "To",
                            "allow",
                            "a",
                            "user",
                            "to",
                            "create",
                            "a",
                            "segment",
                            "by",
                            "importing",
                            "endpoint",
                            "data",
                            "from",
                            "outside",
                            "of",
                            "Pinpoint,",
                            "allow",
                            "the",
                            "mobiletargeting:CreateImportJob",
                            "action."
                        ],
                        "resource-types": "apps*"
                    },
                    "DeleteApnsChannel": {
                        "access-level": "write",
                        "actions": "DeleteApnsChannel",
                        "description": "Delete the APNs channel for an app.",
                        "resource-types": "apps*"
                    },
                    "DeleteCampaign": {
                        "access-level": "write",
                        "actions": "DeleteCampaign",
                        "description": "Delete a specific campaign.",
                        "resource-types": "apps*"
                    },
                    "DeleteGcmChannel": {
                        "access-level": "write",
                        "actions": "DeleteGcmChannel",
                        "description": "Delete the GCM channel for an app.",
                        "resource-types": "apps*"
                    },
                    "DeleteSegment": {
                        "access-level": "write",
                        "actions": "DeleteSegment",
                        "description": "Delete a specific segment.",
                        "resource-types": "apps*"
                    },
                    "UpdateApnsChannel": {
                        "access-level": "write",
                        "actions": "UpdateApnsChannel",
                        "description": "Update the Apple Push Notification service (APNs) certificate and private key that allows to send push notifications to your iOS app.",
                        "resource-types": "apps*"
                    },
                    "UpdateApplicationSettings": {
                        "access-level": "write",
                        "actions": "UpdateApplicationSettings",
                        "description": "Update the default settings for an app.",
                        "resource-types": "apps*"
                    },
                    "UpdateCampaign": {
                        "access-level": "write",
                        "actions": "UpdateCampaign",
                        "description": "Update a specific campaign.",
                        "resource-types": "apps*"
                    },
                    "UpdateEndpoint": {
                        "access-level": "write",
                        "actions": "UpdateEndpoint",
                        "description": "Create an endpoint or update the information for an endpoint.",
                        "resource-types": "apps*"
                    },
                    "UpdateEndpointsBatch": {
                        "access-level": "write",
                        "actions": "UpdateEndpointsBatch",
                        "description": "Create or update endpoints as a batch operation.",
                        "resource-types": "apps*"
                    },
                    "UpdateGcmChannel": {
                        "access-level": "write",
                        "actions": "UpdateGcmChannel",
                        "description": "Update the Firebase Cloud Messaging (FCM) or Google Cloud Messaging (GCM) API key that allows to send push notifications to your Android app.",
                        "resource-types": "apps*"
                    },
                    "UpdateSegment": {
                        "access-level": "write",
                        "actions": "UpdateSegment",
                        "description": "Update a specific segment.",
                        "resource-types": "apps*"
                    },
                    "campaigns*": {
                        "access-level": "write",
                        "actions": "campaigns*"
                    },
                    "segments*": {
                        "access-level": "write",
                        "actions": "segments*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "apps": {
                    "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}",
                    "resource-types": "apps"
                },
                "campaigns": {
                    "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/campaigns/${CampaignId}",
                    "resource-types": "campaigns"
                },
                "endpoints": {
                    "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/endpoints/${EndpointId}",
                    "resource-types": "endpoints"
                },
                "segments": {
                    "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/segments/${SegmentId}",
                    "resource-types": "segments"
                }
            }
        },
        "pinpointsmsandvoiceservice": {
            "actions": {
                "read": {
                    "GetConfigurationSetEventDestinations": {
                        "access-level": "read",
                        "actions": "GetConfigurationSetEventDestinations",
                        "description": "Obtain information about an event destination, including the types of events it reports, the Amazon Resource Name (ARN) of the destination, and the name of the event destination."
                    },
                    "ListConfigurationSets": {
                        "access-level": "read",
                        "actions": "ListConfigurationSets",
                        "description": "Return a list of configuration sets. This operation only returns the configuration sets that are associated with your account in the current AWS Region."
                    }
                },
                "write": {
                    "CreateConfigurationSet": {
                        "access-level": "write",
                        "actions": "CreateConfigurationSet",
                        "description": "Create a new configuration set. After you create the configuration set, you can add one or more event destinations to it."
                    },
                    "CreateConfigurationSetEventDestination": {
                        "access-level": "write",
                        "actions": "CreateConfigurationSetEventDestination",
                        "dependent-actions": "iam:PassRole",
                        "description": "Create a new event destination in a configuration set."
                    },
                    "DeleteConfigurationSet": {
                        "access-level": "write",
                        "actions": "DeleteConfigurationSet",
                        "description": "Deletes an existing configuration set."
                    },
                    "DeleteConfigurationSetEventDestination": {
                        "access-level": "write",
                        "actions": "DeleteConfigurationSetEventDestination",
                        "description": "Deletes an event destination in a configuration set."
                    },
                    "SendVoiceMessage": {
                        "access-level": "write",
                        "actions": "SendVoiceMessage",
                        "description": "Create a new voice message and send it to a recipient\\'s phone number."
                    },
                    "UpdateConfigurationSetEventDestination": {
                        "access-level": "write",
                        "actions": "UpdateConfigurationSetEventDestination",
                        "dependent-actions": "iam:PassRole",
                        "description": "Update an event destination in a configuration set. An event destination is a location that you publish information about your voice calls to. For example, you can log an event to an Amazon CloudWatch destination when a call fails."
                    }
                }
            }
        },
        "polly": {
            "actions": {
                "list": {
                    "DescribeVoices": {
                        "access-level": "list",
                        "actions": "DescribeVoices",
                        "description": "Returns the list of voices that are available for use when requesting speech synthesis."
                    },
                    "ListLexicons": {
                        "access-level": "list",
                        "actions": "ListLexicons",
                        "description": "Returns a list of pronunciation lexicons stored in an AWS Region."
                    },
                    "ListSpeechSynthesisTasks": {
                        "access-level": "list",
                        "actions": "ListSpeechSynthesisTasks",
                        "description": "Enables the user to list requested speech synthesis tasks."
                    }
                },
                "read": {
                    "GetLexicon": {
                        "access-level": "read",
                        "actions": "GetLexicon",
                        "description": "Returns the content of the specified pronunciation lexicon stored in an AWS Region.",
                        "resource-types": "lexicon*"
                    },
                    "GetSpeechSynthesisTask": {
                        "access-level": "read",
                        "actions": "GetSpeechSynthesisTask",
                        "description": "Enables the user to get information about specific speech synthesis task."
                    },
                    "SynthesizeSpeech": {
                        "access-level": "read",
                        "actions": "SynthesizeSpeech",
                        "description": "Synthesizes UTF-8 input, plain text or SSML, to a stream of bytes.",
                        "resource-types": "lexicon"
                    }
                },
                "write": {
                    "DeleteLexicon": {
                        "access-level": "write",
                        "actions": "DeleteLexicon",
                        "description": "Deletes the specified pronunciation lexicon stored in an AWS Region",
                        "resource-types": "lexicon*"
                    },
                    "PutLexicon": {
                        "access-level": "write",
                        "actions": "PutLexicon",
                        "description": "Stores a pronunciation lexicon in an AWS Region.",
                        "resource-types": "lexicon*"
                    },
                    "StartSpeechSynthesisTask": {
                        "access-level": "write",
                        "actions": "StartSpeechSynthesisTask",
                        "dependent-actions": "s3:PutObject",
                        "description": "Enables the user to synthesize long inputs to provided S3 location.",
                        "resource-types": "lexicon"
                    }
                }
            }
        },
        "pricelist": {
            "actions": {
                "read": {
                    "DescribeServices": {
                        "access-level": "read",
                        "actions": "DescribeServices",
                        "description": "Returns the service details for all (paginated) services (if serviceCode is not set) or service detail for a particular service (if given serviceCode)."
                    },
                    "GetAttributeValues": {
                        "access-level": "read",
                        "actions": "GetAttributeValues",
                        "description": "Returns all (paginated) possible values for a given attribute."
                    },
                    "GetProducts": {
                        "access-level": "read",
                        "actions": "GetProducts",
                        "description": "Returns all matching products with given search criteria."
                    }
                }
            }
        },
        "privatemarketplace": {
            "actions": {
                "list": {
                    "DescribePrivateMarketplaceProducts [permission only]": {
                        "access-level": "list",
                        "actions": "DescribePrivateMarketplaceProducts [permission only]",
                        "description": "Describes the status of requested products in the Private Marketplace for administrative purposes. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization\\'s Service Control Policies allow it."
                    },
                    "ListPrivateMarketplaceProducts [permission only]": {
                        "access-level": "list",
                        "actions": "ListPrivateMarketplaceProducts [permission only]",
                        "description": "Queryable list for the products and status of products in the Private Marketplace for administrative purposes. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization\\'s Service Control Policies allow it."
                    }
                },
                "read": {
                    "DescribePrivateMarketplaceProfile [permission only]": {
                        "access-level": "read",
                        "actions": "DescribePrivateMarketplaceProfile [permission only]",
                        "description": "Describes details about the Private Marketplace Profile for administrative purposes. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization\\'s Service Control Policies allow it."
                    },
                    "DescribePrivateMarketplaceStatus [permission only]": {
                        "access-level": "read",
                        "actions": "DescribePrivateMarketplaceStatus [permission only]",
                        "description": "Describes the status of the Private Marketplace for administrative purposes. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization\\'s Service Control Policies allow it."
                    }
                },
                "write": {
                    "AssociateProductsWithPrivateMarketplace [permission only]": {
                        "access-level": "write",
                        "actions": "AssociateProductsWithPrivateMarketplace [permission only]",
                        "description": "Adds new approved products to the Private Marketplace. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization\\'s Service Control Policies allow it."
                    },
                    "CreatePrivateMarketplace [permission only]": {
                        "access-level": "write",
                        "actions": "CreatePrivateMarketplace [permission only]",
                        "description": "Creates a Private Marketplace for the individual account, or for the entire AWS Organization if one exists. This action can only be performed by the master account if using an AWS Organization."
                    },
                    "CreatePrivateMarketplaceProfile [permission only]": {
                        "access-level": "write",
                        "actions": "CreatePrivateMarketplaceProfile [permission only]",
                        "description": "Creates a Private Marketplace Profile that customizes the white label experience on the AWS Marketplace website for the individual account, or for the entire AWS Organization if one exists. This action can only be performed by the master account if using an AWS Organization."
                    },
                    "DisassociateProductsFromPrivateMarketplace [permission only]": {
                        "access-level": "write",
                        "actions": "DisassociateProductsFromPrivateMarketplace [permission only]",
                        "description": "Removes approved products from the Private Marketplace. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization\\'s Service Control Policies allow it."
                    },
                    "StartPrivateMarketplace [permission only]": {
                        "access-level": "write",
                        "actions": "StartPrivateMarketplace [permission only]",
                        "description": "Starts the Private Marketplace, enabling the customized AWS Marketplace experience, and enabling restrictions on the procurement of products based on what is available in the Private Marketplace. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization\\'s Service Control Policies allow it."
                    },
                    "StopPrivateMarketplace [permission only]": {
                        "access-level": "write",
                        "actions": "StopPrivateMarketplace [permission only]",
                        "description": "Stops the Private Marketplace, disabling the customized AWS Marketplace experience and removing the Private Marketplace procurement restrictions on products. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization\\'s Service Control Policies allow it."
                    },
                    "UpdatePrivateMarketplaceProfile [permission only]": {
                        "access-level": "write",
                        "actions": "UpdatePrivateMarketplaceProfile [permission only]",
                        "description": "Updates the Private Marketplace Profile that customizes the white label experience on the AWS Marketplace website for the individual account, or for the entire AWS Organization if one exists. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization\\'s Service Control Policies allow it."
                    }
                }
            }
        },
        "quicksight": {
            "actions": {
                "list": {
                    "ListGroupMemberships": {
                        "access-level": "list",
                        "actions": "ListGroupMemberships",
                        "description": "Return a list of member users in a group.",
                        "resource-types": "group*"
                    },
                    "ListGroups": {
                        "access-level": "list",
                        "actions": "ListGroups",
                        "description": "Get a list of all user groups in QuickSight.",
                        "resource-types": "group*"
                    },
                    "ListUserGroups": {
                        "access-level": "list",
                        "actions": "ListUserGroups",
                        "description": "Return a list of groups that a given user is a member of.",
                        "resource-types": "user*"
                    },
                    "ListUsers": {
                        "access-level": "list",
                        "actions": "ListUsers",
                        "description": "Return a list of all of the QuickSight users belonging to this account.",
                        "resource-types": "user*"
                    }
                },
                "read": {
                    "DescribeGroup": {
                        "access-level": "read",
                        "actions": "DescribeGroup",
                        "description": "Return a QuickSight group\u00e2\u20ac\u2122s description and ARN.",
                        "resource-types": "group*"
                    },
                    "DescribeUser": {
                        "access-level": "read",
                        "actions": "DescribeUser",
                        "description": "Return information about a user, given the user name.",
                        "resource-types": "user*"
                    }
                },
                "write": {
                    "CreateAdmin [permission only]": {
                        "access-level": "write",
                        "actions": "CreateAdmin [permission only]",
                        "description": "CreateAdmin enables the user to provision Amazon QuickSight administrators, authors, and readers.",
                        "resource-types": "user*"
                    },
                    "CreateGroup": {
                        "access-level": "write",
                        "actions": "CreateGroup",
                        "description": "Create a QuickSight group.",
                        "resource-types": "group*"
                    },
                    "CreateGroupMembership": {
                        "access-level": "write",
                        "actions": "CreateGroupMembership",
                        "condition-keys": [
                            "quicksight:UserName"
                        ],
                        "description": "Add a QuickSight user to a QuickSight group.",
                        "resource-types": "group*"
                    },
                    "CreateReader [permission only]": {
                        "access-level": "write",
                        "actions": "CreateReader [permission only]",
                        "description": "CreateReader enables the user to provision Amazon QuickSight readers.",
                        "resource-types": "user*"
                    },
                    "CreateUser [permission only]": {
                        "access-level": "write",
                        "actions": "CreateUser [permission only]",
                        "description": "CreateUser enables the user to provision Amazon QuickSight authors and readers.",
                        "resource-types": "user*"
                    },
                    "DeleteGroup": {
                        "access-level": "write",
                        "actions": "DeleteGroup",
                        "description": "Remove a user group from QuickSight.",
                        "resource-types": "group*"
                    },
                    "DeleteGroupMembership": {
                        "access-level": "write",
                        "actions": "DeleteGroupMembership",
                        "condition-keys": [
                            "quicksight:UserName"
                        ],
                        "description": "Remove a user from a group so that he/she is no longer a member of the group.",
                        "resource-types": "group*"
                    },
                    "DeleteUser": {
                        "access-level": "write",
                        "actions": "DeleteUser",
                        "description": "Delete the QuickSight user that is associated with the identity of the IAM user/role making the call. The IAM user is not deleted as a result of this call.",
                        "resource-types": "user*"
                    },
                    "GetGroupMapping [permission only]": {
                        "access-level": "write",
                        "actions": "GetGroupMapping [permission only]",
                        "description": "GetGroupMapping is used only in Amazon QuickSight Enterprise edition accounts. It enables the user to use Amazon QuickSight to identify and display the Microsoft Active Directory (Microsoft Active Directory) directory groups that are mapped to roles in Amazon QuickSight."
                    },
                    "RegisterUser": {
                        "access-level": "write",
                        "actions": "RegisterUser",
                        "condition-keys": [
                            "quicksight:IamArn",
                            "quicksight:SessionName"
                        ],
                        "description": "Create a QuickSight user, whose identity is associated with the IAM identity/role specified in the request.",
                        "resource-types": "user*"
                    },
                    "SearchDirectoryGroups [permission only]": {
                        "access-level": "write",
                        "actions": "SearchDirectoryGroups [permission only]",
                        "description": "SearchDirectoryGroups is used only in Amazon QuickSight Enterprise edition accounts. It enables the user to use Amazon QuickSight to display your Microsoft Active Directory directory groups so that you can choose which ones to map to roles in Amazon QuickSight."
                    },
                    "SetGroupMapping [permission only]": {
                        "access-level": "write",
                        "actions": "SetGroupMapping [permission only]",
                        "description": "SearchDirectoryGroups is used only in Amazon QuickSight Enterprise edition accounts. It enables the user to use Amazon QuickSight to display your Microsoft Active Directory directory groups so that you can choose which ones to map to roles in Amazon QuickSight."
                    },
                    "Subscribe [permission only]": {
                        "access-level": "write",
                        "actions": "Subscribe [permission only]",
                        "description": "Subscribe enables the user to subscribe to Amazon QuickSight. Enabling this action also allows the user to upgrade the subscription to Enterprise edition."
                    },
                    "Unsubscribe [permission only]": {
                        "access-level": "write",
                        "actions": "Unsubscribe [permission only]",
                        "description": "Unsubscribe enables the user to unsubscribe from Amazon QuickSight, which permanently deletes all users and their resources from Amazon QuickSight."
                    },
                    "UpdateGroup": {
                        "access-level": "write",
                        "actions": "UpdateGroup",
                        "description": "Change group description.",
                        "resource-types": "group*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "group": {
                    "arn": "arn:${Partition}:quicksight:${Region}:${Account}:group/${ResourceId}",
                    "resource-types": "group"
                },
                "user": {
                    "arn": "arn:${Partition}:quicksight:${Region}:${Account}:user/${ResourceId}",
                    "resource-types": "user"
                }
            }
        },
        "rds": {
            "actions": {
                "list": {
                    "DescribeAccountAttributes": {
                        "access-level": "list",
                        "actions": "DescribeAccountAttributes",
                        "description": "Lists all of the attributes for a customer account"
                    },
                    "DescribeCertificates": {
                        "access-level": "list",
                        "actions": "DescribeCertificates",
                        "description": "Lists the set of CA certificates provided by Amazon RDS for this AWS account"
                    },
                    "DescribeDBClusterParameterGroups": {
                        "access-level": "list",
                        "actions": "DescribeDBClusterParameterGroups",
                        "condition-keys": [
                            "rds:cluster-pg-tag"
                        ],
                        "description": "Returns a list of DBClusterParameterGroup descriptions",
                        "resource-types": "cluster-pg*"
                    },
                    "DescribeDBClusterParameters": {
                        "access-level": "list",
                        "actions": "DescribeDBClusterParameters",
                        "condition-keys": [
                            "rds:cluster-pg-tag"
                        ],
                        "description": "Returns the detailed parameter list for a particular DB cluster parameter group",
                        "resource-types": "cluster-pg*"
                    },
                    "DescribeDBClusterSnapshotAttributes": {
                        "access-level": "list",
                        "actions": "DescribeDBClusterSnapshotAttributes",
                        "condition-keys": [
                            "rds:cluster-snapshot-tag"
                        ],
                        "description": "Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot",
                        "resource-types": "cluster-snapshot*"
                    },
                    "DescribeDBClusters": {
                        "access-level": "list",
                        "actions": "DescribeDBClusters",
                        "condition-keys": [
                            "rds:cluster-tag"
                        ],
                        "description": "Returns information about provisioned Aurora DB clusters",
                        "resource-types": "cluster*"
                    },
                    "DescribeDBEngineVersions": {
                        "access-level": "list",
                        "actions": "DescribeDBEngineVersions",
                        "condition-keys": [
                            "rds:pg-tag"
                        ],
                        "description": "Returns a list of the available DB engines",
                        "resource-types": "pg*"
                    },
                    "DescribeDBInstances": {
                        "access-level": "list",
                        "actions": "DescribeDBInstances",
                        "description": "Returns information about provisioned RDS instances"
                    },
                    "DescribeDBLogFiles": {
                        "access-level": "list",
                        "actions": "DescribeDBLogFiles",
                        "condition-keys": [
                            "rds:db-tag"
                        ],
                        "description": "Returns a list of DB log files for the DB instance",
                        "resource-types": "db*"
                    },
                    "DescribeDBParameterGroups": {
                        "access-level": "list",
                        "actions": "DescribeDBParameterGroups",
                        "condition-keys": [
                            "rds:pg-tag"
                        ],
                        "description": "Returns a list of DBParameterGroup descriptions",
                        "resource-types": "pg*"
                    },
                    "DescribeDBParameters": {
                        "access-level": "list",
                        "actions": "DescribeDBParameters",
                        "condition-keys": [
                            "rds:pg-tag"
                        ],
                        "description": "Returns the detailed parameter list for a particular DB parameter group",
                        "resource-types": "pg*"
                    },
                    "DescribeDBSecurityGroups": {
                        "access-level": "list",
                        "actions": "DescribeDBSecurityGroups",
                        "condition-keys": [
                            "rds:secgrp-tag"
                        ],
                        "description": "Returns a list of DBSecurityGroup descriptions",
                        "resource-types": "secgrp*"
                    },
                    "DescribeDBSnapshotAttributes": {
                        "access-level": "list",
                        "actions": "DescribeDBSnapshotAttributes",
                        "condition-keys": [
                            "rds:snapshot-tag"
                        ],
                        "description": "Returns a list of DB snapshot attribute names and values for a manual DB snapshot",
                        "resource-types": "snapshot*"
                    },
                    "DescribeDBSnapshots": {
                        "access-level": "list",
                        "actions": "DescribeDBSnapshots",
                        "condition-keys": [
                            "rds:db-tag"
                        ],
                        "description": "Returns information about DB snapshots",
                        "resource-types": "db*"
                    },
                    "DescribeDBSubnetGroups": {
                        "access-level": "list",
                        "actions": "DescribeDBSubnetGroups",
                        "condition-keys": [
                            "rds:subgrp-tag"
                        ],
                        "description": "Returns a list of DBSubnetGroup descriptions",
                        "resource-types": "subgrp*"
                    },
                    "DescribeEngineDefaultClusterParameters": {
                        "access-level": "list",
                        "actions": "DescribeEngineDefaultClusterParameters",
                        "description": "Returns the default engine and system parameter information for the cluster database engine"
                    },
                    "DescribeEngineDefaultParameters": {
                        "access-level": "list",
                        "actions": "DescribeEngineDefaultParameters",
                        "description": "Returns the default engine and system parameter information for the specified database engine"
                    },
                    "DescribeEventCategories": {
                        "access-level": "list",
                        "actions": "DescribeEventCategories",
                        "description": "Displays a list of categories for all event source types, or, if specified, for a specified source type"
                    },
                    "DescribeEventSubscriptions": {
                        "access-level": "list",
                        "actions": "DescribeEventSubscriptions",
                        "condition-keys": [
                            "rds:es-tag"
                        ],
                        "description": "Lists all the subscription descriptions for a customer account",
                        "resource-types": "es*"
                    },
                    "DescribeEvents": {
                        "access-level": "list",
                        "actions": "DescribeEvents",
                        "condition-keys": [
                            "rds:es-tag"
                        ],
                        "description": "Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days",
                        "resource-types": "es*"
                    },
                    "DescribeOptionGroupOptions": {
                        "access-level": "list",
                        "actions": "DescribeOptionGroupOptions",
                        "condition-keys": [
                            "rds:og-tag"
                        ],
                        "description": "Describes all available options",
                        "resource-types": "og*"
                    },
                    "DescribeOptionGroups": {
                        "access-level": "list",
                        "actions": "DescribeOptionGroups",
                        "condition-keys": [
                            "rds:og-tag"
                        ],
                        "description": "Describes the available option groups",
                        "resource-types": "og*"
                    },
                    "DescribeOrderableDBInstanceOptions": {
                        "access-level": "list",
                        "actions": "DescribeOrderableDBInstanceOptions",
                        "description": "Returns a list of orderable DB instance options for the specified engine"
                    },
                    "DescribePendingMaintenanceActions": {
                        "access-level": "list",
                        "actions": "DescribePendingMaintenanceActions",
                        "condition-keys": [
                            "rds:DatabaseClass",
                            "rds:DatabaseEngine",
                            "rds:DatabaseName",
                            "rds:MultiAz",
                            "rds:Piops",
                            "rds:StorageSize",
                            "rds:Vpc",
                            "rds:db-tag"
                        ],
                        "description": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action",
                        "resource-types": "db*"
                    },
                    "DescribeReservedDBInstances": {
                        "access-level": "list",
                        "actions": "DescribeReservedDBInstances",
                        "condition-keys": [
                            "rds:DatabaseClass",
                            "rds:MultiAz",
                            "rds:ri-tag"
                        ],
                        "description": "Returns information about reserved DB instances for this account, or about a specified reserved DB instance",
                        "resource-types": "ri*"
                    },
                    "DescribeReservedDBInstancesOfferings": {
                        "access-level": "list",
                        "actions": "DescribeReservedDBInstancesOfferings",
                        "condition-keys": [
                            "rds:db-tag"
                        ],
                        "description": "Lists available reserved DB instance offerings",
                        "resource-types": "db*"
                    },
                    "DescribeValidDBInstanceModifications": {
                        "access-level": "list",
                        "actions": "DescribeValidDBInstanceModifications",
                        "condition-keys": [
                            "rds:db-tag"
                        ],
                        "description": "Lists available modifications you can make to your DB instance",
                        "resource-types": "db*"
                    },
                    "snapshot*": {
                        "access-level": "list",
                        "actions": "snapshot*",
                        "condition-keys": [
                            "rds:snapshot-tag"
                        ]
                    }
                },
                "permissions-management": {
                    "AuthorizeDBSecurityGroupIngress": {
                        "access-level": "permissions-management",
                        "actions": "AuthorizeDBSecurityGroupIngress",
                        "condition-keys": [
                            "rds:secgrp-tag"
                        ],
                        "description": "Enables ingress to a DBSecurityGroup using one of two forms of authorization",
                        "resource-types": "secgrp*"
                    }
                },
                "read": {
                    "DownloadCompleteDBLogFile": {
                        "access-level": "read",
                        "actions": "DownloadCompleteDBLogFile",
                        "description": "Downloads the contents of the specified database log file."
                    },
                    "DownloadDBLogFilePortion": {
                        "access-level": "read",
                        "actions": "DownloadDBLogFilePortion",
                        "condition-keys": [
                            "rds:db-tag"
                        ],
                        "description": "Downloads all or a portion of the specified log file, up to 1 MB in size",
                        "resource-types": "db*"
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "condition-keys": [
                            "rds:db-tag"
                        ],
                        "description": "Lists all tags on an Amazon RDS resource",
                        "resource-types": "db"
                    },
                    "es": {
                        "access-level": "read",
                        "actions": "es",
                        "condition-keys": [
                            "rds:es-tag"
                        ]
                    },
                    "og": {
                        "access-level": "read",
                        "actions": "og",
                        "condition-keys": [
                            "rds:og-tag"
                        ]
                    },
                    "pg": {
                        "access-level": "read",
                        "actions": "pg",
                        "condition-keys": [
                            "rds:pg-tag"
                        ]
                    },
                    "ri": {
                        "access-level": "read",
                        "actions": "ri",
                        "condition-keys": [
                            "rds:ri-tag"
                        ]
                    },
                    "secgrp": {
                        "access-level": "read",
                        "actions": "secgrp",
                        "condition-keys": [
                            "rds:secgrp-tag"
                        ]
                    },
                    "snapshot": {
                        "access-level": "read",
                        "actions": "snapshot",
                        "condition-keys": [
                            "rds:snapshot-tag"
                        ]
                    },
                    "subgrp": {
                        "access-level": "read",
                        "actions": "subgrp",
                        "condition-keys": [
                            "rds:subgrp-tag"
                        ]
                    }
                },
                "tagging": {
                    "AddTagsToResource": {
                        "access-level": "tagging",
                        "actions": "AddTagsToResource",
                        "condition-keys": [
                            "rds:db-tag"
                        ],
                        "description": "Adds metadata tags to an Amazon RDS resource",
                        "resource-types": "db"
                    },
                    "CreateDBCluster": {
                        "access-level": "tagging",
                        "actions": "CreateDBCluster",
                        "condition-keys": [
                            "rds:DatabaseEngine",
                            "rds:DatabaseName",
                            "rds:Vpc",
                            "rds:cluster-tag"
                        ],
                        "description": "Creates a new Amazon Aurora DB cluster",
                        "resource-types": "cluster*"
                    },
                    "CreateDBClusterParameterGroup": {
                        "access-level": "tagging",
                        "actions": "CreateDBClusterParameterGroup",
                        "condition-keys": [
                            "rds:cluster-pg-tag"
                        ],
                        "description": "Create a new DB cluster parameter group",
                        "resource-types": "cluster-pg*"
                    },
                    "CreateDBClusterSnapshot": {
                        "access-level": "tagging",
                        "actions": "CreateDBClusterSnapshot",
                        "condition-keys": [
                            "rds:cluster-tag"
                        ],
                        "description": "Creates a snapshot of a DB cluster",
                        "resource-types": "cluster*"
                    },
                    "CreateDBInstance": {
                        "access-level": "tagging",
                        "actions": "CreateDBInstance",
                        "condition-keys": [
                            "rds:DatabaseClass",
                            "rds:DatabaseEngine",
                            "rds:DatabaseName",
                            "rds:MultiAz",
                            "rds:Piops",
                            "rds:StorageSize",
                            "rds:Vpc",
                            "rds:db-tag"
                        ],
                        "description": "Creates a new DB instance",
                        "resource-types": "db*"
                    },
                    "CreateDBInstanceReadReplica": {
                        "access-level": "tagging",
                        "actions": "CreateDBInstanceReadReplica",
                        "condition-keys": [
                            "Piops",
                            "rds:DatabaseClass",
                            "rds:db-tag"
                        ],
                        "description": "Creates a DB instance for a DB instance running MySQL, MariaDB, or PostgreSQL that acts as a Read Replica of a source DB instance",
                        "resource-types": "db*"
                    },
                    "CreateDBParameterGroup": {
                        "access-level": "tagging",
                        "actions": "CreateDBParameterGroup",
                        "condition-keys": [
                            "rds:pg-tag"
                        ],
                        "description": "Creates a new DB parameter group",
                        "resource-types": "pg*"
                    },
                    "CreateDBSecurityGroup": {
                        "access-level": "tagging",
                        "actions": "CreateDBSecurityGroup",
                        "condition-keys": [
                            "rds:secgrp-tag"
                        ],
                        "description": "Creates a new DB security group. DB security groups control access to a DB instance",
                        "resource-types": "secgrp*"
                    },
                    "CreateDBSnapshot": {
                        "access-level": "tagging",
                        "actions": "CreateDBSnapshot",
                        "condition-keys": [
                            "rds:db-tag"
                        ],
                        "description": "Creates a DBSnapshot",
                        "resource-types": "db*"
                    },
                    "CreateDBSubnetGroup": {
                        "access-level": "tagging",
                        "actions": "CreateDBSubnetGroup",
                        "condition-keys": [
                            "rds:subgrp-tag"
                        ],
                        "description": "Creates a new DB subnet group",
                        "resource-types": "subgrp*"
                    },
                    "CreateEventSubscription": {
                        "access-level": "tagging",
                        "actions": "CreateEventSubscription",
                        "condition-keys": [
                            "rds:es-tag"
                        ],
                        "description": "Creates an RDS event notification subscription",
                        "resource-types": "es*"
                    },
                    "CreateOptionGroup": {
                        "access-level": "tagging",
                        "actions": "CreateOptionGroup",
                        "condition-keys": [
                            "rds:og-tag"
                        ],
                        "description": "Creates a new option group",
                        "resource-types": "og*"
                    },
                    "RemoveTagsFromResource": {
                        "access-level": "tagging",
                        "actions": "RemoveTagsFromResource",
                        "condition-keys": [
                            "rds:db-tag"
                        ],
                        "description": "Removes metadata tags from an Amazon RDS resource",
                        "resource-types": "db"
                    },
                    "cluster-pg*": {
                        "access-level": "tagging",
                        "actions": "cluster-pg*",
                        "condition-keys": [
                            "rds:cluster-pg-tag"
                        ]
                    },
                    "cluster-snapshot*": {
                        "access-level": "tagging",
                        "actions": "cluster-snapshot*",
                        "condition-keys": [
                            "rds:cluster-snapshot-tag"
                        ]
                    },
                    "es": {
                        "access-level": "tagging",
                        "actions": "es",
                        "condition-keys": [
                            "rds:es-tag"
                        ]
                    },
                    "og": {
                        "access-level": "tagging",
                        "actions": "og",
                        "condition-keys": [
                            "rds:og-tag"
                        ]
                    },
                    "og*": {
                        "access-level": "tagging",
                        "actions": "og*",
                        "condition-keys": [
                            "rds:og-tag"
                        ]
                    },
                    "pg": {
                        "access-level": "tagging",
                        "actions": "pg",
                        "condition-keys": [
                            "rds:pg-tag"
                        ]
                    },
                    "pg*": {
                        "access-level": "tagging",
                        "actions": "pg*",
                        "condition-keys": [
                            "rds:pg-tag"
                        ]
                    },
                    "ri": {
                        "access-level": "tagging",
                        "actions": "ri",
                        "condition-keys": [
                            "rds:ri-tag"
                        ]
                    },
                    "secgrp": {
                        "access-level": "tagging",
                        "actions": "secgrp",
                        "condition-keys": [
                            "rds:secgrp-tag"
                        ]
                    },
                    "secgrp*": {
                        "access-level": "tagging",
                        "actions": "secgrp*",
                        "condition-keys": [
                            "rds:secgrp-tag"
                        ]
                    },
                    "snapshot": {
                        "access-level": "tagging",
                        "actions": "snapshot",
                        "condition-keys": [
                            "rds:snapshot-tag"
                        ]
                    },
                    "snapshot*": {
                        "access-level": "tagging",
                        "actions": "snapshot*",
                        "condition-keys": [
                            "rds:snapshot-tag"
                        ]
                    },
                    "subgrp": {
                        "access-level": "tagging",
                        "actions": "subgrp",
                        "condition-keys": [
                            "rds:subgrp-tag"
                        ]
                    },
                    "subgrp*": {
                        "access-level": "tagging",
                        "actions": "subgrp*",
                        "condition-keys": [
                            "rds:subgrp-tag"
                        ]
                    }
                },
                "write": {
                    "AddRoleToDBCluster": {
                        "access-level": "write",
                        "actions": "AddRoleToDBCluster",
                        "condition-keys": [
                            "rds:DatabaseEngine",
                            "rds:DatabaseName",
                            "rds:Vpc",
                            "rds:cluster-tag"
                        ],
                        "description": "Associates an Identity and Access Management (IAM) role from an Aurora DB cluster.",
                        "resource-types": "cluster*"
                    },
                    "AddSourceIdentifierToSubscription": {
                        "access-level": "write",
                        "actions": "AddSourceIdentifierToSubscription",
                        "condition-keys": [
                            "rds:es-tag"
                        ],
                        "description": "Adds a source identifier to an existing RDS event notification subscription",
                        "resource-types": "es*"
                    },
                    "ApplyPendingMaintenanceAction": {
                        "access-level": "write",
                        "actions": "ApplyPendingMaintenanceAction",
                        "condition-keys": [
                            "rds:db-tag"
                        ],
                        "description": "Applies a pending maintenance action to a resource",
                        "resource-types": "db*"
                    },
                    "CopyDBClusterSnapshot": {
                        "access-level": "write",
                        "actions": "CopyDBClusterSnapshot",
                        "condition-keys": [
                            "rds:cluster-snapshot-tag"
                        ],
                        "description": "Creates a snapshot of a DB cluster",
                        "resource-types": "cluster-snapshot*"
                    },
                    "CopyDBParameterGroup": {
                        "access-level": "write",
                        "actions": "CopyDBParameterGroup",
                        "condition-keys": [
                            "rds:pg-tag"
                        ],
                        "description": "Copies the specified DB parameter group",
                        "resource-types": "pg*"
                    },
                    "CopyDBSnapshot": {
                        "access-level": "write",
                        "actions": "CopyDBSnapshot",
                        "condition-keys": [
                            "rds:snapshot-tag"
                        ],
                        "description": "Copies the specified DB snapshot",
                        "resource-types": "snapshot*"
                    },
                    "CopyOptionGroup": {
                        "access-level": "write",
                        "actions": "CopyOptionGroup",
                        "condition-keys": [
                            "rds:og-tag"
                        ],
                        "description": "Copies the specified option group",
                        "resource-types": "og*"
                    },
                    "DeleteDBCluster": {
                        "access-level": "write",
                        "actions": "DeleteDBCluster",
                        "condition-keys": [
                            "rds:cluster-tag"
                        ],
                        "description": "The DeleteDBCluster action deletes a previously provisioned DB cluster",
                        "resource-types": "cluster*"
                    },
                    "DeleteDBClusterParameterGroup": {
                        "access-level": "write",
                        "actions": "DeleteDBClusterParameterGroup",
                        "condition-keys": [
                            "rds:cluster-pg-tag"
                        ],
                        "description": "Deletes a specified DB cluster parameter group",
                        "resource-types": "cluster-pg*"
                    },
                    "DeleteDBClusterSnapshot": {
                        "access-level": "write",
                        "actions": "DeleteDBClusterSnapshot",
                        "condition-keys": [
                            "rds:cluster-snapshot-tag"
                        ],
                        "description": "Deletes a DB cluster snapshot",
                        "resource-types": "cluster-snapshot*"
                    },
                    "DeleteDBInstance": {
                        "access-level": "write",
                        "actions": "DeleteDBInstance",
                        "condition-keys": [
                            "rds:db-tag"
                        ],
                        "description": "The DeleteDBInstance action deletes a previously provisioned DB instance",
                        "resource-types": "db*"
                    },
                    "DeleteDBParameterGroup": {
                        "access-level": "write",
                        "actions": "DeleteDBParameterGroup",
                        "condition-keys": [
                            "rds:pg-tag"
                        ],
                        "description": "Deletes a specified DBParameterGroup",
                        "resource-types": "pg*"
                    },
                    "DeleteDBSecurityGroup": {
                        "access-level": "write",
                        "actions": "DeleteDBSecurityGroup",
                        "condition-keys": [
                            "rds:secgrp-tag"
                        ],
                        "description": "Deletes a DB security group",
                        "resource-types": "secgrp*"
                    },
                    "DeleteDBSnapshot": {
                        "access-level": "write",
                        "actions": "DeleteDBSnapshot",
                        "condition-keys": [
                            "rds:snapshot-tag"
                        ],
                        "description": "Deletes a DBSnapshot",
                        "resource-types": "snapshot*"
                    },
                    "DeleteDBSubnetGroup": {
                        "access-level": "write",
                        "actions": "DeleteDBSubnetGroup",
                        "condition-keys": [
                            "rds:subgrp-tag"
                        ],
                        "description": "Deletes a DB subnet group",
                        "resource-types": "subgrp*"
                    },
                    "DeleteEventSubscription": {
                        "access-level": "write",
                        "actions": "DeleteEventSubscription",
                        "condition-keys": [
                            "rds:es-tag"
                        ],
                        "description": "Deletes an RDS event notification subscription",
                        "resource-types": "es*"
                    },
                    "DeleteOptionGroup": {
                        "access-level": "write",
                        "actions": "DeleteOptionGroup",
                        "condition-keys": [
                            "rds:og-tag"
                        ],
                        "description": "Deletes an existing option group",
                        "resource-types": "og*"
                    },
                    "FailoverDBCluster": {
                        "access-level": "write",
                        "actions": "FailoverDBCluster",
                        "condition-keys": [
                            "rds:cluster-tag"
                        ],
                        "description": "Forces a failover for a DB cluster",
                        "resource-types": "cluster*"
                    },
                    "ModifyCurrentDBClusterCapacity": {
                        "access-level": "write",
                        "actions": "ModifyCurrentDBClusterCapacity",
                        "condition-keys": [
                            "rds:cluster-tag"
                        ],
                        "description": "Modify current cluster capacity for an Amazon Aurora Severless DB cluster",
                        "resource-types": "cluster*"
                    },
                    "ModifyDBCluster": {
                        "access-level": "write",
                        "actions": "ModifyDBCluster",
                        "condition-keys": [
                            "rds:Vpc",
                            "rds:cluster-tag"
                        ],
                        "description": "Modify a setting for an Amazon Aurora DB cluster",
                        "resource-types": "cluster*"
                    },
                    "ModifyDBClusterParameterGroup": {
                        "access-level": "write",
                        "actions": "ModifyDBClusterParameterGroup",
                        "condition-keys": [
                            "rds:cluster-pg-tag"
                        ],
                        "description": "Modifies the parameters of a DB cluster parameter group",
                        "resource-types": "cluster-pg*"
                    },
                    "ModifyDBClusterSnapshotAttribute": {
                        "access-level": "write",
                        "actions": "ModifyDBClusterSnapshotAttribute",
                        "condition-keys": [
                            "rds:cluster-snapshot-tag"
                        ],
                        "description": "Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot",
                        "resource-types": "cluster-snapshot*"
                    },
                    "ModifyDBInstance": {
                        "access-level": "write",
                        "actions": "ModifyDBInstance",
                        "condition-keys": [
                            "rds:DatabaseClass",
                            "rds:MultiAz",
                            "rds:Piops",
                            "rds:StorageSize",
                            "rds:Vpc",
                            "rds:db-tag"
                        ],
                        "description": "Modify settings for a DB instance",
                        "resource-types": "db*"
                    },
                    "ModifyDBParameterGroup": {
                        "access-level": "write",
                        "actions": "ModifyDBParameterGroup",
                        "condition-keys": [
                            "rds:pg-tag"
                        ],
                        "description": "Modifies the parameters of a DB parameter group",
                        "resource-types": "pg*"
                    },
                    "ModifyDBSnapshotAttribute": {
                        "access-level": "write",
                        "actions": "ModifyDBSnapshotAttribute",
                        "condition-keys": [
                            "rds:snapshot-tag"
                        ],
                        "description": "Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot",
                        "resource-types": "snapshot*"
                    },
                    "ModifyDBSubnetGroup": {
                        "access-level": "write",
                        "actions": "ModifyDBSubnetGroup",
                        "condition-keys": [
                            "rds:subgrp-tag"
                        ],
                        "description": "Modifies an existing DB subnet group",
                        "resource-types": "subgrp*"
                    },
                    "ModifyEventSubscription": {
                        "access-level": "write",
                        "actions": "ModifyEventSubscription",
                        "condition-keys": [
                            "rds:es-tag"
                        ],
                        "description": "Modifies an existing RDS event notification subscription",
                        "resource-types": "es*"
                    },
                    "ModifyOptionGroup": {
                        "access-level": "write",
                        "actions": "ModifyOptionGroup",
                        "condition-keys": [
                            "rds:og-tag"
                        ],
                        "description": "Modifies an existing option group",
                        "resource-types": "og*"
                    },
                    "PromoteReadReplica": {
                        "access-level": "write",
                        "actions": "PromoteReadReplica",
                        "condition-keys": [
                            "rds:db-tag"
                        ],
                        "description": "Promotes a Read Replica DB instance to a standalone DB instance",
                        "resource-types": "db*"
                    },
                    "PurchaseReservedDBInstancesOffering": {
                        "access-level": "write",
                        "actions": "PurchaseReservedDBInstancesOffering",
                        "description": "Purchases a reserved DB instance offering"
                    },
                    "RebootDBInstance": {
                        "access-level": "write",
                        "actions": "RebootDBInstance",
                        "condition-keys": [
                            "rds:db-tag"
                        ],
                        "description": "Rebooting a DB instance restarts the database engine service",
                        "resource-types": "db*"
                    },
                    "RemoveSourceIdentifierFromSubscription": {
                        "access-level": "write",
                        "actions": "RemoveSourceIdentifierFromSubscription",
                        "condition-keys": [
                            "rds:es-tag"
                        ],
                        "description": "Removes a source identifier from an existing RDS event notification subscription",
                        "resource-types": "es*"
                    },
                    "ResetDBClusterParameterGroup": {
                        "access-level": "write",
                        "actions": "ResetDBClusterParameterGroup",
                        "condition-keys": [
                            "rds:cluster-pg-tag"
                        ],
                        "description": "Modifies the parameters of a DB cluster parameter group to the default value",
                        "resource-types": "cluster-pg*"
                    },
                    "ResetDBParameterGroup": {
                        "access-level": "write",
                        "actions": "ResetDBParameterGroup",
                        "condition-keys": [
                            "rds:pg-tag"
                        ],
                        "description": "Modifies the parameters of a DB parameter group to the engine/system default value",
                        "resource-types": "pg*"
                    },
                    "RestoreDBClusterFromSnapshot": {
                        "access-level": "write",
                        "actions": "RestoreDBClusterFromSnapshot",
                        "condition-keys": [
                            "rds:DatabaseEngine",
                            "rds:DatabaseName",
                            "rds:Vpc",
                            "rds:cluster-tag"
                        ],
                        "description": "Creates a new DB cluster from a DB cluster snapshot",
                        "resource-types": "cluster*"
                    },
                    "RestoreDBClusterToPointInTime": {
                        "access-level": "write",
                        "actions": "RestoreDBClusterToPointInTime",
                        "condition-keys": [
                            "rds:Vpc",
                            "rds:cluster-tag"
                        ],
                        "description": "Restores a DB cluster to an arbitrary point in time",
                        "resource-types": "cluster*"
                    },
                    "RestoreDBInstanceFromDBSnapshot": {
                        "access-level": "write",
                        "actions": "RestoreDBInstanceFromDBSnapshot",
                        "condition-keys": [
                            "rds:DatabaseClass",
                            "rds:DatabaseEngine",
                            "rds:DatabaseName",
                            "rds:MultiAz",
                            "rds:Piops",
                            "rds:Vpc",
                            "rds:db-tag"
                        ],
                        "description": "Creates a new DB instance from a DB snapshot",
                        "resource-types": "db*"
                    },
                    "RestoreDBInstanceToPointInTime": {
                        "access-level": "write",
                        "actions": "RestoreDBInstanceToPointInTime",
                        "condition-keys": [
                            "rds:DatabaseClass",
                            "rds:DatabaseEngine",
                            "rds:DatabaseName",
                            "rds:MultiAz",
                            "rds:Piops",
                            "rds:Vpc",
                            "rds:db-tag"
                        ],
                        "description": "Restores a DB instance to an arbitrary point in time",
                        "resource-types": "db*"
                    },
                    "RevokeDBSecurityGroupIngress": {
                        "access-level": "write",
                        "actions": "RevokeDBSecurityGroupIngress",
                        "condition-keys": [
                            "rds:secgrp-tag"
                        ],
                        "description": "Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC Security Groups",
                        "resource-types": "secgrp*"
                    },
                    "StartDBCluster": {
                        "access-level": "write",
                        "actions": "StartDBCluster",
                        "condition-keys": [
                            "rds:cluster-tag"
                        ],
                        "description": "Starts the DB cluster",
                        "resource-types": "cluster*"
                    },
                    "StartDBInstance": {
                        "access-level": "write",
                        "actions": "StartDBInstance",
                        "condition-keys": [
                            "rds:DatabaseClass",
                            "rds:DatabaseEngine",
                            "rds:DatabaseName",
                            "rds:MultiAz",
                            "rds:Piops",
                            "rds:StorageSize",
                            "rds:Vpc",
                            "rds:db-tag"
                        ],
                        "description": "Starts the DB instance",
                        "resource-types": "db*"
                    },
                    "StopDBCluster": {
                        "access-level": "write",
                        "actions": "StopDBCluster",
                        "condition-keys": [
                            "rds:cluster-tag"
                        ],
                        "description": "Stops the DB cluster",
                        "resource-types": "cluster*"
                    },
                    "StopDBInstance": {
                        "access-level": "write",
                        "actions": "StopDBInstance",
                        "condition-keys": [
                            "rds:DatabaseClass",
                            "rds:DatabaseEngine",
                            "rds:DatabaseName",
                            "rds:MultiAz",
                            "rds:Piops",
                            "rds:StorageSize",
                            "rds:Vpc",
                            "rds:db-tag"
                        ],
                        "description": "Stops the DB instance",
                        "resource-types": "db*"
                    },
                    "cluster-pg*": {
                        "access-level": "write",
                        "actions": "cluster-pg*",
                        "condition-keys": [
                            "rds:cluster-pg-tag"
                        ]
                    },
                    "cluster-snapshot*": {
                        "access-level": "write",
                        "actions": "cluster-snapshot*",
                        "condition-keys": [
                            "rds:cluster-snapshot-tag"
                        ]
                    },
                    "iam-role*": {
                        "access-level": "write",
                        "actions": "iam-role*"
                    },
                    "og*": {
                        "access-level": "write",
                        "actions": "og*",
                        "condition-keys": [
                            "rds:og-tag"
                        ]
                    },
                    "pg*": {
                        "access-level": "write",
                        "actions": "pg*",
                        "condition-keys": [
                            "rds:pg-tag"
                        ]
                    },
                    "secgrp*": {
                        "access-level": "write",
                        "actions": "secgrp*",
                        "condition-keys": [
                            "rds:secgrp-tag"
                        ]
                    },
                    "snapshot*": {
                        "access-level": "write",
                        "actions": "snapshot*",
                        "condition-keys": [
                            "rds:snapshot-tag"
                        ]
                    },
                    "subgrp*": {
                        "access-level": "write",
                        "actions": "subgrp*",
                        "condition-keys": [
                            "rds:subgrp-tag"
                        ]
                    }
                }
            },
            "condition-keys": [
                "",
                "rds:subgrp-tag"
            ],
            "resource-types": {
                "cluster": {
                    "arn": "arn:${Partition}:rds:${Region}:${Account}:cluster:${DbClusteInstanceName}",
                    "condition-keys": "rds:DatabaseEngine rds:DatabaseName rds:Vpc rds:cluster-tag",
                    "resource-types": "cluster"
                },
                "cluster-pg": {
                    "arn": "arn:${Partition}:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
                    "condition-keys": "rds:cluster-pg-tag",
                    "resource-types": "cluster-pg"
                },
                "cluster-snapshot": {
                    "arn": "arn:${Partition}:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}",
                    "condition-keys": "rds:cluster-snapshot-tag",
                    "resource-types": "cluster-snapshot"
                },
                "db": {
                    "arn": "arn:${Partition}:rds:${Region}:${Account}:db:${DbInstanceName}",
                    "condition-keys": "rds:DatabaseClass rds:DatabaseEngine rds:DatabaseName rds:MultiAz rds:Piops rds:StorageSize rds:Vpc rds:db-tag",
                    "resource-types": "db"
                },
                "es": {
                    "arn": "arn:${Partition}:rds:${Region}:${Account}:es:${SubscriptionName}",
                    "condition-keys": "rds:es-tag",
                    "resource-types": "es"
                },
                "iam-role": {
                    "arn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}",
                    "resource-types": "iam-role"
                },
                "og": {
                    "arn": "arn:${Partition}:rds:${Region}:${Account}:og:${OptionGroupName}",
                    "condition-keys": "rds:og-tag",
                    "resource-types": "og"
                },
                "pg": {
                    "arn": "arn:${Partition}:rds:${Region}:${Account}:pg:${ParameterGroupName}",
                    "condition-keys": "rds:pg-tag",
                    "resource-types": "pg"
                },
                "ri": {
                    "arn": "arn:${Partition}:rds:${Region}:${Account}:ri:${ReservedDbInstanceName}",
                    "condition-keys": "rds:DatabaseClass rds:MultiAz rds:ri-tag",
                    "resource-types": "ri"
                },
                "secgrp": {
                    "arn": "arn:${Partition}:rds:${Region}:${Account}:secgrp:${SecurityGroupName}",
                    "condition-keys": "rds:secgrp-tag",
                    "resource-types": "secgrp"
                },
                "snapshot": {
                    "arn": "arn:${Partition}:rds:${Region}:${Account}:snapshot:${SnapshotName}",
                    "condition-keys": "rds:snapshot-tag",
                    "resource-types": "snapshot"
                },
                "subgrp": {
                    "arn": "arn:${Partition}:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
                    "condition-keys": "rds:subgrp-tag",
                    "resource-types": "subgrp"
                }
            }
        },
        "redshift": {
            "actions": {
                "list": {
                    "DescribeClusters": {
                        "access-level": "list",
                        "actions": "DescribeClusters",
                        "description": "Returns properties of provisioned clusters including general cluster properties, cluster database properties, maintenance and backup properties, and security and access properties"
                    },
                    "DescribeEvents": {
                        "access-level": "list",
                        "actions": "DescribeEvents",
                        "description": "Returns events related to clusters, security groups, snapshots, and parameter groups for the past 14 days"
                    },
                    "ViewQueriesInConsole [permission only]": {
                        "access-level": "list",
                        "actions": "ViewQueriesInConsole [permission only]",
                        "description": "Controls whether a user can terminate running queries and loads from the Cluster section in the Amazon Redshift console."
                    }
                },
                "permissions-management": {
                    "AuthorizeClusterSecurityGroupIngress": {
                        "access-level": "permissions-management",
                        "actions": "AuthorizeClusterSecurityGroupIngress",
                        "description": "Adds an inbound (ingress) rule to an Amazon Redshift security group.",
                        "resource-types": "securitygroup*"
                    },
                    "AuthorizeSnapshotAccess": {
                        "access-level": "permissions-management",
                        "actions": "AuthorizeSnapshotAccess",
                        "description": "Authorizes the specified AWS customer account to restore the specified snapshot",
                        "resource-types": "snapshot*"
                    },
                    "CreateClusterUser": {
                        "access-level": "permissions-management",
                        "actions": "CreateClusterUser",
                        "condition-keys": [
                            "redshift:DbUser"
                        ],
                        "description": "Give permission to auto create the specified redshift user if it does not exist",
                        "resource-types": "dbuser*"
                    },
                    "CreateSnapshotCopyGrant": {
                        "access-level": "permissions-management",
                        "actions": "CreateSnapshotCopyGrant",
                        "description": "Creates a snapshot copy grant that permits Amazon Redshift to use a customer master key (CMK) from AWS Key Management Service (AWS KMS) to encrypt copied snapshots in a destination region",
                        "resource-types": "snapshotcopygrant*"
                    },
                    "JoinGroup": {
                        "access-level": "permissions-management",
                        "actions": "JoinGroup",
                        "description": "Give permission to join the specified redshift groups",
                        "resource-types": "dbgroup*"
                    },
                    "ModifyClusterIamRoles": {
                        "access-level": "permissions-management",
                        "actions": "ModifyClusterIamRoles",
                        "description": "Modifies the list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to access other AWS services",
                        "resource-types": "cluster*"
                    },
                    "RevokeClusterSecurityGroupIngress": {
                        "access-level": "permissions-management",
                        "actions": "RevokeClusterSecurityGroupIngress",
                        "description": "Revokes an ingress rule in an Amazon Redshift security group for a previously authorized IP range or Amazon EC2 security group",
                        "resource-types": "securitygroup*"
                    },
                    "RevokeSnapshotAccess": {
                        "access-level": "permissions-management",
                        "actions": "RevokeSnapshotAccess",
                        "description": "Removes the ability of the specified AWS customer account to restore the specified snapshot",
                        "resource-types": "snapshot*"
                    },
                    "RotateEncryptionKey": {
                        "access-level": "permissions-management",
                        "actions": "RotateEncryptionKey",
                        "description": "Rotates the encryption keys for a cluster",
                        "resource-types": "cluster*"
                    },
                    "securitygroupingress-ec2securitygroup*": {
                        "access-level": "permissions-management",
                        "actions": "securitygroupingress-ec2securitygroup*"
                    }
                },
                "read": {
                    "DescribeClusterParameterGroups": {
                        "access-level": "read",
                        "actions": "DescribeClusterParameterGroups",
                        "description": "Returns a list of Amazon Redshift parameter groups, including parameter groups you created and the default parameter group"
                    },
                    "DescribeClusterParameters": {
                        "access-level": "read",
                        "actions": "DescribeClusterParameters",
                        "description": "Returns a detailed list of parameters contained within the specified Amazon Redshift parameter group",
                        "resource-types": "parametergroup*"
                    },
                    "DescribeClusterSecurityGroups": {
                        "access-level": "read",
                        "actions": "DescribeClusterSecurityGroups",
                        "description": "Returns information about Amazon Redshift security groups"
                    },
                    "DescribeClusterSnapshots": {
                        "access-level": "read",
                        "actions": "DescribeClusterSnapshots",
                        "description": "Returns one or more snapshot objects, which contain metadata about your cluster snapshots"
                    },
                    "DescribeClusterSubnetGroups": {
                        "access-level": "read",
                        "actions": "DescribeClusterSubnetGroups",
                        "description": "Returns one or more cluster subnet group objects, which contain metadata about your cluster subnet groups"
                    },
                    "DescribeClusterVersions": {
                        "access-level": "read",
                        "actions": "DescribeClusterVersions",
                        "description": "Returns descriptions of the available Amazon Redshift cluster versions"
                    },
                    "DescribeDefaultClusterParameters": {
                        "access-level": "read",
                        "actions": "DescribeDefaultClusterParameters",
                        "description": "Returns a list of parameter settings for the specified parameter group family"
                    },
                    "DescribeEventCategories": {
                        "access-level": "read",
                        "actions": "DescribeEventCategories",
                        "description": "Displays a list of event categories for all event source types, or for a specified source type"
                    },
                    "DescribeEventSubscriptions": {
                        "access-level": "read",
                        "actions": "DescribeEventSubscriptions",
                        "description": "Lists descriptions of all the Amazon Redshift event notifications subscription for a customer account"
                    },
                    "DescribeHsmClientCertificates": {
                        "access-level": "read",
                        "actions": "DescribeHsmClientCertificates",
                        "description": "Returns information about the specified HSM client certificate"
                    },
                    "DescribeHsmConfigurations": {
                        "access-level": "read",
                        "actions": "DescribeHsmConfigurations",
                        "description": "Returns information about the specified Amazon Redshift HSM configuration"
                    },
                    "DescribeLoggingStatus": {
                        "access-level": "read",
                        "actions": "DescribeLoggingStatus",
                        "description": "Describes whether information, such as queries and connection attempts, is being logged for the specified Amazon Redshift cluster",
                        "resource-types": "cluster*"
                    },
                    "DescribeOrderableClusterOptions": {
                        "access-level": "read",
                        "actions": "DescribeOrderableClusterOptions",
                        "description": "Returns a list of orderable cluster options"
                    },
                    "DescribeReservedNodeOfferings": {
                        "access-level": "read",
                        "actions": "DescribeReservedNodeOfferings",
                        "description": "Returns a list of the available reserved node offerings by Amazon Redshift with their descriptions including the node type, the fixed and recurring costs of reserving the node and duration the node will be reserved for you"
                    },
                    "DescribeReservedNodes": {
                        "access-level": "read",
                        "actions": "DescribeReservedNodes",
                        "description": "Returns the descriptions of the reserved nodes"
                    },
                    "DescribeResize": {
                        "access-level": "read",
                        "actions": "DescribeResize",
                        "description": "Returns information about the last resize operation for the specified cluster",
                        "resource-types": "cluster*"
                    },
                    "DescribeSnapshotCopyGrants": {
                        "access-level": "read",
                        "actions": "DescribeSnapshotCopyGrants",
                        "description": "Returns a list of snapshot copy grants owned by the AWS account in the destination region"
                    },
                    "DescribeTableRestoreStatus": {
                        "access-level": "read",
                        "actions": "DescribeTableRestoreStatus",
                        "description": "Lists the status of one or more table restore requests made using the RestoreTableFromClusterSnapshot API action"
                    },
                    "DescribeTags": {
                        "access-level": "read",
                        "actions": "DescribeTags",
                        "description": "Returns a list of tags"
                    }
                },
                "tagging": {
                    "CreateTags": {
                        "access-level": "tagging",
                        "actions": "CreateTags",
                        "description": "Adds one or more tags to a specified resource"
                    },
                    "DeleteTags": {
                        "access-level": "tagging",
                        "actions": "DeleteTags",
                        "description": "Deletes a tag or tags from a resource"
                    }
                },
                "write": {
                    "CancelQuerySession [permission only]": {
                        "access-level": "write",
                        "actions": "CancelQuerySession [permission only]",
                        "description": "Controls whether a user can see queries in the Amazon Redshift console in the Queries tab of the Cluster section."
                    },
                    "CopyClusterSnapshot": {
                        "access-level": "write",
                        "actions": "CopyClusterSnapshot",
                        "description": "Copies the specified automated cluster snapshot to a new manual cluster snapshot",
                        "resource-types": "snapshot*"
                    },
                    "CreateCluster": {
                        "access-level": "write",
                        "actions": "CreateCluster",
                        "description": "Creates a new cluster",
                        "resource-types": "cluster*"
                    },
                    "CreateClusterParameterGroup": {
                        "access-level": "write",
                        "actions": "CreateClusterParameterGroup",
                        "description": "Creates an Amazon Redshift parameter group",
                        "resource-types": "parametergroup*"
                    },
                    "CreateClusterSecurityGroup": {
                        "access-level": "write",
                        "actions": "CreateClusterSecurityGroup",
                        "description": "Creates a new Amazon Redshift security group",
                        "resource-types": "securitygroup*"
                    },
                    "CreateClusterSnapshot": {
                        "access-level": "write",
                        "actions": "CreateClusterSnapshot",
                        "description": "Creates a manual snapshot of the specified cluster",
                        "resource-types": "snapshot*"
                    },
                    "CreateClusterSubnetGroup": {
                        "access-level": "write",
                        "actions": "CreateClusterSubnetGroup",
                        "description": "Creates a new Amazon Redshift subnet group",
                        "resource-types": "subnetgroup*"
                    },
                    "CreateEventSubscription": {
                        "access-level": "write",
                        "actions": "CreateEventSubscription",
                        "description": "Creates an Amazon Redshift event notification subscription",
                        "resource-types": "eventsubscription*"
                    },
                    "CreateHsmClientCertificate": {
                        "access-level": "write",
                        "actions": "CreateHsmClientCertificate",
                        "description": "Creates an HSM client certificate that an Amazon Redshift cluster will use to connect to the client\\'s HSM in order to store and retrieve the keys used to encrypt the cluster databases",
                        "resource-types": "hsmclientcertificate*"
                    },
                    "CreateHsmConfiguration": {
                        "access-level": "write",
                        "actions": "CreateHsmConfiguration",
                        "description": "Creates an HSM configuration that contains the information required by an Amazon Redshift cluster to store and use database encryption keys in a Hardware Security Module (HSM)",
                        "resource-types": "hsmconfiguration*"
                    },
                    "DeleteCluster": {
                        "access-level": "write",
                        "actions": "DeleteCluster",
                        "description": "Deletes a previously provisioned cluster",
                        "resource-types": "cluster*"
                    },
                    "DeleteClusterParameterGroup": {
                        "access-level": "write",
                        "actions": "DeleteClusterParameterGroup",
                        "description": "Deletes a specified Amazon Redshift parameter group",
                        "resource-types": "parametergroup*"
                    },
                    "DeleteClusterSecurityGroup": {
                        "access-level": "write",
                        "actions": "DeleteClusterSecurityGroup",
                        "description": "Deletes an Amazon Redshift security group",
                        "resource-types": "securitygroup*"
                    },
                    "DeleteClusterSnapshot": {
                        "access-level": "write",
                        "actions": "DeleteClusterSnapshot",
                        "description": "Deletes the specified manual snapshot",
                        "resource-types": "snapshot*"
                    },
                    "DeleteClusterSubnetGroup": {
                        "access-level": "write",
                        "actions": "DeleteClusterSubnetGroup",
                        "description": "Deletes the specified cluster subnet group",
                        "resource-types": "subnetgroup*"
                    },
                    "DeleteEventSubscription": {
                        "access-level": "write",
                        "actions": "DeleteEventSubscription",
                        "description": "Deletes an Amazon Redshift event notification subscription",
                        "resource-types": "eventsubscription*"
                    },
                    "DeleteHsmClientCertificate": {
                        "access-level": "write",
                        "actions": "DeleteHsmClientCertificate",
                        "description": "Deletes the specified HSM client certificate",
                        "resource-types": "hsmclientcertificate*"
                    },
                    "DeleteHsmConfiguration": {
                        "access-level": "write",
                        "actions": "DeleteHsmConfiguration",
                        "description": "Deletes the specified Amazon Redshift HSM configuration",
                        "resource-types": "hsmconfiguration*"
                    },
                    "DeleteSnapshotCopyGrant": {
                        "access-level": "write",
                        "actions": "DeleteSnapshotCopyGrant",
                        "description": "Deletes the specified snapshot copy grant",
                        "resource-types": "snapshotcopygrant*"
                    },
                    "DisableLogging": {
                        "access-level": "write",
                        "actions": "DisableLogging",
                        "description": "Stops logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster",
                        "resource-types": "cluster*"
                    },
                    "DisableSnapshotCopy": {
                        "access-level": "write",
                        "actions": "DisableSnapshotCopy",
                        "description": "Disables the automatic copying of snapshots from one region to another region for a specified cluster",
                        "resource-types": "cluster*"
                    },
                    "EnableLogging": {
                        "access-level": "write",
                        "actions": "EnableLogging",
                        "description": "Starts logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster",
                        "resource-types": "cluster*"
                    },
                    "EnableSnapshotCopy": {
                        "access-level": "write",
                        "actions": "EnableSnapshotCopy",
                        "description": "Enables the automatic copy of snapshots from one region to another region for a specified cluster",
                        "resource-types": "cluster*"
                    },
                    "GetClusterCredentials": {
                        "access-level": "write",
                        "actions": "GetClusterCredentials",
                        "description": "Get a temporary cluster credential for the specified redshift user",
                        "resource-types": "dbuser*"
                    },
                    "ModifyCluster": {
                        "access-level": "write",
                        "actions": "ModifyCluster",
                        "description": "Modifies the settings for a cluster",
                        "resource-types": "cluster*"
                    },
                    "ModifyClusterParameterGroup": {
                        "access-level": "write",
                        "actions": "ModifyClusterParameterGroup",
                        "description": "Modifies the parameters of a parameter group",
                        "resource-types": "parametergroup*"
                    },
                    "ModifyClusterSubnetGroup": {
                        "access-level": "write",
                        "actions": "ModifyClusterSubnetGroup",
                        "description": "Modifies a cluster subnet group to include the specified list of VPC subnets",
                        "resource-types": "subnetgroup*"
                    },
                    "ModifyEventSubscription": {
                        "access-level": "write",
                        "actions": "ModifyEventSubscription",
                        "description": "Modifies an existing Amazon Redshift event notification subscription",
                        "resource-types": "eventsubscription*"
                    },
                    "ModifySnapshotCopyRetentionPeriod": {
                        "access-level": "write",
                        "actions": "ModifySnapshotCopyRetentionPeriod",
                        "description": "Modifies the number of days to retain automated snapshots in the destination region after they are copied from the source region",
                        "resource-types": "cluster*"
                    },
                    "PurchaseReservedNodeOffering": {
                        "access-level": "write",
                        "actions": "PurchaseReservedNodeOffering",
                        "description": "Allows you to purchase reserved nodes. Amazon Redshift offers a predefined set of reserved node offerings"
                    },
                    "RebootCluster": {
                        "access-level": "write",
                        "actions": "RebootCluster",
                        "description": "Reboots a cluster",
                        "resource-types": "cluster*"
                    },
                    "ResetClusterParameterGroup": {
                        "access-level": "write",
                        "actions": "ResetClusterParameterGroup",
                        "description": "Sets one or more parameters of the specified parameter group to their default values and sets the source values of the parameters to \"engine-default\"",
                        "resource-types": "parametergroup*"
                    },
                    "RestoreFromClusterSnapshot": {
                        "access-level": "write",
                        "actions": "RestoreFromClusterSnapshot",
                        "description": "Creates a new cluster from a snapshot",
                        "resource-types": "snapshot*"
                    },
                    "RestoreTableFromClusterSnapshot": {
                        "access-level": "write",
                        "actions": "RestoreTableFromClusterSnapshot",
                        "description": "Creates a new table from a table in an Amazon Redshift cluster snapshot",
                        "resource-types": "cluster*"
                    },
                    "dbgroup": {
                        "access-level": "write",
                        "actions": "dbgroup"
                    },
                    "dbname": {
                        "access-level": "write",
                        "actions": "dbname",
                        "condition-keys": [
                            "redshift:DbName",
                            "redshift:DbUser",
                            "redshift:DurationSeconds"
                        ]
                    },
                    "snapshot*": {
                        "access-level": "write",
                        "actions": "snapshot*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "cluster": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:cluster:${ClusterName}",
                    "resource-types": "cluster"
                },
                "dbgroup": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:dbgroup:${ClusterName}/${DbGroup}",
                    "resource-types": "dbgroup"
                },
                "dbname": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:dbname:${ClusterName}/${DbName}",
                    "resource-types": "dbname"
                },
                "dbuser": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:dbuser:${ClusterName}/${DbUser}",
                    "resource-types": "dbuser"
                },
                "eventsubscription": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:eventsubscription:${EventSubscriptionName}",
                    "resource-types": "eventsubscription"
                },
                "hsmclientcertificate": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:hsmclientcertificate:${HSMClientCertificateId}",
                    "resource-types": "hsmclientcertificate"
                },
                "hsmconfiguration": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:hsmconfiguration:${HSMConfigurationId}",
                    "resource-types": "hsmconfiguration"
                },
                "parametergroup": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:parametergroup:${ParameterGroupName}",
                    "resource-types": "parametergroup"
                },
                "securitygroup": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:securitygroup:${SecurityGroupName}/ec2securitygroup/${Owner}/${Ec2SecurityGroupId}",
                    "resource-types": "securitygroup"
                },
                "securitygroupingress-cidr": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:securitygroupingress:${SecurityGroupName}/cidrip/${IpRange}",
                    "resource-types": "securitygroupingress-cidr"
                },
                "securitygroupingress-ec2securitygroup": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:securitygroupingress:${SecurityGroupName}/ec2securitygroup/${Owner}/${Ece2SecuritygroupId}",
                    "resource-types": "securitygroupingress-ec2securitygroup"
                },
                "snapshot": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:snapshot:${ClusterName}/${SnapshotName}",
                    "resource-types": "snapshot"
                },
                "snapshotcopygrant": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:snapshotcopygrant:${SnapshotCopyGrantName}",
                    "resource-types": "snapshotcopygrant"
                },
                "subnetgroup": {
                    "arn": "arn:${Partition}:redshift:${Region}:${Account}:subnetgroup:${SubnetGroupName}",
                    "resource-types": "subnetgroup"
                }
            }
        },
        "rekognition": {
            "actions": {
                "list": {
                    "ListStreamProcessors": {
                        "access-level": "list",
                        "actions": "ListStreamProcessors",
                        "description": "Gets a list of stream processors that you have created with CreateStreamProcessor.",
                        "resource-types": "streamprocessor*"
                    }
                },
                "read": {
                    "CompareFaces": {
                        "access-level": "read",
                        "actions": "CompareFaces",
                        "description": "Compares a face in source input image with each face detected in the target input image."
                    },
                    "DescribeStreamProcessor": {
                        "access-level": "read",
                        "actions": "DescribeStreamProcessor",
                        "description": "Provides information about a stream processor created by CreateStreamProcessor.",
                        "resource-types": "streamprocessor*"
                    },
                    "DetectFaces": {
                        "access-level": "read",
                        "actions": "DetectFaces",
                        "description": "Detects human faces within an image (JPEG or PNG) provided as input."
                    },
                    "DetectLabels": {
                        "access-level": "read",
                        "actions": "DetectLabels",
                        "description": "Detects instances of real-world labels within an image (JPEG or PNG) provided as input."
                    },
                    "DetectModerationLabels": {
                        "access-level": "read",
                        "actions": "DetectModerationLabels",
                        "description": "Detects moderation labels within input image."
                    },
                    "DetectText": {
                        "access-level": "read",
                        "actions": "DetectText",
                        "description": "Detects text in the input image and converts it into machine-readable text."
                    },
                    "GetCelebrityInfo": {
                        "access-level": "read",
                        "actions": "GetCelebrityInfo",
                        "description": "Gets the name and additional information about a celebrity based on his or her Rekognition ID."
                    },
                    "GetCelebrityRecognition": {
                        "access-level": "read",
                        "actions": "GetCelebrityRecognition",
                        "description": "Gets the celebrity recognition results for a Rekognition Video analysis started by StartCelebrityRecognition."
                    },
                    "GetContentModeration": {
                        "access-level": "read",
                        "actions": "GetContentModeration",
                        "description": "Gets the content moderation analysis results for a Rekognition Video analysis started by StartContentModeration."
                    },
                    "GetFaceDetection": {
                        "access-level": "read",
                        "actions": "GetFaceDetection",
                        "description": "Gets face detection results for a Rekognition Video analysis started by StartFaceDetection."
                    },
                    "GetFaceSearch": {
                        "access-level": "read",
                        "actions": "GetFaceSearch",
                        "description": "Gets the face search results for Rekognition Video face search started by StartFaceSearch."
                    },
                    "GetLabelDetection": {
                        "access-level": "read",
                        "actions": "GetLabelDetection",
                        "description": "Gets the label detection results of a Rekognition Video analysis started by StartLabelDetection."
                    },
                    "GetPersonTracking": {
                        "access-level": "read",
                        "actions": "GetPersonTracking",
                        "description": "Gets information about people detected within a video."
                    },
                    "ListCollections": {
                        "access-level": "read",
                        "actions": "ListCollections",
                        "description": "Returns a list of collection IDs in your account.",
                        "resource-types": "collection*"
                    },
                    "ListFaces": {
                        "access-level": "read",
                        "actions": "ListFaces",
                        "description": "Returns metadata for faces in the specified collection.",
                        "resource-types": "collection*"
                    },
                    "RecognizeCelebrities": {
                        "access-level": "read",
                        "actions": "RecognizeCelebrities",
                        "description": "Returns an array of celebrities recognized in the input image."
                    },
                    "SearchFaces": {
                        "access-level": "read",
                        "actions": "SearchFaces",
                        "description": "For a given input face ID, searches the specified collection for matching faces.",
                        "resource-types": "collection*"
                    },
                    "SearchFacesByImage": {
                        "access-level": "read",
                        "actions": "SearchFacesByImage",
                        "description": "For a given input image, first detects the largest face in the image, and then searches the specified collection for matching faces.",
                        "resource-types": "collection*"
                    }
                },
                "write": {
                    "CreateCollection": {
                        "access-level": "write",
                        "actions": "CreateCollection",
                        "description": "Creates a collection in an AWS region. You can then add faces to the collection using the IndexFaces API.",
                        "resource-types": "collection*"
                    },
                    "CreateStreamProcessor": {
                        "access-level": "write",
                        "actions": "CreateStreamProcessor",
                        "description": "Creates an Amazon Rekognition stream processor that you can use to detect and recognize faces in a streaming video.",
                        "resource-types": "collection*"
                    },
                    "DeleteCollection": {
                        "access-level": "write",
                        "actions": "DeleteCollection",
                        "description": "Deletes the specified collection. Note that this operation removes all faces in the collection.",
                        "resource-types": "collection*"
                    },
                    "DeleteFaces": {
                        "access-level": "write",
                        "actions": "DeleteFaces",
                        "description": "Deletes faces from a collection.",
                        "resource-types": "collection*"
                    },
                    "DeleteStreamProcessor": {
                        "access-level": "write",
                        "actions": "DeleteStreamProcessor",
                        "description": "Deletes the stream processor identified by Name.",
                        "resource-types": "streamprocessor*"
                    },
                    "IndexFaces": {
                        "access-level": "write",
                        "actions": "IndexFaces",
                        "description": "Detects faces in the input image and adds them to the specified collection.",
                        "resource-types": "collection*"
                    },
                    "StartCelebrityRecognition": {
                        "access-level": "write",
                        "actions": "StartCelebrityRecognition",
                        "description": "Starts asynchronous recognition of celebrities in a video."
                    },
                    "StartContentModeration": {
                        "access-level": "write",
                        "actions": "StartContentModeration",
                        "description": "Starts asynchronous detection of explicit or suggestive adult content in a video."
                    },
                    "StartFaceDetection": {
                        "access-level": "write",
                        "actions": "StartFaceDetection",
                        "description": "Starts asynchronous detection of faces in a video."
                    },
                    "StartFaceSearch": {
                        "access-level": "write",
                        "actions": "StartFaceSearch",
                        "description": "Starts the asynchronous search for faces in a collection that match the faces of persons detected in a video.",
                        "resource-types": "collection*"
                    },
                    "StartLabelDetection": {
                        "access-level": "write",
                        "actions": "StartLabelDetection",
                        "description": "Starts asynchronous detection of labels in a video."
                    },
                    "StartPersonTracking": {
                        "access-level": "write",
                        "actions": "StartPersonTracking",
                        "description": "Starts the asynchronous tracking of persons in a video."
                    },
                    "StartStreamProcessor": {
                        "access-level": "write",
                        "actions": "StartStreamProcessor",
                        "description": "Starts processing a stream processor.",
                        "resource-types": "streamprocessor*"
                    },
                    "StopStreamProcessor": {
                        "access-level": "write",
                        "actions": "StopStreamProcessor",
                        "description": "Stops a running stream processor that was created by CreateStreamProcessor.",
                        "resource-types": "streamprocessor*"
                    },
                    "streamprocessor*": {
                        "access-level": "write",
                        "actions": "streamprocessor*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "collection": {
                    "arn": "arn:${Partition}:rekognition:${Region}:${Account}:collection/${CollectionId}",
                    "resource-types": "collection"
                },
                "streamprocessor": {
                    "arn": "arn:${Partition}:rekognition:${Region}:${Account}:streamprocessor/${StreamprocessorId}",
                    "resource-types": "streamprocessor"
                }
            }
        },
        "resourceaccessmanager": {
            "actions": {
                "list": {
                    "ListPrincipals": {
                        "access-level": "list",
                        "actions": "ListPrincipals",
                        "description": "Retrieve list of principals for a specified resource",
                        "resource-types": "resource*"
                    },
                    "ListResources": {
                        "access-level": "list",
                        "actions": "ListResources",
                        "description": "Retrieve list of resources for a specified principal",
                        "resource-types": "principal*"
                    },
                    "principal": {
                        "access-level": "list",
                        "actions": "principal",
                        "condition-keys": [
                            "ram:Principals"
                        ]
                    },
                    "resource": {
                        "access-level": "list",
                        "actions": "resource",
                        "condition-keys": [
                            "ram:ResourceArns"
                        ]
                    }
                },
                "read": {
                    "GetResourceShareAssociations": {
                        "access-level": "read",
                        "actions": "GetResourceShareAssociations",
                        "condition-keys": [
                            "ram:ResourceShareNames"
                        ],
                        "description": "Get a set of resource share associations from a provided list or with a specified status of the specified type",
                        "resource-types": "resource-share"
                    },
                    "GetResourceShareInvitations": {
                        "access-level": "read",
                        "actions": "GetResourceShareInvitations",
                        "description": "Get resource share invitations by the specified invitation arn or those for the resource share",
                        "resource-types": "resource-share"
                    },
                    "GetResourceShares": {
                        "access-level": "read",
                        "actions": "GetResourceShares",
                        "condition-keys": [
                            "ram:ResourceShareNames"
                        ],
                        "description": "Get a set of resource shares from a provided list or with a specified status",
                        "resource-types": "resource-share"
                    },
                    "resource-share-invitation": {
                        "access-level": "read",
                        "actions": "resource-share-invitation",
                        "condition-keys": [
                            "ram:ShareOwnerAccountIds"
                        ]
                    }
                },
                "write": {
                    "AcceptResourceShareInvitation": {
                        "access-level": "write",
                        "actions": "AcceptResourceShareInvitation",
                        "condition-keys": [
                            "ram:ShareOwnerAccountIds"
                        ],
                        "description": "Accept the specified resource share invitation",
                        "resource-types": "resource-share-invitation*"
                    },
                    "AssociateResourceShare": {
                        "access-level": "write",
                        "actions": "AssociateResourceShare",
                        "condition-keys": [
                            "ram:AllowsExternalPrincipals"
                        ],
                        "description": "Associates resource(s) and/or principal(s) to a resource share",
                        "resource-types": "resource-share*"
                    },
                    "CreateResourceShare": {
                        "access-level": "write",
                        "actions": "CreateResourceShare",
                        "condition-keys": [
                            "ram:Principals"
                        ],
                        "description": "Create resource share with provided resource(s) and/or principal(s)",
                        "resource-types": "principal"
                    },
                    "DeleteResourceShare": {
                        "access-level": "write",
                        "actions": "DeleteResourceShare",
                        "condition-keys": [
                            "ram:AllowsExternalPrincipals"
                        ],
                        "description": "Delete resource share",
                        "resource-types": "resource-share*"
                    },
                    "DisassociateResourceShare": {
                        "access-level": "write",
                        "actions": "DisassociateResourceShare",
                        "condition-keys": [
                            "ram:AllowsExternalPrincipals"
                        ],
                        "description": "Disassociates resource(s) and/or principal(s) from a resource share",
                        "resource-types": "resource-share*"
                    },
                    "EnableSharingWithAwsOrganization": {
                        "access-level": "write",
                        "actions": "EnableSharingWithAwsOrganization",
                        "description": "Grants permission to access customer\\'s organization and create a SLR in the customer\\'s account."
                    },
                    "RejectResourceShareInvitation": {
                        "access-level": "write",
                        "actions": "RejectResourceShareInvitation",
                        "condition-keys": [
                            "ram:ShareOwnerAccountIds"
                        ],
                        "description": "Reject the specified resource share invitation",
                        "resource-types": "resource-share-invitation*"
                    },
                    "TagResource": {
                        "access-level": "write",
                        "actions": "TagResource",
                        "description": "Tag the specified resources share",
                        "resource-types": "resource-share*"
                    },
                    "UntagResource": {
                        "access-level": "write",
                        "actions": "UntagResource",
                        "description": "Untag the specified resource share",
                        "resource-types": "resource-share*"
                    },
                    "UpdateResourceShare": {
                        "access-level": "write",
                        "actions": "UpdateResourceShare",
                        "condition-keys": [
                            "ram:AllowsExternalPrincipals",
                            "ram:ResourceShareNames"
                        ],
                        "description": "Update attributes of the resource share",
                        "resource-types": "resource-share*"
                    },
                    "principal": {
                        "access-level": "write",
                        "actions": "principal",
                        "condition-keys": [
                            "ram:Principals"
                        ]
                    },
                    "resource": {
                        "access-level": "write",
                        "actions": "resource",
                        "condition-keys": [
                            "ram:ResourceType",
                            "ram:ResourceArns",
                            "ram:ResourceShareNames"
                        ]
                    },
                    "resource-share": {
                        "access-level": "write",
                        "actions": "resource-share",
                        "condition-keys": [
                            "ram:ResourceType",
                            "ram:ResourceArns"
                        ]
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "principal": {
                    "arn": "arn:${Partition}:iam::${Account}:user/${User}",
                    "resource-types": "principal"
                },
                "resource": {
                    "arn": "arn:${Partition}:${Service}:${Region}:#{Account}:${ResourceType}/${ResourcePath}",
                    "resource-types": "resource"
                },
                "resource-share": {
                    "arn": "arn:${Partition}:ram:${Region}:${Account}:resource-share/${ResourcePath}",
                    "resource-types": "resource-share"
                },
                "resource-share-invitation": {
                    "arn": "arn:${Partition}:ram:${Region}:${Account}:resource-share-invitation/${ResourcePath}",
                    "resource-types": "resource-share-invitation"
                }
            }
        },
        "resourcegroups": {
            "actions": {
                "list": {
                    "ListGroupResources": {
                        "access-level": "list",
                        "actions": "ListGroupResources",
                        "description": "Lists the resources that are member of a specified resource group"
                    },
                    "ListGroups": {
                        "access-level": "list",
                        "actions": "ListGroups",
                        "description": "Lists all resource groups"
                    },
                    "SearchResources": {
                        "access-level": "list",
                        "actions": "SearchResources",
                        "description": "Returns a list of AWS resource identifiers matching the given query"
                    }
                },
                "read": {
                    "GetGroup": {
                        "access-level": "read",
                        "actions": "GetGroup",
                        "description": "Gets information of a specified resource group"
                    },
                    "GetGroupQuery": {
                        "access-level": "read",
                        "actions": "GetGroupQuery",
                        "description": "Gets the query associated with a specified resource group"
                    },
                    "GetTags": {
                        "access-level": "read",
                        "actions": "GetTags",
                        "description": "Gets the tags associated with a specified resource group"
                    }
                },
                "tagging": {
                    "CreateGroup": {
                        "access-level": "tagging",
                        "actions": "CreateGroup",
                        "description": "Creates a group with a specified name, description, and resource query."
                    },
                    "Tag": {
                        "access-level": "tagging",
                        "actions": "Tag",
                        "description": "Tags a specified resource group"
                    },
                    "Untag": {
                        "access-level": "tagging",
                        "actions": "Untag",
                        "description": "Removes tags associated with a specified resource group"
                    }
                },
                "write": {
                    "DeleteGroup": {
                        "access-level": "write",
                        "actions": "DeleteGroup",
                        "description": "Deletes a specified resource group"
                    },
                    "UpdateGroup": {
                        "access-level": "write",
                        "actions": "UpdateGroup",
                        "description": "Updates a specified resource group"
                    },
                    "UpdateGroupQuery": {
                        "access-level": "write",
                        "actions": "UpdateGroupQuery",
                        "description": "Updates the query associated with a specified resource group"
                    }
                }
            }
        },
        "resourcegrouptaggingapi": {
            "actions": {
                "read": {
                    "GetResources": {
                        "access-level": "read",
                        "actions": "GetResources",
                        "description": "Get tagged AWS resources that match the given tag filters"
                    },
                    "GetTagKeys": {
                        "access-level": "read",
                        "actions": "GetTagKeys",
                        "description": "Get all tagKeys for the account in the specific region"
                    },
                    "GetTagValues": {
                        "access-level": "read",
                        "actions": "GetTagValues",
                        "description": "Get all tagValues for the account in the specific region"
                    }
                },
                "tagging": {
                    "TagResources": {
                        "access-level": "tagging",
                        "actions": "TagResources",
                        "description": "Add tags to AWS resources"
                    },
                    "UntagResources": {
                        "access-level": "tagging",
                        "actions": "UntagResources",
                        "description": "Remove tags from AWS resources"
                    }
                }
            }
        },
        "resources": {},
        "robomaker": {
            "actions": {
                "list": {
                    "ListDeploymentJobs": {
                        "access-level": "list",
                        "actions": "ListDeploymentJobs",
                        "description": "List deployment jobs"
                    },
                    "ListFleets": {
                        "access-level": "list",
                        "actions": "ListFleets",
                        "description": "List fleets"
                    },
                    "ListRobotApplications": {
                        "access-level": "list",
                        "actions": "ListRobotApplications",
                        "description": "List robot applications"
                    },
                    "ListRobots": {
                        "access-level": "list",
                        "actions": "ListRobots",
                        "description": "List robots"
                    },
                    "ListSimulationApplications": {
                        "access-level": "list",
                        "actions": "ListSimulationApplications",
                        "description": "List robot applications"
                    },
                    "ListSimulationJobs": {
                        "access-level": "list",
                        "actions": "ListSimulationJobs",
                        "description": "List simulation jobs"
                    }
                },
                "read": {
                    "BatchDescribeSimulationJob": {
                        "access-level": "read",
                        "actions": "BatchDescribeSimulationJob",
                        "description": "Describe multiple simulation jobs"
                    },
                    "DescribeDeploymentJob": {
                        "access-level": "read",
                        "actions": "DescribeDeploymentJob",
                        "description": "Describe a deployment job"
                    },
                    "DescribeFleet": {
                        "access-level": "read",
                        "actions": "DescribeFleet",
                        "description": "Describe a fleet"
                    },
                    "DescribeRobot": {
                        "access-level": "read",
                        "actions": "DescribeRobot",
                        "description": "Describe a robot"
                    },
                    "DescribeRobotApplication": {
                        "access-level": "read",
                        "actions": "DescribeRobotApplication",
                        "description": "Describe a robot application"
                    },
                    "DescribeSimulationApplication": {
                        "access-level": "read",
                        "actions": "DescribeSimulationApplication",
                        "description": "Describe a robot application"
                    },
                    "DescribeSimulationJob": {
                        "access-level": "read",
                        "actions": "DescribeSimulationJob",
                        "description": "Describe a simulation job"
                    }
                },
                "write": {
                    "CancelSimulationJob": {
                        "access-level": "write",
                        "actions": "CancelSimulationJob",
                        "description": "End a simulation job"
                    },
                    "CreateDeploymentJob": {
                        "access-level": "write",
                        "actions": "CreateDeploymentJob",
                        "dependent-actions": "iam:CreateServiceLinkedRole",
                        "description": "Create a deployment job"
                    },
                    "CreateFleet": {
                        "access-level": "write",
                        "actions": "CreateFleet",
                        "description": "Create a fleet that represents a logical group of robots running the same robot application"
                    },
                    "CreateRobot": {
                        "access-level": "write",
                        "actions": "CreateRobot",
                        "dependent-actions": "iam:CreateServiceLinkedRole",
                        "description": "Create a robot that can be registered to a fleet"
                    },
                    "CreateRobotApplication": {
                        "access-level": "write",
                        "actions": "CreateRobotApplication",
                        "description": "Create a robot application"
                    },
                    "CreateRobotApplicationVersion": {
                        "access-level": "write",
                        "actions": "CreateRobotApplicationVersion",
                        "dependent-actions": "s3:GetObject",
                        "description": "Create a snapshot of a robot application"
                    },
                    "CreateSimulationApplication": {
                        "access-level": "write",
                        "actions": "CreateSimulationApplication",
                        "description": "Create a robot application"
                    },
                    "CreateSimulationApplicationVersion": {
                        "access-level": "write",
                        "actions": "CreateSimulationApplicationVersion",
                        "dependent-actions": "s3:GetObject",
                        "description": "Create a snapshot of a robot application"
                    },
                    "CreateSimulationJob": {
                        "access-level": "write",
                        "actions": "CreateSimulationJob",
                        "dependent-actions": "iam:CreateServiceLinkedRole",
                        "description": "Create a simulation job"
                    },
                    "DeleteRobot": {
                        "access-level": "write",
                        "actions": "DeleteRobot",
                        "description": "Delete a robot"
                    },
                    "DeleteRobotApplication": {
                        "access-level": "write",
                        "actions": "DeleteRobotApplication",
                        "description": "Delete a robot application"
                    },
                    "DeleteSimulationApplication": {
                        "access-level": "write",
                        "actions": "DeleteSimulationApplication",
                        "description": "Delete a robot application"
                    },
                    "DeregisterRobot": {
                        "access-level": "write",
                        "actions": "DeregisterRobot",
                        "description": "Deregister a robot from a fleet"
                    },
                    "RegisterRobot": {
                        "access-level": "write",
                        "actions": "RegisterRobot",
                        "description": "Register a robot to a fleet"
                    },
                    "RestartSimulationJob": {
                        "access-level": "write",
                        "actions": "RestartSimulationJob",
                        "description": "Restart a running simulation job"
                    },
                    "SyncDeploymentJob": {
                        "access-level": "write",
                        "actions": "SyncDeploymentJob",
                        "dependent-actions": "iam:CreateServiceLinkedRole",
                        "description": "Ensures the most recently deployed robot application is deployed to all robots in the fleet"
                    },
                    "UpdateRobotApplication": {
                        "access-level": "write",
                        "actions": "UpdateRobotApplication",
                        "description": "Update a robot application"
                    },
                    "UpdateSimulationApplication": {
                        "access-level": "write",
                        "actions": "UpdateSimulationApplication",
                        "description": "Update a robot application"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "deploymentfleet": {
                    "arn": "arn:${Partition}:robomaker:${Region}:${Account}:deployment-fleet/${FleetName}/${CreatedOnEpoch}",
                    "resource-types": "deploymentFleet"
                },
                "deploymentjob": {
                    "arn": "arn:${Partition}:robomaker:${Region}:${Account}:deployment-job/${DeploymentJobId}",
                    "resource-types": "deploymentJob"
                },
                "robot": {
                    "arn": "arn:${Partition}:robomaker:${Region}:${Account}:robot/${RobotName}/${CreatedOnEpoch}",
                    "resource-types": "robot"
                },
                "robotapplication": {
                    "arn": "arn:${Partition}:robomaker:${Region}:${Account}:robot-application/${ApplicationName}/${CreatedOnEpoch}",
                    "resource-types": "robotApplication"
                },
                "simulationapplication": {
                    "arn": "arn:${Partition}:robomaker:${Region}:${Account}:simulation-application/${ApplicationName}/${CreatedOnEpoch}",
                    "resource-types": "simulationApplication"
                },
                "simulationjob": {
                    "arn": "arn:${Partition}:robomaker:${Region}:${Account}:simulation-job/${SimulationJobId}",
                    "resource-types": "simulationJob"
                }
            }
        },
        "route53": {
            "actions": {
                "hostedzone-hostedzone": {
                    "SCENARIO: Disassociate by the VPC owner": {
                        "access-level": "hostedzone-hostedzone",
                        "actions": "SCENARIO: Disassociate by the VPC owner"
                    },
                    "SCENARIO: Disassociate by the hosted zone owner": {
                        "access-level": "hostedzone-hostedzone",
                        "actions": "SCENARIO: Disassociate by the hosted zone owner"
                    }
                },
                "list": {
                    "GetChange": {
                        "access-level": "list",
                        "actions": "GetChange",
                        "description": "Grants permission to get the current status of a request to create, update, or delete one or more records",
                        "resource-types": "change*"
                    },
                    "GetCheckerIpRanges": {
                        "access-level": "list",
                        "actions": "GetCheckerIpRanges",
                        "description": "Grants permission to get a list of the IP ranges that are used by Route 53 health checkers to check the health of your resources"
                    },
                    "GetGeoLocation": {
                        "access-level": "list",
                        "actions": "GetGeoLocation",
                        "description": "Grants permission to get information about whether a specified geographic location is supported for Route 53 geolocation records"
                    },
                    "GetHealthCheckCount": {
                        "access-level": "list",
                        "actions": "GetHealthCheckCount",
                        "description": "Grants permission to get the number of health checks that are associated with the current AWS account"
                    },
                    "GetHealthCheckLastFailureReason": {
                        "access-level": "list",
                        "actions": "GetHealthCheckLastFailureReason",
                        "description": "Grants permission to get the reason that a specified health check failed most recently",
                        "resource-types": "healthcheck*"
                    },
                    "GetHealthCheckStatus": {
                        "access-level": "list",
                        "actions": "GetHealthCheckStatus",
                        "description": "Grants permission to get the status of a specified health check",
                        "resource-types": "healthcheck*"
                    },
                    "GetHostedZone": {
                        "access-level": "list",
                        "actions": "GetHostedZone",
                        "description": "Grants permission to get information about a specified hosted zone including the four name servers that Route 53 assigned to the hosted zone",
                        "resource-types": "hostedzone*"
                    },
                    "GetHostedZoneCount": {
                        "access-level": "list",
                        "actions": "GetHostedZoneCount",
                        "description": "Grants permission to get the number of hosted zones that are associated with the current AWS account"
                    },
                    "GetReusableDelegationSet": {
                        "access-level": "list",
                        "actions": "GetReusableDelegationSet",
                        "description": "Grants permission to get information about a specified reusable delegation set, including the four name servers that are assigned to the delegation set",
                        "resource-types": "delegationset*"
                    },
                    "ListGeoLocations": {
                        "access-level": "list",
                        "actions": "ListGeoLocations",
                        "description": "Grants permission to get a list of geographic locations that Route 53 supports for geolocation"
                    },
                    "ListHealthChecks": {
                        "access-level": "list",
                        "actions": "ListHealthChecks",
                        "description": "Grants permission to get a list of the health checks that are associated with the current AWS account"
                    },
                    "ListHostedZones": {
                        "access-level": "list",
                        "actions": "ListHostedZones",
                        "description": "Grants permission to get a list of the public and private hosted zones that are associated with the current AWS account"
                    },
                    "ListHostedZonesByName": {
                        "access-level": "list",
                        "actions": "ListHostedZonesByName",
                        "description": "Grants permission to get a list of your hosted zones in lexicographic order. Hosted zones are sorted by name with the labels reversed, for example, com.example.www."
                    },
                    "ListQueryLoggingConfigs": {
                        "access-level": "list",
                        "actions": "ListQueryLoggingConfigs",
                        "description": "Grants permission to list the configurations for DNS query logging that are associated with the current AWS account or the configuration that is associated with a specified hosted zone.",
                        "resource-types": "queryloggingconfig*"
                    },
                    "ListResourceRecordSets": {
                        "access-level": "list",
                        "actions": "ListResourceRecordSets",
                        "description": "Grants permission to list the records in a specified hosted zone",
                        "resource-types": "hostedzone*"
                    },
                    "ListReusableDelegationSets": {
                        "access-level": "list",
                        "actions": "ListReusableDelegationSets",
                        "description": "Grants permission to list the reusable delegation sets that are associated with the current AWS account."
                    }
                },
                "read": {
                    "GetAccountLimit": {
                        "access-level": "read",
                        "actions": "GetAccountLimit",
                        "description": "Grants permission to get the specified limit for the current account, for example, the maximum number of health checks that you can create using the account"
                    },
                    "GetHealthCheck": {
                        "access-level": "read",
                        "actions": "GetHealthCheck",
                        "description": "Grants permission to get information about a specified health check",
                        "resource-types": "healthcheck*"
                    },
                    "GetHostedZoneLimit": {
                        "access-level": "read",
                        "actions": "GetHostedZoneLimit",
                        "description": "Grants permission to get the specified limit for a specified hosted zone",
                        "resource-types": "hostedzone*"
                    },
                    "GetQueryLoggingConfig": {
                        "access-level": "read",
                        "actions": "GetQueryLoggingConfig",
                        "description": "Grants permission to get information about a specified configuration for DNS query logging",
                        "resource-types": "queryloggingconfig*"
                    },
                    "GetReusableDelegationSetLimit": {
                        "access-level": "read",
                        "actions": "GetReusableDelegationSetLimit",
                        "description": "Grants permission to get the maximum number of hosted zones that you can associate with the specified reusable delegation set",
                        "resource-types": "delegationset*"
                    },
                    "GetTrafficPolicy": {
                        "access-level": "read",
                        "actions": "GetTrafficPolicy",
                        "description": "Grants permission to get information about a specified traffic policy version",
                        "resource-types": "trafficpolicy*"
                    },
                    "GetTrafficPolicyInstance": {
                        "access-level": "read",
                        "actions": "GetTrafficPolicyInstance",
                        "description": "Grants permission to get information about a specified traffic policy instance",
                        "resource-types": "trafficpolicyinstance*"
                    },
                    "GetTrafficPolicyInstanceCount": {
                        "access-level": "read",
                        "actions": "GetTrafficPolicyInstanceCount",
                        "description": "Grants permission to get the number of traffic policy instances that are associated with the current AWS account"
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "Grants permission to list tags for one health check or hosted zone",
                        "resource-types": "healthcheck"
                    },
                    "ListTagsForResources": {
                        "access-level": "read",
                        "actions": "ListTagsForResources",
                        "description": "Grants permission to list tags for up to 10 health checks or hosted zones",
                        "resource-types": "healthcheck"
                    },
                    "ListTrafficPolicies": {
                        "access-level": "read",
                        "actions": "ListTrafficPolicies",
                        "description": "Grants permission to get information about the latest version for every traffic policy that is associated with the current AWS account. Policies are listed in the order in which they were created."
                    },
                    "ListTrafficPolicyInstances": {
                        "access-level": "read",
                        "actions": "ListTrafficPolicyInstances",
                        "description": "Grants permission to get information about the traffic policy instances that you created by using the current AWS account"
                    },
                    "ListTrafficPolicyInstancesByHostedZone": {
                        "access-level": "read",
                        "actions": "ListTrafficPolicyInstancesByHostedZone",
                        "description": "Grants permission to get information about the traffic policy instances that you created in a specified hosted zone",
                        "resource-types": "hostedzone*"
                    },
                    "ListTrafficPolicyInstancesByPolicy": {
                        "access-level": "read",
                        "actions": "ListTrafficPolicyInstancesByPolicy",
                        "description": "Grants permission to get information about the traffic policy instances that you created using a specified traffic policy version",
                        "resource-types": "trafficpolicy*"
                    },
                    "ListTrafficPolicyVersions": {
                        "access-level": "read",
                        "actions": "ListTrafficPolicyVersions",
                        "description": "Grants permission to get information about all the versions for a specified traffic policy",
                        "resource-types": "trafficpolicy*"
                    },
                    "ListVPCAssociationAuthorizations": {
                        "access-level": "read",
                        "actions": "ListVPCAssociationAuthorizations",
                        "description": "Grants permission to get a list of the VPCs that were created by other accounts and that can be associated with a specified hosted zone",
                        "resource-types": "hostedzone*"
                    },
                    "TestDNSAnswer": {
                        "access-level": "read",
                        "actions": "TestDNSAnswer",
                        "description": "Grants permission to get the value that Route 53 returns in response to a DNS query for a specified record name and type"
                    },
                    "hostedzone": {
                        "access-level": "read",
                        "actions": "hostedzone"
                    }
                },
                "tagging": {
                    "ChangeTagsForResource": {
                        "access-level": "tagging",
                        "actions": "ChangeTagsForResource",
                        "description": "Grants permission to add, edit, or delete tags for a health check or a hosted zone",
                        "resource-types": "healthcheck*"
                    },
                    "hostedzone*": {
                        "access-level": "tagging",
                        "actions": "hostedzone*"
                    }
                },
                "write": {
                    "AssociateVPCWithHostedZone": {
                        "access-level": "write",
                        "actions": "AssociateVPCWithHostedZone",
                        "description": "Grants permission to associate an additional Amazon VPC with a private hosted zone",
                        "resource-types": "hostedzone*"
                    },
                    "ChangeResourceRecordSets": {
                        "access-level": "write",
                        "actions": "ChangeResourceRecordSets",
                        "description": "Grants permission to create, update, or delete a record, which contains authoritative DNS information for a specified domain or subdomain name",
                        "resource-types": "hostedzone*"
                    },
                    "CreateHealthCheck": {
                        "access-level": "write",
                        "actions": "CreateHealthCheck",
                        "description": "Grants permission to create a new health check, which monitors the health and performance of your web applications, web servers, and other resources",
                        "resource-types": "healthcheck*"
                    },
                    "CreateHostedZone": {
                        "access-level": "write",
                        "actions": "CreateHostedZone",
                        "description": "Grants permission to create a public hosted zone, which you use to specify how the Domain Name System (DNS) routes traffic on the Internet for a domain, such as example.com, and its subdomains"
                    },
                    "CreateQueryLoggingConfig": {
                        "access-level": "write",
                        "actions": "CreateQueryLoggingConfig",
                        "description": "Grants permission to create a configuration for DNS query logging",
                        "resource-types": "hostedzone*"
                    },
                    "CreateReusableDelegationSet": {
                        "access-level": "write",
                        "actions": "CreateReusableDelegationSet",
                        "description": "Grants permission to create a delegation set (a group of four name servers) that can be reused by multiple hosted zones"
                    },
                    "CreateTrafficPolicy": {
                        "access-level": "write",
                        "actions": "CreateTrafficPolicy",
                        "description": "Grants permission to create a traffic policy, which you use to create multiple DNS records for one domain name (such as example.com) or one subdomain name (such as www.example.com)"
                    },
                    "CreateTrafficPolicyInstance": {
                        "access-level": "write",
                        "actions": "CreateTrafficPolicyInstance",
                        "description": "Grants permission to create records in a specified hosted zone based on the settings in a specified traffic policy version",
                        "resource-types": "hostedzone*"
                    },
                    "CreateTrafficPolicyVersion": {
                        "access-level": "write",
                        "actions": "CreateTrafficPolicyVersion",
                        "description": "Grants permission to create a new version of an existing traffic policy",
                        "resource-types": "trafficpolicy*"
                    },
                    "CreateVPCAssociationAuthorization": {
                        "access-level": "write",
                        "actions": "CreateVPCAssociationAuthorization",
                        "description": "Grants permission to authorize the AWS account that created a specified VPC to submit an AssociateVPCWithHostedZone request, which associates the VPC with a specified hosted zone that was created by a different account",
                        "resource-types": "hostedzone*"
                    },
                    "DeleteHealthCheck": {
                        "access-level": "write",
                        "actions": "DeleteHealthCheck",
                        "description": "Grants permission to delete a health check",
                        "resource-types": "healthcheck*"
                    },
                    "DeleteHostedZone": {
                        "access-level": "write",
                        "actions": "DeleteHostedZone",
                        "description": "Grants permission to delete a hosted zone",
                        "resource-types": "hostedzone*"
                    },
                    "DeleteQueryLoggingConfig": {
                        "access-level": "write",
                        "actions": "DeleteQueryLoggingConfig",
                        "description": "Grants permission to delete a configuration for DNS query logging",
                        "resource-types": "queryloggingconfig*"
                    },
                    "DeleteReusableDelegationSet": {
                        "access-level": "write",
                        "actions": "DeleteReusableDelegationSet",
                        "description": "Grants permission to delete a reusable delegation set",
                        "resource-types": "delegationset*"
                    },
                    "DeleteTrafficPolicy": {
                        "access-level": "write",
                        "actions": "DeleteTrafficPolicy",
                        "description": "Grants permission to delete a traffic policy",
                        "resource-types": "trafficpolicy*"
                    },
                    "DeleteTrafficPolicyInstance": {
                        "access-level": "write",
                        "actions": "DeleteTrafficPolicyInstance",
                        "description": "Grants permission to delete a traffic policy instance and all the records that Route 53 created when you created the instance",
                        "resource-types": "trafficpolicyinstance*"
                    },
                    "DeleteVPCAssociationAuthorization": {
                        "access-level": "write",
                        "actions": "DeleteVPCAssociationAuthorization",
                        "description": "Grants permission to remove authorization for associating an Amazon Virtual Private Cloud with a Route 53 private hosted zone",
                        "resource-types": "hostedzone*"
                    },
                    "DisassociateVPCFromHostedZone": {
                        "access-level": "write",
                        "actions": "DisassociateVPCFromHostedZone",
                        "description": "Grants permission to disassociate an Amazon Virtual Private Cloud from a Route 53 private hosted zone"
                    },
                    "UpdateHealthCheck": {
                        "access-level": "write",
                        "actions": "UpdateHealthCheck",
                        "description": "Grants permission to update an existing health check",
                        "resource-types": "healthcheck*"
                    },
                    "UpdateHostedZoneComment": {
                        "access-level": "write",
                        "actions": "UpdateHostedZoneComment",
                        "description": "Grants permission to update the comment for a specified hosted zone",
                        "resource-types": "hostedzone*"
                    },
                    "UpdateTrafficPolicyComment": {
                        "access-level": "write",
                        "actions": "UpdateTrafficPolicyComment",
                        "description": "Grants permission to update the comment for a specified traffic policy version",
                        "resource-types": "trafficpolicy*"
                    },
                    "UpdateTrafficPolicyInstance": {
                        "access-level": "write",
                        "actions": "UpdateTrafficPolicyInstance",
                        "description": "Grants permission to update the records in a specified hosted zone that were created based on the settings in a specified traffic policy version",
                        "resource-types": "trafficpolicyinstance*"
                    },
                    "trafficpolicy*": {
                        "access-level": "write",
                        "actions": "trafficpolicy*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "change": {
                    "arn": "arn:${Partition}:route53:::change/${Id}",
                    "resource-types": "change"
                },
                "delegationset": {
                    "arn": "arn:${Partition}:route53:::delegationset/${Id}",
                    "resource-types": "delegationset"
                },
                "healthcheck": {
                    "arn": "arn:${Partition}:route53:::healthcheck/${Id}",
                    "resource-types": "healthcheck"
                },
                "hostedzone": {
                    "arn": "arn:${Partition}:route53:::hostedzone/${Id}",
                    "resource-types": "hostedzone"
                },
                "queryloggingconfig": {
                    "arn": "arn:${Partition}:route53:::queryloggingconfig/${Id}",
                    "resource-types": "queryloggingconfig"
                },
                "trafficpolicy": {
                    "arn": "arn:${Partition}:route53:::trafficpolicy/${Id}",
                    "resource-types": "trafficpolicy"
                },
                "trafficpolicyinstance": {
                    "arn": "arn:${Partition}:route53:::trafficpolicyinstance/${Id}",
                    "resource-types": "trafficpolicyinstance"
                }
            }
        },
        "route53domains": {
            "actions": {
                "list": {
                    "ListDomains": {
                        "access-level": "list",
                        "actions": "ListDomains",
                        "description": "Grants permission to list all the domain names registered with Amazon Route 53 for the current AWS account"
                    },
                    "ListOperations": {
                        "access-level": "list",
                        "actions": "ListOperations",
                        "description": "Grants permission to list the operation IDs of operations that are not yet complete"
                    },
                    "ListTagsForDomain": {
                        "access-level": "list",
                        "actions": "ListTagsForDomain",
                        "description": "Grants permission to list all the tags that are associated with the specified domain"
                    }
                },
                "read": {
                    "CheckDomainAvailability": {
                        "access-level": "read",
                        "actions": "CheckDomainAvailability",
                        "description": "Grants permission to check the availability of one domain name"
                    },
                    "GetContactReachabilityStatus": {
                        "access-level": "read",
                        "actions": "GetContactReachabilityStatus",
                        "description": "For operations that require confirmation that the email address for the registrant contact is valid, such as registering a new domain, grants permission to get information about whether the registrant contact has responded"
                    },
                    "GetDomainDetail": {
                        "access-level": "read",
                        "actions": "GetDomainDetail",
                        "description": "Grants permission to get detailed information about a domain"
                    },
                    "GetDomainSuggestions": {
                        "access-level": "read",
                        "actions": "GetDomainSuggestions",
                        "description": "Grants permission to get a list of suggested domain names given a string, which can either be a domain name or simply a word or phrase (without spaces)"
                    },
                    "GetOperationDetail": {
                        "access-level": "read",
                        "actions": "GetOperationDetail",
                        "description": "Grants permission to get the current status of an operation that is not completed"
                    },
                    "ViewBilling": {
                        "access-level": "read",
                        "actions": "ViewBilling",
                        "description": "Grants permission to get all the domain-related billing records for the current AWS account for a specified period"
                    }
                },
                "tagging": {
                    "DeleteTagsForDomain": {
                        "access-level": "tagging",
                        "actions": "DeleteTagsForDomain",
                        "description": "Grants permission to delete the specified tags for a domain"
                    },
                    "UpdateTagsForDomain": {
                        "access-level": "tagging",
                        "actions": "UpdateTagsForDomain",
                        "description": "Grants permission to add or update tags for a specified domain"
                    }
                },
                "write": {
                    "DisableDomainAutoRenew": {
                        "access-level": "write",
                        "actions": "DisableDomainAutoRenew",
                        "description": "Grants permission to configure Amazon Route 53 to automatically renew the specified domain before the domain registration expires"
                    },
                    "DisableDomainTransferLock": {
                        "access-level": "write",
                        "actions": "DisableDomainTransferLock",
                        "description": "Grants permission to remove the transfer lock on the domain (specifically the clientTransferProhibited status) to allow domain transfers"
                    },
                    "EnableDomainAutoRenew": {
                        "access-level": "write",
                        "actions": "EnableDomainAutoRenew",
                        "description": "Grants permission to configure Amazon Route 53 to automatically renew the specified domain before the domain registration expires"
                    },
                    "EnableDomainTransferLock": {
                        "access-level": "write",
                        "actions": "EnableDomainTransferLock",
                        "description": "Grants permission to set the transfer lock on the domain (specifically the clientTransferProhibited status) to prevent domain transfers"
                    },
                    "RegisterDomain": {
                        "access-level": "write",
                        "actions": "RegisterDomain",
                        "description": "Grants permission to register domains"
                    },
                    "RenewDomain": {
                        "access-level": "write",
                        "actions": "RenewDomain",
                        "description": "Grants permission to renew domains for the specified number of years"
                    },
                    "ResendContactReachabilityEmail": {
                        "access-level": "write",
                        "actions": "ResendContactReachabilityEmail",
                        "description": "For operations that require confirmation that the email address for the registrant contact is valid, such as registering a new domain, grants permission to resend the confirmation email to the current email address for the registrant contact"
                    },
                    "RetrieveDomainAuthCode": {
                        "access-level": "write",
                        "actions": "RetrieveDomainAuthCode",
                        "description": "Grants permission to get the AuthCode for the domain"
                    },
                    "TransferDomain": {
                        "access-level": "write",
                        "actions": "TransferDomain",
                        "description": "Grants permission to transfer a domain from another registrar to Amazon Route 53"
                    },
                    "UpdateDomainContact": {
                        "access-level": "write",
                        "actions": "UpdateDomainContact",
                        "description": "Grants permission to update the contact information for domain"
                    },
                    "UpdateDomainContactPrivacy": {
                        "access-level": "write",
                        "actions": "UpdateDomainContactPrivacy",
                        "description": "Grants permission to update the domain contact privacy setting"
                    },
                    "UpdateDomainNameservers": {
                        "access-level": "write",
                        "actions": "UpdateDomainNameservers",
                        "description": "Grants permission to replace the current set of name servers for a domain with the specified set of name servers"
                    }
                }
            }
        },
        "route53resolver": {
            "actions": {
                "list": {
                    "ListResolverEndpointIpAddresses": {
                        "access-level": "list",
                        "actions": "ListResolverEndpointIpAddresses",
                        "description": "For a specified resolver endpoint, grants permission to list the IP addresses that DNS queries pass through on the way to your network (outbound) or your VPCs (inbound).",
                        "resource-types": "resolver-endpoint*"
                    },
                    "ListResolverEndpoints": {
                        "access-level": "list",
                        "actions": "ListResolverEndpoints",
                        "description": "Grants permission to list all the resolver endpoints that were created using the current AWS account.",
                        "resource-types": "resolver-endpoint*"
                    },
                    "ListResolverRuleAssociations": {
                        "access-level": "list",
                        "actions": "ListResolverRuleAssociations",
                        "description": "Grants permission to list the associations that were created between resolver rules and VPCs using the current AWS account.",
                        "resource-types": "resolver-rule*"
                    },
                    "ListResolverRules": {
                        "access-level": "list",
                        "actions": "ListResolverRules",
                        "description": "Grants permission to list the resolver rules that were created using the current AWS account.",
                        "resource-types": "resolver-rule*"
                    }
                },
                "read": {
                    "GetResolverEndpoint": {
                        "access-level": "read",
                        "actions": "GetResolverEndpoint",
                        "description": "Grants permission to get information about a specified resolver endpoint, such as whether it\\'s an inbound or an outbound resolver endpoint, and the IP addresses in your VPC that DNS queries are forwarded to on the way into or out of your VPC.",
                        "resource-types": "resolver-endpoint*"
                    },
                    "GetResolverRule": {
                        "access-level": "read",
                        "actions": "GetResolverRule",
                        "description": "Grants permission to get information about a specified resolver rule, such as the domain name that the rule forwards DNS queries for and the IP address that queries are forwarded to.",
                        "resource-types": "resolver-rule*"
                    },
                    "GetResolverRuleAssociation": {
                        "access-level": "read",
                        "actions": "GetResolverRuleAssociation",
                        "description": "Grants permission to get information about an association between a specified resolver rule and a VPC.",
                        "resource-types": "resolver-rule*"
                    },
                    "GetResolverRulePolicy": {
                        "access-level": "read",
                        "actions": "GetResolverRulePolicy",
                        "description": "Grants permission to get information about a resolver rule policy.",
                        "resource-types": "resolver-rule*"
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "Grants permission to list the tags that you associated with the specified resource.",
                        "resource-types": "resolver-endpoint"
                    },
                    "resolver-rule": {
                        "access-level": "read",
                        "actions": "resolver-rule"
                    }
                },
                "tagging": {
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "description": "Grants permission to add one or more tags to a specified resource.",
                        "resource-types": "resolver-endpoint"
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "Grants permission to remove one or more tags from a specified resource.",
                        "resource-types": "resolver-endpoint"
                    },
                    "resolver-rule": {
                        "access-level": "tagging",
                        "actions": "resolver-rule"
                    }
                },
                "write": {
                    "AssociateResolverEndpointIpAddress": {
                        "access-level": "write",
                        "actions": "AssociateResolverEndpointIpAddress",
                        "description": "Grants permission to associate a specified IP address with a resolver endpoint. This is an IP address that DNS queries pass through on the way to your network (outbound) or your VPCs (inbound).",
                        "resource-types": "resolver-endpoint*"
                    },
                    "AssociateResolverRule": {
                        "access-level": "write",
                        "actions": "AssociateResolverRule",
                        "description": "Grants permission to associate a specified resolver rule with a specified VPC.",
                        "resource-types": "resolver-rule*"
                    },
                    "CreateResolverEndpoint": {
                        "access-level": "write",
                        "actions": "CreateResolverEndpoint",
                        "description": "Grants permission to create a resolver endpoint. There are two types of resolver endpoints, inbound and outbound.",
                        "resource-types": "resolver-endpoint*"
                    },
                    "CreateResolverRule": {
                        "access-level": "write",
                        "actions": "CreateResolverRule",
                        "description": "For DNS queries that originate in your VPC, grants permission to define how to route the queries out of the VPC.",
                        "resource-types": "resolver-rule*"
                    },
                    "DeleteResolverEndpoint": {
                        "access-level": "write",
                        "actions": "DeleteResolverEndpoint",
                        "description": "Grants permission to delete a resolver endpoint. The effect of deleting a resolver endpoint depends on whether it\\'s an inbound or an outbound resolver endpoint.",
                        "resource-types": "resolver-endpoint*"
                    },
                    "DeleteResolverRule": {
                        "access-level": "write",
                        "actions": "DeleteResolverRule",
                        "description": "Grants permission to delete a resolver rule.",
                        "resource-types": "resolver-rule*"
                    },
                    "DisassociateResolverEndpointIpAddress": {
                        "access-level": "write",
                        "actions": "DisassociateResolverEndpointIpAddress",
                        "description": "Grants permission to remove a specified IP address from a resolver endpoint. This is an IP address that DNS queries pass through on the way to your network (outbound) or your VPCs (inbound).",
                        "resource-types": "resolver-endpoint*"
                    },
                    "DisassociateResolverRule": {
                        "access-level": "write",
                        "actions": "DisassociateResolverRule",
                        "description": "Grants permission to remove the association between a specified resolver rule and a specified VPC.",
                        "resource-types": "resolver-rule*"
                    },
                    "PutResolverRulePolicy": {
                        "access-level": "write",
                        "actions": "PutResolverRulePolicy",
                        "description": "Grants permission to specify the Resolver operations and resources that you want to allow another AWS account to use.",
                        "resource-types": "resolver-rule*"
                    },
                    "UpdateResolverEndpoint": {
                        "access-level": "write",
                        "actions": "UpdateResolverEndpoint",
                        "description": "Grants permission to update selected settings for an inbound or an outbound resolver endpoint.",
                        "resource-types": "resolver-endpoint*"
                    },
                    "UpdateResolverRule": {
                        "access-level": "write",
                        "actions": "UpdateResolverRule",
                        "description": "Grants permission to update settings for a specified resolver rule.",
                        "resource-types": "resolver-rule*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "resolver-endpoint": {
                    "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-endpoint/${ResourceId}",
                    "resource-types": "resolver-endpoint"
                },
                "resolver-rule": {
                    "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-rule/${ResourceId}",
                    "resource-types": "resolver-rule"
                }
            }
        },
        "s3": {
            "actions": {
                "list": {
                    "ListAllMyBuckets": {
                        "access-level": "list",
                        "actions": "ListAllMyBuckets",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Returns a list of all buckets owned by the authenticated sender of the request."
                    },
                    "ListBucket": {
                        "access-level": "list",
                        "actions": "ListBucket",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:delimiter",
                            "s3:max-keys",
                            "s3:prefix",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Returns some or all (up to 1000) of the objects in a bucket.",
                        "resource-types": "bucket*"
                    }
                },
                "permissions-management": {
                    "DeleteBucketPolicy": {
                        "access-level": "permissions-management",
                        "actions": "DeleteBucketPolicy",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Delete the policy on a specified bucket",
                        "resource-types": "bucket*"
                    },
                    "ObjectOwnerOverrideToBucketOwner": {
                        "access-level": "permissions-management",
                        "actions": "ObjectOwnerOverrideToBucketOwner",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "resource-types": "object*"
                    },
                    "PutAccountPublicAccessBlock": {
                        "access-level": "permissions-management",
                        "actions": "PutAccountPublicAccessBlock",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Create or modify the PublicAccessBlock configuration for an AWS account."
                    },
                    "PutBucketAcl": {
                        "access-level": "permissions-management",
                        "actions": "PutBucketAcl",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-acl",
                            "s3:x-amz-content-sha256",
                            "s3:x-amz-grant-full-control",
                            "s3:x-amz-grant-read",
                            "s3:x-amz-grant-read-acp",
                            "s3:x-amz-grant-write",
                            "s3:x-amz-grant-write-acp"
                        ],
                        "description": "Set the permissions on an existing bucket using access control lists (ACL).",
                        "resource-types": "bucket*"
                    },
                    "PutBucketPolicy": {
                        "access-level": "permissions-management",
                        "actions": "PutBucketPolicy",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Add to or replace a policy on a bucket.",
                        "resource-types": "bucket*"
                    },
                    "PutBucketPublicAccessBlock": {
                        "access-level": "permissions-management",
                        "actions": "PutBucketPublicAccessBlock",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Create or modify the PublicAccessBlock configuration for an specific S3 bucket.",
                        "resource-types": "bucket*"
                    },
                    "PutObjectAcl": {
                        "access-level": "permissions-management",
                        "actions": "PutObjectAcl",
                        "condition-keys": [
                            "s3:ExistingObjectTag/<key>",
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-acl",
                            "s3:x-amz-content-sha256",
                            "s3:x-amz-grant-full-control",
                            "s3:x-amz-grant-read",
                            "s3:x-amz-grant-read-acp",
                            "s3:x-amz-grant-write",
                            "s3:x-amz-grant-write-acp",
                            "s3:x-amz-storage-class"
                        ],
                        "description": "Set the access control list (ACL) permissions for an object that already exists in a bucket.",
                        "resource-types": "object*"
                    },
                    "PutObjectVersionAcl": {
                        "access-level": "permissions-management",
                        "actions": "PutObjectVersionAcl",
                        "condition-keys": [
                            "s3:ExistingObjectTag/<key>",
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:versionid",
                            "s3:x-amz-acl",
                            "s3:x-amz-content-sha256",
                            "s3:x-amz-grant-full-control",
                            "s3:x-amz-grant-read",
                            "s3:x-amz-grant-read-acp",
                            "s3:x-amz-grant-write",
                            "s3:x-amz-grant-write-acp",
                            "s3:x-amz-storage-class"
                        ],
                        "description": "The ACL of an object is set at the object version level.",
                        "resource-types": "object*"
                    }
                },
                "read": {
                    "GetAccelerateConfiguration": {
                        "access-level": "read",
                        "actions": "GetAccelerateConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "This implementation of the GET operation uses the accelerate subresource to return the Transfer Acceleration state of a bucket, which is either Enabled or Suspended.",
                        "resource-types": "bucket*"
                    },
                    "GetAccountPublicAccessBlock": {
                        "access-level": "read",
                        "actions": "GetAccountPublicAccessBlock",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Retrieve the PublicAccessBlock configuration for an AWS account"
                    },
                    "GetAnalyticsConfiguration": {
                        "access-level": "read",
                        "actions": "GetAnalyticsConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "This implementation of the GET operation returns an analytics configuration (identified by the analytics configuration ID) from the bucket.",
                        "resource-types": "bucket*"
                    },
                    "GetBucketAcl": {
                        "access-level": "read",
                        "actions": "GetBucketAcl",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Return the access control list (ACL) of a bucket.",
                        "resource-types": "bucket*"
                    },
                    "GetBucketCORS": {
                        "access-level": "read",
                        "actions": "GetBucketCORS",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Returns the cors configuration information set for the bucket.",
                        "resource-types": "bucket*"
                    },
                    "GetBucketLocation": {
                        "access-level": "read",
                        "actions": "GetBucketLocation",
                        "description": "Return a bucket\\'s region.",
                        "resource-types": "bucket*"
                    },
                    "GetBucketLogging": {
                        "access-level": "read",
                        "actions": "GetBucketLogging",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Return the logging status of a bucket and the permissions users have to view and modify that status.",
                        "resource-types": "bucket*"
                    },
                    "GetBucketNotification": {
                        "access-level": "read",
                        "actions": "GetBucketNotification",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Return the notification configuration of a bucket.",
                        "resource-types": "bucket*"
                    },
                    "GetBucketPolicy": {
                        "access-level": "read",
                        "actions": "GetBucketPolicy",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Return the policy of a specified bucket.",
                        "resource-types": "bucket*"
                    },
                    "GetBucketPolicyStatus": {
                        "access-level": "read",
                        "actions": "GetBucketPolicyStatus",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Retrieve the policy status for an specific S3 bucket, indicating whether the bucket is public.",
                        "resource-types": "bucket*"
                    },
                    "GetBucketPublicAccessBlock": {
                        "access-level": "read",
                        "actions": "GetBucketPublicAccessBlock",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Retrieve the PublicAccessBlock configuration for a specific S3 bucket.",
                        "resource-types": "bucket*"
                    },
                    "GetBucketRequestPayment": {
                        "access-level": "read",
                        "actions": "GetBucketRequestPayment",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Return the request payment configuration of a bucket.",
                        "resource-types": "bucket*"
                    },
                    "GetBucketTagging": {
                        "access-level": "read",
                        "actions": "GetBucketTagging",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Return the tag set associated with the bucket.",
                        "resource-types": "bucket*"
                    },
                    "GetBucketVersioning": {
                        "access-level": "read",
                        "actions": "GetBucketVersioning",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Return the versioning state of a bucket.",
                        "resource-types": "bucket*"
                    },
                    "GetBucketWebsite": {
                        "access-level": "read",
                        "actions": "GetBucketWebsite",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Returns the website configuration associated with a bucket.",
                        "resource-types": "bucket*"
                    },
                    "GetEncryptionConfiguration": {
                        "access-level": "read",
                        "actions": "GetEncryptionConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Returns the encryption configuration information set on the bucket.",
                        "resource-types": "bucket*"
                    },
                    "GetInventoryConfiguration": {
                        "access-level": "read",
                        "actions": "GetInventoryConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "This implementation of the GET operation returns an inventory configuration (identified by the inventory configuration ID) from the bucket.",
                        "resource-types": "bucket*"
                    },
                    "GetLifecycleConfiguration": {
                        "access-level": "read",
                        "actions": "GetLifecycleConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Returns the lifecycle configuration information set on the bucket.",
                        "resource-types": "bucket*"
                    },
                    "GetMetricsConfiguration": {
                        "access-level": "read",
                        "actions": "GetMetricsConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Gets a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from the bucket. Note that this doesn\\'t include the daily storage metrics.",
                        "resource-types": "bucket*"
                    },
                    "GetObject": {
                        "access-level": "read",
                        "actions": "GetObject",
                        "condition-keys": [
                            "s3:ExistingObjectTag/<key>",
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Retrieves objects from Amazon S3.",
                        "resource-types": "object*"
                    },
                    "GetObjectAcl": {
                        "access-level": "read",
                        "actions": "GetObjectAcl",
                        "condition-keys": [
                            "s3:ExistingObjectTag/<key>",
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Return the access control list (ACL) of an object.",
                        "resource-types": "object*"
                    },
                    "GetObjectTagging": {
                        "access-level": "read",
                        "actions": "GetObjectTagging",
                        "condition-keys": [
                            "s3:ExistingObjectTag/<key>",
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "This implementation of the GET operation returns the tags associated with an object. You send the GET request against the tagging subresource associated with the object.",
                        "resource-types": "object*"
                    },
                    "GetObjectTorrent": {
                        "access-level": "read",
                        "actions": "GetObjectTorrent",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "return torrent files from a bucket.",
                        "resource-types": "object*"
                    },
                    "GetObjectVersion": {
                        "access-level": "read",
                        "actions": "GetObjectVersion",
                        "condition-keys": [
                            "s3:ExistingObjectTag/<key>",
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:versionid",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "To return a different version, use the versionId subresource.",
                        "resource-types": "object*"
                    },
                    "GetObjectVersionAcl": {
                        "access-level": "read",
                        "actions": "GetObjectVersionAcl",
                        "condition-keys": [
                            "s3:ExistingObjectTag/<key>",
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:versionid",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "To return ACL information about a different version, use the versionId subresource.",
                        "resource-types": "object*"
                    },
                    "GetObjectVersionForReplication": {
                        "access-level": "read",
                        "actions": "GetObjectVersionForReplication",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "resource-types": "object*"
                    },
                    "GetObjectVersionTagging": {
                        "access-level": "read",
                        "actions": "GetObjectVersionTagging",
                        "condition-keys": [
                            "s3:ExistingObjectTag/<key>",
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:versionid",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "GET Object tagging (for a Specific Version of the Object)",
                        "resource-types": "object*"
                    },
                    "GetObjectVersionTorrent": {
                        "access-level": "read",
                        "actions": "GetObjectVersionTorrent",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:versionid",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "To return Torrent files about a different version, use the versionId subresource.",
                        "resource-types": "object*"
                    },
                    "GetReplicationConfiguration": {
                        "access-level": "read",
                        "actions": "GetReplicationConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Returns the replication configuration information set on the bucket.",
                        "resource-types": "bucket*"
                    },
                    "ListBucketByTags": {
                        "access-level": "read",
                        "actions": "ListBucketByTags",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:max-keys",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "resource-types": "bucket*"
                    },
                    "ListBucketMultipartUploads": {
                        "access-level": "read",
                        "actions": "ListBucketMultipartUploads",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Lists in-progress multipart uploads.",
                        "resource-types": "bucket*"
                    },
                    "ListBucketVersions": {
                        "access-level": "read",
                        "actions": "ListBucketVersions",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:delimiter",
                            "s3:max-keys",
                            "s3:prefix",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Use the versions subresource to list metadata about all of the versions of objects in a bucket.",
                        "resource-types": "bucket*"
                    },
                    "ListMultipartUploadParts": {
                        "access-level": "read",
                        "actions": "ListMultipartUploadParts",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Lists the parts that have been uploaded for a specific multipart upload.",
                        "resource-types": "object*"
                    }
                },
                "tagging": {
                    "DeleteObjectTagging": {
                        "access-level": "tagging",
                        "actions": "DeleteObjectTagging",
                        "condition-keys": [
                            "s3:ExistingObjectTag/<key>",
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "This implementation of the DELETE operation uses the tagging subresource to remove the entire tag set from the specified object.",
                        "resource-types": "object*"
                    },
                    "DeleteObjectVersionTagging": {
                        "access-level": "tagging",
                        "actions": "DeleteObjectVersionTagging",
                        "condition-keys": [
                            "s3:ExistingObjectTag/<key>",
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:versionid",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "DELETE Object tagging (for a Specific Version of the Object)",
                        "resource-types": "object*"
                    },
                    "PutBucketTagging": {
                        "access-level": "tagging",
                        "actions": "PutBucketTagging",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Add a set of tags to an existing bucket.",
                        "resource-types": "bucket*"
                    },
                    "PutObjectTagging": {
                        "access-level": "tagging",
                        "actions": "PutObjectTagging",
                        "condition-keys": [
                            "s3:ExistingObjectTag/<key>",
                            "s3:RequestObjectTag/<key>",
                            "s3:RequestObjectTagKeys",
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "This implementation of the PUT operation uses the tagging subresource to add a set of tags to an existing object.",
                        "resource-types": "object*"
                    },
                    "PutObjectVersionTagging": {
                        "access-level": "tagging",
                        "actions": "PutObjectVersionTagging",
                        "condition-keys": [
                            "s3:ExistingObjectTag/<key>",
                            "s3:RequestObjectTag/<key>",
                            "s3:RequestObjectTagKeys",
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:versionid",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "PUT Object tagging (for a Specific Version of the Object)",
                        "resource-types": "object*"
                    },
                    "ReplicateTags": {
                        "access-level": "tagging",
                        "actions": "ReplicateTags",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "resource-types": "object*"
                    }
                },
                "write": {
                    "AbortMultipartUpload": {
                        "access-level": "write",
                        "actions": "AbortMultipartUpload",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Aborts a multipart upload.",
                        "resource-types": "object*"
                    },
                    "CreateBucket": {
                        "access-level": "write",
                        "actions": "CreateBucket",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:locationconstraint",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-acl",
                            "s3:x-amz-content-sha256",
                            "s3:x-amz-grant-full-control",
                            "s3:x-amz-grant-read",
                            "s3:x-amz-grant-read-acp",
                            "s3:x-amz-grant-write",
                            "s3:x-amz-grant-write-acp"
                        ],
                        "description": "Creates a new bucket.",
                        "resource-types": "bucket*"
                    },
                    "DeleteBucket": {
                        "access-level": "write",
                        "actions": "DeleteBucket",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Deletes the bucket named in the URI",
                        "resource-types": "bucket*"
                    },
                    "DeleteBucketWebsite": {
                        "access-level": "write",
                        "actions": "DeleteBucketWebsite",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Removes the website configuration for a bucket.",
                        "resource-types": "bucket*"
                    },
                    "DeleteObject": {
                        "access-level": "write",
                        "actions": "DeleteObject",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Removes the null version (if there is one) of an object and inserts a delete marker, which becomes the current version of the object.",
                        "resource-types": "object*"
                    },
                    "DeleteObjectVersion": {
                        "access-level": "write",
                        "actions": "DeleteObjectVersion",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:versionid",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "To remove a specific version of a object, you must be the bucket owner and you must use the versionId subresource.",
                        "resource-types": "object*"
                    },
                    "PutAccelerateConfiguration": {
                        "access-level": "write",
                        "actions": "PutAccelerateConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "This implementation of the PUT operation uses the accelerate subresource to set the Transfer Acceleration state of an existing bucket.",
                        "resource-types": "bucket*"
                    },
                    "PutAnalyticsConfiguration": {
                        "access-level": "write",
                        "actions": "PutAnalyticsConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "This implementation of the PUT operation adds an analytics configuration (identified by the analytics ID) to the bucket. You can have up to 1,000 analytics configurations per bucket.",
                        "resource-types": "bucket*"
                    },
                    "PutBucketCORS": {
                        "access-level": "write",
                        "actions": "PutBucketCORS",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Sets the cors configuration for your bucket.",
                        "resource-types": "bucket*"
                    },
                    "PutBucketLogging": {
                        "access-level": "write",
                        "actions": "PutBucketLogging",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Set the logging parameters for a bucket.",
                        "resource-types": "bucket*"
                    },
                    "PutBucketNotification": {
                        "access-level": "write",
                        "actions": "PutBucketNotification",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Enables you to receive notifications when certain events happen in your bucket.",
                        "resource-types": "bucket*"
                    },
                    "PutBucketRequestPayment": {
                        "access-level": "write",
                        "actions": "PutBucketRequestPayment",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Set the request payment configuration of a bucket.",
                        "resource-types": "bucket*"
                    },
                    "PutBucketVersioning": {
                        "access-level": "write",
                        "actions": "PutBucketVersioning",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Set the versioning state of an existing bucket.",
                        "resource-types": "bucket*"
                    },
                    "PutBucketWebsite": {
                        "access-level": "write",
                        "actions": "PutBucketWebsite",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Sets the configuration of the website that is specified in the website subresource.",
                        "resource-types": "bucket*"
                    },
                    "PutEncryptionConfiguration": {
                        "access-level": "write",
                        "actions": "PutEncryptionConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Sets the encryption configuration for the bucket.",
                        "resource-types": "bucket*"
                    },
                    "PutInventoryConfiguration": {
                        "access-level": "write",
                        "actions": "PutInventoryConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "This implementation of the PUT operation adds an inventory configuration (identified by the inventory ID) to the bucket. You can have up to 1,000 inventory configurations per bucket.",
                        "resource-types": "bucket*"
                    },
                    "PutLifecycleConfiguration": {
                        "access-level": "write",
                        "actions": "PutLifecycleConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle configuration.",
                        "resource-types": "bucket*"
                    },
                    "PutMetricsConfiguration": {
                        "access-level": "write",
                        "actions": "PutMetricsConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Sets or updates a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from the bucket.",
                        "resource-types": "bucket*"
                    },
                    "PutObject": {
                        "access-level": "write",
                        "actions": "PutObject",
                        "condition-keys": [
                            "s3:RequestObjectTag/<key>",
                            "s3:RequestObjectTagKeys",
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-acl",
                            "s3:x-amz-content-sha256",
                            "s3:x-amz-copy-source",
                            "s3:x-amz-grant-full-control",
                            "s3:x-amz-grant-read",
                            "s3:x-amz-grant-read-acp",
                            "s3:x-amz-grant-write",
                            "s3:x-amz-grant-write-acp",
                            "s3:x-amz-metadata-directive",
                            "s3:x-amz-server-side-encryption",
                            "s3:x-amz-server-side-encryption-aws-kms-key-id",
                            "s3:x-amz-storage-class",
                            "s3:x-amz-website-redirect-location"
                        ],
                        "description": "Adds an object to a bucket.",
                        "resource-types": "object*"
                    },
                    "PutReplicationConfiguration": {
                        "access-level": "write",
                        "actions": "PutReplicationConfiguration",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "In a versioning-enabled bucket, this operation creates a new replication configuration (or replaces an existing one, if present).",
                        "resource-types": "bucket*"
                    },
                    "ReplicateDelete": {
                        "access-level": "write",
                        "actions": "ReplicateDelete",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "resource-types": "object*"
                    },
                    "ReplicateObject": {
                        "access-level": "write",
                        "actions": "ReplicateObject",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256",
                            "s3:x-amz-server-side-encryption",
                            "s3:x-amz-server-side-encryption-aws-kms-key-id"
                        ],
                        "resource-types": "object*"
                    },
                    "RestoreObject": {
                        "access-level": "write",
                        "actions": "RestoreObject",
                        "condition-keys": [
                            "s3:authtype",
                            "s3:signatureage",
                            "s3:signatureversion",
                            "s3:x-amz-content-sha256"
                        ],
                        "description": "Restores a temporary copy of an archived object.",
                        "resource-types": "object*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "bucket": {
                    "arn": "arn:${Partition}:s3:::${BucketName}",
                    "resource-types": "bucket"
                },
                "object": {
                    "arn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
                    "resource-types": "object"
                }
            }
        },
        "sagemaker": {
            "actions": {
                "list": {
                    "ListAlgorithms": {
                        "access-level": "list",
                        "actions": "ListAlgorithms",
                        "description": "Lists algorithms."
                    },
                    "ListCodeRepositories": {
                        "access-level": "list",
                        "actions": "ListCodeRepositories",
                        "description": "Lists code repositories."
                    },
                    "ListCompilationJobs": {
                        "access-level": "list",
                        "actions": "ListCompilationJobs",
                        "description": "Lists compilation jobs."
                    },
                    "ListEndpointConfigs": {
                        "access-level": "list",
                        "actions": "ListEndpointConfigs",
                        "description": "Lists endpoint configurations."
                    },
                    "ListEndpoints": {
                        "access-level": "list",
                        "actions": "ListEndpoints",
                        "description": "Lists endpoints."
                    },
                    "ListHyperParameterTuningJobs": {
                        "access-level": "list",
                        "actions": "ListHyperParameterTuningJobs",
                        "description": "Lists hyper parameter tuning jobs that was created using Amazon SageMaker."
                    },
                    "ListLabelingJobs": {
                        "access-level": "list",
                        "actions": "ListLabelingJobs",
                        "description": "Lists labeling jobs."
                    },
                    "ListLabelingJobsForWorkteam": {
                        "access-level": "list",
                        "actions": "ListLabelingJobsForWorkteam",
                        "description": "Lists labeling jobs for workteam.",
                        "resource-types": "workteam*"
                    },
                    "ListModelPackages": {
                        "access-level": "list",
                        "actions": "ListModelPackages",
                        "description": "Lists model packages."
                    },
                    "ListModels": {
                        "access-level": "list",
                        "actions": "ListModels",
                        "description": "Lists the models created with the CreateModel API."
                    },
                    "ListNotebookInstanceLifecycleConfigs": {
                        "access-level": "list",
                        "actions": "ListNotebookInstanceLifecycleConfigs",
                        "description": "Lists notebook instance lifecycle configurations that can be deployed using Amazon SageMaker."
                    },
                    "ListNotebookInstances": {
                        "access-level": "list",
                        "actions": "ListNotebookInstances",
                        "description": "Returns a list of the Amazon SageMaker notebook instances in the requester\\'s account in an AWS Region."
                    },
                    "ListSubscribedWorkteams": {
                        "access-level": "list",
                        "actions": "ListSubscribedWorkteams",
                        "description": "Lists subscribed workteams."
                    },
                    "ListTags": {
                        "access-level": "list",
                        "actions": "ListTags",
                        "description": "Returns the tag set associated with the specified resource."
                    },
                    "ListTrainingJobs": {
                        "access-level": "list",
                        "actions": "ListTrainingJobs",
                        "description": "Lists training jobs."
                    },
                    "ListTrainingJobsForHyperParameterTuningJob": {
                        "access-level": "list",
                        "actions": "ListTrainingJobsForHyperParameterTuningJob",
                        "description": "Lists training jobs for a hyper parameter tuning job that was created using Amazon SageMaker.",
                        "resource-types": "hyper-parameter-tuning-job*"
                    },
                    "ListTransformJobs": {
                        "access-level": "list",
                        "actions": "ListTransformJobs",
                        "description": "Lists transform jobs."
                    },
                    "ListWorkteams": {
                        "access-level": "list",
                        "actions": "ListWorkteams",
                        "description": "Lists workteams."
                    }
                },
                "read": {
                    "CreatePresignedNotebookInstanceUrl": {
                        "access-level": "read",
                        "actions": "CreatePresignedNotebookInstanceUrl",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Returns a URL that you can use from your browser to connect to the Notebook Instance.",
                        "resource-types": "notebook-instance*"
                    },
                    "DescribeAlgorithm": {
                        "access-level": "read",
                        "actions": "DescribeAlgorithm",
                        "description": "Returns information about an algorithm.",
                        "resource-types": "algorithm*"
                    },
                    "DescribeCodeRepository": {
                        "access-level": "read",
                        "actions": "DescribeCodeRepository",
                        "description": "Returns information about a code repository.",
                        "resource-types": "code-repository*"
                    },
                    "DescribeCompilationJob": {
                        "access-level": "read",
                        "actions": "DescribeCompilationJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Returns information about a compilation job.",
                        "resource-types": "compilation-job*"
                    },
                    "DescribeEndpoint": {
                        "access-level": "read",
                        "actions": "DescribeEndpoint",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Returns the description of an endpoint.",
                        "resource-types": "endpoint*"
                    },
                    "DescribeEndpointConfig": {
                        "access-level": "read",
                        "actions": "DescribeEndpointConfig",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Returns the description of an endpoint configuration, which was created using the CreateEndpointConfig API.",
                        "resource-types": "endpoint-config*"
                    },
                    "DescribeHyperParameterTuningJob": {
                        "access-level": "read",
                        "actions": "DescribeHyperParameterTuningJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Describes a hyper parameter tuning job that was created via CreateHyperParameterTuningJob API.",
                        "resource-types": "hyper-parameter-tuning-job*"
                    },
                    "DescribeLabelingJob": {
                        "access-level": "read",
                        "actions": "DescribeLabelingJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Returns information about a labeling job.",
                        "resource-types": "labeling-job*"
                    },
                    "DescribeModel": {
                        "access-level": "read",
                        "actions": "DescribeModel",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Describes a model that you created using the CreateModel API.",
                        "resource-types": "model*"
                    },
                    "DescribeModelPackage": {
                        "access-level": "read",
                        "actions": "DescribeModelPackage",
                        "description": "Returns information about a model package.",
                        "resource-types": "model-package*"
                    },
                    "DescribeNotebookInstance": {
                        "access-level": "read",
                        "actions": "DescribeNotebookInstance",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Returns information about a notebook instance.",
                        "resource-types": "notebook-instance*"
                    },
                    "DescribeNotebookInstanceLifecycleConfig": {
                        "access-level": "read",
                        "actions": "DescribeNotebookInstanceLifecycleConfig",
                        "description": "Describes an notebook instance lifecycle configuration that was created via CreateNotebookInstanceLifecycleConfig API.",
                        "resource-types": "notebook-instance-lifecycle-config*"
                    },
                    "DescribeSubscribedWorkteam": {
                        "access-level": "read",
                        "actions": "DescribeSubscribedWorkteam",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Returns information about a subscribed workteam.",
                        "resource-types": "workteam*"
                    },
                    "DescribeTrainingJob": {
                        "access-level": "read",
                        "actions": "DescribeTrainingJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Returns information about a training job.",
                        "resource-types": "training-job*"
                    },
                    "DescribeTransformJob": {
                        "access-level": "read",
                        "actions": "DescribeTransformJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Returns information about a transform job.",
                        "resource-types": "transform-job*"
                    },
                    "DescribeWorkteam": {
                        "access-level": "read",
                        "actions": "DescribeWorkteam",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Returns information about a workteam.",
                        "resource-types": "workteam*"
                    },
                    "GetSearchSuggestions": {
                        "access-level": "read",
                        "actions": "GetSearchSuggestions",
                        "description": "Get search suggestions when provided with keyword.",
                        "resource-types": "training-job*"
                    },
                    "InvokeEndpoint": {
                        "access-level": "read",
                        "actions": "InvokeEndpoint",
                        "description": "After you deploy a model into production using Amazon SageMaker hosting services, your client applications use this API to get inferences from the model hosted at the specified endpoint.",
                        "resource-types": "endpoint*"
                    },
                    "Search": {
                        "access-level": "read",
                        "actions": "Search",
                        "description": "Search for a training job.",
                        "resource-types": "training-job*"
                    }
                },
                "tagging": {
                    "AddTags": {
                        "access-level": "tagging",
                        "actions": "AddTags",
                        "description": "Adds or overwrites one or more tags for the specified Amazon SageMaker resource.",
                        "resource-types": "compilation-job*"
                    },
                    "DeleteTags": {
                        "access-level": "tagging",
                        "actions": "DeleteTags",
                        "description": "Deletes the specified set of tags from an Amazon SageMaker resource.",
                        "resource-types": "compilation-job*"
                    },
                    "endpoint*": {
                        "access-level": "tagging",
                        "actions": "endpoint*"
                    },
                    "endpoint-config*": {
                        "access-level": "tagging",
                        "actions": "endpoint-config*"
                    },
                    "hyper-parameter-tuning-job*": {
                        "access-level": "tagging",
                        "actions": "hyper-parameter-tuning-job*"
                    },
                    "labeling-job*": {
                        "access-level": "tagging",
                        "actions": "labeling-job*"
                    },
                    "model*": {
                        "access-level": "tagging",
                        "actions": "model*"
                    },
                    "notebook-instance*": {
                        "access-level": "tagging",
                        "actions": "notebook-instance*"
                    },
                    "training-job*": {
                        "access-level": "tagging",
                        "actions": "training-job*"
                    },
                    "transform-job*": {
                        "access-level": "tagging",
                        "actions": "transform-job*"
                    },
                    "workteam*": {
                        "access-level": "tagging",
                        "actions": "workteam*"
                    }
                },
                "write": {
                    "CreateAlgorithm": {
                        "access-level": "write",
                        "actions": "CreateAlgorithm",
                        "description": "Create an algorithm.",
                        "resource-types": "algorithm*"
                    },
                    "CreateCodeRepository": {
                        "access-level": "write",
                        "actions": "CreateCodeRepository",
                        "description": "Create a code repository.",
                        "resource-types": "code-repository*"
                    },
                    "CreateCompilationJob": {
                        "access-level": "write",
                        "actions": "CreateCompilationJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Create a compilation job.",
                        "resource-types": "compilation-job*"
                    },
                    "CreateEndpoint": {
                        "access-level": "write",
                        "actions": "CreateEndpoint",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Creates an endpoint using the endpoint configuration specified in the request.",
                        "resource-types": "endpoint*"
                    },
                    "CreateEndpointConfig": {
                        "access-level": "write",
                        "actions": "CreateEndpointConfig",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Creates an endpoint configuration that can be deployed using Amazon SageMaker hosting services.",
                        "resource-types": "endpoint-config*"
                    },
                    "CreateHyperParameterTuningJob": {
                        "access-level": "write",
                        "actions": "CreateHyperParameterTuningJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Creates hyper parameter tuning job that can be deployed using Amazon SageMaker.",
                        "resource-types": "hyper-parameter-tuning-job*"
                    },
                    "CreateLabelingJob": {
                        "access-level": "write",
                        "actions": "CreateLabelingJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Create a labeling job.",
                        "resource-types": "labeling-job*"
                    },
                    "CreateModel": {
                        "access-level": "write",
                        "actions": "CreateModel",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Creates a model in Amazon SageMaker. In the request, you specify a name for the model and describe one or more containers.",
                        "resource-types": "model*"
                    },
                    "CreateModelPackage": {
                        "access-level": "write",
                        "actions": "CreateModelPackage",
                        "description": "Create a model package.",
                        "resource-types": "model-package*"
                    },
                    "CreateNotebookInstance": {
                        "access-level": "write",
                        "actions": "CreateNotebookInstance",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Creates an Amazon SageMaker notebook instance. A notebook instance is an Amazon EC2 instance running on a Jupyter Notebook.",
                        "resource-types": "notebook-instance*"
                    },
                    "CreateNotebookInstanceLifecycleConfig": {
                        "access-level": "write",
                        "actions": "CreateNotebookInstanceLifecycleConfig",
                        "description": "Creates an notebook instance lifecycle configuration that can be deployed using Amazon SageMaker.",
                        "resource-types": "notebook-instance-lifecycle-config*"
                    },
                    "CreateTrainingJob": {
                        "access-level": "write",
                        "actions": "CreateTrainingJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Starts a model training job. After training completes, Amazon SageMaker saves the resulting model artifacts and other optional output to an Amazon S3 location that you specify.",
                        "resource-types": "training-job*"
                    },
                    "CreateTransformJob": {
                        "access-level": "write",
                        "actions": "CreateTransformJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Starts a transform job. After the results are obtained, Amazon SageMaker saves them to an Amazon S3 location that you specify.",
                        "resource-types": "transform-job*"
                    },
                    "CreateWorkteam": {
                        "access-level": "write",
                        "actions": "CreateWorkteam",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Create a workteam.",
                        "resource-types": "workteam*"
                    },
                    "DeleteAlgorithm": {
                        "access-level": "write",
                        "actions": "DeleteAlgorithm",
                        "description": "Deletes an algorithm.",
                        "resource-types": "algorithm*"
                    },
                    "DeleteCodeRepository": {
                        "access-level": "write",
                        "actions": "DeleteCodeRepository",
                        "description": "Deletes a code repository.",
                        "resource-types": "code-repository*"
                    },
                    "DeleteEndpoint": {
                        "access-level": "write",
                        "actions": "DeleteEndpoint",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Deletes an endpoint. Amazon SageMaker frees up all the resources that were deployed when the endpoint was created.",
                        "resource-types": "endpoint*"
                    },
                    "DeleteEndpointConfig": {
                        "access-level": "write",
                        "actions": "DeleteEndpointConfig",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Deletes the endpoint configuration created using the CreateEndpointConfig API. The DeleteEndpointConfig API deletes only the specified configuration. It does not delete any endpoints created using the configuration.",
                        "resource-types": "endpoint-config*"
                    },
                    "DeleteModel": {
                        "access-level": "write",
                        "actions": "DeleteModel",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Deletes a model created using the CreateModel API. The DeleteModel API deletes only the model entry in Amazon SageMaker that you created by calling the CreateModel API. It does not delete model artifacts, inference code, or the IAM role that you specified when creating the model.",
                        "resource-types": "model*"
                    },
                    "DeleteModelPackage": {
                        "access-level": "write",
                        "actions": "DeleteModelPackage",
                        "description": "Deletes a model package.",
                        "resource-types": "model-package*"
                    },
                    "DeleteNotebookInstance": {
                        "access-level": "write",
                        "actions": "DeleteNotebookInstance",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Deletes an Amazon SageMaker notebook instance. Before you can delete a notebook instance, you must call the StopNotebookInstance API.",
                        "resource-types": "notebook-instance*"
                    },
                    "DeleteNotebookInstanceLifecycleConfig": {
                        "access-level": "write",
                        "actions": "DeleteNotebookInstanceLifecycleConfig",
                        "description": "Deletes an notebook instance lifecycle configuration that can be deployed using Amazon SageMaker.",
                        "resource-types": "notebook-instance-lifecycle-config*"
                    },
                    "DeleteWorkteam": {
                        "access-level": "write",
                        "actions": "DeleteWorkteam",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Deletes a workteam.",
                        "resource-types": "workteam*"
                    },
                    "StartNotebookInstance": {
                        "access-level": "write",
                        "actions": "StartNotebookInstance",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Launches an EC2 instance with the latest version of the libraries and attaches your EBS volume.",
                        "resource-types": "notebook-instance*"
                    },
                    "StopCompilationJob": {
                        "access-level": "write",
                        "actions": "StopCompilationJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Stops a compilation job.",
                        "resource-types": "compilation-job*"
                    },
                    "StopHyperParameterTuningJob": {
                        "access-level": "write",
                        "actions": "StopHyperParameterTuningJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Stops a running hyper parameter tuning job create via the CreateHyperParameterTuningJob.",
                        "resource-types": "hyper-parameter-tuning-job*"
                    },
                    "StopLabelingJob": {
                        "access-level": "write",
                        "actions": "StopLabelingJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Stops a labeling job.",
                        "resource-types": "labeling-job*"
                    },
                    "StopNotebookInstance": {
                        "access-level": "write",
                        "actions": "StopNotebookInstance",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Terminates the EC2 instance. Before terminating the instance, Amazon SageMaker disconnects the EBS volume from it. Amazon SageMaker preserves the EBS volume.",
                        "resource-types": "notebook-instance*"
                    },
                    "StopTrainingJob": {
                        "access-level": "write",
                        "actions": "StopTrainingJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Stops a training job. To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds.",
                        "resource-types": "training-job*"
                    },
                    "StopTransformJob": {
                        "access-level": "write",
                        "actions": "StopTransformJob",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Stops a transform job. When Amazon SageMaker receives a StopTransformJob request, the status of the job changes to Stopping. After Amazon SageMaker stops the job, the status is set to Stopped",
                        "resource-types": "transform-job*"
                    },
                    "UpdateCodeRepository": {
                        "access-level": "write",
                        "actions": "UpdateCodeRepository",
                        "description": "Updates a code repository.",
                        "resource-types": "code-repository*"
                    },
                    "UpdateEndpoint": {
                        "access-level": "write",
                        "actions": "UpdateEndpoint",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Updates an endpoint to use the endpoint configuration specified in the request.",
                        "resource-types": "endpoint*"
                    },
                    "UpdateEndpointWeightsAndCapacities": {
                        "access-level": "write",
                        "actions": "UpdateEndpointWeightsAndCapacities",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Updates variant weight, capacity, or both of one or more variants associated with an endpoint.",
                        "resource-types": "endpoint*"
                    },
                    "UpdateNotebookInstance": {
                        "access-level": "write",
                        "actions": "UpdateNotebookInstance",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Updates a notebook instance. Notebook instance updates include upgrading or downgrading the EC2 instance used for your notebook instance to accommodate changes in your workload requirements. You can also update the VPC security groups.",
                        "resource-types": "notebook-instance*"
                    },
                    "UpdateWorkteam": {
                        "access-level": "write",
                        "actions": "UpdateWorkteam",
                        "condition-keys": [
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "sagemaker:ResourceTag/tag-key"
                        ],
                        "description": "Updates a workteam.",
                        "resource-types": "workteam*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "algorithm": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:algorithm/${AlgorithmName}",
                    "resource-types": "algorithm"
                },
                "code-repository": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:code-repository/${CodeRepositoryName}",
                    "resource-types": "code-repository"
                },
                "compilation-job": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:compilation-job/${CompilationJobName}",
                    "resource-types": "compilation-job"
                },
                "endpoint": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:endpoint/${EndpointName}",
                    "resource-types": "endpoint"
                },
                "endpoint-config": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:endpoint-config/${EndpointConfigName}",
                    "resource-types": "endpoint-config"
                },
                "hyper-parameter-tuning-job": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:hyper-parameter-tuning-job/${HyperParameterTuningJobName}",
                    "resource-types": "hyper-parameter-tuning-job"
                },
                "labeling-job": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:labeling-job/${LabelingJobName}",
                    "resource-types": "labeling-job"
                },
                "model": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:model/${ModelName}",
                    "resource-types": "model"
                },
                "model-package": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:model-package/${ModelPackageName}",
                    "resource-types": "model-package"
                },
                "notebook-instance": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:notebook-instance/${NotebookInstanceName}",
                    "resource-types": "notebook-instance"
                },
                "notebook-instance-lifecycle-config": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:notebook-instance-lifecycle-config/${NotebookInstanceLifecycleConfigName}",
                    "resource-types": "notebook-instance-lifecycle-config"
                },
                "training-job": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:training-job/${TrainingJobName}",
                    "resource-types": "training-job"
                },
                "transform-job": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:transform-job/${TransformJobName}",
                    "resource-types": "transform-job"
                },
                "workteam": {
                    "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:workteam/${WorkteamName}",
                    "resource-types": "workteam"
                }
            }
        },
        "secretsmanager": {
            "actions": {
                "list": {
                    "ListSecrets": {
                        "access-level": "list",
                        "actions": "ListSecrets",
                        "description": "Enables the user to list the available secrets."
                    }
                },
                "permissions-management": {
                    "DeleteResourcePolicy": {
                        "access-level": "permissions-management",
                        "actions": "DeleteResourcePolicy",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to delete the resource policy attached to a secret.",
                        "resource-types": "Secret*"
                    },
                    "PutResourcePolicy": {
                        "access-level": "permissions-management",
                        "actions": "PutResourcePolicy",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to attach a resource policy to a secret.",
                        "resource-types": "Secret*"
                    }
                },
                "read": {
                    "DescribeSecret": {
                        "access-level": "read",
                        "actions": "DescribeSecret",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to retrieve the metadata about a secret, but not the encrypted data.",
                        "resource-types": "Secret*"
                    },
                    "GetRandomPassword": {
                        "access-level": "read",
                        "actions": "GetRandomPassword",
                        "description": "Enables the user to generate a random string for use in password creation."
                    },
                    "GetResourcePolicy": {
                        "access-level": "read",
                        "actions": "GetResourcePolicy",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to get the resource policy attached to a secret.",
                        "resource-types": "Secret*"
                    },
                    "GetSecretValue": {
                        "access-level": "read",
                        "actions": "GetSecretValue",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "secretsmanager:VersionId",
                            "secretsmanager:VersionStage",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to retrieve and decrypt the encrypted data.",
                        "resource-types": "Secret*"
                    },
                    "ListSecretVersionIds": {
                        "access-level": "read",
                        "actions": "ListSecretVersionIds",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to list the available versions of a secret.",
                        "resource-types": "Secret*"
                    }
                },
                "tagging": {
                    "CreateSecret": {
                        "access-level": "tagging",
                        "actions": "CreateSecret",
                        "condition-keys": [
                            "secretsmanager:Name",
                            "secretsmanager:Description",
                            "secretsmanager:KmsKeyId",
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to create a secret that stores encrypted data that can be queried and rotated."
                    },
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "aws:RequestTag/tag-key",
                            "aws:TagKeys",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to add tags to a secret.",
                        "resource-types": "Secret*"
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "aws:TagKeys",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to remove tags from a secret.",
                        "resource-types": "Secret*"
                    }
                },
                "write": {
                    "CancelRotateSecret": {
                        "access-level": "write",
                        "actions": "CancelRotateSecret",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to cancel an in-progress secret rotation.",
                        "resource-types": "Secret*"
                    },
                    "DeleteSecret": {
                        "access-level": "write",
                        "actions": "DeleteSecret",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:RecoveryWindowInDays",
                            "secretsmanager:ForceDeleteWithoutRecovery",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to delete a secret.",
                        "resource-types": "Secret*"
                    },
                    "PutSecretValue": {
                        "access-level": "write",
                        "actions": "PutSecretValue",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to create a new version of the secret with new encrypted data.",
                        "resource-types": "Secret*"
                    },
                    "RestoreSecret": {
                        "access-level": "write",
                        "actions": "RestoreSecret",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to cancel deletion of a secret.",
                        "resource-types": "Secret*"
                    },
                    "RotateSecret": {
                        "access-level": "write",
                        "actions": "RotateSecret",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "secretsmanager:RotationLambdaARN",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to start rotation of a secret.",
                        "resource-types": "Secret*"
                    },
                    "UpdateSecret": {
                        "access-level": "write",
                        "actions": "UpdateSecret",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "secretsmanager:Description",
                            "secretsmanager:KmsKeyId",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to update a secret with new metadata or with a new version of the encrypted data.",
                        "resource-types": "Secret*"
                    },
                    "UpdateSecretVersionStage": {
                        "access-level": "write",
                        "actions": "UpdateSecretVersionStage",
                        "condition-keys": [
                            "secretsmanager:SecretId",
                            "secretsmanager:VersionStage",
                            "secretsmanager:resource/AllowRotationLambdaArn",
                            "secretsmanager:ResourceTag/tag-key"
                        ],
                        "description": "Enables the user to move a stage from one secret to another.",
                        "resource-types": "Secret*"
                    }
                }
            }
        },
        "securityhub": {
            "actions": {
                "list": {
                    "GetEnabledStandards": {
                        "access-level": "list",
                        "actions": "GetEnabledStandards",
                        "description": "Lists and describes enabled standards."
                    },
                    "GetInsights": {
                        "access-level": "list",
                        "actions": "GetInsights",
                        "description": "Lists and describes insights that are specified by insight ARNs.",
                        "resource-types": "insight*"
                    },
                    "ListEnabledProductsForImport": {
                        "access-level": "list",
                        "actions": "ListEnabledProductsForImport",
                        "description": "Lists all Security Hub integrated third-party findings providers."
                    },
                    "ListInvitations": {
                        "access-level": "list",
                        "actions": "ListInvitations",
                        "description": "Lists all Security Hub membership invitations that were sent to the current AWS account."
                    },
                    "ListMembers": {
                        "access-level": "list",
                        "actions": "ListMembers",
                        "description": "Lists details about all member accounts for the current Security Hub master account."
                    }
                },
                "read": {
                    "GetFindings": {
                        "access-level": "read",
                        "actions": "GetFindings",
                        "description": "Lists and describes Security Hub-aggregated findings that are specified by filter attributes."
                    },
                    "GetInsightResults": {
                        "access-level": "read",
                        "actions": "GetInsightResults",
                        "description": "Lists the results of the Security Hub insight specified by the insight ARN.",
                        "resource-types": "insight*"
                    },
                    "GetInvitationsCount": {
                        "access-level": "read",
                        "actions": "GetInvitationsCount",
                        "description": "Returns the count of all Security Hub membership invitations that were sent to the current member account, not including the currently accepted invitation."
                    },
                    "GetMasterAccount": {
                        "access-level": "read",
                        "actions": "GetMasterAccount",
                        "description": "Provides the details for the Security Hub master account to the current member account."
                    },
                    "GetMembers": {
                        "access-level": "read",
                        "actions": "GetMembers",
                        "description": "Returns the details on the Security Hub member accounts that are specified by the account IDs."
                    }
                },
                "write": {
                    "AcceptInvitation": {
                        "access-level": "write",
                        "actions": "AcceptInvitation",
                        "description": "Accepts the invitation to be monitored by a master Security Hub account."
                    },
                    "BatchDisableStandards": {
                        "access-level": "write",
                        "actions": "BatchDisableStandards",
                        "description": "Disables the standards specified by the standards subscription ARNs.",
                        "resource-types": "standards-subscription*"
                    },
                    "BatchEnableStandards": {
                        "access-level": "write",
                        "actions": "BatchEnableStandards",
                        "description": "Enables the standards specified by the standards ARNs.",
                        "resource-types": "standard*"
                    },
                    "BatchImportFindings": {
                        "access-level": "write",
                        "actions": "BatchImportFindings",
                        "condition-keys": [
                            "securityhub:TargetAccount"
                        ],
                        "description": "Imports security findings that are generated by the integrated third-party products into Security Hub."
                    },
                    "CreateInsight": {
                        "access-level": "write",
                        "actions": "CreateInsight",
                        "description": "Creates an insight, which is a collection of related findings defined by an aggregation statement and optional filters."
                    },
                    "CreateMembers": {
                        "access-level": "write",
                        "actions": "CreateMembers",
                        "description": "Creates member Security Hub accounts in the current AWS account (which becomes the master Security Hub account) that has Security Hub enabled."
                    },
                    "DeclineInvitations": {
                        "access-level": "write",
                        "actions": "DeclineInvitations",
                        "description": "Declines invitations that are sent to this AWS account (invitee) by the AWS accounts (inviters) that are specified by the account IDs."
                    },
                    "DeleteInsight": {
                        "access-level": "write",
                        "actions": "DeleteInsight",
                        "description": "Deletes an insight that is specified by the insight ARN.",
                        "resource-types": "insight*"
                    },
                    "DeleteInvitations": {
                        "access-level": "write",
                        "actions": "DeleteInvitations",
                        "description": "Deletes invitations that are sent to this AWS account (invitee) by the AWS accounts (inviters) that are specified by their account IDs."
                    },
                    "DeleteMembers": {
                        "access-level": "write",
                        "actions": "DeleteMembers",
                        "description": "Deletes the Security Hub member accounts that are specified by the account IDs."
                    },
                    "DisableImportFindingsForProduct": {
                        "access-level": "write",
                        "actions": "DisableImportFindingsForProduct",
                        "description": "Stops you from being able to import findings generated by the integrated third-party providers into Security Hub.",
                        "resource-types": "product*"
                    },
                    "DisableSecurityHub": {
                        "access-level": "write",
                        "actions": "DisableSecurityHub",
                        "description": "Disables the AWS Security Hub Service."
                    },
                    "DisassociateFromMasterAccount": {
                        "access-level": "write",
                        "actions": "DisassociateFromMasterAccount",
                        "description": "Disassociates the current Security Hub member account from its master account."
                    },
                    "DisassociateMembers": {
                        "access-level": "write",
                        "actions": "DisassociateMembers",
                        "description": "Disassociates the Security Hub member accounts that are specified by the account IDs from their master account."
                    },
                    "EnableImportFindingsForProduct": {
                        "access-level": "write",
                        "actions": "EnableImportFindingsForProduct",
                        "description": "Enables you to import findings generated by the integrated third-party providers into Security Hub.",
                        "resource-types": "product*"
                    },
                    "EnableSecurityHub": {
                        "access-level": "write",
                        "actions": "EnableSecurityHub",
                        "description": "Enables the AWS Security Hub service."
                    },
                    "InviteMembers": {
                        "access-level": "write",
                        "actions": "InviteMembers",
                        "description": "Invites other AWS accounts to enable Security Hub and become Security Hub member accounts. When an account accepts the invitation and becomes a member account, the master account can view and manage the Security Hub findings of the member account."
                    },
                    "UpdateFindings": {
                        "access-level": "write",
                        "actions": "UpdateFindings",
                        "description": "Updates the AWS Security Hub-aggregated findings specified by the filter attributes."
                    },
                    "UpdateInsight": {
                        "access-level": "write",
                        "actions": "UpdateInsight",
                        "description": "Updates the AWS Security Hub insight specified by the insight ARN.",
                        "resource-types": "insight*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "insight": {
                    "arn": "arn:${Partition}:securityhub:${Region}:${Account}:insight/${CompanyId}/${ProductId}/${UniqueId}",
                    "resource-types": "insight"
                },
                "product": {
                    "arn": "arn:${Partition}:securityhub:${Region}:${Account}:product/${Company}/${ProductId}",
                    "resource-types": "product"
                },
                "product-subscription": {
                    "arn": "arn:${Partition}:securityhub:${Region}:${Account}:product-subscription/${Company}/${ProductId}",
                    "resource-types": "product-subscription"
                },
                "standard": {
                    "arn": "arn:${Partition}:securityhub:::ruleset/${StandardsName}/v/${StandardsVersion}",
                    "resource-types": "standard"
                },
                "standards-subscription": {
                    "arn": "arn:${Partition}:securityhub:${Region}:${Account}:subscription/${StandardsName}/v/${StandardsVersion}",
                    "resource-types": "standards-subscription"
                }
            }
        },
        "securitytokenservice": {
            "actions": {
                "read": {
                    "GetCallerIdentity": {
                        "access-level": "read",
                        "actions": "GetCallerIdentity",
                        "description": "Returns details about the IAM identity whose credentials are used to call the API"
                    },
                    "GetFederationToken": {
                        "access-level": "read",
                        "actions": "GetFederationToken",
                        "description": "Returns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) for a federated user",
                        "resource-types": "user"
                    }
                },
                "write": {
                    "AssumeRole": {
                        "access-level": "write",
                        "actions": "AssumeRole",
                        "description": "Returns a set of temporary security credentials that you can use to access AWS resources that you might not normally have access to",
                        "resource-types": "role*"
                    },
                    "AssumeRoleWithSAML": {
                        "access-level": "write",
                        "actions": "AssumeRoleWithSAML",
                        "condition-keys": [
                            "saml:namequalifier",
                            "saml:sub",
                            "saml:sub_type",
                            "saml:aud",
                            "saml:iss",
                            "saml:doc",
                            "saml:cn",
                            "saml:commonName",
                            "saml:eduorghomepageuri",
                            "saml:eduorgidentityauthnpolicyuri",
                            "saml:eduorglegalname",
                            "saml:eduorgsuperioruri",
                            "saml:eduorgwhitepagesuri",
                            "saml:edupersonaffiliation",
                            "saml:edupersonassurance",
                            "saml:edupersonentitlement",
                            "saml:edupersonnickname",
                            "saml:edupersonorgdn",
                            "saml:edupersonorgunitdn",
                            "saml:edupersonprimaryaffiliation",
                            "saml:edupersonprimaryorgunitdn",
                            "saml:edupersonprincipalname",
                            "saml:edupersonscopedaffiliation",
                            "saml:edupersontargetedid",
                            "saml:givenName",
                            "saml:mail",
                            "saml:name",
                            "saml:organizationStatus",
                            "saml:primaryGroupSID",
                            "saml:surname",
                            "saml:uid",
                            "saml:x500UniqueIdentifier"
                        ],
                        "description": "Returns a set of temporary security credentials for users who have been authenticated via a SAML authentication response",
                        "resource-types": "role*"
                    },
                    "AssumeRoleWithWebIdentity": {
                        "access-level": "write",
                        "actions": "AssumeRoleWithWebIdentity",
                        "condition-keys": [
                            "<web-identity-provider>:aud",
                            "<web-identity-provider>:oaud",
                            "<web-identity-provider>:sub"
                        ],
                        "description": "Returns a set of temporary security credentials for users who have been authenticated in a mobile or web application with a web identity provider",
                        "resource-types": "role*"
                    },
                    "DecodeAuthorizationMessage": {
                        "access-level": "write",
                        "actions": "DecodeAuthorizationMessage",
                        "description": "Decodes additional information about the authorization status of a request from an encoded message returned in response to an AWS request"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "iam": {
                    "arn": "arn:${Partition}:iam::${Account}:${RelativeId}",
                    "resource-types": "iam"
                },
                "role": {
                    "arn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}",
                    "resource-types": "role"
                },
                "sts": {
                    "arn": "arn:${Partition}:sts::${Account}:${RelativeId}",
                    "resource-types": "sts"
                },
                "user": {
                    "arn": "arn:${Partition}:iam::${Account}:user/${UserNameWithPath}",
                    "resource-types": "user"
                }
            }
        },
        "serverlessapplicationrepository": {
            "actions": {
                "list": {
                    "ListApplicationDependencies": {
                        "access-level": "list",
                        "actions": "ListApplicationDependencies",
                        "description": "Retrieves the list of applications nested in the containing application",
                        "resource-types": "applications*"
                    },
                    "ListApplicationVersions": {
                        "access-level": "list",
                        "actions": "ListApplicationVersions",
                        "description": "Lists versions for the specified application owned by the requester.",
                        "resource-types": "applications*"
                    },
                    "ListApplications": {
                        "access-level": "list",
                        "actions": "ListApplications",
                        "description": "Lists applications owned by the requester."
                    }
                },
                "read": {
                    "GetApplication": {
                        "access-level": "read",
                        "actions": "GetApplication",
                        "description": "Gets the specified application.",
                        "resource-types": "applications*"
                    },
                    "GetApplicationPolicy": {
                        "access-level": "read",
                        "actions": "GetApplicationPolicy",
                        "description": "Gets the policy for the specified application.",
                        "resource-types": "applications*"
                    },
                    "GetCloudFormationTemplate": {
                        "access-level": "read",
                        "actions": "GetCloudFormationTemplate",
                        "description": "Gets the specified AWS CloudFormation template",
                        "resource-types": "applications*"
                    },
                    "SearchApplications": {
                        "access-level": "read",
                        "actions": "SearchApplications",
                        "description": "Gets all applications authorized for this user"
                    }
                },
                "write": {
                    "CreateApplication": {
                        "access-level": "write",
                        "actions": "CreateApplication",
                        "description": "Creates an application, optionally including an AWS SAM file to create the first application version in the same call."
                    },
                    "CreateApplicationVersion": {
                        "access-level": "write",
                        "actions": "CreateApplicationVersion",
                        "description": "Creates an application version.",
                        "resource-types": "applications*"
                    },
                    "CreateCloudFormationChangeSet": {
                        "access-level": "write",
                        "actions": "CreateCloudFormationChangeSet",
                        "description": "Creates an AWS CloudFormation ChangeSet for the given application.",
                        "resource-types": "applications*"
                    },
                    "CreateCloudFormationTemplate": {
                        "access-level": "write",
                        "actions": "CreateCloudFormationTemplate",
                        "description": "Creates an AWS CloudFormation template",
                        "resource-types": "applications*"
                    },
                    "DeleteApplication": {
                        "access-level": "write",
                        "actions": "DeleteApplication",
                        "description": "Delete the specified Application",
                        "resource-types": "applications*"
                    },
                    "PutApplicationPolicy": {
                        "access-level": "write",
                        "actions": "PutApplicationPolicy",
                        "description": "Puts the policy for the specified application.",
                        "resource-types": "applications*"
                    },
                    "UpdateApplication": {
                        "access-level": "write",
                        "actions": "UpdateApplication",
                        "description": "Updates meta-data of the application",
                        "resource-types": "applications*"
                    }
                }
            }
        },
        "servermigrationservice": {
            "actions": {
                "list": {
                    "ListApps": {
                        "access-level": "list",
                        "actions": "ListApps",
                        "description": "Get a list of summaries for existing applications."
                    }
                },
                "read": {
                    "GetApp": {
                        "access-level": "read",
                        "actions": "GetApp",
                        "description": "Get the configuration and statuses for an existing application."
                    },
                    "GetAppLaunchConfiguration": {
                        "access-level": "read",
                        "actions": "GetAppLaunchConfiguration",
                        "description": "Get launch configuration for an existing application."
                    },
                    "GetAppReplicationConfiguration": {
                        "access-level": "read",
                        "actions": "GetAppReplicationConfiguration",
                        "description": "Get replication configuration for an existing application."
                    },
                    "GetConnectors": {
                        "access-level": "read",
                        "actions": "GetConnectors",
                        "description": "Get all connectors that have been associated."
                    },
                    "GetReplicationJobs": {
                        "access-level": "read",
                        "actions": "GetReplicationJobs",
                        "description": "Get all existing jobs to migrate on-premise servers onto AWS."
                    },
                    "GetReplicationRuns": {
                        "access-level": "read",
                        "actions": "GetReplicationRuns",
                        "description": "Get all runs for an existing job."
                    },
                    "GetServers": {
                        "access-level": "read",
                        "actions": "GetServers",
                        "description": "Get all servers that have been imported."
                    }
                },
                "write": {
                    "CreateApp": {
                        "access-level": "write",
                        "actions": "CreateApp",
                        "description": "Create an application configuration to migrate on-premise application onto AWS.."
                    },
                    "CreateReplicationJob": {
                        "access-level": "write",
                        "actions": "CreateReplicationJob",
                        "description": "Create a job to migrate on-premise server onto AWS."
                    },
                    "DeleteApp": {
                        "access-level": "write",
                        "actions": "DeleteApp",
                        "description": "Delete an existing application configuration."
                    },
                    "DeleteAppLaunchConfiguration": {
                        "access-level": "write",
                        "actions": "DeleteAppLaunchConfiguration",
                        "description": "Delete launch configuration for an existing application."
                    },
                    "DeleteAppReplicationConfiguration": {
                        "access-level": "write",
                        "actions": "DeleteAppReplicationConfiguration",
                        "description": "Delete replication configuration for an existing application.."
                    },
                    "DeleteReplicationJob": {
                        "access-level": "write",
                        "actions": "DeleteReplicationJob",
                        "description": "Delete an existing job to migrate on-premise server onto AWS."
                    },
                    "DeleteServerCatalog": {
                        "access-level": "write",
                        "actions": "DeleteServerCatalog",
                        "description": "Delete the complete list of on-premise servers gathered into AWS."
                    },
                    "DisassociateConnectors": {
                        "access-level": "write",
                        "actions": "DisassociateConnectors",
                        "description": "Disassociate a connector that has been associated."
                    },
                    "GenerateChangeSet": {
                        "access-level": "write",
                        "actions": "GenerateChangeSet",
                        "description": "Generate a changeSet for the CloudFormation stack of an application."
                    },
                    "GenerateTemplate": {
                        "access-level": "write",
                        "actions": "GenerateTemplate",
                        "description": "Generate a CloudFormation template for an existing application."
                    },
                    "ImportServerCatalog": {
                        "access-level": "write",
                        "actions": "ImportServerCatalog",
                        "description": "Gathers a complete list of on-premise servers."
                    },
                    "LaunchApp": {
                        "access-level": "write",
                        "actions": "LaunchApp",
                        "description": "Create and launch a CloudFormation stack for an existing application."
                    },
                    "PutAppLaunchConfiguration": {
                        "access-level": "write",
                        "actions": "PutAppLaunchConfiguration",
                        "description": "Create or update launch configuration for an existing application."
                    },
                    "PutAppReplicationConfiguration": {
                        "access-level": "write",
                        "actions": "PutAppReplicationConfiguration",
                        "description": "Create or update replication configuration for an existing application."
                    },
                    "StartAppReplication": {
                        "access-level": "write",
                        "actions": "StartAppReplication",
                        "description": "Create and start replication jobs for an existing application."
                    },
                    "StartOnDemandReplicationRun": {
                        "access-level": "write",
                        "actions": "StartOnDemandReplicationRun",
                        "description": "Start a replication run for an existing replication job."
                    },
                    "StopAppReplication": {
                        "access-level": "write",
                        "actions": "StopAppReplication",
                        "description": "Stop and delete replication jobs for an existing application."
                    },
                    "TerminateApp": {
                        "access-level": "write",
                        "actions": "TerminateApp",
                        "description": "Terminate the CloudFormation stack for an existing application."
                    },
                    "UpdateApp": {
                        "access-level": "write",
                        "actions": "UpdateApp",
                        "description": "Update an existing application configuration"
                    },
                    "UpdateReplicationJob": {
                        "access-level": "write",
                        "actions": "UpdateReplicationJob",
                        "description": "Update an existing job to migrate on-premise server onto AWS."
                    }
                }
            }
        },
        "servicecatalog": {
            "actions": {
                "list": {
                    "ListAcceptedPortfolioShares": {
                        "access-level": "list",
                        "actions": "ListAcceptedPortfolioShares",
                        "description": "Lists the portfolios that have been shared with you and you have accepted"
                    },
                    "ListConstraintsForPortfolio": {
                        "access-level": "list",
                        "actions": "ListConstraintsForPortfolio",
                        "description": "Lists constraints associated with a given portfolio"
                    },
                    "ListLaunchPaths": {
                        "access-level": "list",
                        "actions": "ListLaunchPaths",
                        "description": "Lists the different ways to launch a given product as an end-user"
                    },
                    "ListPortfolioAccess": {
                        "access-level": "list",
                        "actions": "ListPortfolioAccess",
                        "description": "Lists the AWS accounts you have shared a given portfolio with"
                    },
                    "ListPortfolios": {
                        "access-level": "list",
                        "actions": "ListPortfolios",
                        "description": "Lists the portfolios in your account"
                    },
                    "ListPortfoliosForProduct": {
                        "access-level": "list",
                        "actions": "ListPortfoliosForProduct",
                        "description": "Lists the portfolios associated with a given product"
                    },
                    "ListPrincipalsForPortfolio": {
                        "access-level": "list",
                        "actions": "ListPrincipalsForPortfolio",
                        "description": "Lists the IAM principals associated with a given portfolio"
                    },
                    "ListProvisionedProductPlans": {
                        "access-level": "list",
                        "actions": "ListProvisionedProductPlans",
                        "description": "Lists the provisioned product plans"
                    },
                    "ListProvisioningArtifacts": {
                        "access-level": "list",
                        "actions": "ListProvisioningArtifacts",
                        "description": "Lists the provisioning artifacts associated with a given product"
                    },
                    "ListRecordHistory": {
                        "access-level": "list",
                        "actions": "ListRecordHistory",
                        "condition-keys": [
                            "servicecatalog:accountLevel",
                            "servicecatalog:roleLevel",
                            "servicecatalog:userLevel"
                        ],
                        "description": "Lists all the records in your account or all the records related to a given provisioned product"
                    },
                    "ListServiceActionsForProvisioningArtifact": {
                        "access-level": "list",
                        "actions": "ListServiceActionsForProvisioningArtifact",
                        "description": "Lists all the service actions in your account"
                    },
                    "ScanProvisionedProducts": {
                        "access-level": "list",
                        "actions": "ScanProvisionedProducts",
                        "condition-keys": [
                            "servicecatalog:accountLevel",
                            "servicecatalog:roleLevel",
                            "servicecatalog:userLevel"
                        ],
                        "description": "Lists all the provisioned products in your account"
                    },
                    "SearchProducts": {
                        "access-level": "list",
                        "actions": "SearchProducts",
                        "description": "Lists the products available to you as an end-user"
                    },
                    "SearchProductsAsAdmin": {
                        "access-level": "list",
                        "actions": "SearchProductsAsAdmin",
                        "description": "Lists all the products in your account or all the products associated with a given portfolio"
                    },
                    "SearchProvisionedProducts": {
                        "access-level": "list",
                        "actions": "SearchProvisionedProducts",
                        "condition-keys": [
                            "servicecatalog:accountLevel",
                            "servicecatalog:roleLevel",
                            "servicecatalog:userLevel"
                        ],
                        "description": "Lists all the provisioned products in your account"
                    }
                },
                "permissions-management": {
                    "CreatePortfolioShare": {
                        "access-level": "permissions-management",
                        "actions": "CreatePortfolioShare",
                        "description": "Shares a portfolio you own with another AWS account"
                    },
                    "DeletePortfolioShare": {
                        "access-level": "permissions-management",
                        "actions": "DeletePortfolioShare",
                        "description": "Unshares a portfolio you own from an AWS account you previously shared the portfolio with"
                    }
                },
                "read": {
                    "DescribeConstraint": {
                        "access-level": "read",
                        "actions": "DescribeConstraint",
                        "description": "Describes a constraint"
                    },
                    "DescribePortfolio": {
                        "access-level": "read",
                        "actions": "DescribePortfolio",
                        "description": "Describes a portfolio"
                    },
                    "DescribeProduct": {
                        "access-level": "read",
                        "actions": "DescribeProduct",
                        "description": "Describes a product as an end-user"
                    },
                    "DescribeProductAsAdmin": {
                        "access-level": "read",
                        "actions": "DescribeProductAsAdmin",
                        "description": "Describes a product as an admin"
                    },
                    "DescribeProductView": {
                        "access-level": "read",
                        "actions": "DescribeProductView",
                        "description": "Describes a product as an end-user"
                    },
                    "DescribeProvisionedProduct": {
                        "access-level": "read",
                        "actions": "DescribeProvisionedProduct",
                        "description": "Describes a provisioned product"
                    },
                    "DescribeProvisionedProductPlan": {
                        "access-level": "read",
                        "actions": "DescribeProvisionedProductPlan",
                        "description": "Describes a provisioned product plan"
                    },
                    "DescribeProvisioningArtifact": {
                        "access-level": "read",
                        "actions": "DescribeProvisioningArtifact",
                        "description": "Describes a provisioning artifact"
                    },
                    "DescribeProvisioningParameters": {
                        "access-level": "read",
                        "actions": "DescribeProvisioningParameters",
                        "description": "Describes the parameters that you need to specify to successfully provision a specified provisioning artifact"
                    },
                    "DescribeRecord": {
                        "access-level": "read",
                        "actions": "DescribeRecord",
                        "condition-keys": [
                            "servicecatalog:accountLevel",
                            "servicecatalog:roleLevel",
                            "servicecatalog:userLevel"
                        ],
                        "description": "Describes a record and lists any outputs"
                    }
                },
                "tagging": {
                    "CreatePortfolio": {
                        "access-level": "tagging",
                        "actions": "CreatePortfolio",
                        "description": "Creates a portfolio"
                    },
                    "CreateProduct": {
                        "access-level": "tagging",
                        "actions": "CreateProduct",
                        "description": "Creates a product and that product\\'s first provisioning artifact"
                    },
                    "CreateProvisionedProductPlan": {
                        "access-level": "tagging",
                        "actions": "CreateProvisionedProductPlan",
                        "description": "Adds a new provisioned product plan"
                    },
                    "ExecuteProvisionedProductPlan": {
                        "access-level": "tagging",
                        "actions": "ExecuteProvisionedProductPlan",
                        "description": "Executes a provisioned product plan"
                    },
                    "ExecuteProvisionedProductServiceAction": {
                        "access-level": "tagging",
                        "actions": "ExecuteProvisionedProductServiceAction",
                        "description": "Executes a provisioned product plan"
                    },
                    "ProvisionProduct": {
                        "access-level": "tagging",
                        "actions": "ProvisionProduct",
                        "description": "Provisions a product with a specified provisioning artifact and launch parameters"
                    },
                    "UpdatePortfolio": {
                        "access-level": "tagging",
                        "actions": "UpdatePortfolio",
                        "description": "Updates the metadata fields and/or tags of an existing portfolio"
                    },
                    "UpdateProduct": {
                        "access-level": "tagging",
                        "actions": "UpdateProduct",
                        "description": "Updates the metadata fields and/or tags of an existing product"
                    }
                },
                "write": {
                    "AcceptPortfolioShare": {
                        "access-level": "write",
                        "actions": "AcceptPortfolioShare",
                        "description": "Accepts a portfolio that has been shared with you"
                    },
                    "AssociatePrincipalWithPortfolio": {
                        "access-level": "write",
                        "actions": "AssociatePrincipalWithPortfolio",
                        "description": "Associates an IAM principal with a portfolio, giving the specified principal access to any products associated with the specified portfolio"
                    },
                    "AssociateProductWithPortfolio": {
                        "access-level": "write",
                        "actions": "AssociateProductWithPortfolio",
                        "description": "Associates a product with a portfolio"
                    },
                    "CreateConstraint": {
                        "access-level": "write",
                        "actions": "CreateConstraint",
                        "description": "Creates a constraint on an associated product and portfolio"
                    },
                    "CreateProvisioningArtifact": {
                        "access-level": "write",
                        "actions": "CreateProvisioningArtifact",
                        "description": "Adds a new provisioning artifact to an existing product"
                    },
                    "DeleteConstraint": {
                        "access-level": "write",
                        "actions": "DeleteConstraint",
                        "description": "Removes and deletes an existing constraint from an associated product and portfolio"
                    },
                    "DeletePortfolio": {
                        "access-level": "write",
                        "actions": "DeletePortfolio",
                        "description": "Deletes a portfolio if all associations and shares have been removed from the portfolio"
                    },
                    "DeleteProduct": {
                        "access-level": "write",
                        "actions": "DeleteProduct",
                        "description": "Deletes a product if all associations have been removed from the product"
                    },
                    "DeleteProvisionedProductPlan": {
                        "access-level": "write",
                        "actions": "DeleteProvisionedProductPlan",
                        "description": "Deletes a provisioned product plan"
                    },
                    "DeleteProvisioningArtifact": {
                        "access-level": "write",
                        "actions": "DeleteProvisioningArtifact",
                        "description": "Deletes a provisioning artifact from a product"
                    },
                    "DisassociatePrincipalFromPortfolio": {
                        "access-level": "write",
                        "actions": "DisassociatePrincipalFromPortfolio",
                        "description": "Disassociates an IAM principal from a portfolio"
                    },
                    "DisassociateProductFromPortfolio": {
                        "access-level": "write",
                        "actions": "DisassociateProductFromPortfolio",
                        "description": "Disassociates a product from a portfolio"
                    },
                    "RejectPortfolioShare": {
                        "access-level": "write",
                        "actions": "RejectPortfolioShare",
                        "description": "Rejects a portfolio that has been shared with you that you previously accepted"
                    },
                    "TerminateProvisionedProduct": {
                        "access-level": "write",
                        "actions": "TerminateProvisionedProduct",
                        "condition-keys": [
                            "servicecatalog:accountLevel",
                            "servicecatalog:roleLevel",
                            "servicecatalog:userLevel"
                        ],
                        "description": "Terminates an existing provisioned product"
                    },
                    "UpdateConstraint": {
                        "access-level": "write",
                        "actions": "UpdateConstraint",
                        "description": "Updates the metadata fields of an existing constraint"
                    },
                    "UpdateProvisionedProduct": {
                        "access-level": "write",
                        "actions": "UpdateProvisionedProduct",
                        "condition-keys": [
                            "servicecatalog:accountLevel",
                            "servicecatalog:roleLevel",
                            "servicecatalog:userLevel"
                        ],
                        "description": "Updates an existing provisioned product"
                    },
                    "UpdateProvisioningArtifact": {
                        "access-level": "write",
                        "actions": "UpdateProvisioningArtifact",
                        "description": "Updates the metadata fields of an existing provisioning artifact"
                    }
                }
            }
        },
        "services": {},
        "ses": {
            "actions": {
                "list": {
                    "ListConfigurationSets": {
                        "access-level": "list",
                        "actions": "ListConfigurationSets",
                        "description": "Returns a list of the configuration sets associated with your Amazon SES account in the current AWS Region"
                    },
                    "ListCustomVerificationEmailTemplates": {
                        "access-level": "list",
                        "actions": "ListCustomVerificationEmailTemplates",
                        "description": "Lists the existing custom verification email templates for your account in the current AWS Region"
                    },
                    "ListIdentities": {
                        "access-level": "list",
                        "actions": "ListIdentities",
                        "description": "Returns a list containing all of the identities (email addresses and domains) for your AWS account, regardless of verification status"
                    },
                    "ListIdentityPolicies": {
                        "access-level": "list",
                        "actions": "ListIdentityPolicies",
                        "description": "Returns a list of sending authorization policies that are attached to the given identity (an email address or a domain)"
                    },
                    "ListReceiptFilters": {
                        "access-level": "list",
                        "actions": "ListReceiptFilters",
                        "description": "Lists the IP address filters associated with your AWS account"
                    },
                    "ListReceiptRuleSets": {
                        "access-level": "list",
                        "actions": "ListReceiptRuleSets",
                        "description": "Lists the receipt rule sets that exist under your AWS account"
                    },
                    "ListTemplates": {
                        "access-level": "list",
                        "actions": "ListTemplates",
                        "description": "Lists the email templates present in your Amazon SES account in the current AWS Region"
                    },
                    "ListVerifiedEmailAddresses": {
                        "access-level": "list",
                        "actions": "ListVerifiedEmailAddresses",
                        "description": "Returns a list containing all of the email addresses that have been verified"
                    }
                },
                "read": {
                    "DescribeActiveReceiptRuleSet": {
                        "access-level": "read",
                        "actions": "DescribeActiveReceiptRuleSet",
                        "description": "Returns the metadata and receipt rules for the receipt rule set that is currently active"
                    },
                    "DescribeConfigurationSet": {
                        "access-level": "read",
                        "actions": "DescribeConfigurationSet",
                        "description": "Returns the details of the specified configuration set"
                    },
                    "DescribeReceiptRule": {
                        "access-level": "read",
                        "actions": "DescribeReceiptRule",
                        "description": "Returns the details of the specified receipt rule"
                    },
                    "DescribeReceiptRuleSet": {
                        "access-level": "read",
                        "actions": "DescribeReceiptRuleSet",
                        "description": "Returns the details of the specified receipt rule set"
                    },
                    "GetAccountSendingEnabled": {
                        "access-level": "read",
                        "actions": "GetAccountSendingEnabled",
                        "description": "Returns the email sending status of the Amazon SES account for the current region"
                    },
                    "GetCustomVerificationEmailTemplate": {
                        "access-level": "read",
                        "actions": "GetCustomVerificationEmailTemplate",
                        "description": "Returns the custom email verification template for the template name you specify"
                    },
                    "GetIdentityDkimAttributes": {
                        "access-level": "read",
                        "actions": "GetIdentityDkimAttributes",
                        "description": "Returns the current status of Easy DKIM signing for an entity"
                    },
                    "GetIdentityMailFromDomainAttributes": {
                        "access-level": "read",
                        "actions": "GetIdentityMailFromDomainAttributes",
                        "description": "Returns the custom MAIL FROM attributes for a list of identities (email addresses and/or domains)"
                    },
                    "GetIdentityNotificationAttributes": {
                        "access-level": "read",
                        "actions": "GetIdentityNotificationAttributes",
                        "description": "Given a list of verified identities (email addresses and/or domains), returns a structure describing identity notification attributes"
                    },
                    "GetIdentityPolicies": {
                        "access-level": "read",
                        "actions": "GetIdentityPolicies",
                        "description": "Returns the requested sending authorization policies for the given identity (an email address or a domain)"
                    },
                    "GetIdentityVerificationAttributes": {
                        "access-level": "read",
                        "actions": "GetIdentityVerificationAttributes",
                        "description": "Given a list of identities (email addresses and/or domains), returns the verification status and (for domain identities) the verification token for each identity"
                    },
                    "GetSendQuota": {
                        "access-level": "read",
                        "actions": "GetSendQuota",
                        "description": "Returns the user\\'s current sending limits"
                    },
                    "GetSendStatistics": {
                        "access-level": "read",
                        "actions": "GetSendStatistics",
                        "description": "Returns the user\\'s sending statistics. The result is a list of data points, representing the last two weeks of sending activity"
                    },
                    "GetTemplate": {
                        "access-level": "read",
                        "actions": "GetTemplate",
                        "description": "Returns the template object (which includes the Subject line, HTML part and text part) for the template you specify"
                    },
                    "VerifyDomainDkim": {
                        "access-level": "read",
                        "actions": "VerifyDomainDkim",
                        "description": "Returns a set of DKIM tokens for a domain"
                    },
                    "VerifyDomainIdentity": {
                        "access-level": "read",
                        "actions": "VerifyDomainIdentity",
                        "description": "Verifies a domain"
                    },
                    "VerifyEmailAddress": {
                        "access-level": "read",
                        "actions": "VerifyEmailAddress",
                        "description": "Verifies an email address. This action causes a confirmation email message to be sent to the specified address"
                    },
                    "VerifyEmailIdentity": {
                        "access-level": "read",
                        "actions": "VerifyEmailIdentity",
                        "description": "Verifies an email address. This action causes a confirmation email message to be sent to the specified address. This action is throttled at one request per second"
                    }
                },
                "write": {
                    "CloneReceiptRuleSet": {
                        "access-level": "write",
                        "actions": "CloneReceiptRuleSet",
                        "description": "Creates a receipt rule set by cloning an existing one"
                    },
                    "CreateConfigurationSet": {
                        "access-level": "write",
                        "actions": "CreateConfigurationSet",
                        "description": "Creates a new configuration set"
                    },
                    "CreateConfigurationSetEventDestination": {
                        "access-level": "write",
                        "actions": "CreateConfigurationSetEventDestination",
                        "description": "Creates a configuration set event destination"
                    },
                    "CreateConfigurationSetTrackingOptions": {
                        "access-level": "write",
                        "actions": "CreateConfigurationSetTrackingOptions",
                        "description": "Creates an association between a configuration set and a custom domain for open and click event tracking"
                    },
                    "CreateCustomVerificationEmailTemplate": {
                        "access-level": "write",
                        "actions": "CreateCustomVerificationEmailTemplate",
                        "description": "Creates a new custom verification email template"
                    },
                    "CreateReceiptFilter": {
                        "access-level": "write",
                        "actions": "CreateReceiptFilter",
                        "description": "Creates a new IP address filter"
                    },
                    "CreateReceiptRule": {
                        "access-level": "write",
                        "actions": "CreateReceiptRule",
                        "description": "Creates a receipt rule"
                    },
                    "CreateReceiptRuleSet": {
                        "access-level": "write",
                        "actions": "CreateReceiptRuleSet",
                        "description": "Creates an empty receipt rule set"
                    },
                    "CreateTemplate": {
                        "access-level": "write",
                        "actions": "CreateTemplate",
                        "description": "Creates an email template"
                    },
                    "DeleteConfigurationSet": {
                        "access-level": "write",
                        "actions": "DeleteConfigurationSet",
                        "description": "Deletes the configuration set"
                    },
                    "DeleteConfigurationSetEventDestination": {
                        "access-level": "write",
                        "actions": "DeleteConfigurationSetEventDestination",
                        "description": "Deletes a configuration set event destination"
                    },
                    "DeleteConfigurationSetTrackingOptions": {
                        "access-level": "write",
                        "actions": "DeleteConfigurationSetTrackingOptions",
                        "description": "Deletes an association between a configuration set and a custom domain for open and click event tracking"
                    },
                    "DeleteCustomVerificationEmailTemplate": {
                        "access-level": "write",
                        "actions": "DeleteCustomVerificationEmailTemplate",
                        "description": "Deletes an existing custom verification email template"
                    },
                    "DeleteIdentity": {
                        "access-level": "write",
                        "actions": "DeleteIdentity",
                        "description": "Deletes the specified identity (an email address or a domain) from the list of verified identities"
                    },
                    "DeleteIdentityPolicy": {
                        "access-level": "write",
                        "actions": "DeleteIdentityPolicy",
                        "description": "Deletes the specified identity (an email address or a domain) from the list of verified identities"
                    },
                    "DeleteReceiptFilter": {
                        "access-level": "write",
                        "actions": "DeleteReceiptFilter",
                        "description": "Deletes the specified IP address filter"
                    },
                    "DeleteReceiptRule": {
                        "access-level": "write",
                        "actions": "DeleteReceiptRule",
                        "description": "Deletes the specified receipt rule"
                    },
                    "DeleteReceiptRuleSet": {
                        "access-level": "write",
                        "actions": "DeleteReceiptRuleSet",
                        "description": "Deletes the specified receipt rule set and all of the receipt rules it contains"
                    },
                    "DeleteTemplate": {
                        "access-level": "write",
                        "actions": "DeleteTemplate",
                        "description": "Deletes an email template"
                    },
                    "DeleteVerifiedEmailAddress": {
                        "access-level": "write",
                        "actions": "DeleteVerifiedEmailAddress",
                        "description": "Deletes the specified email address from the list of verified addresses"
                    },
                    "PutIdentityPolicy": {
                        "access-level": "write",
                        "actions": "PutIdentityPolicy",
                        "description": "Adds or updates a sending authorization policy for the specified identity (an email address or a domain)"
                    },
                    "ReorderReceiptRuleSet": {
                        "access-level": "write",
                        "actions": "ReorderReceiptRuleSet",
                        "description": "Reorders the receipt rules within a receipt rule set"
                    },
                    "SendBounce": {
                        "access-level": "write",
                        "actions": "SendBounce",
                        "condition-keys": [
                            "ses:FromAddress"
                        ],
                        "description": "Generates and sends a bounce message to the sender of an email you received through Amazon SES"
                    },
                    "SendBulkTemplatedEmail": {
                        "access-level": "write",
                        "actions": "SendBulkTemplatedEmail",
                        "condition-keys": [
                            "ses:FeedbackAddress",
                            "ses:FromAddress",
                            "ses:FromDisplayName",
                            "ses:Recipients"
                        ],
                        "description": "Composes an email message to multiple destinations"
                    },
                    "SendCustomVerificationEmail": {
                        "access-level": "write",
                        "actions": "SendCustomVerificationEmail",
                        "condition-keys": [
                            "ses:FeedbackAddress",
                            "ses:FromAddress",
                            "ses:FromDisplayName",
                            "ses:Recipients"
                        ],
                        "description": "Adds an email address to the list of identities for your Amazon SES account in the current AWS Region and attempts to verify it"
                    },
                    "SendEmail": {
                        "access-level": "write",
                        "actions": "SendEmail",
                        "condition-keys": [
                            "ses:FeedbackAddress",
                            "ses:FromAddress",
                            "ses:FromDisplayName",
                            "ses:Recipients"
                        ],
                        "description": "Composes an email message based on input data, and then immediately queues the message for sending"
                    },
                    "SendRawEmail": {
                        "access-level": "write",
                        "actions": "SendRawEmail",
                        "condition-keys": [
                            "ses:FeedbackAddress",
                            "ses:FromAddress",
                            "ses:FromDisplayName",
                            "ses:Recipients"
                        ],
                        "description": "Sends an email message, with header and content specified by the client"
                    },
                    "SendTemplatedEmail": {
                        "access-level": "write",
                        "actions": "SendTemplatedEmail",
                        "condition-keys": [
                            "ses:FeedbackAddress",
                            "ses:FromAddress",
                            "ses:FromDisplayName",
                            "ses:Recipients"
                        ],
                        "description": "Composes an email message using an email template and immediately queues it for sending"
                    },
                    "SetActiveReceiptRuleSet": {
                        "access-level": "write",
                        "actions": "SetActiveReceiptRuleSet",
                        "description": "Sets the specified receipt rule set as the active receipt rule set"
                    },
                    "SetIdentityDkimEnabled": {
                        "access-level": "write",
                        "actions": "SetIdentityDkimEnabled",
                        "description": "Enables or disables Easy DKIM signing of email sent from an identity"
                    },
                    "SetIdentityFeedbackForwardingEnabled": {
                        "access-level": "write",
                        "actions": "SetIdentityFeedbackForwardingEnabled",
                        "description": "Given an identity (an email address or a domain), enables or disables whether Amazon SES forwards bounce and complaint notifications as email"
                    },
                    "SetIdentityHeadersInNotificationsEnabled": {
                        "access-level": "write",
                        "actions": "SetIdentityHeadersInNotificationsEnabled",
                        "description": "Given an identity (an email address or a domain), sets whether Amazon SES includes the original email headers in the Amazon Simple Notification Service (Amazon SNS) notifications of a specified type"
                    },
                    "SetIdentityMailFromDomain": {
                        "access-level": "write",
                        "actions": "SetIdentityMailFromDomain",
                        "description": "Enables or disables the custom MAIL FROM domain setup for a verified identity (an email address or a domain)"
                    },
                    "SetIdentityNotificationTopic": {
                        "access-level": "write",
                        "actions": "SetIdentityNotificationTopic",
                        "description": "Given an identity (an email address or a domain), sets the Amazon Simple Notification Service (Amazon SNS) topic to which Amazon SES will publish bounce, complaint, and/or delivery notifications for emails sent with that identity as the Source"
                    },
                    "SetReceiptRulePosition": {
                        "access-level": "write",
                        "actions": "SetReceiptRulePosition",
                        "description": "Sets the position of the specified receipt rule in the receipt rule set"
                    },
                    "TestRenderTemplate": {
                        "access-level": "write",
                        "actions": "TestRenderTemplate",
                        "description": "Creates a preview of the MIME content of an email when provided with a template and a set of replacement data"
                    },
                    "UpdateAccountSendingEnabled": {
                        "access-level": "write",
                        "actions": "UpdateAccountSendingEnabled",
                        "description": "Enables or disables email sending across your entire Amazon SES account in the current AWS Region"
                    },
                    "UpdateConfigurationSetEventDestination": {
                        "access-level": "write",
                        "actions": "UpdateConfigurationSetEventDestination",
                        "description": "Updates the event destination of a configuration set"
                    },
                    "UpdateConfigurationSetReputationMetricsEnabled": {
                        "access-level": "write",
                        "actions": "UpdateConfigurationSetReputationMetricsEnabled",
                        "description": "Enables or disables the publishing of reputation metrics for emails sent using a specific configuration set in a given AWS Region"
                    },
                    "UpdateConfigurationSetSendingEnabled": {
                        "access-level": "write",
                        "actions": "UpdateConfigurationSetSendingEnabled",
                        "description": "Enables or disables email sending for messages sent using a specific configuration set in a given AWS Region"
                    },
                    "UpdateConfigurationSetTrackingOptions": {
                        "access-level": "write",
                        "actions": "UpdateConfigurationSetTrackingOptions",
                        "description": "Modifies an association between a configuration set and a custom domain for open and click event tracking"
                    },
                    "UpdateCustomVerificationEmailTemplate": {
                        "access-level": "write",
                        "actions": "UpdateCustomVerificationEmailTemplate",
                        "description": "Updates an existing custom verification email template"
                    },
                    "UpdateReceiptRule": {
                        "access-level": "write",
                        "actions": "UpdateReceiptRule",
                        "description": "Updates a receipt rule"
                    },
                    "UpdateTemplate": {
                        "access-level": "write",
                        "actions": "UpdateTemplate",
                        "description": "Updates an email template"
                    }
                }
            }
        },
        "sessionmanagermessagegatewayservice": {
            "actions": {
                "write": {
                    "CreateControlChannel": {
                        "access-level": "write",
                        "actions": "CreateControlChannel",
                        "description": "Registers a control channel for an instance to send control messages to Systems Manager service."
                    },
                    "CreateDataChannel": {
                        "access-level": "write",
                        "actions": "CreateDataChannel",
                        "description": "Registers a data channel for an instance to send data messages to Systems Manager service."
                    },
                    "OpenControlChannel": {
                        "access-level": "write",
                        "actions": "OpenControlChannel",
                        "description": "Opens a websocket connection for a registered control channel stream from an instance to Systems Manager service."
                    },
                    "OpenDataChannel": {
                        "access-level": "write",
                        "actions": "OpenDataChannel",
                        "description": "Opens a websocket connection for a registered data channel stream from an instance to Systems Manager service."
                    }
                }
            }
        },
        "shield": {
            "actions": {
                "list": {
                    "ListAttacks": {
                        "access-level": "list",
                        "actions": "ListAttacks",
                        "description": "List all existing attacks"
                    },
                    "ListProtections": {
                        "access-level": "list",
                        "actions": "ListProtections",
                        "description": "List all existing protections"
                    }
                },
                "read": {
                    "DescribeAttack": {
                        "access-level": "read",
                        "actions": "DescribeAttack",
                        "description": "Get attack details",
                        "resource-types": "attack*"
                    },
                    "DescribeDRTAccess": {
                        "access-level": "read",
                        "actions": "DescribeDRTAccess",
                        "description": "Returns the current role and list of Amazon S3 log buckets used by the DDoS Response team to access your AWS account while assisting with attack mitigation"
                    },
                    "DescribeEmergencyContactSettings": {
                        "access-level": "read",
                        "actions": "DescribeEmergencyContactSettings",
                        "description": "Lists the email addresses that the DRT can use to contact you during a suspected attack"
                    },
                    "DescribeProtection": {
                        "access-level": "read",
                        "actions": "DescribeProtection",
                        "description": "Get protection details",
                        "resource-types": "protection*"
                    },
                    "DescribeSubscription": {
                        "access-level": "read",
                        "actions": "DescribeSubscription",
                        "description": "Get subscription details, such as start time"
                    },
                    "GetSubscriptionState": {
                        "access-level": "read",
                        "actions": "GetSubscriptionState",
                        "description": "Get subscription state"
                    }
                },
                "write": {
                    "AssociateDRTLogBucket": {
                        "access-level": "write",
                        "actions": "AssociateDRTLogBucket",
                        "dependent-actions": "s3:GetBucketPolicy s3:PutBucketPolicy",
                        "description": "Authorizes the DDoS Response team to access the specified Amazon S3 bucket containing your flow logs"
                    },
                    "AssociateDRTRole": {
                        "access-level": "write",
                        "actions": "AssociateDRTRole",
                        "dependent-actions": "iam:GetRole iam:ListAttachedRolePolicies iam:PassRole",
                        "description": "Authorizes the DDoS Response team using the specified role, to access your AWS account to assist with DDoS attack mitigation during potential attacks"
                    },
                    "CreateProtection": {
                        "access-level": "write",
                        "actions": "CreateProtection",
                        "description": "Activate DDoS protection service for a given resource ARN",
                        "resource-types": "protection*"
                    },
                    "CreateSubscription": {
                        "access-level": "write",
                        "actions": "CreateSubscription",
                        "description": "Activate subscription"
                    },
                    "DeleteProtection": {
                        "access-level": "write",
                        "actions": "DeleteProtection",
                        "description": "Delete an existing protection",
                        "resource-types": "protection*"
                    },
                    "DeleteSubscription": {
                        "access-level": "write",
                        "actions": "DeleteSubscription",
                        "description": "Deactivate subscription"
                    },
                    "DisassociateDRTLogBucket": {
                        "access-level": "write",
                        "actions": "DisassociateDRTLogBucket",
                        "dependent-actions": "s3:DeleteBucketPolicy s3:GetBucketPolicy s3:PutBucketPolicy",
                        "description": "Removes the DDoS Response team\\'s access to the specified Amazon S3 bucket containing your flow logs"
                    },
                    "DisassociateDRTRole": {
                        "access-level": "write",
                        "actions": "DisassociateDRTRole",
                        "description": "Removes the DDoS Response team\\'s access to your AWS account"
                    },
                    "UpdateEmergencyContactSettings": {
                        "access-level": "write",
                        "actions": "UpdateEmergencyContactSettings",
                        "description": "Updates the details of the list of email addresses that the DRT can use to contact you during a suspected attack"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "attack": {
                    "arn": "arn:${Partition}:shield::${Account}:attack/${Id}",
                    "resource-types": "attack"
                },
                "protection": {
                    "arn": "arn:${Partition}:shield::${Account}:protection/${Id}",
                    "resource-types": "protection"
                }
            }
        },
        "simpledb": {
            "actions": {
                "list": {
                    "ListDomains": {
                        "access-level": "list",
                        "actions": "ListDomains",
                        "description": "Description for ListDomains"
                    }
                },
                "read": {
                    "DomainMetadata": {
                        "access-level": "read",
                        "actions": "DomainMetadata",
                        "description": "Returns information about the domain, including when the domain was created, the number of items and attributes, and the size of attribute names and values.",
                        "resource-types": "domain*"
                    },
                    "GetAttributes": {
                        "access-level": "read",
                        "actions": "GetAttributes",
                        "description": "Returns all of the attributes associated with the item.",
                        "resource-types": "domain*"
                    },
                    "Select": {
                        "access-level": "read",
                        "actions": "Select",
                        "description": "Description for Select",
                        "resource-types": "domain*"
                    }
                },
                "write": {
                    "BatchDeleteAttributes": {
                        "access-level": "write",
                        "actions": "BatchDeleteAttributes",
                        "description": "Performs multiple DeleteAttributes operations in a single call, which reduces round trips and latencies.",
                        "resource-types": "domain*"
                    },
                    "BatchPutAttributes": {
                        "access-level": "write",
                        "actions": "BatchPutAttributes",
                        "description": "With the BatchPutAttributes operation, you can perform multiple PutAttribute operations in a single call. With the BatchPutAttributes operation, you can perform multiple PutAttribute operations in a single call.",
                        "resource-types": "domain*"
                    },
                    "CreateDomain": {
                        "access-level": "write",
                        "actions": "CreateDomain",
                        "description": "The CreateDomain operation creates a new domain.",
                        "resource-types": "domain*"
                    },
                    "DeleteAttributes": {
                        "access-level": "write",
                        "actions": "DeleteAttributes",
                        "description": "Deletes one or more attributes associated with the item.",
                        "resource-types": "domain*"
                    },
                    "DeleteDomain": {
                        "access-level": "write",
                        "actions": "DeleteDomain",
                        "description": "The DeleteDomain operation deletes a domain.",
                        "resource-types": "domain*"
                    },
                    "PutAttributes": {
                        "access-level": "write",
                        "actions": "PutAttributes",
                        "description": "The PutAttributes operation creates or replaces attributes in an item.",
                        "resource-types": "domain*"
                    }
                }
            }
        },
        "simpleworkflowservice": {
            "actions": {
                "list": {
                    "ListActivityTypes": {
                        "access-level": "list",
                        "actions": "ListActivityTypes",
                        "description": "Returns information about all activities registered in the specified domain that match the specified name and registration status.",
                        "resource-types": "domain*"
                    },
                    "ListClosedWorkflowExecutions": {
                        "access-level": "list",
                        "actions": "ListClosedWorkflowExecutions",
                        "condition-keys": [
                            "swf:tagFilter.tag",
                            "swf:typeFilter.name",
                            "swf:typeFilter.version"
                        ],
                        "description": "Returns a list of closed workflow executions in the specified domain that meet the filtering criteria.",
                        "resource-types": "domain*"
                    },
                    "ListDomains": {
                        "access-level": "list",
                        "actions": "ListDomains",
                        "description": "Returns the list of domains registered in the account."
                    },
                    "ListOpenWorkflowExecutions": {
                        "access-level": "list",
                        "actions": "ListOpenWorkflowExecutions",
                        "condition-keys": [
                            "swf:tagFilter.tag",
                            "swf:typeFilter.name",
                            "swf:typeFilter.version"
                        ],
                        "description": "Returns a list of open workflow executions in the specified domain that meet the filtering criteria.",
                        "resource-types": "domain*"
                    },
                    "ListWorkflowTypes": {
                        "access-level": "list",
                        "actions": "ListWorkflowTypes",
                        "description": "Returns information about workflow types in the specified domain.",
                        "resource-types": "domain*"
                    }
                },
                "read": {
                    "CountClosedWorkflowExecutions": {
                        "access-level": "read",
                        "actions": "CountClosedWorkflowExecutions",
                        "condition-keys": [
                            "swf:tagFilter.tag",
                            "swf:typeFilter.name",
                            "swf:typeFilter.version"
                        ],
                        "description": "Returns the number of closed workflow executions within the given domain that meet the specified filtering criteria.",
                        "resource-types": "domain*"
                    },
                    "CountOpenWorkflowExecutions": {
                        "access-level": "read",
                        "actions": "CountOpenWorkflowExecutions",
                        "condition-keys": [
                            "swf:tagFilter.tag",
                            "swf:typeFilter.name",
                            "swf:typeFilter.version"
                        ],
                        "description": "Returns the number of open workflow executions within the given domain that meet the specified filtering criteria.",
                        "resource-types": "domain*"
                    },
                    "CountPendingActivityTasks": {
                        "access-level": "read",
                        "actions": "CountPendingActivityTasks",
                        "condition-keys": [
                            "swf:taskList.name"
                        ],
                        "description": "Returns the estimated number of activity tasks in the specified task list.",
                        "resource-types": "domain*"
                    },
                    "CountPendingDecisionTasks": {
                        "access-level": "read",
                        "actions": "CountPendingDecisionTasks",
                        "condition-keys": [
                            "swf:taskList.name"
                        ],
                        "description": "Returns the estimated number of decision tasks in the specified task list.",
                        "resource-types": "domain*"
                    },
                    "DescribeActivityType": {
                        "access-level": "read",
                        "actions": "DescribeActivityType",
                        "condition-keys": [
                            "swf:activityType.name",
                            "swf:activityType.version"
                        ],
                        "description": "Returns information about the specified activity type.",
                        "resource-types": "domain*"
                    },
                    "DescribeDomain": {
                        "access-level": "read",
                        "actions": "DescribeDomain",
                        "description": "Returns information about the specified domain, including description and status.",
                        "resource-types": "domain*"
                    },
                    "DescribeWorkflowExecution": {
                        "access-level": "read",
                        "actions": "DescribeWorkflowExecution",
                        "description": "Returns information about the specified workflow execution including its type and some statistics.",
                        "resource-types": "domain*"
                    },
                    "DescribeWorkflowType": {
                        "access-level": "read",
                        "actions": "DescribeWorkflowType",
                        "condition-keys": [
                            "swf:workflowType.name",
                            "swf:workflowType.version"
                        ],
                        "description": "Returns information about the specified workflow type.",
                        "resource-types": "domain*"
                    },
                    "GetWorkflowExecutionHistory": {
                        "access-level": "read",
                        "actions": "GetWorkflowExecutionHistory",
                        "description": "Returns the history of the specified workflow execution.",
                        "resource-types": "domain*"
                    }
                },
                "write": {
                    "CancelTimer": {
                        "access-level": "write",
                        "actions": "CancelTimer",
                        "description": "Description for CancelTimer",
                        "resource-types": "domain*"
                    },
                    "CancelWorkflowExecution": {
                        "access-level": "write",
                        "actions": "CancelWorkflowExecution",
                        "description": "Description for CancelWorkflowExecution",
                        "resource-types": "domain*"
                    },
                    "CompleteWorkflowExecution": {
                        "access-level": "write",
                        "actions": "CompleteWorkflowExecution",
                        "description": "Description for CompleteWorkflowExecution",
                        "resource-types": "domain*"
                    },
                    "ContinueAsNewWorkflowExecution": {
                        "access-level": "write",
                        "actions": "ContinueAsNewWorkflowExecution",
                        "description": "Description for ContinueAsNewWorkflowExecution",
                        "resource-types": "domain*"
                    },
                    "DeprecateActivityType": {
                        "access-level": "write",
                        "actions": "DeprecateActivityType",
                        "condition-keys": [
                            "swf:activityType.name",
                            "swf:activityType.version"
                        ],
                        "description": "Deprecates the specified activity type.",
                        "resource-types": "domain*"
                    },
                    "DeprecateDomain": {
                        "access-level": "write",
                        "actions": "DeprecateDomain",
                        "description": "Deprecates the specified domain.",
                        "resource-types": "domain*"
                    },
                    "DeprecateWorkflowType": {
                        "access-level": "write",
                        "actions": "DeprecateWorkflowType",
                        "condition-keys": [
                            "swf:workflowType.name",
                            "swf:workflowType.version"
                        ],
                        "description": "Deprecates the specified workflow type.",
                        "resource-types": "domain*"
                    },
                    "FailWorkflowExecution": {
                        "access-level": "write",
                        "actions": "FailWorkflowExecution",
                        "description": "Description for FailWorkflowExecution",
                        "resource-types": "domain*"
                    },
                    "PollForActivityTask": {
                        "access-level": "write",
                        "actions": "PollForActivityTask",
                        "condition-keys": [
                            "swf:taskList.name"
                        ],
                        "description": "Used by workers to get an ActivityTask from the specified activity taskList.",
                        "resource-types": "domain*"
                    },
                    "PollForDecisionTask": {
                        "access-level": "write",
                        "actions": "PollForDecisionTask",
                        "condition-keys": [
                            "swf:taskList.name"
                        ],
                        "description": "Used by deciders to get a DecisionTask from the specified decision taskList.",
                        "resource-types": "domain*"
                    },
                    "RecordActivityTaskHeartbeat": {
                        "access-level": "write",
                        "actions": "RecordActivityTaskHeartbeat",
                        "description": "Used by activity workers to report to the service that the ActivityTask represented by the specified taskToken is still making progress.",
                        "resource-types": "domain*"
                    },
                    "RecordMarker": {
                        "access-level": "write",
                        "actions": "RecordMarker",
                        "description": "Description for RecordMarker",
                        "resource-types": "domain*"
                    },
                    "RegisterActivityType": {
                        "access-level": "write",
                        "actions": "RegisterActivityType",
                        "condition-keys": [
                            "swf:defaultTaskList.name",
                            "swf:name",
                            "swf:version"
                        ],
                        "description": "Registers a new activity type along with its configuration settings in the specified domain.",
                        "resource-types": "domain*"
                    },
                    "RegisterDomain": {
                        "access-level": "write",
                        "actions": "RegisterDomain",
                        "description": "Registers a new domain."
                    },
                    "RegisterWorkflowType": {
                        "access-level": "write",
                        "actions": "RegisterWorkflowType",
                        "condition-keys": [
                            "swf:defaultTaskList.name",
                            "swf:name",
                            "swf:version"
                        ],
                        "description": "Registers a new workflow type and its configuration settings in the specified domain.",
                        "resource-types": "domain*"
                    },
                    "RequestCancelActivityTask": {
                        "access-level": "write",
                        "actions": "RequestCancelActivityTask",
                        "description": "Description for RequestCancelActivityTask",
                        "resource-types": "domain*"
                    },
                    "RequestCancelExternalWorkflowExecution": {
                        "access-level": "write",
                        "actions": "RequestCancelExternalWorkflowExecution",
                        "description": "Description for RequestCancelExternalWorkflowExecution",
                        "resource-types": "domain*"
                    },
                    "RequestCancelWorkflowExecution": {
                        "access-level": "write",
                        "actions": "RequestCancelWorkflowExecution",
                        "description": "Records a WorkflowExecutionCancelRequested event in the currently running workflow execution identified by the given domain, workflowId, and runId.",
                        "resource-types": "domain*"
                    },
                    "RespondActivityTaskCanceled": {
                        "access-level": "write",
                        "actions": "RespondActivityTaskCanceled",
                        "description": "Used by workers to tell the service that the ActivityTask identified by the taskToken was successfully canceled.",
                        "resource-types": "domain*"
                    },
                    "RespondActivityTaskCompleted": {
                        "access-level": "write",
                        "actions": "RespondActivityTaskCompleted",
                        "condition-keys": [
                            "swf:activityType.name",
                            "swf:activityType.version",
                            "swf:tagList.member.0",
                            "swf:tagList.member.1",
                            "swf:tagList.member.2",
                            "swf:tagList.member.3",
                            "swf:tagList.member.4",
                            "swf:taskList.name",
                            "swf:workflowType.name",
                            "swf:workflowType.version"
                        ],
                        "description": "Used by workers to tell the service that the ActivityTask identified by the taskToken completed successfully with a result (if provided).",
                        "resource-types": "domain*"
                    },
                    "RespondActivityTaskFailed": {
                        "access-level": "write",
                        "actions": "RespondActivityTaskFailed",
                        "description": "Used by workers to tell the service that the ActivityTask identified by the taskToken has failed with reason (if specified).",
                        "resource-types": "domain*"
                    },
                    "RespondDecisionTaskCompleted": {
                        "access-level": "write",
                        "actions": "RespondDecisionTaskCompleted",
                        "description": "Used by deciders to tell the service that the DecisionTask identified by the taskToken has successfully completed.",
                        "resource-types": "domain*"
                    },
                    "ScheduleActivityTask": {
                        "access-level": "write",
                        "actions": "ScheduleActivityTask",
                        "description": "Description for ScheduleActivityTask",
                        "resource-types": "domain*"
                    },
                    "SignalExternalWorkflowExecution": {
                        "access-level": "write",
                        "actions": "SignalExternalWorkflowExecution",
                        "description": "Description for SignalExternalWorkflowExecution",
                        "resource-types": "domain*"
                    },
                    "SignalWorkflowExecution": {
                        "access-level": "write",
                        "actions": "SignalWorkflowExecution",
                        "description": "Records a WorkflowExecutionSignaled event in the workflow execution history and creates a decision task for the workflow execution identified by the given domain, workflowId and runId.",
                        "resource-types": "domain*"
                    },
                    "StartChildWorkflowExecution": {
                        "access-level": "write",
                        "actions": "StartChildWorkflowExecution",
                        "description": "Description for StartChildWorkflowExecution",
                        "resource-types": "domain*"
                    },
                    "StartTimer": {
                        "access-level": "write",
                        "actions": "StartTimer",
                        "description": "Description for StartTimer",
                        "resource-types": "domain*"
                    },
                    "StartWorkflowExecution": {
                        "access-level": "write",
                        "actions": "StartWorkflowExecution",
                        "condition-keys": [
                            "swf:tagList.member.0",
                            "swf:tagList.member.1",
                            "swf:tagList.member.2",
                            "swf:tagList.member.3",
                            "swf:tagList.member.4",
                            "swf:taskList.name",
                            "swf:workflowType.name",
                            "swf:workflowType.version"
                        ],
                        "description": "Starts an execution of the workflow type in the specified domain using the provided workflowId and input data.",
                        "resource-types": "domain*"
                    },
                    "TerminateWorkflowExecution": {
                        "access-level": "write",
                        "actions": "TerminateWorkflowExecution",
                        "description": "Records a WorkflowExecutionTerminated event and forces closure of the workflow execution identified by the given domain, runId, and workflowId.",
                        "resource-types": "domain*"
                    }
                }
            }
        },
        "snowball": {
            "actions": {
                "list": {
                    "DescribeAddresses": {
                        "access-level": "list",
                        "actions": "DescribeAddresses",
                        "description": "Returns a specified number of ADDRESS objects."
                    },
                    "ListClusterJobs": {
                        "access-level": "list",
                        "actions": "ListClusterJobs",
                        "description": "Returns an array of JobListEntry objects of the specified length."
                    },
                    "ListClusters": {
                        "access-level": "list",
                        "actions": "ListClusters",
                        "description": "Returns an array of ClusterListEntry objects of the specified length."
                    },
                    "ListJobs": {
                        "access-level": "list",
                        "actions": "ListJobs",
                        "description": "Returns an array of JobListEntry objects of the specified length."
                    }
                },
                "read": {
                    "DescribeAddress": {
                        "access-level": "read",
                        "actions": "DescribeAddress",
                        "description": "Takes an AddressId and returns specific details about that address in the form of an Address object."
                    },
                    "DescribeCluster": {
                        "access-level": "read",
                        "actions": "DescribeCluster",
                        "description": "Returns information about a specific cluster including shipping information, cluster status, and other important metadata."
                    },
                    "DescribeJob": {
                        "access-level": "read",
                        "actions": "DescribeJob",
                        "description": "Returns information about a specific job including shipping information, job status, and other important metadata."
                    },
                    "GetJobManifest": {
                        "access-level": "read",
                        "actions": "GetJobManifest",
                        "description": "Returns a link to an Amazon S3 presigned URL for the manifest file associated with the specified JobId value."
                    },
                    "GetJobUnlockCode": {
                        "access-level": "read",
                        "actions": "GetJobUnlockCode",
                        "description": "Returns the UnlockCode code value for the specified job."
                    },
                    "GetSnowballUsage": {
                        "access-level": "read",
                        "actions": "GetSnowballUsage",
                        "description": "Returns information about the Snowball service limit for your account, and also the number of Snowballs your account has in use."
                    }
                },
                "write": {
                    "CancelCluster": {
                        "access-level": "write",
                        "actions": "CancelCluster",
                        "description": "Cancels a cluster job."
                    },
                    "CancelJob": {
                        "access-level": "write",
                        "actions": "CancelJob",
                        "description": "Cancels the specified job."
                    },
                    "CreateAddress": {
                        "access-level": "write",
                        "actions": "CreateAddress",
                        "description": "Creates an address for a Snowball to be shipped to."
                    },
                    "CreateCluster": {
                        "access-level": "write",
                        "actions": "CreateCluster",
                        "description": "Creates an empty cluster."
                    },
                    "CreateJob": {
                        "access-level": "write",
                        "actions": "CreateJob",
                        "description": "Creates a job to import or export data between Amazon S3 and your on-premises data center."
                    },
                    "UpdateCluster": {
                        "access-level": "write",
                        "actions": "UpdateCluster",
                        "description": "While a cluster\\'s ClusterState value is in the AwaitingQuorum state, you can update some of the information associated with a cluster."
                    },
                    "UpdateJob": {
                        "access-level": "write",
                        "actions": "UpdateJob",
                        "description": "While a job\\'s JobState value is New, you can update some of the information associated with a job."
                    }
                }
            }
        },
        "sns": {
            "actions": {
                "list": {
                    "ListEndpointsByPlatformApplication": {
                        "access-level": "list",
                        "actions": "ListEndpointsByPlatformApplication",
                        "description": "Lists the endpoints and endpoint attributes for devices in a supported push notification service, such as GCM and APNS."
                    },
                    "ListPlatformApplications": {
                        "access-level": "list",
                        "actions": "ListPlatformApplications",
                        "description": "Lists the platform application objects for the supported push notification services, such as APNS and GCM."
                    },
                    "ListSubscriptions": {
                        "access-level": "list",
                        "actions": "ListSubscriptions",
                        "description": "Returns a list of the requester\\'s subscriptions."
                    },
                    "ListSubscriptionsByTopic": {
                        "access-level": "list",
                        "actions": "ListSubscriptionsByTopic",
                        "description": "Returns a list of the subscriptions to a specific topic.",
                        "resource-types": "topic*"
                    },
                    "ListTopics": {
                        "access-level": "list",
                        "actions": "ListTopics",
                        "description": "Returns a list of the requester\\'s topics. Each call returns a limited list of topics, up to 100."
                    }
                },
                "permissions-management": {
                    "AddPermission": {
                        "access-level": "permissions-management",
                        "actions": "AddPermission",
                        "description": "Adds a statement to a topic\\'s access control policy, granting access for the specified AWS accounts to the specified actions.",
                        "resource-types": "topic*"
                    },
                    "RemovePermission": {
                        "access-level": "permissions-management",
                        "actions": "RemovePermission",
                        "description": "Removes a statement from a topic\\'s access control policy.",
                        "resource-types": "topic*"
                    }
                },
                "read": {
                    "CheckIfPhoneNumberIsOptedOut": {
                        "access-level": "read",
                        "actions": "CheckIfPhoneNumberIsOptedOut",
                        "description": "Accepts a phone number and indicates whether the phone holder has opted out of receiving SMS messages from your account."
                    },
                    "GetEndpointAttributes": {
                        "access-level": "read",
                        "actions": "GetEndpointAttributes",
                        "description": "Retrieves the endpoint attributes for a device on one of the supported push notification services, such as GCM and APNS."
                    },
                    "GetPlatformApplicationAttributes": {
                        "access-level": "read",
                        "actions": "GetPlatformApplicationAttributes",
                        "description": "Retrieves the attributes of the platform application object for the supported push notification services, such as APNS and GCM."
                    },
                    "GetSMSAttributes": {
                        "access-level": "read",
                        "actions": "GetSMSAttributes",
                        "description": "Returns the settings for sending SMS messages from your account."
                    },
                    "GetSubscriptionAttributes": {
                        "access-level": "read",
                        "actions": "GetSubscriptionAttributes",
                        "description": "Returns all of the properties of a subscription."
                    },
                    "GetTopicAttributes": {
                        "access-level": "read",
                        "actions": "GetTopicAttributes",
                        "description": "Returns all of the properties of a topic. Topic properties returned might differ based on the authorization of the user.",
                        "resource-types": "topic*"
                    },
                    "ListPhoneNumbersOptedOut": {
                        "access-level": "read",
                        "actions": "ListPhoneNumbersOptedOut",
                        "description": "Returns a list of phone numbers that are opted out, meaning you cannot send SMS messages to them."
                    }
                },
                "write": {
                    "ConfirmSubscription": {
                        "access-level": "write",
                        "actions": "ConfirmSubscription",
                        "description": "Verifies an endpoint owner\\'s intent to receive messages by validating the token sent to the endpoint by an earlier Subscribe action.",
                        "resource-types": "topic*"
                    },
                    "CreatePlatformApplication": {
                        "access-level": "write",
                        "actions": "CreatePlatformApplication",
                        "description": "Creates a platform application object for one of the supported push notification services, such as APNS and GCM, to which devices and mobile apps may register."
                    },
                    "CreatePlatformEndpoint": {
                        "access-level": "write",
                        "actions": "CreatePlatformEndpoint",
                        "description": "Creates an endpoint for a device and mobile app on one of the supported push notification services, such as GCM and APNS."
                    },
                    "CreateTopic": {
                        "access-level": "write",
                        "actions": "CreateTopic",
                        "description": "Creates a topic to which notifications can be published.",
                        "resource-types": "topic*"
                    },
                    "DeleteEndpoint": {
                        "access-level": "write",
                        "actions": "DeleteEndpoint",
                        "description": "Deletes the endpoint for a device and mobile app from Amazon SNS."
                    },
                    "DeletePlatformApplication": {
                        "access-level": "write",
                        "actions": "DeletePlatformApplication",
                        "description": "Deletes a platform application object for one of the supported push notification services, such as APNS and GCM."
                    },
                    "DeleteTopic": {
                        "access-level": "write",
                        "actions": "DeleteTopic",
                        "description": "Deletes a topic and all its subscriptions.",
                        "resource-types": "topic*"
                    },
                    "OptInPhoneNumber": {
                        "access-level": "write",
                        "actions": "OptInPhoneNumber",
                        "description": "Opts in a phone number that is currently opted out, which enables you to resume sending SMS messages to the number."
                    },
                    "Publish": {
                        "access-level": "write",
                        "actions": "Publish",
                        "description": "Sends a message to all of a topic\\'s subscribed endpoints.",
                        "resource-types": "topic*"
                    },
                    "SetEndpointAttributes": {
                        "access-level": "write",
                        "actions": "SetEndpointAttributes",
                        "description": "Sets the attributes for an endpoint for a device on one of the supported push notification services, such as GCM and APNS."
                    },
                    "SetPlatformApplicationAttributes": {
                        "access-level": "write",
                        "actions": "SetPlatformApplicationAttributes",
                        "description": "Sets the attributes of the platform application object for the supported push notification services, such as APNS and GCM."
                    },
                    "SetSubscriptionAttributes": {
                        "access-level": "write",
                        "actions": "SetSubscriptionAttributes",
                        "description": "Allows a subscription owner to set an attribute of the topic to a new value."
                    },
                    "SetTopicAttributes": {
                        "access-level": "write",
                        "actions": "SetTopicAttributes",
                        "description": "Allows a topic owner to set an attribute of the topic to a new value.",
                        "resource-types": "topic*"
                    },
                    "Subscribe": {
                        "access-level": "write",
                        "actions": "Subscribe",
                        "condition-keys": [
                            "sns:Endpoint",
                            "sns:Protocol"
                        ],
                        "description": "Prepares to subscribe an endpoint by sending the endpoint a confirmation message.",
                        "resource-types": "topic*"
                    },
                    "Unsubscribe": {
                        "access-level": "write",
                        "actions": "Unsubscribe",
                        "description": "Deletes a subscription. If the subscription requires authentication for deletion, only the owner of the subscription or the topic\\'s owner can unsubscribe, and an AWS signature is required."
                    }
                }
            }
        },
        "sqs": {
            "actions": {
                "list": {
                    "ListQueues": {
                        "access-level": "list",
                        "actions": "ListQueues",
                        "description": "Returns a list of your queues."
                    }
                },
                "permissions-management": {
                    "AddPermission": {
                        "access-level": "permissions-management",
                        "actions": "AddPermission",
                        "description": "Adds a permission to a queue for a specific principal.",
                        "resource-types": "queue*"
                    },
                    "RemovePermission": {
                        "access-level": "permissions-management",
                        "actions": "RemovePermission",
                        "description": "Revokes any permissions in the queue policy that matches the specified Label parameter.",
                        "resource-types": "queue*"
                    }
                },
                "read": {
                    "GetQueueAttributes": {
                        "access-level": "read",
                        "actions": "GetQueueAttributes",
                        "description": "Gets attributes for the specified queue.",
                        "resource-types": "queue*"
                    },
                    "GetQueueUrl": {
                        "access-level": "read",
                        "actions": "GetQueueUrl",
                        "description": "Returns the URL of an existing queue.",
                        "resource-types": "queue*"
                    },
                    "ListDeadLetterSourceQueues": {
                        "access-level": "read",
                        "actions": "ListDeadLetterSourceQueues",
                        "description": "Returns a list of your queues that have the RedrivePolicy queue attribute configured with a dead letter queue.",
                        "resource-types": "queue*"
                    },
                    "ListQueueTags": {
                        "access-level": "read",
                        "actions": "ListQueueTags",
                        "description": "Lists tags added to an SQS queue.",
                        "resource-types": "queue*"
                    },
                    "ReceiveMessage": {
                        "access-level": "read",
                        "actions": "ReceiveMessage",
                        "description": "Retrieves one or more messages, with a maximum limit of 10 messages, from the specified queue.",
                        "resource-types": "queue*"
                    }
                },
                "tagging": {
                    "TagQueue": {
                        "access-level": "tagging",
                        "actions": "TagQueue",
                        "description": "Add tags to the specified SQS queue.",
                        "resource-types": "queue*"
                    },
                    "UntagQueue": {
                        "access-level": "tagging",
                        "actions": "UntagQueue",
                        "description": "Remove tags from the specified SQS queue.",
                        "resource-types": "queue*"
                    }
                },
                "write": {
                    "ChangeMessageVisibility": {
                        "access-level": "write",
                        "actions": "ChangeMessageVisibility",
                        "description": "Changes the visibility timeout of a specified message in a queue to a new value.",
                        "resource-types": "queue*"
                    },
                    "ChangeMessageVisibilityBatch": {
                        "access-level": "write",
                        "actions": "ChangeMessageVisibilityBatch",
                        "description": "Changes the visibility timeout of multiple messages.",
                        "resource-types": "queue*"
                    },
                    "CreateQueue": {
                        "access-level": "write",
                        "actions": "CreateQueue",
                        "description": "Creates a new queue, or returns the URL of an existing one.",
                        "resource-types": "queue*"
                    },
                    "DeleteMessage": {
                        "access-level": "write",
                        "actions": "DeleteMessage",
                        "description": "Deletes the specified message from the specified queue.",
                        "resource-types": "queue*"
                    },
                    "DeleteMessageBatch": {
                        "access-level": "write",
                        "actions": "DeleteMessageBatch",
                        "description": "Deletes up to ten messages from the specified queue.",
                        "resource-types": "queue*"
                    },
                    "DeleteQueue": {
                        "access-level": "write",
                        "actions": "DeleteQueue",
                        "description": "Deletes the queue specified by the queue URL, regardless of whether the queue is empty.",
                        "resource-types": "queue*"
                    },
                    "PurgeQueue": {
                        "access-level": "write",
                        "actions": "PurgeQueue",
                        "description": "Deletes the messages in a queue specified by the queue URL.",
                        "resource-types": "queue*"
                    },
                    "SendMessage": {
                        "access-level": "write",
                        "actions": "SendMessage",
                        "description": "Delivers a message to the specified queue.",
                        "resource-types": "queue*"
                    },
                    "SendMessageBatch": {
                        "access-level": "write",
                        "actions": "SendMessageBatch",
                        "description": "Delivers up to ten messages to the specified queue.",
                        "resource-types": "queue*"
                    },
                    "SetQueueAttributes": {
                        "access-level": "write",
                        "actions": "SetQueueAttributes",
                        "description": "Sets the value of one or more queue attributes.",
                        "resource-types": "queue*"
                    }
                }
            }
        },
        "sso": {
            "actions": {
                "list": {
                    "DescribeGroups": {
                        "access-level": "list",
                        "actions": "DescribeGroups",
                        "description": "Retrieve groups\\' information"
                    },
                    "DescribeUsers": {
                        "access-level": "list",
                        "actions": "DescribeUsers",
                        "description": "Retrieves users\\' information"
                    },
                    "ListApplicationInstances": {
                        "access-level": "list",
                        "actions": "ListApplicationInstances",
                        "dependent-actions": "sso:GetApplicationInstance",
                        "description": "Retrieve all application instances"
                    },
                    "ListGroupsForUser": {
                        "access-level": "list",
                        "actions": "ListGroupsForUser",
                        "description": "Lists groups for a user"
                    },
                    "ListMembersInGroup": {
                        "access-level": "list",
                        "actions": "ListMembersInGroup",
                        "description": "Retrives all members that are part of the group"
                    }
                },
                "read": {
                    "DescribePermissionsPolicies": {
                        "access-level": "read",
                        "actions": "DescribePermissionsPolicies",
                        "description": "Retrieve all the permissions policies associated with a permission set"
                    },
                    "GetApplicationInstance": {
                        "access-level": "read",
                        "actions": "GetApplicationInstance",
                        "description": "Retrieve details for an application instance"
                    },
                    "GetApplicationTemplate": {
                        "access-level": "read",
                        "actions": "GetApplicationTemplate",
                        "description": "Retrieve application template details"
                    },
                    "GetPermissionSet": {
                        "access-level": "read",
                        "actions": "GetPermissionSet",
                        "description": "Retrieve details of a permission set"
                    },
                    "GetPermissionsPolicy": {
                        "access-level": "read",
                        "actions": "GetPermissionsPolicy",
                        "dependent-actions": "sso:DescribePermissionsPolicies",
                        "description": "Retrieve all permission policies associated with a permission set"
                    },
                    "GetProfile": {
                        "access-level": "read",
                        "actions": "GetProfile",
                        "description": "Retrieve a profile for an application instance"
                    },
                    "GetSSOConfiguration": {
                        "access-level": "read",
                        "actions": "GetSSOConfiguration",
                        "description": "Retrieve configuration for the current SSO instance"
                    },
                    "GetSSOStatus": {
                        "access-level": "read",
                        "actions": "GetSSOStatus",
                        "description": "Check if AWS Single Sign-On is enabled"
                    },
                    "GetTrust": {
                        "access-level": "read",
                        "actions": "GetTrust",
                        "description": "Retrieve the federation trust in a target account"
                    },
                    "GetUserPoolInfo": {
                        "access-level": "read",
                        "actions": "GetUserPoolInfo",
                        "description": "Retrieve User Pool information"
                    },
                    "ListApplicationInstanceCertificates": {
                        "access-level": "read",
                        "actions": "ListApplicationInstanceCertificates",
                        "description": "Retrieve all of the certificates for a given application instance"
                    },
                    "ListApplicationTemplates": {
                        "access-level": "read",
                        "actions": "ListApplicationTemplates",
                        "dependent-actions": "sso:GetApplicationTemplate",
                        "description": "Retrieve all supported application templates"
                    },
                    "ListApplications": {
                        "access-level": "read",
                        "actions": "ListApplications",
                        "description": "Retrieve all supported applications"
                    },
                    "ListDirectoryAssociations": {
                        "access-level": "read",
                        "actions": "ListDirectoryAssociations",
                        "description": "Retrieve details about the directory connected to AWS Single Sign-On"
                    },
                    "ListPermissionSets": {
                        "access-level": "read",
                        "actions": "ListPermissionSets",
                        "description": "Retrieve all permission sets"
                    },
                    "ListProfileAssociations": {
                        "access-level": "read",
                        "actions": "ListProfileAssociations",
                        "description": "Retrieve the directory user or group associated with the profile"
                    },
                    "ListProfiles": {
                        "access-level": "read",
                        "actions": "ListProfiles",
                        "dependent-actions": "sso:GetProfile",
                        "description": "Retrieve all profiles for an application instance"
                    },
                    "SearchGroups": {
                        "access-level": "read",
                        "actions": "SearchGroups",
                        "description": "Search for groups within the associated directory"
                    },
                    "SearchUsers": {
                        "access-level": "read",
                        "actions": "SearchUsers",
                        "description": "Search for users within the associated directory"
                    }
                },
                "write": {
                    "AddMemberToGroup": {
                        "access-level": "write",
                        "actions": "AddMemberToGroup",
                        "description": "Adds member to the group"
                    },
                    "AssociateDirectory": {
                        "access-level": "write",
                        "actions": "AssociateDirectory",
                        "description": "Connect a directory to be used by AWS Single Sign-On"
                    },
                    "AssociateProfile": {
                        "access-level": "write",
                        "actions": "AssociateProfile",
                        "description": "Create an association between a directory user or group and a profile"
                    },
                    "CreateAlias": {
                        "access-level": "write",
                        "actions": "CreateAlias",
                        "description": "Creates an alias for User Pool"
                    },
                    "CreateApplicationInstance": {
                        "access-level": "write",
                        "actions": "CreateApplicationInstance",
                        "description": "Add an application instance to AWS Single Sign-On"
                    },
                    "CreateApplicationInstanceCertificate": {
                        "access-level": "write",
                        "actions": "CreateApplicationInstanceCertificate",
                        "description": "Add a new certificate for an application instance"
                    },
                    "CreateGroup": {
                        "access-level": "write",
                        "actions": "CreateGroup",
                        "description": "Creats a group"
                    },
                    "CreatePermissionSet": {
                        "access-level": "write",
                        "actions": "CreatePermissionSet",
                        "description": "Create a permission set"
                    },
                    "CreateProfile": {
                        "access-level": "write",
                        "actions": "CreateProfile",
                        "description": "Create a profile for an application instance"
                    },
                    "CreateTrust": {
                        "access-level": "write",
                        "actions": "CreateTrust",
                        "description": "Create a federation trust in a target account"
                    },
                    "CreateUser": {
                        "access-level": "write",
                        "actions": "CreateUser",
                        "description": "Creates a user"
                    },
                    "DeleteApplicationInstance": {
                        "access-level": "write",
                        "actions": "DeleteApplicationInstance",
                        "description": "Delete the application instance"
                    },
                    "DeleteApplicationInstanceCertificate": {
                        "access-level": "write",
                        "actions": "DeleteApplicationInstanceCertificate",
                        "description": "Delete an inactive or expired certificate from the application instance"
                    },
                    "DeleteGroup": {
                        "access-level": "write",
                        "actions": "DeleteGroup",
                        "description": "Deletes a group"
                    },
                    "DeletePermissionSet": {
                        "access-level": "write",
                        "actions": "DeletePermissionSet",
                        "description": "Delete a permission set"
                    },
                    "DeletePermissionsPolicy": {
                        "access-level": "write",
                        "actions": "DeletePermissionsPolicy",
                        "description": "Delete the permission policy associated with a permission set"
                    },
                    "DeleteProfile": {
                        "access-level": "write",
                        "actions": "DeleteProfile",
                        "description": "Delete the profile for an application instance"
                    },
                    "DeleteUser": {
                        "access-level": "write",
                        "actions": "DeleteUser",
                        "description": "Deletes a user"
                    },
                    "DisableUser": {
                        "access-level": "write",
                        "actions": "DisableUser",
                        "description": "Deactivates user"
                    },
                    "DisassociateDirectory": {
                        "access-level": "write",
                        "actions": "DisassociateDirectory",
                        "description": "Disassociate a directory to be used by AWS Single Sign-On"
                    },
                    "DisassociateProfile": {
                        "access-level": "write",
                        "actions": "DisassociateProfile",
                        "description": "Disassociate a directory user or group from a profile"
                    },
                    "EnableUser": {
                        "access-level": "write",
                        "actions": "EnableUser",
                        "description": "Activates user"
                    },
                    "ImportApplicationInstanceServiceProviderMetadata": {
                        "access-level": "write",
                        "actions": "ImportApplicationInstanceServiceProviderMetadata",
                        "description": "Update the application instance by uploading an application SAML metadata file provided by the service provider"
                    },
                    "PutPermissionsPolicy": {
                        "access-level": "write",
                        "actions": "PutPermissionsPolicy",
                        "description": "Add a policy to a permission set"
                    },
                    "RemoveMemberFromGroup": {
                        "access-level": "write",
                        "actions": "RemoveMemberFromGroup",
                        "description": "Removes member that are part of the group"
                    },
                    "SetTemporaryPassword": {
                        "access-level": "write",
                        "actions": "SetTemporaryPassword",
                        "description": "Sets a temporary password for a user"
                    },
                    "StartSSO": {
                        "access-level": "write",
                        "actions": "StartSSO",
                        "description": "Initialize AWS Single Sign-On"
                    },
                    "UpdateApplicationInstanceActiveCertificate": {
                        "access-level": "write",
                        "actions": "UpdateApplicationInstanceActiveCertificate",
                        "description": "Set a certificate as the active one for this application instance"
                    },
                    "UpdateApplicationInstanceDisplayData": {
                        "access-level": "write",
                        "actions": "UpdateApplicationInstanceDisplayData",
                        "description": "Update display data of an application instance"
                    },
                    "UpdateApplicationInstanceResponseConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateApplicationInstanceResponseConfiguration",
                        "description": "Update federation response configuration for the application instance"
                    },
                    "UpdateApplicationInstanceResponseSchemaConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateApplicationInstanceResponseSchemaConfiguration",
                        "description": "Update federation response schema configuration for the application instance"
                    },
                    "UpdateApplicationInstanceSecurityConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateApplicationInstanceSecurityConfiguration",
                        "description": "Update security details for the application instance"
                    },
                    "UpdateApplicationInstanceServiceProviderConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateApplicationInstanceServiceProviderConfiguration",
                        "description": "Update service provider related configuration for the application instance"
                    },
                    "UpdateApplicationInstanceStatus": {
                        "access-level": "write",
                        "actions": "UpdateApplicationInstanceStatus",
                        "description": "Update the status of an application instance"
                    },
                    "UpdateDirectoryAssociation": {
                        "access-level": "write",
                        "actions": "UpdateDirectoryAssociation",
                        "description": "Update the user attribute mappings for your connected directory"
                    },
                    "UpdateGroup": {
                        "access-level": "write",
                        "actions": "UpdateGroup",
                        "description": "Updates group information"
                    },
                    "UpdateProfile": {
                        "access-level": "write",
                        "actions": "UpdateProfile",
                        "description": "Update the profile for an application instance"
                    },
                    "UpdateSSOConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateSSOConfiguration",
                        "description": "Update the configuration for the current SSO instance"
                    },
                    "UpdateTrust": {
                        "access-level": "write",
                        "actions": "UpdateTrust",
                        "description": "Update the federation trust in a target account"
                    },
                    "UpdateUser": {
                        "access-level": "write",
                        "actions": "UpdateUser",
                        "description": "Updates user information"
                    }
                }
            }
        },
        "ssodirectory": {
            "actions": {
                "list": {
                    "DescribeGroups": {
                        "access-level": "list",
                        "actions": "DescribeGroups",
                        "description": "Retrieves information about group from the directory that AWS SSO provides by default"
                    },
                    "DescribeUsers": {
                        "access-level": "list",
                        "actions": "DescribeUsers",
                        "description": "Retrieves information about user from the directory that AWS SSO provides by default"
                    },
                    "ListGroupsForUser": {
                        "access-level": "list",
                        "actions": "ListGroupsForUser",
                        "description": "Lists groups for a user from the directory that AWS SSO provides by default"
                    },
                    "ListMembersInGroup": {
                        "access-level": "list",
                        "actions": "ListMembersInGroup",
                        "description": "Retrieves all members that are part of the group in the directory that AWS SSO provides by default"
                    }
                },
                "read": {
                    "DescribeDirectory": {
                        "access-level": "read",
                        "actions": "DescribeDirectory",
                        "description": "Retrieve information about the directory that AWS SSO provides by default"
                    }
                },
                "write": {
                    "AddMemberToGroup": {
                        "access-level": "write",
                        "actions": "AddMemberToGroup",
                        "description": "Adds member to the group in the directory that AWS SSO provides by default"
                    },
                    "CreateAlias": {
                        "access-level": "write",
                        "actions": "CreateAlias",
                        "description": "Creates an alias for the directory that AWS SSO provides by default"
                    },
                    "CreateGroup": {
                        "access-level": "write",
                        "actions": "CreateGroup",
                        "description": "Creates a group in the directory that AWS SSO provides by default"
                    },
                    "CreateUser": {
                        "access-level": "write",
                        "actions": "CreateUser",
                        "description": "Creates a user in the directory that AWS SSO provides by default"
                    },
                    "DeleteGroup": {
                        "access-level": "write",
                        "actions": "DeleteGroup",
                        "description": "Deletes a group from the directory that AWS SSO provides by default"
                    },
                    "DeleteUser": {
                        "access-level": "write",
                        "actions": "DeleteUser",
                        "description": "Deletes a user from the directory that AWS SSO provides by default"
                    },
                    "DisableUser": {
                        "access-level": "write",
                        "actions": "DisableUser",
                        "description": "Deactivates user in the directory that AWS SSO provides by default"
                    },
                    "EnableUser": {
                        "access-level": "write",
                        "actions": "EnableUser",
                        "description": "Activates user in the directory that AWS SSO provides by default"
                    },
                    "RemoveMemberFromGroup": {
                        "access-level": "write",
                        "actions": "RemoveMemberFromGroup",
                        "description": "Removes member that are part of the group in the directory that AWS SSO provides by default"
                    },
                    "UpdateGroup": {
                        "access-level": "write",
                        "actions": "UpdateGroup",
                        "description": "Updates information about group in the directory that AWS SSO provides by default"
                    },
                    "UpdatePassword": {
                        "access-level": "write",
                        "actions": "UpdatePassword",
                        "description": "Updates password by sending password reset link via email or generating one time password for a user in the directory that AWS SSO provides by default"
                    },
                    "UpdateUser": {
                        "access-level": "write",
                        "actions": "UpdateUser",
                        "description": "Updates user information in the directory that AWS SSO provides by default"
                    },
                    "VerifyEmail": {
                        "access-level": "write",
                        "actions": "VerifyEmail",
                        "description": "Verify email address of an User"
                    }
                }
            }
        },
        "stepfunctions": {
            "actions": {
                "list": {
                    "ListActivities": {
                        "access-level": "list",
                        "actions": "ListActivities",
                        "description": "Lists the existing activities. The results may be split into multiple pages."
                    },
                    "ListStateMachines": {
                        "access-level": "list",
                        "actions": "ListStateMachines",
                        "description": "Lists the existing state machines. The results may be split into multiple pages."
                    }
                },
                "read": {
                    "DescribeActivity": {
                        "access-level": "read",
                        "actions": "DescribeActivity",
                        "description": "Describes an activity.",
                        "resource-types": "activity*"
                    },
                    "DescribeExecution": {
                        "access-level": "read",
                        "actions": "DescribeExecution",
                        "description": "Describes an execution.",
                        "resource-types": "execution*"
                    },
                    "DescribeStateMachine": {
                        "access-level": "read",
                        "actions": "DescribeStateMachine",
                        "description": "Describes a state machine.",
                        "resource-types": "statemachine*"
                    },
                    "DescribeStateMachineForExecution": {
                        "access-level": "read",
                        "actions": "DescribeStateMachineForExecution",
                        "description": "Describes state machine for an execution.",
                        "resource-types": "execution*"
                    },
                    "GetExecutionHistory": {
                        "access-level": "read",
                        "actions": "GetExecutionHistory",
                        "description": "Returns the history of the specified execution as a list of events. By default, the results are returned in ascending order of the timeStamp of the events.",
                        "resource-types": "execution*"
                    },
                    "ListExecutions": {
                        "access-level": "read",
                        "actions": "ListExecutions",
                        "description": "Lists the executions of a state machine that meet the filtering criteria. The results may be split into multiple pages.",
                        "resource-types": "statemachine*"
                    }
                },
                "write": {
                    "CreateActivity": {
                        "access-level": "write",
                        "actions": "CreateActivity",
                        "description": "Creates an activity. Activities must poll Step Functions using the GetActivityTask and respond using SendTask* API calls."
                    },
                    "CreateStateMachine": {
                        "access-level": "write",
                        "actions": "CreateStateMachine",
                        "description": "Creates a state machine."
                    },
                    "DeleteActivity": {
                        "access-level": "write",
                        "actions": "DeleteActivity",
                        "description": "Deletes an activity.",
                        "resource-types": "activity*"
                    },
                    "DeleteStateMachine": {
                        "access-level": "write",
                        "actions": "DeleteStateMachine",
                        "description": "Deletes a state machine.",
                        "resource-types": "statemachine*"
                    },
                    "GetActivityTask": {
                        "access-level": "write",
                        "actions": "GetActivityTask",
                        "description": "Used by workers to retrieve a task (with the specified activity ARN) which has been scheduled for execution by a running state machine.",
                        "resource-types": "activity*"
                    },
                    "SendTaskFailure": {
                        "access-level": "write",
                        "actions": "SendTaskFailure",
                        "description": "Used by workers to report that the task identified by the taskToken failed."
                    },
                    "SendTaskHeartbeat": {
                        "access-level": "write",
                        "actions": "SendTaskHeartbeat",
                        "description": "Used by workers to report to the service that the task represented by the specified taskToken is still making progress."
                    },
                    "SendTaskSuccess": {
                        "access-level": "write",
                        "actions": "SendTaskSuccess",
                        "description": "Used by workers to report that the task identified by the taskToken completed successfully."
                    },
                    "StartExecution": {
                        "access-level": "write",
                        "actions": "StartExecution",
                        "description": "Starts a state machine execution.",
                        "resource-types": "statemachine*"
                    },
                    "StopExecution": {
                        "access-level": "write",
                        "actions": "StopExecution",
                        "description": "Stops an execution."
                    },
                    "UpdateStateMachine": {
                        "access-level": "write",
                        "actions": "UpdateStateMachine",
                        "description": "Updates a state machine.",
                        "resource-types": "statemachine*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "activity": {
                    "arn": "arn:${Partition}:states:${Region}:${Account}:activity:${ActivityName}",
                    "resource-types": "activity"
                },
                "execution": {
                    "arn": "arn:${Partition}:states:${Region}:${Account}:execution:${StateMachineName}:${ExecutionId}",
                    "resource-types": "execution"
                },
                "statemachine": {
                    "arn": "arn:${Partition}:states:${Region}:${Account}:stateMachine:${StateMachineName}",
                    "resource-types": "statemachine"
                }
            }
        },
        "storagegateway": {
            "actions": {
                "list": {
                    "ListFileShares": {
                        "access-level": "list",
                        "actions": "ListFileShares",
                        "description": "This operation gets a list of the file shares for a specific file gateway, or the list of file shares that belong to the calling user account.",
                        "resource-types": "gateway*"
                    },
                    "ListGateways": {
                        "access-level": "list",
                        "actions": "ListGateways",
                        "description": "This operation lists gateways owned by an AWS account in a region specified in the request. The returned list is ordered by gateway Amazon Resource Name (ARN)."
                    },
                    "ListLocalDisks": {
                        "access-level": "list",
                        "actions": "ListLocalDisks",
                        "description": "This operation returns a list of the gateway\\'s local disks.",
                        "resource-types": "gateway*"
                    },
                    "ListVolumeRecoveryPoints": {
                        "access-level": "list",
                        "actions": "ListVolumeRecoveryPoints",
                        "description": "This operation lists the recovery points for a specified gateway.",
                        "resource-types": "gateway*"
                    },
                    "ListVolumes": {
                        "access-level": "list",
                        "actions": "ListVolumes",
                        "description": "This operation lists the iSCSI stored volumes of a gateway.",
                        "resource-types": "gateway*"
                    }
                },
                "read": {
                    "DescribeBandwidthRateLimit": {
                        "access-level": "read",
                        "actions": "DescribeBandwidthRateLimit",
                        "description": "This operation returns the bandwidth rate limits of a gateway.",
                        "resource-types": "gateway*"
                    },
                    "DescribeCache": {
                        "access-level": "read",
                        "actions": "DescribeCache",
                        "description": "This operation returns information about the cache of a gateway. This operation is supported only for the gateway-cached volume architecture.",
                        "resource-types": "gateway*"
                    },
                    "DescribeCachediSCSIVolumes": {
                        "access-level": "read",
                        "actions": "DescribeCachediSCSIVolumes",
                        "description": "This operation returns a description of the gateway volumes specified in the request. This operation is supported only for the gateway-cached volume architecture.",
                        "resource-types": "volume*"
                    },
                    "DescribeChapCredentials": {
                        "access-level": "read",
                        "actions": "DescribeChapCredentials",
                        "description": "This operation returns an array of Challenge-Handshake Authentication Protocol (CHAP) credentials information for a specified iSCSI target, one for each target-initiator pair.",
                        "resource-types": "target*"
                    },
                    "DescribeGatewayInformation": {
                        "access-level": "read",
                        "actions": "DescribeGatewayInformation",
                        "description": "This operation returns metadata about a gateway such as its name, network interfaces, configured time zone, and the state (whether the gateway is running or not).",
                        "resource-types": "gateway*"
                    },
                    "DescribeMaintenanceStartTime": {
                        "access-level": "read",
                        "actions": "DescribeMaintenanceStartTime",
                        "description": "This operation returns your gateway\\'s weekly maintenance start time including the day and time of the week.",
                        "resource-types": "gateway*"
                    },
                    "DescribeNFSFileShares": {
                        "access-level": "read",
                        "actions": "DescribeNFSFileShares",
                        "description": "This operation gets a description for one or more file shares from a file gateway.",
                        "resource-types": "share*"
                    },
                    "DescribeSMBFileShares": {
                        "access-level": "read",
                        "actions": "DescribeSMBFileShares",
                        "description": "This operation gets a description for one or more file shares from a file gateway.",
                        "resource-types": "share*"
                    },
                    "DescribeSMBSettings": {
                        "access-level": "read",
                        "actions": "DescribeSMBSettings",
                        "description": "This operation gets a description of a Server Message Block (SMB) file share settings from a file gateway.",
                        "resource-types": "gateway*"
                    },
                    "DescribeSnapshotSchedule": {
                        "access-level": "read",
                        "actions": "DescribeSnapshotSchedule",
                        "description": "This operation describes the snapshot schedule for the specified gateway volume.",
                        "resource-types": "volume*"
                    },
                    "DescribeStorediSCSIVolumes": {
                        "access-level": "read",
                        "actions": "DescribeStorediSCSIVolumes",
                        "description": "This operation returns the description of the gateway volumes specified in the request.",
                        "resource-types": "volume*"
                    },
                    "DescribeTapeArchives": {
                        "access-level": "read",
                        "actions": "DescribeTapeArchives",
                        "description": "Returns a description of specified virtual tapes in the virtual tape shelf (VTS)."
                    },
                    "DescribeTapeRecoveryPoints": {
                        "access-level": "read",
                        "actions": "DescribeTapeRecoveryPoints",
                        "description": "Returns a list of virtual tape recovery points that are available for the specified gateway-VTL.",
                        "resource-types": "gateway*"
                    },
                    "DescribeTapes": {
                        "access-level": "read",
                        "actions": "DescribeTapes",
                        "description": "Returns a description of the specified Amazon Resource Name (ARN) of virtual tapes.",
                        "resource-types": "gateway*"
                    },
                    "DescribeUploadBuffer": {
                        "access-level": "read",
                        "actions": "DescribeUploadBuffer",
                        "description": "This operation returns information about the upload buffer of a gateway.",
                        "resource-types": "gateway*"
                    },
                    "DescribeVTLDevices": {
                        "access-level": "read",
                        "actions": "DescribeVTLDevices",
                        "description": "Returns a description of virtual tape library (VTL) devices for the specified gateway.",
                        "resource-types": "gateway*"
                    },
                    "DescribeWorkingStorage": {
                        "access-level": "read",
                        "actions": "DescribeWorkingStorage",
                        "description": "This operation returns information about the working storage of a gateway.",
                        "resource-types": "gateway*"
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "This operation lists the tags that have been added to the specified resource.",
                        "resource-types": "gateway"
                    },
                    "ListTapes": {
                        "access-level": "read",
                        "actions": "ListTapes",
                        "description": "Lists virtual tapes in your virtual tape library (VTL) and your virtual tape shelf (VTS).",
                        "resource-types": "tape*"
                    },
                    "ListVolumeInitiators": {
                        "access-level": "read",
                        "actions": "ListVolumeInitiators",
                        "description": "This operation lists iSCSI initiators that are connected to a volume.",
                        "resource-types": "volume*"
                    },
                    "tape": {
                        "access-level": "read",
                        "actions": "tape"
                    },
                    "volume": {
                        "access-level": "read",
                        "actions": "volume"
                    }
                },
                "tagging": {
                    "AddTagsToResource": {
                        "access-level": "tagging",
                        "actions": "AddTagsToResource",
                        "description": "This operation adds one or more tags to the specified resource.",
                        "resource-types": "gateway"
                    },
                    "RemoveTagsFromResource": {
                        "access-level": "tagging",
                        "actions": "RemoveTagsFromResource",
                        "description": "This operation removes one or more tags from the specified resource.",
                        "resource-types": "gateway"
                    },
                    "tape": {
                        "access-level": "tagging",
                        "actions": "tape"
                    },
                    "volume": {
                        "access-level": "tagging",
                        "actions": "volume"
                    }
                },
                "write": {
                    "ActivateGateway": {
                        "access-level": "write",
                        "actions": "ActivateGateway",
                        "description": "This operation activates the gateway you previously deployed on your host."
                    },
                    "AddCache": {
                        "access-level": "write",
                        "actions": "AddCache",
                        "description": "This operation configures one or more gateway local disks as cache for a cached-volume gateway.",
                        "resource-types": "gateway*"
                    },
                    "AddUploadBuffer": {
                        "access-level": "write",
                        "actions": "AddUploadBuffer",
                        "description": "This operation configures one or more gateway local disks as upload buffer for a specified gateway.",
                        "resource-types": "gateway*"
                    },
                    "AddWorkingStorage": {
                        "access-level": "write",
                        "actions": "AddWorkingStorage",
                        "description": "This operation configures one or more gateway local disks as working storage for a gateway.",
                        "resource-types": "gateway*"
                    },
                    "CancelArchival": {
                        "access-level": "write",
                        "actions": "CancelArchival",
                        "description": "Cancels archiving of a virtual tape to the virtual tape shelf (VTS) after the archiving process is initiated.",
                        "resource-types": "tape*"
                    },
                    "CancelRetrieval": {
                        "access-level": "write",
                        "actions": "CancelRetrieval",
                        "description": "Cancels retrieval of a virtual tape from the virtual tape shelf (VTS) to a gateway after the retrieval process is initiated.",
                        "resource-types": "tape*"
                    },
                    "CreateCachediSCSIVolume": {
                        "access-level": "write",
                        "actions": "CreateCachediSCSIVolume",
                        "description": "This operation creates a cached volume on a specified cached gateway. This operation is supported only for the gateway-cached volume architecture.",
                        "resource-types": "gateway*"
                    },
                    "CreateNFSFileShare": {
                        "access-level": "write",
                        "actions": "CreateNFSFileShare",
                        "description": "This operation creates a NFS file share on an existing file gateway.",
                        "resource-types": "gateway*"
                    },
                    "CreateSMBFileShare": {
                        "access-level": "write",
                        "actions": "CreateSMBFileShare",
                        "description": "This operation creates a SMB file share on an existing file gateway.",
                        "resource-types": "gateway*"
                    },
                    "CreateSnapshot": {
                        "access-level": "write",
                        "actions": "CreateSnapshot",
                        "description": "This operation initiates a snapshot of a volume.",
                        "resource-types": "volume*"
                    },
                    "CreateSnapshotFromVolumeRecoveryPoint": {
                        "access-level": "write",
                        "actions": "CreateSnapshotFromVolumeRecoveryPoint",
                        "description": "This operation initiates a snapshot of a gateway from a volume recovery point.",
                        "resource-types": "volume*"
                    },
                    "CreateStorediSCSIVolume": {
                        "access-level": "write",
                        "actions": "CreateStorediSCSIVolume",
                        "description": "This operation creates a volume on a specified gateway.",
                        "resource-types": "gateway*"
                    },
                    "CreateTapeWithBarcode": {
                        "access-level": "write",
                        "actions": "CreateTapeWithBarcode",
                        "description": "Creates a virtual tape by using your own barcode."
                    },
                    "CreateTapes": {
                        "access-level": "write",
                        "actions": "CreateTapes",
                        "description": "Creates one or more virtual tapes. You write data to the virtual tapes and then archive the tapes.",
                        "resource-types": "gateway*"
                    },
                    "DeleteBandwidthRateLimit": {
                        "access-level": "write",
                        "actions": "DeleteBandwidthRateLimit",
                        "description": "This operation deletes the bandwidth rate limits of a gateway.",
                        "resource-types": "gateway*"
                    },
                    "DeleteChapCredentials": {
                        "access-level": "write",
                        "actions": "DeleteChapCredentials",
                        "description": "This operation deletes Challenge-Handshake Authentication Protocol (CHAP) credentials for a specified iSCSI target and initiator pair.",
                        "resource-types": "target*"
                    },
                    "DeleteFileShare": {
                        "access-level": "write",
                        "actions": "DeleteFileShare",
                        "description": "This operation deletes a file share from a file gateway.",
                        "resource-types": "share*"
                    },
                    "DeleteGateway": {
                        "access-level": "write",
                        "actions": "DeleteGateway",
                        "description": "This operation deletes a gateway.",
                        "resource-types": "gateway*"
                    },
                    "DeleteSnapshotSchedule": {
                        "access-level": "write",
                        "actions": "DeleteSnapshotSchedule",
                        "description": "This operation deletes a snapshot of a volume.",
                        "resource-types": "volume*"
                    },
                    "DeleteTape": {
                        "access-level": "write",
                        "actions": "DeleteTape",
                        "description": "Deletes the specified virtual tape.",
                        "resource-types": "gateway*"
                    },
                    "DeleteTapeArchive": {
                        "access-level": "write",
                        "actions": "DeleteTapeArchive",
                        "description": "Deletes the specified virtual tape from the virtual tape shelf (VTS)."
                    },
                    "DeleteVolume": {
                        "access-level": "write",
                        "actions": "DeleteVolume",
                        "description": "This operation deletes the specified gateway volume that you previously created using the CreateCachediSCSIVolume or CreateStorediSCSIVolume API.",
                        "resource-types": "volume*"
                    },
                    "DisableGateway": {
                        "access-level": "write",
                        "actions": "DisableGateway",
                        "description": "Disables a gateway when the gateway is no longer functioning.",
                        "resource-types": "gateway*"
                    },
                    "JoinDomain": {
                        "access-level": "write",
                        "actions": "JoinDomain",
                        "description": "This operation enables you to join an Active Directory Domain.",
                        "resource-types": "gateway*"
                    },
                    "NotifyWhenUploaded": {
                        "access-level": "write",
                        "actions": "NotifyWhenUploaded",
                        "description": "This action sends you a notification through CloudWatch Events when all files written to your NFS file share have been uploaded to Amazon S3.",
                        "resource-types": "share*"
                    },
                    "RefreshCache": {
                        "access-level": "write",
                        "actions": "RefreshCache",
                        "description": "This operation refreshes the cache for the specified file share.",
                        "resource-types": "share*"
                    },
                    "ResetCache": {
                        "access-level": "write",
                        "actions": "ResetCache",
                        "description": "This operation resets all cache disks that have encountered a error and makes the disks available for reconfiguration as cache storage.",
                        "resource-types": "gateway*"
                    },
                    "RetrieveTapeArchive": {
                        "access-level": "write",
                        "actions": "RetrieveTapeArchive",
                        "description": "Retrieves an archived virtual tape from the virtual tape shelf (VTS) to a gateway-VTL.",
                        "resource-types": "gateway*"
                    },
                    "RetrieveTapeRecoveryPoint": {
                        "access-level": "write",
                        "actions": "RetrieveTapeRecoveryPoint",
                        "description": "Retrieves the recovery point for the specified virtual tape.",
                        "resource-types": "gateway*"
                    },
                    "SetLocalConsolePassword": {
                        "access-level": "write",
                        "actions": "SetLocalConsolePassword",
                        "description": "Sets the password for your VM local console.",
                        "resource-types": "gateway*"
                    },
                    "SetSMBGuestPassword": {
                        "access-level": "write",
                        "actions": "SetSMBGuestPassword",
                        "description": "Sets the password for SMB Guest user.",
                        "resource-types": "gateway*"
                    },
                    "ShutdownGateway": {
                        "access-level": "write",
                        "actions": "ShutdownGateway",
                        "description": "This operation shuts down a gateway.",
                        "resource-types": "gateway*"
                    },
                    "StartGateway": {
                        "access-level": "write",
                        "actions": "StartGateway",
                        "description": "This operation starts a gateway that you previously shut down.",
                        "resource-types": "gateway*"
                    },
                    "UpdateBandwidthRateLimit": {
                        "access-level": "write",
                        "actions": "UpdateBandwidthRateLimit",
                        "description": "This operation updates the bandwidth rate limits of a gateway.",
                        "resource-types": "gateway*"
                    },
                    "UpdateChapCredentials": {
                        "access-level": "write",
                        "actions": "UpdateChapCredentials",
                        "description": "This operation updates the Challenge-Handshake Authentication Protocol (CHAP) credentials for a specified iSCSI target.",
                        "resource-types": "target*"
                    },
                    "UpdateGatewayInformation": {
                        "access-level": "write",
                        "actions": "UpdateGatewayInformation",
                        "description": "This operation updates a gateway\\'s metadata, which includes the gateway\\'s name and time zone.",
                        "resource-types": "gateway*"
                    },
                    "UpdateGatewaySoftwareNow": {
                        "access-level": "write",
                        "actions": "UpdateGatewaySoftwareNow",
                        "description": "This operation updates the gateway virtual machine (VM) software.",
                        "resource-types": "gateway*"
                    },
                    "UpdateMaintenanceStartTime": {
                        "access-level": "write",
                        "actions": "UpdateMaintenanceStartTime",
                        "description": "This operation updates a gateway\\'s weekly maintenance start time information, including day and time of the week. The maintenance time is the time in your gateway\\'s time zone.",
                        "resource-types": "gateway*"
                    },
                    "UpdateNFSFileShare": {
                        "access-level": "write",
                        "actions": "UpdateNFSFileShare",
                        "description": "This operation updates a NFS file share.",
                        "resource-types": "share*"
                    },
                    "UpdateSMBFileShare": {
                        "access-level": "write",
                        "actions": "UpdateSMBFileShare",
                        "description": "This operation updates a SMB file share.",
                        "resource-types": "share*"
                    },
                    "UpdateSnapshotSchedule": {
                        "access-level": "write",
                        "actions": "UpdateSnapshotSchedule",
                        "description": "This operation updates a snapshot schedule configured for a gateway volume.",
                        "resource-types": "volume*"
                    },
                    "UpdateVTLDeviceType": {
                        "access-level": "write",
                        "actions": "UpdateVTLDeviceType",
                        "description": "This operation updates the type of medium changer in a gateway-VTL.",
                        "resource-types": "device*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "device": {
                    "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/${GatewayId}/device/${Vtldevice}",
                    "resource-types": "device"
                },
                "gateway": {
                    "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/${GatewayId}",
                    "resource-types": "gateway"
                },
                "share": {
                    "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:share/${ShareId}",
                    "resource-types": "share"
                },
                "tape": {
                    "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/${TapeBarcode}",
                    "resource-types": "tape"
                },
                "target": {
                    "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/${GatewayId}/target/${IscsiTarget}",
                    "resource-types": "target"
                },
                "volume": {
                    "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/${GatewayId}/volume/${VolumeId}",
                    "resource-types": "volume"
                }
            }
        },
        "stub2name": {},
        "sumerian": {
            "actions": {
                "read": {
                    "ViewRelease": {
                        "access-level": "read",
                        "actions": "ViewRelease",
                        "description": "Grant access to view a project release.",
                        "resource-types": "project*"
                    }
                },
                "write": {
                    "Login": {
                        "access-level": "write",
                        "actions": "Login",
                        "description": "Grant login access to the Sumerian console."
                    }
                }
            }
        },
        "support": {
            "actions": {
                "list": {
                    "DescribeCases": {
                        "access-level": "list",
                        "actions": "DescribeCases",
                        "description": "Returns a list of cases that matches the given inputs"
                    },
                    "DescribeSeverityLevels": {
                        "access-level": "list",
                        "actions": "DescribeSeverityLevels",
                        "description": "Returns the list of severity levels that can be assigned to an AWS Support case."
                    }
                },
                "read": {
                    "DescribeAttachment": {
                        "access-level": "read",
                        "actions": "DescribeAttachment",
                        "description": "Returns a description of an attachment."
                    },
                    "DescribeCommunications": {
                        "access-level": "read",
                        "actions": "DescribeCommunications",
                        "description": "Returns the communications (and attachments) for one or more support cases"
                    },
                    "DescribeServices": {
                        "access-level": "read",
                        "actions": "DescribeServices",
                        "description": "Returns the current list of AWS services and a list of service categories that applies to each one."
                    },
                    "DescribeTrustedAdvisorCheckRefreshStatuses": {
                        "access-level": "read",
                        "actions": "DescribeTrustedAdvisorCheckRefreshStatuses",
                        "description": "Returns the refresh status of the Trusted Advisor checks that have the specified check identifiers."
                    },
                    "DescribeTrustedAdvisorCheckResult": {
                        "access-level": "read",
                        "actions": "DescribeTrustedAdvisorCheckResult",
                        "description": "Returns the results of the Trusted Advisor check that has the specified check identifier."
                    },
                    "DescribeTrustedAdvisorCheckSummaries": {
                        "access-level": "read",
                        "actions": "DescribeTrustedAdvisorCheckSummaries",
                        "description": "Returns the summaries of the results of the Trusted Advisor checks that have the specified check identifiers."
                    },
                    "DescribeTrustedAdvisorChecks": {
                        "access-level": "read",
                        "actions": "DescribeTrustedAdvisorChecks",
                        "description": "Returns information about all available Trusted Advisor checks, including name, ID, category, description, and metadata."
                    }
                },
                "write": {
                    "AddAttachmentsToSet": {
                        "access-level": "write",
                        "actions": "AddAttachmentsToSet",
                        "description": "Adds one or more attachments to an attachment set. If an attachmentSetId is not specified, a new attachment set is created."
                    },
                    "AddCommunicationToCase": {
                        "access-level": "write",
                        "actions": "AddCommunicationToCase",
                        "description": "Adds additional customer communication to an AWS Support case."
                    },
                    "CreateCase": {
                        "access-level": "write",
                        "actions": "CreateCase",
                        "description": "Creates a new case in the AWS Support Center."
                    },
                    "RefreshTrustedAdvisorCheck": {
                        "access-level": "write",
                        "actions": "RefreshTrustedAdvisorCheck",
                        "description": "Requests a refresh of the Trusted Advisor check that has the specified check ID."
                    },
                    "ResolveCase": {
                        "access-level": "write",
                        "actions": "ResolveCase",
                        "description": "Resolves a case."
                    }
                }
            }
        },
        "systemsmanager": {
            "actions": {
                "list": {
                    "DescribeMaintenanceWindowExecutionTaskInvocations": {
                        "access-level": "list",
                        "actions": "DescribeMaintenanceWindowExecutionTaskInvocations",
                        "description": "Describe one or more of your maintenance window execution task invocations history."
                    },
                    "DescribeMaintenanceWindowExecutionTasks": {
                        "access-level": "list",
                        "actions": "DescribeMaintenanceWindowExecutionTasks",
                        "description": "Describe one or more of your maintenance window execution tasks history."
                    },
                    "DescribeMaintenanceWindowExecutions": {
                        "access-level": "list",
                        "actions": "DescribeMaintenanceWindowExecutions",
                        "description": "Describe one or more of your maintenance window execution history.",
                        "resource-types": "maintenancewindow*"
                    },
                    "DescribeMaintenanceWindowTargets": {
                        "access-level": "list",
                        "actions": "DescribeMaintenanceWindowTargets",
                        "description": "Describe one or more of your maintenance windows targets.",
                        "resource-types": "maintenancewindow*"
                    },
                    "DescribeMaintenanceWindowTasks": {
                        "access-level": "list",
                        "actions": "DescribeMaintenanceWindowTasks",
                        "description": "Describe one or more of your maintenance windows tasks.",
                        "resource-types": "maintenancewindow*"
                    },
                    "DescribeMaintenanceWindows": {
                        "access-level": "list",
                        "actions": "DescribeMaintenanceWindows",
                        "description": "Describe one or more of your maintenance windows."
                    },
                    "DescribeParameters": {
                        "access-level": "list",
                        "actions": "DescribeParameters",
                        "description": "Describes one or more parameters in Parameter Store."
                    },
                    "DescribePatchBaselines": {
                        "access-level": "list",
                        "actions": "DescribePatchBaselines",
                        "description": "Describes one or more SSM patch baselines."
                    },
                    "DescribePatchGroups": {
                        "access-level": "list",
                        "actions": "DescribePatchGroups",
                        "description": "Describes one or more patch group to SSM patch baseline mappings."
                    },
                    "DescribeSessions": {
                        "access-level": "list",
                        "actions": "DescribeSessions",
                        "description": "Describe one or more Session Manager sessions."
                    },
                    "ListAssociationVersions": {
                        "access-level": "list",
                        "actions": "ListAssociationVersions",
                        "description": "Lists versions of the specified association."
                    },
                    "ListAssociations": {
                        "access-level": "list",
                        "actions": "ListAssociations",
                        "description": "Lists the associations for the specified SSM document or instance."
                    },
                    "ListComplianceItems": {
                        "access-level": "list",
                        "actions": "ListComplianceItems",
                        "description": "Returns a list of compliance statuses for different resource types for a specific resource."
                    },
                    "ListComplianceSummaries": {
                        "access-level": "list",
                        "actions": "ListComplianceSummaries",
                        "description": "Returns a summary count of compliant and non-compliant resources for a compliance type."
                    },
                    "ListDocuments": {
                        "access-level": "list",
                        "actions": "ListDocuments",
                        "description": "Describes one or more your SSM documents."
                    },
                    "ListResourceComplianceSummaries": {
                        "access-level": "list",
                        "actions": "ListResourceComplianceSummaries",
                        "description": "Returns a resource-level summary count."
                    }
                },
                "read": {
                    "DescribeActivations": {
                        "access-level": "read",
                        "actions": "DescribeActivations",
                        "condition-keys": [
                            "Details",
                            "about",
                            "the",
                            "activation,",
                            "including:",
                            "the",
                            "date",
                            "and",
                            "time",
                            "the",
                            "activation",
                            "was",
                            "created,",
                            "the",
                            "expiration",
                            "date,",
                            "the",
                            "IAM",
                            "role",
                            "assigned",
                            "to",
                            "the",
                            "instances",
                            "in",
                            "the",
                            "activation,",
                            "and",
                            "the",
                            "number",
                            "of",
                            "instances",
                            "activated",
                            "by",
                            "this",
                            "registration."
                        ]
                    },
                    "DescribeAssociation": {
                        "access-level": "read",
                        "actions": "DescribeAssociation",
                        "description": "Describes the associations for the specified SSM document or instance.",
                        "resource-types": "document*"
                    },
                    "DescribeAssociationExecutionTargets": {
                        "access-level": "read",
                        "actions": "DescribeAssociationExecutionTargets",
                        "description": "Describes the detailed information about a specific execution of a specific association."
                    },
                    "DescribeAssociationExecutions": {
                        "access-level": "read",
                        "actions": "DescribeAssociationExecutions",
                        "description": "Describes all executions for a specific association id."
                    },
                    "DescribeAvailablePatches": {
                        "access-level": "read",
                        "actions": "DescribeAvailablePatches",
                        "description": "Describes one or more available patches."
                    },
                    "DescribeDocument": {
                        "access-level": "read",
                        "actions": "DescribeDocument",
                        "description": "Describes the specified SSM document.",
                        "resource-types": "document*"
                    },
                    "DescribeDocumentParameters": {
                        "access-level": "read",
                        "actions": "DescribeDocumentParameters",
                        "description": "Describes the parameters for an SSM document.",
                        "resource-types": "document*"
                    },
                    "DescribeDocumentPermission": {
                        "access-level": "read",
                        "actions": "DescribeDocumentPermission",
                        "description": "Describes the permissions for an SSM document.",
                        "resource-types": "document*"
                    },
                    "DescribeEffectivePatchesForPatchBaseline": {
                        "access-level": "read",
                        "actions": "DescribeEffectivePatchesForPatchBaseline",
                        "description": "Describes the the evaluation of patch baseline for patches and corresponding state.",
                        "resource-types": "patchbaseline*"
                    },
                    "DescribeInstanceInformation": {
                        "access-level": "read",
                        "actions": "DescribeInstanceInformation",
                        "description": "Describes one or more your instances.",
                        "resource-types": "document"
                    },
                    "DescribeInstancePatchStates": {
                        "access-level": "read",
                        "actions": "DescribeInstancePatchStates",
                        "description": "Describe one or more of your instance patch states. One per each instance ID."
                    },
                    "DescribeInstancePatchStatesForPatchGroup": {
                        "access-level": "read",
                        "actions": "DescribeInstancePatchStatesForPatchGroup",
                        "description": "Describe one or more of your instance patch states over all instances in given patch group."
                    },
                    "DescribeInstancePatches": {
                        "access-level": "read",
                        "actions": "DescribeInstancePatches",
                        "description": "Describe one or more of your instance patch states for a given instance ID."
                    },
                    "DescribeInstanceProperties": {
                        "access-level": "read",
                        "actions": "DescribeInstanceProperties",
                        "description": "Describes one or more your instances.",
                        "resource-types": "document"
                    },
                    "DescribePatchGroupState": {
                        "access-level": "read",
                        "actions": "DescribePatchGroupState",
                        "description": "Get a high level patch state report of given patch group."
                    },
                    "GetAutomationExecution": {
                        "access-level": "read",
                        "actions": "GetAutomationExecution"
                    },
                    "GetConnectionStatus": {
                        "access-level": "read",
                        "actions": "GetConnectionStatus",
                        "description": "Get the connection status for an instance."
                    },
                    "GetDefaultPatchBaseline": {
                        "access-level": "read",
                        "actions": "GetDefaultPatchBaseline",
                        "description": "Get the default SSM patch baseline.",
                        "resource-types": "patchbaseline*"
                    },
                    "GetDeployablePatchSnapshotForInstance": {
                        "access-level": "read",
                        "actions": "GetDeployablePatchSnapshotForInstance",
                        "description": "Get the snapshot of patches to be installed for given instances."
                    },
                    "GetDocument": {
                        "access-level": "read",
                        "actions": "GetDocument",
                        "description": "Gets the contents of the specified SSM document.",
                        "resource-types": "document*"
                    },
                    "GetMaintenanceWindow": {
                        "access-level": "read",
                        "actions": "GetMaintenanceWindow",
                        "description": "Get a SSM maintenance window.",
                        "resource-types": "maintenancewindow*"
                    },
                    "GetMaintenanceWindowExecution": {
                        "access-level": "read",
                        "actions": "GetMaintenanceWindowExecution",
                        "description": "Get a SSM maintenance window execution."
                    },
                    "GetMaintenanceWindowExecutionTask": {
                        "access-level": "read",
                        "actions": "GetMaintenanceWindowExecutionTask",
                        "description": "Get a SSM maintenance window execution task."
                    },
                    "GetMaintenanceWindowExecutionTaskInvocation": {
                        "access-level": "read",
                        "actions": "GetMaintenanceWindowExecutionTaskInvocation",
                        "description": "Get a SSM maintenance window execution task invocation."
                    },
                    "GetMaintenanceWindowTask": {
                        "access-level": "read",
                        "actions": "GetMaintenanceWindowTask",
                        "description": "Get a SSM maintenance window task.",
                        "resource-types": "maintenancewindow*"
                    },
                    "GetManifest": {
                        "access-level": "read",
                        "actions": "GetManifest",
                        "description": "Fetches the installation description for a package."
                    },
                    "GetParameter": {
                        "access-level": "read",
                        "actions": "GetParameter",
                        "condition-keys": [
                            "ssm:resourceTag/tag-key"
                        ],
                        "description": "Get information about a parameter by using the parameter name.",
                        "resource-types": "parameter*"
                    },
                    "GetParameterHistory": {
                        "access-level": "read",
                        "actions": "GetParameterHistory",
                        "condition-keys": [
                            "ssm:resourceTag/tag-key"
                        ],
                        "description": "Query a list of all modifications of a parameter.",
                        "resource-types": "parameter*"
                    },
                    "GetParameters": {
                        "access-level": "read",
                        "actions": "GetParameters",
                        "condition-keys": [
                            "ssm:resourceTag/tag-key"
                        ],
                        "description": "Get details of a list of parameters.",
                        "resource-types": "parameter*"
                    },
                    "GetParametersByPath": {
                        "access-level": "read",
                        "actions": "GetParametersByPath",
                        "description": "Retrieve parameters in a specific hierarchy.",
                        "resource-types": "parameter*"
                    },
                    "GetPatchBaseline": {
                        "access-level": "read",
                        "actions": "GetPatchBaseline",
                        "description": "Get a SSM patch baseline",
                        "resource-types": "patchbaseline*"
                    },
                    "GetPatchBaselineForPatchGroup": {
                        "access-level": "read",
                        "actions": "GetPatchBaselineForPatchGroup",
                        "description": "Get the SSM patch baseline associated to the given patch group.",
                        "resource-types": "patchbaseline*"
                    },
                    "ListCommandInvocations": {
                        "access-level": "read",
                        "actions": "ListCommandInvocations",
                        "description": "An invocation is copy of a command sent to a specific instance."
                    },
                    "ListCommands": {
                        "access-level": "read",
                        "actions": "ListCommands",
                        "description": "Lists the commands requested by users of the AWS account."
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "Returns a list of the tags assigned to the specified resource.",
                        "resource-types": "document"
                    },
                    "PutConfigurePackageResult": {
                        "access-level": "read",
                        "actions": "PutConfigurePackageResult",
                        "description": "Reports installation result for a package."
                    },
                    "windowtask*": {
                        "access-level": "read",
                        "actions": "windowtask*"
                    }
                },
                "tagging": {
                    "AddTagsToResource": {
                        "access-level": "tagging",
                        "actions": "AddTagsToResource",
                        "description": "Adds or overwrites one or more tags for the specified resource.",
                        "resource-types": "document"
                    },
                    "RemoveTagsFromResource": {
                        "access-level": "tagging",
                        "actions": "RemoveTagsFromResource",
                        "description": "Removes all tags from the specified resource.",
                        "resource-types": "document"
                    }
                },
                "write": {
                    "CancelCommand": {
                        "access-level": "write",
                        "actions": "CancelCommand",
                        "description": "Attempts to cancel the command specified by the Command ID."
                    },
                    "CreateActivation": {
                        "access-level": "write",
                        "actions": "CreateActivation",
                        "description": "Registers your on-premises server or virtual machine with Amazon EC2 so that you can manage these resources using Run Command."
                    },
                    "CreateAssociation": {
                        "access-level": "write",
                        "actions": "CreateAssociation",
                        "description": "Associates the specified SSM document with the specified instance.",
                        "resource-types": "document*"
                    },
                    "CreateAssociationBatch": {
                        "access-level": "write",
                        "actions": "CreateAssociationBatch",
                        "description": "Associates the specified SSM document with the specified instances.",
                        "resource-types": "document*"
                    },
                    "CreateDocument": {
                        "access-level": "write",
                        "actions": "CreateDocument",
                        "description": "Creates an SSM document."
                    },
                    "CreateMaintenanceWindow": {
                        "access-level": "write",
                        "actions": "CreateMaintenanceWindow",
                        "description": "Create an SSM maintenance window."
                    },
                    "CreatePatchBaseline": {
                        "access-level": "write",
                        "actions": "CreatePatchBaseline",
                        "description": "Create a SSM patch baseline."
                    },
                    "CreateResourceDataSync": {
                        "access-level": "write",
                        "actions": "CreateResourceDataSync",
                        "description": "Creates a resource data sync configuration to a single bucket in Amazon S3."
                    },
                    "DeleteActivation": {
                        "access-level": "write",
                        "actions": "DeleteActivation",
                        "description": "Deletes an activation."
                    },
                    "DeleteAssociation": {
                        "access-level": "write",
                        "actions": "DeleteAssociation",
                        "description": "Disassociates the specified SSM document from the specified instance.",
                        "resource-types": "document*"
                    },
                    "DeleteDocument": {
                        "access-level": "write",
                        "actions": "DeleteDocument",
                        "description": "Deletes the SSM document and all instance associations to the document.",
                        "resource-types": "document*"
                    },
                    "DeleteMaintenanceWindow": {
                        "access-level": "write",
                        "actions": "DeleteMaintenanceWindow",
                        "description": "Delete an SSM maintenance window.",
                        "resource-types": "maintenancewindow*"
                    },
                    "DeleteParameter": {
                        "access-level": "write",
                        "actions": "DeleteParameter",
                        "description": "Delete a parameter from the system.",
                        "resource-types": "parameter*"
                    },
                    "DeleteParameters": {
                        "access-level": "write",
                        "actions": "DeleteParameters",
                        "description": "Delete a list of parameters.",
                        "resource-types": "parameter*"
                    },
                    "DeletePatchBaseline": {
                        "access-level": "write",
                        "actions": "DeletePatchBaseline",
                        "description": "Delete a SSM patch baseline.",
                        "resource-types": "patchbaseline*"
                    },
                    "DeleteResourceDataSync": {
                        "access-level": "write",
                        "actions": "DeleteResourceDataSync",
                        "description": "Deletes a Resource Data Sync configuration."
                    },
                    "DeregisterManagedInstance": {
                        "access-level": "write",
                        "actions": "DeregisterManagedInstance",
                        "description": "Removes the server or virtual machine from the list of registered servers.",
                        "resource-types": "managed-instance*"
                    },
                    "DeregisterPatchBaselineForPatchGroup": {
                        "access-level": "write",
                        "actions": "DeregisterPatchBaselineForPatchGroup",
                        "description": "Deregister a SSM patch baseline from a patch group.",
                        "resource-types": "patchbaseline*"
                    },
                    "DeregisterTargetFromMaintenanceWindow": {
                        "access-level": "write",
                        "actions": "DeregisterTargetFromMaintenanceWindow",
                        "description": "Deregister a target from SSM maintenance window.",
                        "resource-types": "maintenancewindow*"
                    },
                    "DeregisterTaskFromMaintenanceWindow": {
                        "access-level": "write",
                        "actions": "DeregisterTaskFromMaintenanceWindow",
                        "description": "Deregister a task from SSM maintenance window.",
                        "resource-types": "maintenancewindow*"
                    },
                    "ModifyDocumentPermission": {
                        "access-level": "write",
                        "actions": "ModifyDocumentPermission",
                        "description": "Share a document publicly or privately.",
                        "resource-types": "document*"
                    },
                    "PutComplianceItems": {
                        "access-level": "write",
                        "actions": "PutComplianceItems",
                        "description": "Registers a compliance type and other compliance details on a designated resource."
                    },
                    "PutParameter": {
                        "access-level": "write",
                        "actions": "PutParameter",
                        "description": "Add a parameter to the system.",
                        "resource-types": "parameter*"
                    },
                    "RegisterDefaultPatchBaseline": {
                        "access-level": "write",
                        "actions": "RegisterDefaultPatchBaseline",
                        "description": "Register a SSM patch baseline as the default.",
                        "resource-types": "patchbaseline*"
                    },
                    "RegisterPatchBaselineForPatchGroup": {
                        "access-level": "write",
                        "actions": "RegisterPatchBaselineForPatchGroup",
                        "description": "Register a SSM patch baseline to a patch group.",
                        "resource-types": "patchbaseline*"
                    },
                    "RegisterTargetWithMaintenanceWindow": {
                        "access-level": "write",
                        "actions": "RegisterTargetWithMaintenanceWindow",
                        "description": "Register a SSM window target to a maintenance window.",
                        "resource-types": "maintenancewindow*"
                    },
                    "RegisterTaskWithMaintenanceWindow": {
                        "access-level": "write",
                        "actions": "RegisterTaskWithMaintenanceWindow",
                        "description": "Register a SSM window task to a maintenance window.",
                        "resource-types": "maintenancewindow*"
                    },
                    "ResumeSession": {
                        "access-level": "write",
                        "actions": "ResumeSession",
                        "description": "Resume a disconnected SSM session manager connection.",
                        "resource-types": "session*"
                    },
                    "SendAutomationSignal": {
                        "access-level": "write",
                        "actions": "SendAutomationSignal"
                    },
                    "SendCommand": {
                        "access-level": "write",
                        "actions": "SendCommand",
                        "condition-keys": [
                            "ssm:resourceTag/tag-key"
                        ],
                        "description": "Executes commands on one or more remote instances.",
                        "resource-types": "document"
                    },
                    "StartAutomationExecution": {
                        "access-level": "write",
                        "actions": "StartAutomationExecution",
                        "description": "Initiates execution of an Automation document."
                    },
                    "StartSession": {
                        "access-level": "write",
                        "actions": "StartSession",
                        "description": "Start a connection to an instance using SSM Session Manager.",
                        "resource-types": "instance*"
                    },
                    "StopAutomationExecution": {
                        "access-level": "write",
                        "actions": "StopAutomationExecution",
                        "description": "Stop an Automation that is currently executing."
                    },
                    "TerminateSession": {
                        "access-level": "write",
                        "actions": "TerminateSession",
                        "description": "Terminate an ongoing SSM Session Manager connection.",
                        "resource-types": "session*"
                    },
                    "UpdateAssociationStatus": {
                        "access-level": "write",
                        "actions": "UpdateAssociationStatus",
                        "description": "Updates the status of the SSM document associated with the specified instance.",
                        "resource-types": "document"
                    },
                    "UpdateInstanceInformation": {
                        "access-level": "write",
                        "actions": "UpdateInstanceInformation",
                        "description": "Updates the status of the SSM document associated with the specified instance.",
                        "resource-types": "document"
                    },
                    "UpdateMaintenanceWindow": {
                        "access-level": "write",
                        "actions": "UpdateMaintenanceWindow",
                        "description": "Update a SSM maintenance window.",
                        "resource-types": "maintenancewindow*"
                    },
                    "UpdateMaintenanceWindowTarget": {
                        "access-level": "write",
                        "actions": "UpdateMaintenanceWindowTarget",
                        "description": "Update a SSM maintenance window target.",
                        "resource-types": "maintenancewindow*"
                    },
                    "UpdateMaintenanceWindowTask": {
                        "access-level": "write",
                        "actions": "UpdateMaintenanceWindowTask",
                        "description": "Update a SSM maintenance window task.",
                        "resource-types": "maintenancewindow*"
                    },
                    "UpdateManagedInstanceRole": {
                        "access-level": "write",
                        "actions": "UpdateManagedInstanceRole",
                        "description": "Assigns or changes an Amazon Identity and Access Management (IAM) role to the managed instance.",
                        "resource-types": "managed-instance*"
                    },
                    "UpdatePatchBaseline": {
                        "access-level": "write",
                        "actions": "UpdatePatchBaseline",
                        "description": "Update a SSM patch baseline.",
                        "resource-types": "patchbaseline*"
                    },
                    "document": {
                        "access-level": "write",
                        "actions": "document",
                        "condition-keys": [
                            "ssm:resourceTag/tag-key"
                        ]
                    },
                    "windowtarget*": {
                        "access-level": "write",
                        "actions": "windowtarget*"
                    },
                    "windowtask*": {
                        "access-level": "write",
                        "actions": "windowtask*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "document": {
                    "arn": "arn:${Partition}:ssm:${Region}:${Account}:document/${DocumentName}",
                    "resource-types": "document"
                },
                "instance": {
                    "arn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
                    "condition-keys": "ssm:resourceTag/tag-key",
                    "resource-types": "instance"
                },
                "maintenancewindow": {
                    "arn": "arn:${Partition}:ssm:${Region}:${Account}:maintenancewindow/${ResourceId}",
                    "resource-types": "maintenancewindow"
                },
                "managed-instance": {
                    "arn": "arn:${Partition}:ssm:${Region}:${Account}:managed-instance/${ManagedInstanceName}",
                    "resource-types": "managed-instance"
                },
                "parameter": {
                    "arn": "arn:${Partition}:ssm:${Region}:${Account}:parameter/${FullyQualifiedParameterName}",
                    "condition-keys": "ssm:resourceTag/tag-key",
                    "resource-types": "parameter"
                },
                "patchbaseline": {
                    "arn": "arn:${Partition}:ssm:${Region}:${Account}:patchbaseline/${ResourceId}",
                    "resource-types": "patchbaseline"
                },
                "session": {
                    "arn": "arn:${Partition}:ssm:${Region}:${Account}:session/${ResourceId}",
                    "resource-types": "session"
                },
                "windowtarget": {
                    "arn": "arn:${Partition}:ssm:${Region}:${Account}:windowtarget/${ResourceId}",
                    "resource-types": "windowtarget"
                },
                "windowtask": {
                    "arn": "arn:${Partition}:ssm:${Region}:${Account}:windowtask/${ResourceId}",
                    "resource-types": "windowtask"
                }
            }
        },
        "textract": {
            "actions": {
                "read": {
                    "AnalyzeDocument": {
                        "access-level": "read",
                        "actions": "AnalyzeDocument",
                        "dependent-actions": "s3:GetObject",
                        "description": "Detects instances of real-world document entities within an image provided as input."
                    },
                    "DetectDocumentText": {
                        "access-level": "read",
                        "actions": "DetectDocumentText",
                        "dependent-actions": "s3:GetObject",
                        "description": "Detects text in document images."
                    },
                    "GetDocumentAnalysis": {
                        "access-level": "read",
                        "actions": "GetDocumentAnalysis",
                        "description": "Returns information about a document analysis job."
                    },
                    "GetDocumentTextDetection": {
                        "access-level": "read",
                        "actions": "GetDocumentTextDetection",
                        "description": "Returns information about a document text detection job."
                    }
                },
                "write": {
                    "StartDocumentAnalysis": {
                        "access-level": "write",
                        "actions": "StartDocumentAnalysis",
                        "dependent-actions": "s3:GetObject",
                        "description": "Starts an asynchronous job to detect instances of real-world document entities within an image or pdf provided as input."
                    },
                    "StartDocumentTextDetection": {
                        "access-level": "write",
                        "actions": "StartDocumentTextDetection",
                        "dependent-actions": "s3:GetObject",
                        "description": "Starts an asynchronous job to detect text in document images or pdfs."
                    }
                }
            }
        },
        "transcribe": {
            "actions": {
                "list": {
                    "ListTranscriptionJobs": {
                        "access-level": "list",
                        "actions": "ListTranscriptionJobs",
                        "description": "Lists transcription jobs with the specified status."
                    }
                },
                "read": {
                    "GetTranscriptionJob": {
                        "access-level": "read",
                        "actions": "GetTranscriptionJob",
                        "description": "Returns information about a transcription job."
                    }
                },
                "write": {
                    "StartTranscriptionJob": {
                        "access-level": "write",
                        "actions": "StartTranscriptionJob",
                        "dependent-actions": "s3:GetObject",
                        "description": "Starts an asynchronous job to transcribe speech to text."
                    }
                }
            }
        },
        "transferforsftp": {
            "actions": {
                "list": {
                    "ListServers": {
                        "access-level": "list",
                        "actions": "ListServers",
                        "condition-keys": [
                            "aws:TagKeys"
                        ],
                        "description": "Enables the caller to list servers"
                    },
                    "ListUsers": {
                        "access-level": "list",
                        "actions": "ListUsers",
                        "condition-keys": [
                            "aws:TagKeys"
                        ],
                        "description": "Enables the caller to list users associated with a server.",
                        "resource-types": "user*"
                    }
                },
                "read": {
                    "DescribeServer": {
                        "access-level": "read",
                        "actions": "DescribeServer",
                        "condition-keys": [
                            "aws:TagKeys"
                        ],
                        "description": "Enables the caller to describe a server.",
                        "resource-types": "server*"
                    },
                    "DescribeUser": {
                        "access-level": "read",
                        "actions": "DescribeUser",
                        "condition-keys": [
                            "aws:TagKeys"
                        ],
                        "description": "Enables the caller to describe a user associated with a server.",
                        "resource-types": "user*"
                    },
                    "ListTagsForResource": {
                        "access-level": "read",
                        "actions": "ListTagsForResource",
                        "description": "Enables the caller to list tags for a server or a user.",
                        "resource-types": "server"
                    },
                    "TestIdentityProvider": {
                        "access-level": "read",
                        "actions": "TestIdentityProvider",
                        "condition-keys": [
                            "aws:TagKeys"
                        ],
                        "description": "Enables the caller to test a server\\'s custom identity provider.",
                        "resource-types": "server*"
                    },
                    "user": {
                        "access-level": "read",
                        "actions": "user",
                        "condition-keys": [
                            "aws:TagKeys"
                        ]
                    }
                },
                "tagging": {
                    "TagResource": {
                        "access-level": "tagging",
                        "actions": "TagResource",
                        "description": "Enables the caller to tag a server or a user.",
                        "resource-types": "server"
                    },
                    "UntagResource": {
                        "access-level": "tagging",
                        "actions": "UntagResource",
                        "description": "Enables the caller to untag a server or a user.",
                        "resource-types": "server"
                    },
                    "user": {
                        "access-level": "tagging",
                        "actions": "user",
                        "condition-keys": [
                            "aws:TagKeys",
                            "aws:RequestTag/${TagKey}"
                        ]
                    }
                },
                "write": {
                    "CreateServer": {
                        "access-level": "write",
                        "actions": "CreateServer",
                        "condition-keys": [
                            "aws:TagKeys",
                            "aws:RequestTag/${TagKey}"
                        ],
                        "description": "Enables the caller to create a server."
                    },
                    "CreateUser": {
                        "access-level": "write",
                        "actions": "CreateUser",
                        "condition-keys": [
                            "aws:TagKeys",
                            "aws:RequestTag/${TagKey}"
                        ],
                        "dependent-actions": "iam:PassRole",
                        "description": "Enables the caller to add a user associated with a server.",
                        "resource-types": "server*"
                    },
                    "DeleteServer": {
                        "access-level": "write",
                        "actions": "DeleteServer",
                        "condition-keys": [
                            "aws:TagKeys"
                        ],
                        "description": "Enables the caller to delete a server.",
                        "resource-types": "server*"
                    },
                    "DeleteSshPublicKey": {
                        "access-level": "write",
                        "actions": "DeleteSshPublicKey",
                        "condition-keys": [
                            "aws:TagKeys"
                        ],
                        "description": "Enables the caller to delete an SSH public key from a user.",
                        "resource-types": "user*"
                    },
                    "DeleteUser": {
                        "access-level": "write",
                        "actions": "DeleteUser",
                        "condition-keys": [
                            "aws:TagKeys"
                        ],
                        "description": "Enables the caller to delete a user associated with a server.",
                        "resource-types": "user*"
                    },
                    "ImportSshPublicKey": {
                        "access-level": "write",
                        "actions": "ImportSshPublicKey",
                        "condition-keys": [
                            "aws:TagKeys"
                        ],
                        "description": "Enables the caller to add an SSH public key to a user.",
                        "resource-types": "user*"
                    },
                    "StartServer": {
                        "access-level": "write",
                        "actions": "StartServer",
                        "condition-keys": [
                            "aws:TagKeys"
                        ],
                        "description": "Enables the caller to start a server.",
                        "resource-types": "server*"
                    },
                    "StopServer": {
                        "access-level": "write",
                        "actions": "StopServer",
                        "condition-keys": [
                            "aws:TagKeys"
                        ],
                        "description": "Enables the caller to stop a server.",
                        "resource-types": "server*"
                    },
                    "UpdateServer": {
                        "access-level": "write",
                        "actions": "UpdateServer",
                        "condition-keys": [
                            "aws:TagKeys"
                        ],
                        "description": "Enables the caller to update the configuration of a server",
                        "resource-types": "server*"
                    },
                    "UpdateUser": {
                        "access-level": "write",
                        "actions": "UpdateUser",
                        "description": "Enables the caller to update the configuration of a user",
                        "resource-types": "server*"
                    },
                    "user*": {
                        "access-level": "write",
                        "actions": "user*",
                        "condition-keys": [
                            "aws:TagKeys"
                        ]
                    }
                }
            },
            "condition-keys": [
                "",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys"
            ],
            "resource-types": {
                "server": {
                    "arn": "arn:${Partition}:transfer:${region}:${account}:server/${serverId}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys",
                    "resource-types": "server"
                },
                "user": {
                    "arn": "arn:${Partition}:transfer:${region}:${account}:user/${serverId}/${username}",
                    "condition-keys": "aws:RequestTag/${TagKey} aws:TagKeys",
                    "resource-types": "user"
                }
            }
        },
        "translate": {
            "actions": {
                "read": {
                    "GetTerminology": {
                        "access-level": "read",
                        "actions": "GetTerminology",
                        "description": "Retrieves a custom terminology."
                    },
                    "ListTerminologies": {
                        "access-level": "read",
                        "actions": "ListTerminologies",
                        "description": "Provides a list of custom terminologies associated with your account."
                    },
                    "TranslateText": {
                        "access-level": "read",
                        "actions": "TranslateText",
                        "description": "Translate text from a source language to a target language."
                    }
                },
                "write": {
                    "DeleteTerminology": {
                        "access-level": "write",
                        "actions": "DeleteTerminology",
                        "description": "A synchronous action that deletes a custom terminology."
                    },
                    "ImportTerminology": {
                        "access-level": "write",
                        "actions": "ImportTerminology",
                        "description": "Creates or updates a custom terminology, depending on whether or not one already exists for the given terminology name."
                    }
                }
            }
        },
        "trustedadvisor": {
            "actions": {
                "list": {
                    "DescribeCheckItems": {
                        "access-level": "list",
                        "actions": "DescribeCheckItems",
                        "description": "View details for the check items",
                        "resource-types": "checks*"
                    },
                    "DescribeCheckRefreshStatuses": {
                        "access-level": "list",
                        "actions": "DescribeCheckRefreshStatuses",
                        "description": "Describe check refresh statuses",
                        "resource-types": "checks*"
                    },
                    "DescribeCheckSummaries": {
                        "access-level": "list",
                        "actions": "DescribeCheckSummaries",
                        "description": "Describes the check\\'s summaries",
                        "resource-types": "checks*"
                    },
                    "DescribeNotificationPreferences": {
                        "access-level": "list",
                        "actions": "DescribeNotificationPreferences",
                        "description": "Describes the notification preferences for the account"
                    }
                },
                "write": {
                    "ExcludeCheckItems": {
                        "access-level": "write",
                        "actions": "ExcludeCheckItems",
                        "description": "Exclude recommendations for checks for a given customer",
                        "resource-types": "checks*"
                    },
                    "IncludeCheckItems": {
                        "access-level": "write",
                        "actions": "IncludeCheckItems",
                        "description": "Include recommendations for checks for a given customer",
                        "resource-types": "checks*"
                    },
                    "RefreshCheck": {
                        "access-level": "write",
                        "actions": "RefreshCheck",
                        "description": "Enqueue a refresh for the specified check",
                        "resource-types": "checks*"
                    },
                    "UpdateNotificationPreferences": {
                        "access-level": "write",
                        "actions": "UpdateNotificationPreferences",
                        "description": "Update notification preferences"
                    }
                }
            }
        },
        "waf": {
            "actions": {
                "list": {
                    "ListActivatedRulesInRuleGroup": {
                        "access-level": "list",
                        "actions": "ListActivatedRulesInRuleGroup",
                        "description": "Returns an array of ActivatedRule objects."
                    },
                    "ListByteMatchSets": {
                        "access-level": "list",
                        "actions": "ListByteMatchSets",
                        "description": "Returns an array of ByteMatchSetSummary objects."
                    },
                    "ListGeoMatchSets": {
                        "access-level": "list",
                        "actions": "ListGeoMatchSets",
                        "description": "Returns an array of GeoMatchSetSummary objects."
                    },
                    "ListIPSets": {
                        "access-level": "list",
                        "actions": "ListIPSets",
                        "description": "Returns an array of IPSetSummary objects in the response."
                    },
                    "ListRateBasedRules": {
                        "access-level": "list",
                        "actions": "ListRateBasedRules",
                        "description": "Returns an array of RuleSummary objects."
                    },
                    "ListRegexMatchSets": {
                        "access-level": "list",
                        "actions": "ListRegexMatchSets",
                        "description": "Returns an array of RegexMatchSetSummary objects."
                    },
                    "ListRegexPatternSets": {
                        "access-level": "list",
                        "actions": "ListRegexPatternSets",
                        "description": "Returns an array of RegexPatternSetSummary objects."
                    },
                    "ListRuleGroups": {
                        "access-level": "list",
                        "actions": "ListRuleGroups",
                        "description": "Returns an array of RuleGroup objects."
                    },
                    "ListRules": {
                        "access-level": "list",
                        "actions": "ListRules",
                        "description": "Returns an array of RuleSummary objects."
                    },
                    "ListSizeConstraintSets": {
                        "access-level": "list",
                        "actions": "ListSizeConstraintSets",
                        "description": "Returns an array of SizeConstraintSetSummary objects."
                    },
                    "ListSqlInjectionMatchSets": {
                        "access-level": "list",
                        "actions": "ListSqlInjectionMatchSets",
                        "description": "Returns an array of SqlInjectionMatchSet objects."
                    },
                    "ListSubscribedRuleGroups": {
                        "access-level": "list",
                        "actions": "ListSubscribedRuleGroups",
                        "description": "Returns an array of RuleGroup objects that you are subscribed to."
                    },
                    "ListWebACLs": {
                        "access-level": "list",
                        "actions": "ListWebACLs",
                        "description": "Returns an array of WebACLSummary objects in the response."
                    },
                    "ListXssMatchSets": {
                        "access-level": "list",
                        "actions": "ListXssMatchSets",
                        "description": "Returns an array of XssMatchSet objects."
                    }
                },
                "permissions-management": {
                    "CreateWebACL": {
                        "access-level": "permissions-management",
                        "actions": "CreateWebACL",
                        "description": "Creates a WebACL, which contains the Rules that identify the CloudFront web requests that you want to allow, block, or count.",
                        "resource-types": "webacl*"
                    },
                    "DeletePermissionPolicy": {
                        "access-level": "permissions-management",
                        "actions": "DeletePermissionPolicy",
                        "description": "Permanently deletes an IAM policy from the specified RuleGroup.",
                        "resource-types": "rulegroup*"
                    },
                    "DeleteWebACL": {
                        "access-level": "permissions-management",
                        "actions": "DeleteWebACL",
                        "description": "Permanently deletes a WebACL.",
                        "resource-types": "webacl*"
                    },
                    "PutPermissionPolicy": {
                        "access-level": "permissions-management",
                        "actions": "PutPermissionPolicy",
                        "description": "Attaches a IAM policy to the specified resource. The only supported use for this action is to share a RuleGroup across accounts.",
                        "resource-types": "rulegroup*"
                    },
                    "UpdateWebACL": {
                        "access-level": "permissions-management",
                        "actions": "UpdateWebACL",
                        "description": "Inserts or deletes ActivatedRule objects in a WebACL.",
                        "resource-types": "webacl*"
                    }
                },
                "read": {
                    "GetByteMatchSet": {
                        "access-level": "read",
                        "actions": "GetByteMatchSet",
                        "description": "Returns the ByteMatchSet specified by ByteMatchSetId.",
                        "resource-types": "bytematchset*"
                    },
                    "GetChangeToken": {
                        "access-level": "read",
                        "actions": "GetChangeToken",
                        "description": "When you want to create, update, or delete AWS WAF objects, get a change token and include the change token in the create, update, or delete request."
                    },
                    "GetChangeTokenStatus": {
                        "access-level": "read",
                        "actions": "GetChangeTokenStatus",
                        "description": "Returns the status of a ChangeToken that you got by calling GetChangeToken."
                    },
                    "GetGeoMatchSet": {
                        "access-level": "read",
                        "actions": "GetGeoMatchSet",
                        "description": "Returns the GeoMatchSet specified by GeoMatchSetId.",
                        "resource-types": "geomatchset*"
                    },
                    "GetIPSet": {
                        "access-level": "read",
                        "actions": "GetIPSet",
                        "description": "Returns the IPSet that is specified by IPSetId.",
                        "resource-types": "ipset*"
                    },
                    "GetPermissionPolicy": {
                        "access-level": "read",
                        "actions": "GetPermissionPolicy",
                        "description": "Returns the IAM policy attached to the RuleGroup.",
                        "resource-types": "rulegroup*"
                    },
                    "GetRateBasedRule": {
                        "access-level": "read",
                        "actions": "GetRateBasedRule",
                        "description": "Returns the RateBasedRule that is specified by the RuleId that you included in the GetRateBasedRule request.",
                        "resource-types": "ratebasedrule*"
                    },
                    "GetRateBasedRuleManagedKeys": {
                        "access-level": "read",
                        "actions": "GetRateBasedRuleManagedKeys",
                        "description": "Returns an array of IP addresses currently being blocked by the RateBasedRule that is specified by the RuleId.",
                        "resource-types": "ratebasedrule*"
                    },
                    "GetRegexMatchSet": {
                        "access-level": "read",
                        "actions": "GetRegexMatchSet",
                        "description": "Returns the RegexMatchSet specified by RegexMatchSetId.",
                        "resource-types": "regexmatchset*"
                    },
                    "GetRegexPatternSet": {
                        "access-level": "read",
                        "actions": "GetRegexPatternSet",
                        "description": "Returns the RegexPatternSet specified by RegexPatternSetId.",
                        "resource-types": "regexpatternset*"
                    },
                    "GetRule": {
                        "access-level": "read",
                        "actions": "GetRule",
                        "description": "Returns the Rule that is specified by the RuleId that you included in the GetRule request.",
                        "resource-types": "rule*"
                    },
                    "GetRuleGroup": {
                        "access-level": "read",
                        "actions": "GetRuleGroup",
                        "description": "Returns the RuleGroup that is specified by the RuleGroupId that you included in the GetRuleGroup request.",
                        "resource-types": "rulegroup*"
                    },
                    "GetSampledRequests": {
                        "access-level": "read",
                        "actions": "GetSampledRequests",
                        "description": "Gets detailed information about a specified number of requests--a sample--that AWS WAF randomly selects from among the first 5,000 requests that your AWS resource received during a time range that you choose.",
                        "resource-types": "rule"
                    },
                    "GetSizeConstraintSet": {
                        "access-level": "read",
                        "actions": "GetSizeConstraintSet",
                        "description": "Returns the SizeConstraintSet specified by SizeConstraintSetId.",
                        "resource-types": "sizeconstraintset*"
                    },
                    "GetSqlInjectionMatchSet": {
                        "access-level": "read",
                        "actions": "GetSqlInjectionMatchSet",
                        "description": "Returns the SqlInjectionMatchSet that is specified by SqlInjectionMatchSetId.",
                        "resource-types": "sqlinjectionmatchset*"
                    },
                    "GetWebACL": {
                        "access-level": "read",
                        "actions": "GetWebACL",
                        "description": "Returns the WebACL that is specified by WebACLId.",
                        "resource-types": "webacl*"
                    },
                    "GetXssMatchSet": {
                        "access-level": "read",
                        "actions": "GetXssMatchSet",
                        "description": "Returns the XssMatchSet that is specified by XssMatchSetId.",
                        "resource-types": "xssmatchset*"
                    },
                    "webacl": {
                        "access-level": "read",
                        "actions": "webacl"
                    }
                },
                "write": {
                    "CreateByteMatchSet": {
                        "access-level": "write",
                        "actions": "CreateByteMatchSet",
                        "description": "Creates a ByteMatchSet.",
                        "resource-types": "bytematchset*"
                    },
                    "CreateGeoMatchSet": {
                        "access-level": "write",
                        "actions": "CreateGeoMatchSet",
                        "description": "Creates a GeoMatchSet, which you use to specify which web requests you want to allow or block based on the country that the requests originate from.",
                        "resource-types": "geomatchset*"
                    },
                    "CreateIPSet": {
                        "access-level": "write",
                        "actions": "CreateIPSet",
                        "description": "Creates an IPSet, which you use to specify which web requests you want to allow or block based on the IP addresses that the requests originate from.",
                        "resource-types": "ipset*"
                    },
                    "CreateRateBasedRule": {
                        "access-level": "write",
                        "actions": "CreateRateBasedRule",
                        "description": "Creates a RateBasedRule, which contains a RateLimit specifying the maximum number of requests that AWS WAF allows from a specified IP address in a five-minute period.",
                        "resource-types": "ratebasedrule*"
                    },
                    "CreateRegexMatchSet": {
                        "access-level": "write",
                        "actions": "CreateRegexMatchSet",
                        "description": "Creates a RegexMatchSet, which you use to specify which web requests you want to allow or block based on the regex patterns you specified in a RegexPatternSet.",
                        "resource-types": "regexmatchset*"
                    },
                    "CreateRegexPatternSet": {
                        "access-level": "write",
                        "actions": "CreateRegexPatternSet",
                        "description": "Creates a RegexPatternSet, which you use to specify the regular expression (regex) pattern that you want AWS WAF to search for.",
                        "resource-types": "regexpatternset*"
                    },
                    "CreateRule": {
                        "access-level": "write",
                        "actions": "CreateRule",
                        "description": "Creates a Rule, which contains the IPSet objects, ByteMatchSet objects, and other predicates that identify the requests that you want to block.",
                        "resource-types": "rule*"
                    },
                    "CreateRuleGroup": {
                        "access-level": "write",
                        "actions": "CreateRuleGroup",
                        "description": "Creates a RuleGroup. A rule group is a collection of predefined rules that you add to a WebACL.",
                        "resource-types": "rulegroup*"
                    },
                    "CreateSizeConstraintSet": {
                        "access-level": "write",
                        "actions": "CreateSizeConstraintSet",
                        "description": "Creates a SizeConstraintSet, which you use to identify the part of a web request that you want to check for length.",
                        "resource-types": "sizeconstraintset*"
                    },
                    "CreateSqlInjectionMatchSet": {
                        "access-level": "write",
                        "actions": "CreateSqlInjectionMatchSet",
                        "description": "Creates a SqlInjectionMatchSet, which you use to allow, block, or count requests that contain snippets of SQL code in a specified part of web requests.",
                        "resource-types": "sqlinjectionmatchset*"
                    },
                    "CreateXssMatchSet": {
                        "access-level": "write",
                        "actions": "CreateXssMatchSet",
                        "description": "Creates an XssMatchSet, which you use to allow, block, or count requests that contain cross-site scripting attacks in the specified part of web requests.",
                        "resource-types": "xssmatchset*"
                    },
                    "DeleteByteMatchSet": {
                        "access-level": "write",
                        "actions": "DeleteByteMatchSet",
                        "description": "Permanently deletes a ByteMatchSet.",
                        "resource-types": "bytematchset*"
                    },
                    "DeleteGeoMatchSet": {
                        "access-level": "write",
                        "actions": "DeleteGeoMatchSet",
                        "description": "Permanently deletes an GeoMatchSet.",
                        "resource-types": "geomatchset*"
                    },
                    "DeleteIPSet": {
                        "access-level": "write",
                        "actions": "DeleteIPSet",
                        "description": "Permanently deletes an IPSet.",
                        "resource-types": "ipset*"
                    },
                    "DeleteRateBasedRule": {
                        "access-level": "write",
                        "actions": "DeleteRateBasedRule",
                        "description": "Permanently deletes a RateBasedRule.",
                        "resource-types": "ratebasedrule*"
                    },
                    "DeleteRegexMatchSet": {
                        "access-level": "write",
                        "actions": "DeleteRegexMatchSet",
                        "description": "Permanently deletes an RegexMatchSet.",
                        "resource-types": "regexmatchset*"
                    },
                    "DeleteRegexPatternSet": {
                        "access-level": "write",
                        "actions": "DeleteRegexPatternSet",
                        "description": "Permanently deletes an RegexPatternSet.",
                        "resource-types": "regexpatternset*"
                    },
                    "DeleteRule": {
                        "access-level": "write",
                        "actions": "DeleteRule",
                        "description": "Permanently deletes a Rule.",
                        "resource-types": "rule*"
                    },
                    "DeleteRuleGroup": {
                        "access-level": "write",
                        "actions": "DeleteRuleGroup",
                        "description": "Permanently deletes a RuleGroup.",
                        "resource-types": "rulegroup*"
                    },
                    "DeleteSizeConstraintSet": {
                        "access-level": "write",
                        "actions": "DeleteSizeConstraintSet",
                        "description": "Permanently deletes a SizeConstraintSet.",
                        "resource-types": "sizeconstraintset*"
                    },
                    "DeleteSqlInjectionMatchSet": {
                        "access-level": "write",
                        "actions": "DeleteSqlInjectionMatchSet",
                        "description": "Permanently deletes a SqlInjectionMatchSet.",
                        "resource-types": "sqlinjectionmatchset*"
                    },
                    "DeleteXssMatchSet": {
                        "access-level": "write",
                        "actions": "DeleteXssMatchSet",
                        "description": "Permanently deletes an XssMatchSet.",
                        "resource-types": "xssmatchset*"
                    },
                    "UpdateByteMatchSet": {
                        "access-level": "write",
                        "actions": "UpdateByteMatchSet",
                        "description": "Inserts or deletes ByteMatchTuple objects (filters) in a ByteMatchSet.",
                        "resource-types": "bytematchset*"
                    },
                    "UpdateGeoMatchSet": {
                        "access-level": "write",
                        "actions": "UpdateGeoMatchSet",
                        "description": "Inserts or deletes GeoMatchConstraint objects in a GeoMatchSet.",
                        "resource-types": "geomatchset*"
                    },
                    "UpdateIPSet": {
                        "access-level": "write",
                        "actions": "UpdateIPSet",
                        "description": "Inserts or deletes IPSetDescriptor objects in an IPSet.",
                        "resource-types": "ipset*"
                    },
                    "UpdateRateBasedRule": {
                        "access-level": "write",
                        "actions": "UpdateRateBasedRule",
                        "description": "Inserts or deletes Predicate objects in a rule and updates the RateLimit in the rule.",
                        "resource-types": "ratebasedrule*"
                    },
                    "UpdateRegexMatchSet": {
                        "access-level": "write",
                        "actions": "UpdateRegexMatchSet",
                        "description": "Inserts or deletes RegexMatchTuple objects (filters) in a RegexMatchSet.",
                        "resource-types": "regexmatchset*"
                    },
                    "UpdateRegexPatternSet": {
                        "access-level": "write",
                        "actions": "UpdateRegexPatternSet",
                        "description": "Inserts or deletes RegexPatternStrings in a RegexPatternSet.",
                        "resource-types": "regexpatternset*"
                    },
                    "UpdateRule": {
                        "access-level": "write",
                        "actions": "UpdateRule",
                        "description": "Inserts or deletes Predicate objects in a Rule.",
                        "resource-types": "rule*"
                    },
                    "UpdateRuleGroup": {
                        "access-level": "write",
                        "actions": "UpdateRuleGroup",
                        "description": "Inserts or deletes ActivatedRule objects in a RuleGroup.",
                        "resource-types": "rulegroup*"
                    },
                    "UpdateSizeConstraintSet": {
                        "access-level": "write",
                        "actions": "UpdateSizeConstraintSet",
                        "description": "Inserts or deletes SizeConstraint objects (filters) in a SizeConstraintSet.",
                        "resource-types": "sizeconstraintset*"
                    },
                    "UpdateSqlInjectionMatchSet": {
                        "access-level": "write",
                        "actions": "UpdateSqlInjectionMatchSet",
                        "description": "Inserts or deletes SqlInjectionMatchTuple objects (filters) in a SqlInjectionMatchSet.",
                        "resource-types": "sqlinjectionmatchset*"
                    },
                    "UpdateXssMatchSet": {
                        "access-level": "write",
                        "actions": "UpdateXssMatchSet",
                        "description": "Inserts or deletes XssMatchTuple objects (filters) in an XssMatchSet.",
                        "resource-types": "xssmatchset*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "bytematchset": {
                    "arn": "arn:${Partition}:waf::${Account}:bytematchset/${Id}",
                    "resource-types": "bytematchset"
                },
                "geomatchset": {
                    "arn": "arn:${Partition}:waf::${Account}:geomatchset/${Id}",
                    "resource-types": "geomatchset"
                },
                "ipset": {
                    "arn": "arn:${Partition}:waf::${Account}:ipset/${Id}",
                    "resource-types": "ipset"
                },
                "ratebasedrule": {
                    "arn": "arn:${Partition}:waf::${Account}:ratebasedrule/${Id}",
                    "resource-types": "ratebasedrule"
                },
                "regexmatchset": {
                    "arn": "arn:${Partition}:waf::${Account}:regexmatch/${Id}",
                    "resource-types": "regexmatchset"
                },
                "regexpatternset": {
                    "arn": "arn:${Partition}:waf::${Account}:regexpatternset/${Id}",
                    "resource-types": "regexpatternset"
                },
                "rule": {
                    "arn": "arn:${Partition}:waf::${Account}:rule/${Id}",
                    "resource-types": "rule"
                },
                "rulegroup": {
                    "arn": "arn:${Partition}:waf::${Account}:rulegroup/${Id}",
                    "resource-types": "rulegroup"
                },
                "sizeconstraintset": {
                    "arn": "arn:${Partition}:waf::${Account}:sizeconstraintset/${Id}",
                    "resource-types": "sizeconstraintset"
                },
                "sqlinjectionmatchset": {
                    "arn": "arn:${Partition}:waf::${Account}:sqlinjectionmatchset/${Id}",
                    "resource-types": "sqlinjectionmatchset"
                },
                "webacl": {
                    "arn": "arn:${Partition}:waf::${Account}:webacl/${Id}",
                    "resource-types": "webacl"
                },
                "xssmatchset": {
                    "arn": "arn:${Partition}:waf::${Account}:xssmatchset/${Id}",
                    "resource-types": "xssmatchset"
                }
            }
        },
        "wafregional": {
            "actions": {
                "list": {
                    "ListActivatedRulesInRuleGroup": {
                        "access-level": "list",
                        "actions": "ListActivatedRulesInRuleGroup",
                        "description": "Returns an array of ActivatedRule objects."
                    },
                    "ListByteMatchSets": {
                        "access-level": "list",
                        "actions": "ListByteMatchSets",
                        "description": "Returns an array of ByteMatchSetSummary objects."
                    },
                    "ListGeoMatchSets": {
                        "access-level": "list",
                        "actions": "ListGeoMatchSets",
                        "description": "Returns an array of GeoMatchSetSummary objects."
                    },
                    "ListIPSets": {
                        "access-level": "list",
                        "actions": "ListIPSets",
                        "description": "Returns an array of IPSetSummary objects in the response."
                    },
                    "ListRateBasedRules": {
                        "access-level": "list",
                        "actions": "ListRateBasedRules",
                        "description": "Returns an array of RuleSummary objects."
                    },
                    "ListRegexMatchSets": {
                        "access-level": "list",
                        "actions": "ListRegexMatchSets",
                        "description": "Returns an array of RegexMatchSetSummary objects."
                    },
                    "ListRegexPatternSets": {
                        "access-level": "list",
                        "actions": "ListRegexPatternSets",
                        "description": "Returns an array of RegexPatternSetSummary objects."
                    },
                    "ListResourcesForWebACL": {
                        "access-level": "list",
                        "actions": "ListResourcesForWebACL",
                        "description": "Returns an array of resources associated with the specified WebACL.",
                        "resource-types": "webacl*"
                    },
                    "ListRuleGroups": {
                        "access-level": "list",
                        "actions": "ListRuleGroups",
                        "description": "Returns an array of RuleGroup objects."
                    },
                    "ListRules": {
                        "access-level": "list",
                        "actions": "ListRules",
                        "description": "Returns an array of RuleSummary objects."
                    },
                    "ListSizeConstraintSets": {
                        "access-level": "list",
                        "actions": "ListSizeConstraintSets",
                        "description": "Returns an array of SizeConstraintSetSummary objects."
                    },
                    "ListSqlInjectionMatchSets": {
                        "access-level": "list",
                        "actions": "ListSqlInjectionMatchSets",
                        "description": "Returns an array of SqlInjectionMatchSet objects."
                    },
                    "ListSubscribedRuleGroups": {
                        "access-level": "list",
                        "actions": "ListSubscribedRuleGroups",
                        "description": "Returns an array of RuleGroup objects that you are subscribed to."
                    },
                    "ListWebACLs": {
                        "access-level": "list",
                        "actions": "ListWebACLs",
                        "description": "Returns an array of WebACLSummary objects in the response."
                    },
                    "ListXssMatchSets": {
                        "access-level": "list",
                        "actions": "ListXssMatchSets",
                        "description": "Returns an array of XssMatchSet objects."
                    }
                },
                "permissions-management": {
                    "CreateWebACL": {
                        "access-level": "permissions-management",
                        "actions": "CreateWebACL",
                        "description": "Creates a WebACL, which contains the Rules that identify the CloudFront web requests that you want to allow, block, or count.",
                        "resource-types": "webacl*"
                    },
                    "DeletePermissionPolicy": {
                        "access-level": "permissions-management",
                        "actions": "DeletePermissionPolicy",
                        "description": "Permanently deletes an IAM policy from the specified RuleGroup.",
                        "resource-types": "rulegroup*"
                    },
                    "DeleteWebACL": {
                        "access-level": "permissions-management",
                        "actions": "DeleteWebACL",
                        "description": "Permanently deletes a WebACL.",
                        "resource-types": "webacl*"
                    },
                    "PutPermissionPolicy": {
                        "access-level": "permissions-management",
                        "actions": "PutPermissionPolicy",
                        "description": "Attaches a IAM policy to the specified resource. The only supported use for this action is to share a RuleGroup across accounts.",
                        "resource-types": "rulegroup*"
                    },
                    "UpdateWebACL": {
                        "access-level": "permissions-management",
                        "actions": "UpdateWebACL",
                        "description": "Inserts or deletes ActivatedRule objects in a WebACL.",
                        "resource-types": "webacl*"
                    }
                },
                "read": {
                    "GetByteMatchSet": {
                        "access-level": "read",
                        "actions": "GetByteMatchSet",
                        "description": "Returns the ByteMatchSet specified by ByteMatchSetId.",
                        "resource-types": "bytematchset*"
                    },
                    "GetChangeToken": {
                        "access-level": "read",
                        "actions": "GetChangeToken",
                        "description": "When you want to create, update, or delete AWS WAF objects, get a change token and include the change token in the create, update, or delete equest."
                    },
                    "GetChangeTokenStatus": {
                        "access-level": "read",
                        "actions": "GetChangeTokenStatus",
                        "description": "Returns the status of a ChangeToken that you got by calling GetChangeToken."
                    },
                    "GetGeoMatchSet": {
                        "access-level": "read",
                        "actions": "GetGeoMatchSet",
                        "description": "Returns the GeoMatchSet specified by GeoMatchSetId.",
                        "resource-types": "geomatchset*"
                    },
                    "GetIPSet": {
                        "access-level": "read",
                        "actions": "GetIPSet",
                        "description": "Returns the IPSet that is specified by IPSetId.",
                        "resource-types": "ipset*"
                    },
                    "GetPermissionPolicy": {
                        "access-level": "read",
                        "actions": "GetPermissionPolicy",
                        "description": "Returns the IAM policy attached to the RuleGroup.",
                        "resource-types": "rulegroup*"
                    },
                    "GetRateBasedRule": {
                        "access-level": "read",
                        "actions": "GetRateBasedRule",
                        "description": "Returns the RateBasedRule that is specified by the RuleId that you included in the GetRateBasedRule request.",
                        "resource-types": "ratebasedrule*"
                    },
                    "GetRateBasedRuleManagedKeys": {
                        "access-level": "read",
                        "actions": "GetRateBasedRuleManagedKeys",
                        "description": "Returns an array of IP addresses currently being blocked by the RateBasedRule that is specified by the RuleId.",
                        "resource-types": "ratebasedrule*"
                    },
                    "GetRegexMatchSet": {
                        "access-level": "read",
                        "actions": "GetRegexMatchSet",
                        "description": "Returns the RegexMatchSet specified by RegexMatchSetId.",
                        "resource-types": "regexmatchset*"
                    },
                    "GetRegexPatternSet": {
                        "access-level": "read",
                        "actions": "GetRegexPatternSet",
                        "description": "Returns the RegexPatternSet specified by RegexPatternSetId.",
                        "resource-types": "regexpatternset*"
                    },
                    "GetRule": {
                        "access-level": "read",
                        "actions": "GetRule",
                        "description": "Returns the Rule that is specified by the RuleId that you included in the GetRule request.",
                        "resource-types": "rule*"
                    },
                    "GetRuleGroup": {
                        "access-level": "read",
                        "actions": "GetRuleGroup",
                        "description": "Returns the RuleGroup that is specified by the RuleGroupId that you included in the GetRuleGroup request.",
                        "resource-types": "rulegroup*"
                    },
                    "GetSampledRequests": {
                        "access-level": "read",
                        "actions": "GetSampledRequests",
                        "description": "Gets detailed information about a specified number of requests--a sample--that AWS WAF randomly selects from among the first 5,000 requests hat your AWS resource received during a time range that you choose.",
                        "resource-types": "rule"
                    },
                    "GetSizeConstraintSet": {
                        "access-level": "read",
                        "actions": "GetSizeConstraintSet",
                        "description": "Returns the SizeConstraintSet specified by SizeConstraintSetId.",
                        "resource-types": "sizeconstraintset*"
                    },
                    "GetSqlInjectionMatchSet": {
                        "access-level": "read",
                        "actions": "GetSqlInjectionMatchSet",
                        "description": "Returns the SqlInjectionMatchSet that is specified by SqlInjectionMatchSetId.",
                        "resource-types": "sqlinjectionmatchset*"
                    },
                    "GetWebACL": {
                        "access-level": "read",
                        "actions": "GetWebACL",
                        "description": "Returns the WebACL that is specified by WebACLId.",
                        "resource-types": "webacl*"
                    },
                    "GetWebACLForResource": {
                        "access-level": "read",
                        "actions": "GetWebACLForResource",
                        "description": "Returns the WebACL for the specified resource.",
                        "resource-types": "loadbalancer/app/*"
                    },
                    "GetXssMatchSet": {
                        "access-level": "read",
                        "actions": "GetXssMatchSet",
                        "description": "Returns the XssMatchSet that is specified by XssMatchSetId.",
                        "resource-types": "xssmatchset*"
                    },
                    "webacl": {
                        "access-level": "read",
                        "actions": "webacl"
                    }
                },
                "write": {
                    "AssociateWebACL": {
                        "access-level": "write",
                        "actions": "AssociateWebACL",
                        "description": "Associates a WebACL with a resource.",
                        "resource-types": "loadbalancer/app/*"
                    },
                    "CreateByteMatchSet": {
                        "access-level": "write",
                        "actions": "CreateByteMatchSet",
                        "description": "Creates a ByteMatchSet.",
                        "resource-types": "bytematchset*"
                    },
                    "CreateGeoMatchSet": {
                        "access-level": "write",
                        "actions": "CreateGeoMatchSet",
                        "description": "Creates a GeoMatchSet, which you use to specify which web requests you want to allow or block based on the country that the requests originate rom.",
                        "resource-types": "geomatchset*"
                    },
                    "CreateIPSet": {
                        "access-level": "write",
                        "actions": "CreateIPSet",
                        "description": "Creates an IPSet, which you use to specify which web requests you want to allow or block based on the IP addresses that the requests originate rom.",
                        "resource-types": "ipset*"
                    },
                    "CreateRateBasedRule": {
                        "access-level": "write",
                        "actions": "CreateRateBasedRule",
                        "description": "Creates a RateBasedRule, which contains a RateLimit specifying the maximum number of requests that AWS WAF allows from a specified IP address n a five-minute period.",
                        "resource-types": "ratebasedrule*"
                    },
                    "CreateRegexMatchSet": {
                        "access-level": "write",
                        "actions": "CreateRegexMatchSet",
                        "description": "Creates a RegexMatchSet, which you use to specify which web requests you want to allow or block based on the regex patterns you specified in a egexPatternSet.",
                        "resource-types": "regexmatchset*"
                    },
                    "CreateRegexPatternSet": {
                        "access-level": "write",
                        "actions": "CreateRegexPatternSet",
                        "description": "Creates a RegexPatternSet, which you use to specify the regular expression (regex) pattern that you want AWS WAF to search for.",
                        "resource-types": "regexpatternset*"
                    },
                    "CreateRule": {
                        "access-level": "write",
                        "actions": "CreateRule",
                        "description": "Creates a Rule, which contains the IPSet objects, ByteMatchSet objects, and other predicates that identify the requests that you want to lock.",
                        "resource-types": "rule*"
                    },
                    "CreateRuleGroup": {
                        "access-level": "write",
                        "actions": "CreateRuleGroup",
                        "description": "Creates a RuleGroup. A rule group is a collection of predefined rules that you add to a WebACL.",
                        "resource-types": "rulegroup*"
                    },
                    "CreateSizeConstraintSet": {
                        "access-level": "write",
                        "actions": "CreateSizeConstraintSet",
                        "description": "Creates a SizeConstraintSet, which you use to identify the part of a web request that you want to check for length.",
                        "resource-types": "sizeconstraintset*"
                    },
                    "CreateSqlInjectionMatchSet": {
                        "access-level": "write",
                        "actions": "CreateSqlInjectionMatchSet",
                        "description": "Creates a SqlInjectionMatchSet, which you use to allow, block, or count requests that contain snippets of SQL code in a specified part of web equests.",
                        "resource-types": "sqlinjectionmatchset*"
                    },
                    "CreateXssMatchSet": {
                        "access-level": "write",
                        "actions": "CreateXssMatchSet",
                        "description": "Creates an XssMatchSet, which you use to allow, block, or count requests that contain cross-site scripting attacks in the specified part of web equests.",
                        "resource-types": "xssmatchset*"
                    },
                    "DeleteByteMatchSet": {
                        "access-level": "write",
                        "actions": "DeleteByteMatchSet",
                        "description": "Permanently deletes a ByteMatchSet.",
                        "resource-types": "bytematchset*"
                    },
                    "DeleteGeoMatchSet": {
                        "access-level": "write",
                        "actions": "DeleteGeoMatchSet",
                        "description": "Permanently deletes an GeoMatchSet.",
                        "resource-types": "geomatchset*"
                    },
                    "DeleteIPSet": {
                        "access-level": "write",
                        "actions": "DeleteIPSet",
                        "description": "Permanently deletes an IPSet.",
                        "resource-types": "ipset*"
                    },
                    "DeleteRateBasedRule": {
                        "access-level": "write",
                        "actions": "DeleteRateBasedRule",
                        "description": "Permanently deletes a RateBasedRule.",
                        "resource-types": "ratebasedrule*"
                    },
                    "DeleteRegexMatchSet": {
                        "access-level": "write",
                        "actions": "DeleteRegexMatchSet",
                        "description": "Permanently deletes an RegexMatchSet.",
                        "resource-types": "regexmatchset*"
                    },
                    "DeleteRegexPatternSet": {
                        "access-level": "write",
                        "actions": "DeleteRegexPatternSet",
                        "description": "Permanently deletes an RegexPatternSet.",
                        "resource-types": "regexpatternset*"
                    },
                    "DeleteRule": {
                        "access-level": "write",
                        "actions": "DeleteRule",
                        "description": "Permanently deletes a Rule.",
                        "resource-types": "rule*"
                    },
                    "DeleteRuleGroup": {
                        "access-level": "write",
                        "actions": "DeleteRuleGroup",
                        "description": "Permanently deletes a RuleGroup.",
                        "resource-types": "rulegroup*"
                    },
                    "DeleteSizeConstraintSet": {
                        "access-level": "write",
                        "actions": "DeleteSizeConstraintSet",
                        "description": "Permanently deletes a SizeConstraintSet.",
                        "resource-types": "sizeconstraintset*"
                    },
                    "DeleteSqlInjectionMatchSet": {
                        "access-level": "write",
                        "actions": "DeleteSqlInjectionMatchSet",
                        "description": "Permanently deletes a SqlInjectionMatchSet.",
                        "resource-types": "sqlinjectionmatchset*"
                    },
                    "DeleteXssMatchSet": {
                        "access-level": "write",
                        "actions": "DeleteXssMatchSet",
                        "description": "Permanently deletes an XssMatchSet.",
                        "resource-types": "xssmatchset*"
                    },
                    "DisassociateWebACL": {
                        "access-level": "write",
                        "actions": "DisassociateWebACL",
                        "description": "Removes a WebACL from the specified resource.",
                        "resource-types": "loadbalancer/app/*"
                    },
                    "UpdateByteMatchSet": {
                        "access-level": "write",
                        "actions": "UpdateByteMatchSet",
                        "description": "Inserts or deletes ByteMatchTuple objects (filters) in a ByteMatchSet.",
                        "resource-types": "bytematchset*"
                    },
                    "UpdateGeoMatchSet": {
                        "access-level": "write",
                        "actions": "UpdateGeoMatchSet",
                        "description": "Inserts or deletes GeoMatchConstraint objects in a GeoMatchSet.",
                        "resource-types": "geomatchset*"
                    },
                    "UpdateIPSet": {
                        "access-level": "write",
                        "actions": "UpdateIPSet",
                        "description": "Inserts or deletes IPSetDescriptor objects in an IPSet.",
                        "resource-types": "ipset*"
                    },
                    "UpdateRateBasedRule": {
                        "access-level": "write",
                        "actions": "UpdateRateBasedRule",
                        "description": "Inserts or deletes Predicate objects in a rule and updates the RateLimit in the rule.",
                        "resource-types": "ratebasedrule*"
                    },
                    "UpdateRegexMatchSet": {
                        "access-level": "write",
                        "actions": "UpdateRegexMatchSet",
                        "description": "Inserts or deletes RegexMatchTuple objects (filters) in a RegexMatchSet.",
                        "resource-types": "regexmatchset*"
                    },
                    "UpdateRegexPatternSet": {
                        "access-level": "write",
                        "actions": "UpdateRegexPatternSet",
                        "description": "Inserts or deletes RegexPatternStrings in a RegexPatternSet.",
                        "resource-types": "regexpatternset*"
                    },
                    "UpdateRule": {
                        "access-level": "write",
                        "actions": "UpdateRule",
                        "description": "Inserts or deletes Predicate objects in a Rule.",
                        "resource-types": "rule*"
                    },
                    "UpdateRuleGroup": {
                        "access-level": "write",
                        "actions": "UpdateRuleGroup",
                        "description": "Inserts or deletes ActivatedRule objects in a RuleGroup.",
                        "resource-types": "rulegroup*"
                    },
                    "UpdateSizeConstraintSet": {
                        "access-level": "write",
                        "actions": "UpdateSizeConstraintSet",
                        "description": "Inserts or deletes SizeConstraint objects (filters) in a SizeConstraintSet.",
                        "resource-types": "sizeconstraintset*"
                    },
                    "UpdateSqlInjectionMatchSet": {
                        "access-level": "write",
                        "actions": "UpdateSqlInjectionMatchSet",
                        "description": "Inserts or deletes SqlInjectionMatchTuple objects (filters) in a SqlInjectionMatchSet.",
                        "resource-types": "sqlinjectionmatchset*"
                    },
                    "UpdateXssMatchSet": {
                        "access-level": "write",
                        "actions": "UpdateXssMatchSet",
                        "description": "Inserts or deletes XssMatchTuple objects (filters) in an XssMatchSet.",
                        "resource-types": "xssmatchset*"
                    },
                    "webacl*": {
                        "access-level": "write",
                        "actions": "webacl*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "bytematchset": {
                    "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:bytematchset/${Id}",
                    "resource-types": "bytematchset"
                },
                "geomatchset": {
                    "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:geomatchset/${Id}",
                    "resource-types": "geomatchset"
                },
                "ipset": {
                    "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:ipset/${Id}",
                    "resource-types": "ipset"
                },
                "loadbalancer-app": {
                    "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/${LoadBalancerName}/${LoadBalancerId}",
                    "resource-types": "loadbalancer/app/"
                },
                "ratebasedrule": {
                    "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:ratebasedrule/${Id}",
                    "resource-types": "ratebasedrule"
                },
                "regexmatchset": {
                    "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexmatch/${Id}",
                    "resource-types": "regexmatchset"
                },
                "regexpatternset": {
                    "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexpatternset/${Id}",
                    "resource-types": "regexpatternset"
                },
                "rule": {
                    "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:rule/${Id}",
                    "resource-types": "rule"
                },
                "rulegroup": {
                    "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/${Id}",
                    "resource-types": "rulegroup"
                },
                "sizeconstraintset": {
                    "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:sizeconstraintset/${Id}",
                    "resource-types": "sizeconstraintset"
                },
                "sqlinjectionmatchset": {
                    "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:sqlinjectionmatchset/${Id}",
                    "resource-types": "sqlinjectionmatchset"
                },
                "webacl": {
                    "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
                    "resource-types": "webacl"
                },
                "xssmatchset": {
                    "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:xssmatchset/${Id}",
                    "resource-types": "xssmatchset"
                }
            }
        },
        "wellarchitectedtool": {
            "actions": {
                "list": {
                    "ListWorkloads": {
                        "access-level": "list",
                        "actions": "ListWorkloads",
                        "description": "Lists the workloads in this account."
                    }
                },
                "read": {
                    "GetWorkload": {
                        "access-level": "read",
                        "actions": "GetWorkload",
                        "description": "Retrieves the specified workload.",
                        "resource-types": "workload*"
                    }
                },
                "write": {
                    "CreateWorkload": {
                        "access-level": "write",
                        "actions": "CreateWorkload",
                        "description": "Creates a new workload"
                    }
                }
            }
        },
        "workdocs": {
            "actions": {
                "list": {
                    "DescribeAvailableDirectories": {
                        "access-level": "list",
                        "actions": "DescribeAvailableDirectories"
                    },
                    "DescribeDocumentVersions": {
                        "access-level": "list",
                        "actions": "DescribeDocumentVersions",
                        "description": "Retrieves the document versions for the specified document."
                    },
                    "DescribeFolderContents": {
                        "access-level": "list",
                        "actions": "DescribeFolderContents",
                        "description": "Describes the contents of the specified folder, including its documents and sub-folders."
                    },
                    "DescribeInstances": {
                        "access-level": "list",
                        "actions": "DescribeInstances"
                    },
                    "DescribeNotificationSubscriptions": {
                        "access-level": "list",
                        "actions": "DescribeNotificationSubscriptions",
                        "description": "Lists the specified notification subscriptions."
                    },
                    "DescribeResourcePermissions": {
                        "access-level": "list",
                        "actions": "DescribeResourcePermissions",
                        "description": "Describes the permissions of a specified resource."
                    },
                    "DescribeUsers": {
                        "access-level": "list",
                        "actions": "DescribeUsers",
                        "description": "Describes the specified users. You can describe all users or filter the results (for example, by status or organization)."
                    }
                },
                "read": {
                    "CheckAlias": {
                        "access-level": "read",
                        "actions": "CheckAlias"
                    },
                    "GetDocument": {
                        "access-level": "read",
                        "actions": "GetDocument",
                        "description": "Retrieves the specified document object."
                    },
                    "GetDocumentPath": {
                        "access-level": "read",
                        "actions": "GetDocumentPath",
                        "description": "Retrieves the path information (the hierarchy from the root folder) for the requested document."
                    },
                    "GetDocumentVersion": {
                        "access-level": "read",
                        "actions": "GetDocumentVersion",
                        "description": "Retrieves version metadata for the specified document."
                    },
                    "GetFolder": {
                        "access-level": "read",
                        "actions": "GetFolder",
                        "description": "Retrieves the metadata of the specified folder."
                    },
                    "GetFolderPath": {
                        "access-level": "read",
                        "actions": "GetFolderPath",
                        "description": "Retrieves the path information (the hierarchy from the root folder) for the specified folder."
                    }
                },
                "write": {
                    "AbortDocumentVersionUpload": {
                        "access-level": "write",
                        "actions": "AbortDocumentVersionUpload",
                        "description": "Aborts the upload of the specified document version that was previously initiated by InitiateDocumentVersionUpload."
                    },
                    "ActivateUser": {
                        "access-level": "write",
                        "actions": "ActivateUser",
                        "description": "Activates the specified user. Only active users can access Amazon WorkDocs."
                    },
                    "AddResourcePermissions": {
                        "access-level": "write",
                        "actions": "AddResourcePermissions",
                        "description": "Creates a set of permissions for the specified folder or document."
                    },
                    "AddUserToGroup": {
                        "access-level": "write",
                        "actions": "AddUserToGroup"
                    },
                    "CreateFolder": {
                        "access-level": "write",
                        "actions": "CreateFolder",
                        "description": "Creates a folder with the specified name and parent folder."
                    },
                    "CreateInstance": {
                        "access-level": "write",
                        "actions": "CreateInstance"
                    },
                    "CreateNotificationSubscription": {
                        "access-level": "write",
                        "actions": "CreateNotificationSubscription",
                        "description": "Configure WorkDocs to use Amazon SNS notifications."
                    },
                    "CreateUser": {
                        "access-level": "write",
                        "actions": "CreateUser",
                        "description": "Creates a user in a Simple AD or Microsoft AD directory."
                    },
                    "DeactivateUser": {
                        "access-level": "write",
                        "actions": "DeactivateUser",
                        "description": "Deactivates the specified user, which revokes the user\\'s access to Amazon WorkDocs."
                    },
                    "DeleteDocument": {
                        "access-level": "write",
                        "actions": "DeleteDocument",
                        "description": "Permanently deletes the specified document and its associated metadata."
                    },
                    "DeleteFolder": {
                        "access-level": "write",
                        "actions": "DeleteFolder",
                        "description": "Permanently deletes the specified folder and its contents."
                    },
                    "DeleteFolderContents": {
                        "access-level": "write",
                        "actions": "DeleteFolderContents",
                        "description": "Deletes the contents of the specified folder."
                    },
                    "DeleteInstance": {
                        "access-level": "write",
                        "actions": "DeleteInstance"
                    },
                    "DeleteNotificationSubscription": {
                        "access-level": "write",
                        "actions": "DeleteNotificationSubscription",
                        "description": "Deletes the specified subscription from the specified organization."
                    },
                    "DeleteUser": {
                        "access-level": "write",
                        "actions": "DeleteUser",
                        "description": "Deletes the specified user from a Simple AD or Microsoft AD directory."
                    },
                    "DeregisterDirectory": {
                        "access-level": "write",
                        "actions": "DeregisterDirectory"
                    },
                    "InitiateDocumentVersionUpload": {
                        "access-level": "write",
                        "actions": "InitiateDocumentVersionUpload",
                        "description": "Creates a new document object and version object."
                    },
                    "RegisterDirectory": {
                        "access-level": "write",
                        "actions": "RegisterDirectory"
                    },
                    "RemoveAllResourcePermissions": {
                        "access-level": "write",
                        "actions": "RemoveAllResourcePermissions",
                        "description": "Removes all the permissions from the specified resource."
                    },
                    "RemoveResourcePermission": {
                        "access-level": "write",
                        "actions": "RemoveResourcePermission",
                        "description": "Removes the permission for the specified principal from the specified resource."
                    },
                    "RemoveUserFromGroup": {
                        "access-level": "write",
                        "actions": "RemoveUserFromGroup"
                    },
                    "UpdateDocument": {
                        "access-level": "write",
                        "actions": "UpdateDocument",
                        "description": "Updates the specified attributes of the specified document."
                    },
                    "UpdateDocumentVersion": {
                        "access-level": "write",
                        "actions": "UpdateDocumentVersion",
                        "description": "Changes the status of the document version to ACTIVE."
                    },
                    "UpdateFolder": {
                        "access-level": "write",
                        "actions": "UpdateFolder",
                        "description": "Updates the specified attributes of the specified folder."
                    },
                    "UpdateInstanceAlias": {
                        "access-level": "write",
                        "actions": "UpdateInstanceAlias"
                    },
                    "UpdateUser": {
                        "access-level": "write",
                        "actions": "UpdateUser",
                        "description": "Updates the specified attributes of the specified user, and grants or revokes administrative privileges to the Amazon WorkDocs site."
                    }
                }
            }
        },
        "worklink": {
            "actions": {
                "list": {
                    "ListDevices": {
                        "access-level": "list",
                        "actions": "ListDevices",
                        "description": "Lists all the devices associated with the fleet.",
                        "resource-types": "fleet*"
                    },
                    "ListFleets": {
                        "access-level": "list",
                        "actions": "ListFleets",
                        "description": "Lists all the fleets associated with the account."
                    },
                    "ListWebsiteCertificateAuthorities": {
                        "access-level": "list",
                        "actions": "ListWebsiteCertificateAuthorities",
                        "description": "Lists all the certs associated with the specified fleet.",
                        "resource-types": "fleet*"
                    }
                },
                "read": {
                    "DescribeCompanyNetworkConfiguration": {
                        "access-level": "read",
                        "actions": "DescribeCompanyNetworkConfiguration",
                        "description": "Describes company network configuration for a specified fleet.",
                        "resource-types": "fleet*"
                    },
                    "DescribeDevice": {
                        "access-level": "read",
                        "actions": "DescribeDevice",
                        "description": "Describes a specific device associated with the fleet.",
                        "resource-types": "fleet*"
                    },
                    "DescribeDevicePolicyConfiguration": {
                        "access-level": "read",
                        "actions": "DescribeDevicePolicyConfiguration",
                        "description": "Describes device policy configuration for a specified fleet.",
                        "resource-types": "fleet*"
                    },
                    "DescribeFleetMetadata": {
                        "access-level": "read",
                        "actions": "DescribeFleetMetadata",
                        "description": "Describes metadata of a specified fleet.",
                        "resource-types": "fleet*"
                    },
                    "DescribeIdentityProviderConfiguration": {
                        "access-level": "read",
                        "actions": "DescribeIdentityProviderConfiguration",
                        "description": "Describes identity provider configuration for a specified fleet.",
                        "resource-types": "fleet*"
                    },
                    "DescribeWebsiteCertificateAuthority": {
                        "access-level": "read",
                        "actions": "DescribeWebsiteCertificateAuthority",
                        "description": "Describes the cert of a specified fleet.",
                        "resource-types": "fleet*"
                    }
                },
                "write": {
                    "AssociateWebsiteCertificateAuthority": {
                        "access-level": "write",
                        "actions": "AssociateWebsiteCertificateAuthority",
                        "description": "Associates cert with a specified fleet.",
                        "resource-types": "fleet*"
                    },
                    "CreateFleet": {
                        "access-level": "write",
                        "actions": "CreateFleet",
                        "description": "Creates a worklink fleet."
                    },
                    "DeleteFleet": {
                        "access-level": "write",
                        "actions": "DeleteFleet",
                        "description": "Deletes the worklink fleet.",
                        "resource-types": "fleet*"
                    },
                    "DisassociateWebsiteCertificateAuthority": {
                        "access-level": "write",
                        "actions": "DisassociateWebsiteCertificateAuthority",
                        "description": "Disassociates cert with a specified fleet.",
                        "resource-types": "fleet*"
                    },
                    "SignOutUser": {
                        "access-level": "write",
                        "actions": "SignOutUser",
                        "description": "Signs out the specified user in a fleet.",
                        "resource-types": "fleet*"
                    },
                    "UpdateCompanyNetworkConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateCompanyNetworkConfiguration",
                        "description": "Updates company network configuration for a specified fleet.",
                        "resource-types": "fleet*"
                    },
                    "UpdateDevicePolicyConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateDevicePolicyConfiguration",
                        "description": "Updates device policy configuration for a specified fleet.",
                        "resource-types": "fleet*"
                    },
                    "UpdateFleetMetadata": {
                        "access-level": "write",
                        "actions": "UpdateFleetMetadata",
                        "description": "Updates metadata of a specified fleet.",
                        "resource-types": "fleet*"
                    },
                    "UpdateIdentityProviderConfiguration": {
                        "access-level": "write",
                        "actions": "UpdateIdentityProviderConfiguration",
                        "description": "Updates identity provider configuration for a specified fleet.",
                        "resource-types": "fleet*"
                    }
                }
            }
        },
        "workmail": {
            "actions": {
                "list": {
                    "DescribeDirectories": {
                        "access-level": "list",
                        "actions": "DescribeDirectories",
                        "description": "Description for DescribeDirectories"
                    },
                    "DescribeKmsKeys": {
                        "access-level": "list",
                        "actions": "DescribeKmsKeys",
                        "description": "Description for DescribeKmsKeys"
                    },
                    "DescribeMailDomains": {
                        "access-level": "list",
                        "actions": "DescribeMailDomains",
                        "description": "Description for DescribeMailDomains"
                    },
                    "DescribeMailGroups": {
                        "access-level": "list",
                        "actions": "DescribeMailGroups",
                        "description": "Description for DescribeMailGroups"
                    },
                    "DescribeMailUsers": {
                        "access-level": "list",
                        "actions": "DescribeMailUsers",
                        "description": "Description for DescribeMailUsers"
                    },
                    "DescribeOrganizations": {
                        "access-level": "list",
                        "actions": "DescribeOrganizations",
                        "description": "Description for DescribeOrganizations"
                    }
                },
                "read": {
                    "GetMailDomainDetails": {
                        "access-level": "read",
                        "actions": "GetMailDomainDetails",
                        "description": "Description for GetMailDomainDetails"
                    },
                    "GetMailGroupDetails": {
                        "access-level": "read",
                        "actions": "GetMailGroupDetails",
                        "description": "Description for GetMailGroupDetails"
                    },
                    "GetMailUserDetails": {
                        "access-level": "read",
                        "actions": "GetMailUserDetails",
                        "description": "Description for GetMailUserDetails"
                    },
                    "GetMobileDeviceDetails": {
                        "access-level": "read",
                        "actions": "GetMobileDeviceDetails",
                        "description": "Description for GetMobileDeviceDetails"
                    },
                    "GetMobileDevicesForUser": {
                        "access-level": "read",
                        "actions": "GetMobileDevicesForUser",
                        "description": "Description for GetMobileDevicesForUser"
                    },
                    "GetMobilePolicyDetails": {
                        "access-level": "read",
                        "actions": "GetMobilePolicyDetails",
                        "description": "Description for GetMobilePolicyDetails"
                    },
                    "ListMembersInMailGroup": {
                        "access-level": "read",
                        "actions": "ListMembersInMailGroup",
                        "description": "Description for ListMembersInMailGroup"
                    },
                    "SearchMembers": {
                        "access-level": "read",
                        "actions": "SearchMembers",
                        "description": "Description for SearchMembers"
                    }
                },
                "write": {
                    "AddMembersToGroup": {
                        "access-level": "write",
                        "actions": "AddMembersToGroup",
                        "description": "Adds a list of members (users or groups) to a group."
                    },
                    "CreateGroup": {
                        "access-level": "write",
                        "actions": "CreateGroup",
                        "description": "Creates a new group in the directory (but doesn\\'t enable it for mail)."
                    },
                    "CreateMailDomain": {
                        "access-level": "write",
                        "actions": "CreateMailDomain",
                        "description": "Creates a mail domain."
                    },
                    "CreateMailUser": {
                        "access-level": "write",
                        "actions": "CreateMailUser",
                        "description": "Creates a user in the directory and the WorkMail storage but does not enable the user for mail."
                    },
                    "CreateOrganization": {
                        "access-level": "write",
                        "actions": "CreateOrganization",
                        "description": "Creates an organization, either using an existing directory or creates a new directory on-the-fly. Also creates and enables the complementary mail domain. Optionally creates KMS key"
                    },
                    "CreateResource": {
                        "access-level": "write",
                        "actions": "CreateResource",
                        "description": "Creates a new resource"
                    },
                    "DeleteMailDomain": {
                        "access-level": "write",
                        "actions": "DeleteMailDomain",
                        "description": "Description for DeleteMailDomain"
                    },
                    "DeleteMobileDevice": {
                        "access-level": "write",
                        "actions": "DeleteMobileDevice",
                        "description": "Description for DeleteMobileDevice"
                    },
                    "DeleteOrganization": {
                        "access-level": "write",
                        "actions": "DeleteOrganization",
                        "description": "Description for DeleteOrganization"
                    },
                    "DisableMailGroups": {
                        "access-level": "write",
                        "actions": "DisableMailGroups",
                        "description": "Description for DisableMailGroups"
                    },
                    "DisableMailUsers": {
                        "access-level": "write",
                        "actions": "DisableMailUsers",
                        "description": "Description for DisableMailUsers"
                    },
                    "EnableMailDomain": {
                        "access-level": "write",
                        "actions": "EnableMailDomain",
                        "description": "Description for EnableMailDomain"
                    },
                    "EnableMailGroups": {
                        "access-level": "write",
                        "actions": "EnableMailGroups",
                        "description": "Description for EnableMailGroups"
                    },
                    "EnableMailUsers": {
                        "access-level": "write",
                        "actions": "EnableMailUsers",
                        "description": "Description for EnableMailUsers"
                    },
                    "RemoveMembersFromGroup": {
                        "access-level": "write",
                        "actions": "RemoveMembersFromGroup",
                        "description": "Description for RemoveMembersFromGroup"
                    },
                    "ResetUserPassword": {
                        "access-level": "write",
                        "actions": "ResetUserPassword",
                        "description": "Description for ResetUserPassword"
                    },
                    "SetAdmin": {
                        "access-level": "write",
                        "actions": "SetAdmin",
                        "description": "Description for SetAdmin"
                    },
                    "SetDefaultMailDomain": {
                        "access-level": "write",
                        "actions": "SetDefaultMailDomain",
                        "description": "Description for SetDefaultMailDomain"
                    },
                    "SetMailGroupDetails": {
                        "access-level": "write",
                        "actions": "SetMailGroupDetails",
                        "description": "Description for SetMailGroupDetails"
                    },
                    "SetMailUserDetails": {
                        "access-level": "write",
                        "actions": "SetMailUserDetails",
                        "description": "Description for SetMailUserDetails"
                    },
                    "SetMobilePolicyDetails": {
                        "access-level": "write",
                        "actions": "SetMobilePolicyDetails",
                        "description": "Description for SetMobilePolicyDetails"
                    },
                    "WipeMobileDevice": {
                        "access-level": "write",
                        "actions": "WipeMobileDevice",
                        "description": "Description for WipeMobileDevice"
                    }
                }
            }
        },
        "workspaces": {
            "actions": {
                "list": {
                    "DescribeTags": {
                        "access-level": "list",
                        "actions": "DescribeTags",
                        "description": "Describes tags for a WorkSpace."
                    },
                    "DescribeWorkspaceBundles": {
                        "access-level": "list",
                        "actions": "DescribeWorkspaceBundles",
                        "description": "Obtains information about the WorkSpace bundles that are available to your account in the specified region.",
                        "resource-types": "workspacebundle*"
                    },
                    "DescribeWorkspaceDirectories": {
                        "access-level": "list",
                        "actions": "DescribeWorkspaceDirectories",
                        "description": "Retrieves information about the AWS Directory Service directories in the region that are registered with Amazon WorkSpaces and are available to your account."
                    },
                    "DescribeWorkspaces": {
                        "access-level": "list",
                        "actions": "DescribeWorkspaces",
                        "description": "Obtains information about the specified WorkSpaces."
                    }
                },
                "read": {
                    "DescribeWorkspacesConnectionStatus": {
                        "access-level": "read",
                        "actions": "DescribeWorkspacesConnectionStatus",
                        "description": "Describes the connection status of a specified WorkSpace."
                    }
                },
                "tagging": {
                    "CreateTags": {
                        "access-level": "tagging",
                        "actions": "CreateTags",
                        "description": "Creates tags for a WorkSpace."
                    }
                },
                "write": {
                    "CreateWorkspaces": {
                        "access-level": "write",
                        "actions": "CreateWorkspaces",
                        "description": "Creates one or more WorkSpaces.",
                        "resource-types": "workspacebundle*"
                    },
                    "DeleteTags": {
                        "access-level": "write",
                        "actions": "DeleteTags",
                        "description": "Deletes tags from a Workspace."
                    },
                    "ModifyWorkspaceProperties": {
                        "access-level": "write",
                        "actions": "ModifyWorkspaceProperties",
                        "description": "Modifies the WorkSpace properties, including the running mode and AutoStop time.",
                        "resource-types": "workspaceid*"
                    },
                    "RebootWorkspaces": {
                        "access-level": "write",
                        "actions": "RebootWorkspaces",
                        "description": "Reboots the specified WorkSpaces.",
                        "resource-types": "workspaceid*"
                    },
                    "RebuildWorkspaces": {
                        "access-level": "write",
                        "actions": "RebuildWorkspaces",
                        "description": "Rebuilds the specified WorkSpaces.",
                        "resource-types": "workspaceid*"
                    },
                    "StartWorkspaces": {
                        "access-level": "write",
                        "actions": "StartWorkspaces",
                        "description": "Starts the specified WorkSpaces.",
                        "resource-types": "workspaceid*"
                    },
                    "StopWorkspaces": {
                        "access-level": "write",
                        "actions": "StopWorkspaces",
                        "description": "Stops the specified WorkSpaces.",
                        "resource-types": "workspaceid*"
                    },
                    "TerminateWorkspaces": {
                        "access-level": "write",
                        "actions": "TerminateWorkspaces",
                        "description": "Terminates the specified WorkSpaces.",
                        "resource-types": "workspaceid*"
                    },
                    "workspaceid*": {
                        "access-level": "write",
                        "actions": "workspaceid*"
                    }
                }
            },
            "condition-keys": [
                ""
            ],
            "resource-types": {
                "workspacebundle": {
                    "arn": "arn:${Partition}:sky:${Region}:${Account}:workspacebundle/${BundleId}",
                    "resource-types": "workspacebundle"
                },
                "workspaceid": {
                    "arn": "arn:${Partition}:sky:${Region}:${Account}:workspace/${WorkspaceId}",
                    "resource-types": "workspaceid"
                }
            }
        },
        "workspacesapplicationmanager": {
            "actions": {}
        },
        "xray": {
            "actions": {
                "permissions-management": {
                    "GetEncryptionConfig": {
                        "access-level": "permissions-management",
                        "actions": "GetEncryptionConfig",
                        "description": "Retrieves the current encryption configuration for X-Ray data."
                    },
                    "PutEncryptionConfig": {
                        "access-level": "permissions-management",
                        "actions": "PutEncryptionConfig",
                        "description": "Updates the encryption configuration for X-Ray data."
                    }
                },
                "read": {
                    "BatchGetTraces": {
                        "access-level": "read",
                        "actions": "BatchGetTraces",
                        "description": "Retrieves a list of traces specified by ID. Each trace is a collection of segment documents that originates from a single request. Use GetTraceSummaries to get a list of trace IDs."
                    },
                    "GetGroup": {
                        "access-level": "read",
                        "actions": "GetGroup",
                        "description": "Retrieves group resource details."
                    },
                    "GetGroups": {
                        "access-level": "read",
                        "actions": "GetGroups",
                        "description": "Retrieves all active group details."
                    },
                    "GetSamplingRules": {
                        "access-level": "read",
                        "actions": "GetSamplingRules",
                        "description": "Retrieves all sampling rules."
                    },
                    "GetSamplingStatisticSummaries": {
                        "access-level": "read",
                        "actions": "GetSamplingStatisticSummaries",
                        "description": "Retrieves information about recent sampling results for all sampling rules."
                    },
                    "GetSamplingTargets": {
                        "access-level": "read",
                        "actions": "GetSamplingTargets",
                        "description": "Requests a sampling quota for rules that the service is using to sample requests."
                    },
                    "GetServiceGraph": {
                        "access-level": "read",
                        "actions": "GetServiceGraph",
                        "description": "Retrieves a document that describes services that process incoming requests, and downstream services that they call as a result."
                    },
                    "GetTraceGraph": {
                        "access-level": "read",
                        "actions": "GetTraceGraph",
                        "description": "Retrieves a service graph for one or more specific trace IDs."
                    },
                    "GetTraceSummaries": {
                        "access-level": "read",
                        "actions": "GetTraceSummaries",
                        "description": "Retrieves IDs and metadata for traces available for a specified time frame using an optional filter. To get the full traces, pass the trace IDs to BatchGetTraces."
                    }
                },
                "write": {
                    "CreateGroup": {
                        "access-level": "write",
                        "actions": "CreateGroup",
                        "description": "Creates a group resource with a name and a filter expression."
                    },
                    "CreateSamplingRule": {
                        "access-level": "write",
                        "actions": "CreateSamplingRule",
                        "description": "Creates a rule to control sampling behavior for instrumented applications."
                    },
                    "DeleteGroup": {
                        "access-level": "write",
                        "actions": "DeleteGroup",
                        "description": "Deletes a group resource."
                    },
                    "DeleteSamplingRule": {
                        "access-level": "write",
                        "actions": "DeleteSamplingRule",
                        "description": "Deletes a sampling rule."
                    },
                    "PutTelemetryRecords": {
                        "access-level": "write",
                        "actions": "PutTelemetryRecords",
                        "description": "Used by the AWS X-Ray daemon to send telemetry to the service."
                    },
                    "PutTraceSegments": {
                        "access-level": "write",
                        "actions": "PutTraceSegments",
                        "description": "Uploads segment documents to AWS X-Ray. The X-Ray SDK generates segment documents and sends them to the X-Ray daemon, which uploads them in batches."
                    },
                    "UpdateGroup": {
                        "access-level": "write",
                        "actions": "UpdateGroup",
                        "description": "Updates a group resource."
                    },
                    "UpdateSamplingRule": {
                        "access-level": "write",
                        "actions": "UpdateSamplingRule",
                        "description": "Modifies a sampling rule\\'s configuration."
                    }
                }
            }
        }
    },
    "iam_completions": []
}
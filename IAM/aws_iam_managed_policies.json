{
    "arns": {
        "APIGatewayServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/APIGatewayServiceRolePolicy",
        "AWSAccountActivityAccess": "arn:aws:iam::aws:policy/AWSAccountActivityAccess",
        "AWSAccountUsageReportAccess": "arn:aws:iam::aws:policy/AWSAccountUsageReportAccess",
        "AWSAgentlessDiscoveryService": "arn:aws:iam::aws:policy/AWSAgentlessDiscoveryService",
        "AWSAppMeshEnvoyAccess": "arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess",
        "AWSAppMeshFullAccess": "arn:aws:iam::aws:policy/AWSAppMeshFullAccess",
        "AWSAppMeshPreviewEnvoyAccess": "arn:aws:iam::aws:policy/AWSAppMeshPreviewEnvoyAccess",
        "AWSAppMeshPreviewServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSAppMeshPreviewServiceRolePolicy",
        "AWSAppMeshReadOnly": "arn:aws:iam::aws:policy/AWSAppMeshReadOnly",
        "AWSAppMeshServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSAppMeshServiceRolePolicy",
        "AWSAppSyncAdministrator": "arn:aws:iam::aws:policy/AWSAppSyncAdministrator",
        "AWSAppSyncInvokeFullAccess": "arn:aws:iam::aws:policy/AWSAppSyncInvokeFullAccess",
        "AWSAppSyncPushToCloudWatchLogs": "arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs",
        "AWSAppSyncSchemaAuthor": "arn:aws:iam::aws:policy/AWSAppSyncSchemaAuthor",
        "AWSAppSyncServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSAppSyncServiceRolePolicy",
        "AWSApplicationAutoScalingCustomResourcePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoScalingCustomResourcePolicy",
        "AWSApplicationAutoscalingAppStreamFleetPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingAppStreamFleetPolicy",
        "AWSApplicationAutoscalingCassandraTablePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingCassandraTablePolicy",
        "AWSApplicationAutoscalingComprehendEndpointPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingComprehendEndpointPolicy",
        "AWSApplicationAutoscalingDynamoDBTablePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingDynamoDBTablePolicy",
        "AWSApplicationAutoscalingEC2SpotFleetRequestPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingEC2SpotFleetRequestPolicy",
        "AWSApplicationAutoscalingECSServicePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingECSServicePolicy",
        "AWSApplicationAutoscalingEMRInstanceGroupPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingEMRInstanceGroupPolicy",
        "AWSApplicationAutoscalingKafkaClusterPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingKafkaClusterPolicy",
        "AWSApplicationAutoscalingLambdaConcurrencyPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingLambdaConcurrencyPolicy",
        "AWSApplicationAutoscalingRDSClusterPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingRDSClusterPolicy",
        "AWSApplicationAutoscalingSageMakerEndpointPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingSageMakerEndpointPolicy",
        "AWSApplicationDiscoveryAgentAccess": "arn:aws:iam::aws:policy/AWSApplicationDiscoveryAgentAccess",
        "AWSApplicationDiscoveryServiceFullAccess": "arn:aws:iam::aws:policy/AWSApplicationDiscoveryServiceFullAccess",
        "AWSArtifactAccountSync": "arn:aws:iam::aws:policy/service-role/AWSArtifactAccountSync",
        "AWSAutoScalingPlansEC2AutoScalingPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSAutoScalingPlansEC2AutoScalingPolicy",
        "AWSBackupFullAccess": "arn:aws:iam::aws:policy/AWSBackupFullAccess",
        "AWSBackupOperatorAccess": "arn:aws:iam::aws:policy/AWSBackupOperatorAccess",
        "AWSBackupOrganizationAdminAccess": "arn:aws:iam::aws:policy/AWSBackupOrganizationAdminAccess",
        "AWSBackupServiceLinkedRolePolicyForBackup": "arn:aws:iam::aws:policy/aws-service-role/AWSBackupServiceLinkedRolePolicyForBackup",
        "AWSBackupServiceLinkedRolePolicyForBackupTest": "arn:aws:iam::aws:policy/aws-service-role/AWSBackupServiceLinkedRolePolicyForBackupTest",
        "AWSBackupServiceRolePolicyForBackup": "arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup",
        "AWSBackupServiceRolePolicyForRestores": "arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForRestores",
        "AWSBatchFullAccess": "arn:aws:iam::aws:policy/AWSBatchFullAccess",
        "AWSBatchServiceEventTargetRole": "arn:aws:iam::aws:policy/service-role/AWSBatchServiceEventTargetRole",
        "AWSBatchServiceRole": "arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole",
        "AWSBillingReadOnlyAccess": "arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess",
        "AWSBudgetsActionsRolePolicyForResourceAdministrationWithSSM": "arn:aws:iam::aws:policy/AWSBudgetsActionsRolePolicyForResourceAdministrationWithSSM",
        "AWSBudgetsActionsWithAWSResourceControlAccess": "arn:aws:iam::aws:policy/AWSBudgetsActionsWithAWSResourceControlAccess",
        "AWSBudgetsReadOnlyAccess": "arn:aws:iam::aws:policy/AWSBudgetsReadOnlyAccess",
        "AWSCertificateManagerFullAccess": "arn:aws:iam::aws:policy/AWSCertificateManagerFullAccess",
        "AWSCertificateManagerPrivateCAAuditor": "arn:aws:iam::aws:policy/AWSCertificateManagerPrivateCAAuditor",
        "AWSCertificateManagerPrivateCAFullAccess": "arn:aws:iam::aws:policy/AWSCertificateManagerPrivateCAFullAccess",
        "AWSCertificateManagerPrivateCAPrivilegedUser": "arn:aws:iam::aws:policy/AWSCertificateManagerPrivateCAPrivilegedUser",
        "AWSCertificateManagerPrivateCAReadOnly": "arn:aws:iam::aws:policy/AWSCertificateManagerPrivateCAReadOnly",
        "AWSCertificateManagerPrivateCAUser": "arn:aws:iam::aws:policy/AWSCertificateManagerPrivateCAUser",
        "AWSCertificateManagerReadOnly": "arn:aws:iam::aws:policy/AWSCertificateManagerReadOnly",
        "AWSChatbotServiceLinkedRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSChatbotServiceLinkedRolePolicy",
        "AWSCloud9Administrator": "arn:aws:iam::aws:policy/AWSCloud9Administrator",
        "AWSCloud9EnvironmentMember": "arn:aws:iam::aws:policy/AWSCloud9EnvironmentMember",
        "AWSCloud9SSMInstanceProfile": "arn:aws:iam::aws:policy/AWSCloud9SSMInstanceProfile",
        "AWSCloud9ServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSCloud9ServiceRolePolicy",
        "AWSCloud9User": "arn:aws:iam::aws:policy/AWSCloud9User",
        "AWSCloudFormationFullAccess": "arn:aws:iam::aws:policy/AWSCloudFormationFullAccess",
        "AWSCloudFormationReadOnlyAccess": "arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess",
        "AWSCloudFrontLogger": "arn:aws:iam::aws:policy/aws-service-role/AWSCloudFrontLogger",
        "AWSCloudHSMFullAccess": "arn:aws:iam::aws:policy/AWSCloudHSMFullAccess",
        "AWSCloudHSMReadOnlyAccess": "arn:aws:iam::aws:policy/AWSCloudHSMReadOnlyAccess",
        "AWSCloudHSMRole": "arn:aws:iam::aws:policy/service-role/AWSCloudHSMRole",
        "AWSCloudMapDiscoverInstanceAccess": "arn:aws:iam::aws:policy/AWSCloudMapDiscoverInstanceAccess",
        "AWSCloudMapFullAccess": "arn:aws:iam::aws:policy/AWSCloudMapFullAccess",
        "AWSCloudMapReadOnlyAccess": "arn:aws:iam::aws:policy/AWSCloudMapReadOnlyAccess",
        "AWSCloudMapRegisterInstanceAccess": "arn:aws:iam::aws:policy/AWSCloudMapRegisterInstanceAccess",
        "AWSCloudTrailReadOnlyAccess": "arn:aws:iam::aws:policy/AWSCloudTrailReadOnlyAccess",
        "AWSCloudTrail_FullAccess": "arn:aws:iam::aws:policy/AWSCloudTrail_FullAccess",
        "AWSCodeArtifactAdminAccess": "arn:aws:iam::aws:policy/AWSCodeArtifactAdminAccess",
        "AWSCodeArtifactReadOnlyAccess": "arn:aws:iam::aws:policy/AWSCodeArtifactReadOnlyAccess",
        "AWSCodeBuildAdminAccess": "arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess",
        "AWSCodeBuildDeveloperAccess": "arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess",
        "AWSCodeBuildReadOnlyAccess": "arn:aws:iam::aws:policy/AWSCodeBuildReadOnlyAccess",
        "AWSCodeCommitFullAccess": "arn:aws:iam::aws:policy/AWSCodeCommitFullAccess",
        "AWSCodeCommitPowerUser": "arn:aws:iam::aws:policy/AWSCodeCommitPowerUser",
        "AWSCodeCommitReadOnly": "arn:aws:iam::aws:policy/AWSCodeCommitReadOnly",
        "AWSCodeDeployDeployerAccess": "arn:aws:iam::aws:policy/AWSCodeDeployDeployerAccess",
        "AWSCodeDeployFullAccess": "arn:aws:iam::aws:policy/AWSCodeDeployFullAccess",
        "AWSCodeDeployReadOnlyAccess": "arn:aws:iam::aws:policy/AWSCodeDeployReadOnlyAccess",
        "AWSCodeDeployRole": "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole",
        "AWSCodeDeployRoleForCloudFormation": "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForCloudFormation",
        "AWSCodeDeployRoleForECS": "arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS",
        "AWSCodeDeployRoleForECSLimited": "arn:aws:iam::aws:policy/AWSCodeDeployRoleForECSLimited",
        "AWSCodeDeployRoleForLambda": "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda",
        "AWSCodeDeployRoleForLambdaLimited": "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambdaLimited",
        "AWSCodePipelineApproverAccess": "arn:aws:iam::aws:policy/AWSCodePipelineApproverAccess",
        "AWSCodePipelineCustomActionAccess": "arn:aws:iam::aws:policy/AWSCodePipelineCustomActionAccess",
        "AWSCodePipelineFullAccess": "arn:aws:iam::aws:policy/AWSCodePipelineFullAccess",
        "AWSCodePipelineReadOnlyAccess": "arn:aws:iam::aws:policy/AWSCodePipelineReadOnlyAccess",
        "AWSCodePipeline_FullAccess": "arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess",
        "AWSCodePipeline_ReadOnlyAccess": "arn:aws:iam::aws:policy/AWSCodePipeline_ReadOnlyAccess",
        "AWSCodeStarFullAccess": "arn:aws:iam::aws:policy/AWSCodeStarFullAccess",
        "AWSCodeStarNotificationsServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSCodeStarNotificationsServiceRolePolicy",
        "AWSCodeStarServiceRole": "arn:aws:iam::aws:policy/service-role/AWSCodeStarServiceRole",
        "AWSCompromisedKeyQuarantine": "arn:aws:iam::aws:policy/AWSCompromisedKeyQuarantine",
        "AWSConfigMultiAccountSetupPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSConfigMultiAccountSetupPolicy",
        "AWSConfigRemediationServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSConfigRemediationServiceRolePolicy",
        "AWSConfigRole": "arn:aws:iam::aws:policy/service-role/AWSConfigRole",
        "AWSConfigRoleForOrganizations": "arn:aws:iam::aws:policy/service-role/AWSConfigRoleForOrganizations",
        "AWSConfigRulesExecutionRole": "arn:aws:iam::aws:policy/service-role/AWSConfigRulesExecutionRole",
        "AWSConfigServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSConfigServiceRolePolicy",
        "AWSConfigUserAccess": "arn:aws:iam::aws:policy/AWSConfigUserAccess",
        "AWSConnector": "arn:aws:iam::aws:policy/AWSConnector",
        "AWSControlTowerServiceRolePolicy": "arn:aws:iam::aws:policy/service-role/AWSControlTowerServiceRolePolicy",
        "AWSDataExchangeFullAccess": "arn:aws:iam::aws:policy/AWSDataExchangeFullAccess",
        "AWSDataExchangeProviderFullAccess": "arn:aws:iam::aws:policy/AWSDataExchangeProviderFullAccess",
        "AWSDataExchangeReadOnly": "arn:aws:iam::aws:policy/AWSDataExchangeReadOnly",
        "AWSDataExchangeSubscriberFullAccess": "arn:aws:iam::aws:policy/AWSDataExchangeSubscriberFullAccess",
        "AWSDataLifecycleManagerServiceRole": "arn:aws:iam::aws:policy/service-role/AWSDataLifecycleManagerServiceRole",
        "AWSDataLifecycleManagerServiceRoleForAMIManagement": "arn:aws:iam::aws:policy/service-role/AWSDataLifecycleManagerServiceRoleForAMIManagement",
        "AWSDataPipelineRole": "arn:aws:iam::aws:policy/service-role/AWSDataPipelineRole",
        "AWSDataPipeline_FullAccess": "arn:aws:iam::aws:policy/AWSDataPipeline_FullAccess",
        "AWSDataPipeline_PowerUser": "arn:aws:iam::aws:policy/AWSDataPipeline_PowerUser",
        "AWSDataSyncFullAccess": "arn:aws:iam::aws:policy/AWSDataSyncFullAccess",
        "AWSDataSyncReadOnlyAccess": "arn:aws:iam::aws:policy/AWSDataSyncReadOnlyAccess",
        "AWSDeepLensLambdaFunctionAccessPolicy": "arn:aws:iam::aws:policy/AWSDeepLensLambdaFunctionAccessPolicy",
        "AWSDeepLensServiceRolePolicy": "arn:aws:iam::aws:policy/service-role/AWSDeepLensServiceRolePolicy",
        "AWSDeepRacerCloudFormationAccessPolicy": "arn:aws:iam::aws:policy/AWSDeepRacerCloudFormationAccessPolicy",
        "AWSDeepRacerFullAccess": "arn:aws:iam::aws:policy/AWSDeepRacerFullAccess",
        "AWSDeepRacerRoboMakerAccessPolicy": "arn:aws:iam::aws:policy/AWSDeepRacerRoboMakerAccessPolicy",
        "AWSDeepRacerServiceRolePolicy": "arn:aws:iam::aws:policy/service-role/AWSDeepRacerServiceRolePolicy",
        "AWSDenyAll": "arn:aws:iam::aws:policy/AWSDenyAll",
        "AWSDeviceFarmFullAccess": "arn:aws:iam::aws:policy/AWSDeviceFarmFullAccess",
        "AWSDirectConnectFullAccess": "arn:aws:iam::aws:policy/AWSDirectConnectFullAccess",
        "AWSDirectConnectReadOnlyAccess": "arn:aws:iam::aws:policy/AWSDirectConnectReadOnlyAccess",
        "AWSDirectoryServiceFullAccess": "arn:aws:iam::aws:policy/AWSDirectoryServiceFullAccess",
        "AWSDirectoryServiceReadOnlyAccess": "arn:aws:iam::aws:policy/AWSDirectoryServiceReadOnlyAccess",
        "AWSDiscoveryContinuousExportFirehosePolicy": "arn:aws:iam::aws:policy/AWSDiscoveryContinuousExportFirehosePolicy",
        "AWSEC2FleetServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSEC2FleetServiceRolePolicy",
        "AWSEC2SpotFleetServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSEC2SpotFleetServiceRolePolicy",
        "AWSEC2SpotServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSEC2SpotServiceRolePolicy",
        "AWSElasticBeanstalkCustomPlatformforEC2Role": "arn:aws:iam::aws:policy/AWSElasticBeanstalkCustomPlatformforEC2Role",
        "AWSElasticBeanstalkEnhancedHealth": "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth",
        "AWSElasticBeanstalkFullAccess": "arn:aws:iam::aws:policy/AWSElasticBeanstalkFullAccess",
        "AWSElasticBeanstalkMaintenance": "arn:aws:iam::aws:policy/aws-service-role/AWSElasticBeanstalkMaintenance",
        "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSElasticBeanstalkManagedUpdatesServiceRolePolicy",
        "AWSElasticBeanstalkMulticontainerDocker": "arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker",
        "AWSElasticBeanstalkReadOnlyAccess": "arn:aws:iam::aws:policy/AWSElasticBeanstalkReadOnlyAccess",
        "AWSElasticBeanstalkRoleCWL": "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleCWL",
        "AWSElasticBeanstalkRoleCore": "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleCore",
        "AWSElasticBeanstalkRoleECS": "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleECS",
        "AWSElasticBeanstalkRoleRDS": "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleRDS",
        "AWSElasticBeanstalkRoleSNS": "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleSNS",
        "AWSElasticBeanstalkRoleWorkerTier": "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleWorkerTier",
        "AWSElasticBeanstalkService": "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService",
        "AWSElasticBeanstalkServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSElasticBeanstalkServiceRolePolicy",
        "AWSElasticBeanstalkWebTier": "arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier",
        "AWSElasticBeanstalkWorkerTier": "arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier",
        "AWSElasticLoadBalancingClassicServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSElasticLoadBalancingClassicServiceRolePolicy",
        "AWSElasticLoadBalancingServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSElasticLoadBalancingServiceRolePolicy",
        "AWSElementalMediaConvertFullAccess": "arn:aws:iam::aws:policy/AWSElementalMediaConvertFullAccess",
        "AWSElementalMediaConvertReadOnly": "arn:aws:iam::aws:policy/AWSElementalMediaConvertReadOnly",
        "AWSElementalMediaLiveFullAccess": "arn:aws:iam::aws:policy/AWSElementalMediaLiveFullAccess",
        "AWSElementalMediaLiveReadOnly": "arn:aws:iam::aws:policy/AWSElementalMediaLiveReadOnly",
        "AWSElementalMediaPackageFullAccess": "arn:aws:iam::aws:policy/AWSElementalMediaPackageFullAccess",
        "AWSElementalMediaPackageReadOnly": "arn:aws:iam::aws:policy/AWSElementalMediaPackageReadOnly",
        "AWSElementalMediaStoreFullAccess": "arn:aws:iam::aws:policy/AWSElementalMediaStoreFullAccess",
        "AWSElementalMediaStoreReadOnly": "arn:aws:iam::aws:policy/AWSElementalMediaStoreReadOnly",
        "AWSEnhancedClassicNetworkingMangementPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSEnhancedClassicNetworkingMangementPolicy",
        "AWSFMAdminFullAccess": "arn:aws:iam::aws:policy/AWSFMAdminFullAccess",
        "AWSFMAdminReadOnlyAccess": "arn:aws:iam::aws:policy/AWSFMAdminReadOnlyAccess",
        "AWSFMMemberReadOnlyAccess": "arn:aws:iam::aws:policy/AWSFMMemberReadOnlyAccess",
        "AWSForWordPressPluginPolicy": "arn:aws:iam::aws:policy/AWSForWordPressPluginPolicy",
        "AWSGlobalAcceleratorSLRPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSGlobalAcceleratorSLRPolicy",
        "AWSGlueConsoleFullAccess": "arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess",
        "AWSGlueConsoleSageMakerNotebookFullAccess": "arn:aws:iam::aws:policy/AWSGlueConsoleSageMakerNotebookFullAccess",
        "AWSGlueDataBrewServiceRole": "arn:aws:iam::aws:policy/service-role/AWSGlueDataBrewServiceRole",
        "AWSGlueSchemaRegistryFullAccess": "arn:aws:iam::aws:policy/AWSGlueSchemaRegistryFullAccess",
        "AWSGlueSchemaRegistryReadonlyAccess": "arn:aws:iam::aws:policy/AWSGlueSchemaRegistryReadonlyAccess",
        "AWSGlueServiceNotebookRole": "arn:aws:iam::aws:policy/service-role/AWSGlueServiceNotebookRole",
        "AWSGlueServiceRole": "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole",
        "AWSGreengrassFullAccess": "arn:aws:iam::aws:policy/AWSGreengrassFullAccess",
        "AWSGreengrassReadOnlyAccess": "arn:aws:iam::aws:policy/AWSGreengrassReadOnlyAccess",
        "AWSGreengrassResourceAccessRolePolicy": "arn:aws:iam::aws:policy/service-role/AWSGreengrassResourceAccessRolePolicy",
        "AWSHealthFullAccess": "arn:aws:iam::aws:policy/AWSHealthFullAccess",
        "AWSIQContractServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSIQContractServiceRolePolicy",
        "AWSIQFullAccess": "arn:aws:iam::aws:policy/AWSIQFullAccess",
        "AWSIQPermissionServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSIQPermissionServiceRolePolicy",
        "AWSImageBuilderFullAccess": "arn:aws:iam::aws:policy/AWSImageBuilderFullAccess",
        "AWSImageBuilderReadOnlyAccess": "arn:aws:iam::aws:policy/AWSImageBuilderReadOnlyAccess",
        "AWSImportExportFullAccess": "arn:aws:iam::aws:policy/AWSImportExportFullAccess",
        "AWSImportExportReadOnlyAccess": "arn:aws:iam::aws:policy/AWSImportExportReadOnlyAccess",
        "AWSIoT1ClickFullAccess": "arn:aws:iam::aws:policy/AWSIoT1ClickFullAccess",
        "AWSIoT1ClickReadOnlyAccess": "arn:aws:iam::aws:policy/AWSIoT1ClickReadOnlyAccess",
        "AWSIoTAnalyticsFullAccess": "arn:aws:iam::aws:policy/AWSIoTAnalyticsFullAccess",
        "AWSIoTAnalyticsReadOnlyAccess": "arn:aws:iam::aws:policy/AWSIoTAnalyticsReadOnlyAccess",
        "AWSIoTConfigAccess": "arn:aws:iam::aws:policy/AWSIoTConfigAccess",
        "AWSIoTConfigReadOnlyAccess": "arn:aws:iam::aws:policy/AWSIoTConfigReadOnlyAccess",
        "AWSIoTDataAccess": "arn:aws:iam::aws:policy/AWSIoTDataAccess",
        "AWSIoTDeviceDefenderAddThingsToThingGroupMitigationAction": "arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderAddThingsToThingGroupMitigationAction",
        "AWSIoTDeviceDefenderAudit": "arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderAudit",
        "AWSIoTDeviceDefenderEnableIoTLoggingMitigationAction": "arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderEnableIoTLoggingMitigationAction",
        "AWSIoTDeviceDefenderPublishFindingsToSNSMitigationAction": "arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderPublishFindingsToSNSMitigationAction",
        "AWSIoTDeviceDefenderReplaceDefaultPolicyMitigationAction": "arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderReplaceDefaultPolicyMitigationAction",
        "AWSIoTDeviceDefenderUpdateCACertMitigationAction": "arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderUpdateCACertMitigationAction",
        "AWSIoTDeviceDefenderUpdateDeviceCertMitigationAction": "arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderUpdateDeviceCertMitigationAction",
        "AWSIoTDeviceTesterForFreeRTOSFullAccess": "arn:aws:iam::aws:policy/AWSIoTDeviceTesterForFreeRTOSFullAccess",
        "AWSIoTDeviceTesterForGreengrassFullAccess": "arn:aws:iam::aws:policy/AWSIoTDeviceTesterForGreengrassFullAccess",
        "AWSIoTEventsFullAccess": "arn:aws:iam::aws:policy/AWSIoTEventsFullAccess",
        "AWSIoTEventsReadOnlyAccess": "arn:aws:iam::aws:policy/AWSIoTEventsReadOnlyAccess",
        "AWSIoTFullAccess": "arn:aws:iam::aws:policy/AWSIoTFullAccess",
        "AWSIoTLogging": "arn:aws:iam::aws:policy/service-role/AWSIoTLogging",
        "AWSIoTOTAUpdate": "arn:aws:iam::aws:policy/service-role/AWSIoTOTAUpdate",
        "AWSIoTRuleActions": "arn:aws:iam::aws:policy/service-role/AWSIoTRuleActions",
        "AWSIoTSiteWiseConsoleFullAccess": "arn:aws:iam::aws:policy/AWSIoTSiteWiseConsoleFullAccess",
        "AWSIoTSiteWiseFullAccess": "arn:aws:iam::aws:policy/AWSIoTSiteWiseFullAccess",
        "AWSIoTSiteWiseMonitorPortalAccess": "arn:aws:iam::aws:policy/service-role/AWSIoTSiteWiseMonitorPortalAccess",
        "AWSIoTSiteWiseMonitorServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSIoTSiteWiseMonitorServiceRolePolicy",
        "AWSIoTSiteWiseReadOnlyAccess": "arn:aws:iam::aws:policy/AWSIoTSiteWiseReadOnlyAccess",
        "AWSIoTThingsRegistration": "arn:aws:iam::aws:policy/service-role/AWSIoTThingsRegistration",
        "AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy",
        "AWSKeyManagementServicePowerUser": "arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser",
        "AWSLakeFormationCrossAccountManager": "arn:aws:iam::aws:policy/AWSLakeFormationCrossAccountManager",
        "AWSLakeFormationDataAdmin": "arn:aws:iam::aws:policy/AWSLakeFormationDataAdmin",
        "AWSLambdaBasicExecutionRole": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "AWSLambdaDynamoDBExecutionRole": "arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole",
        "AWSLambdaENIManagementAccess": "arn:aws:iam::aws:policy/service-role/AWSLambdaENIManagementAccess",
        "AWSLambdaExecute": "arn:aws:iam::aws:policy/AWSLambdaExecute",
        "AWSLambdaFullAccess": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
        "AWSLambdaInvocation-DynamoDB": "arn:aws:iam::aws:policy/AWSLambdaInvocation-DynamoDB",
        "AWSLambdaKinesisExecutionRole": "arn:aws:iam::aws:policy/service-role/AWSLambdaKinesisExecutionRole",
        "AWSLambdaMSKExecutionRole": "arn:aws:iam::aws:policy/service-role/AWSLambdaMSKExecutionRole",
        "AWSLambdaReadOnlyAccess": "arn:aws:iam::aws:policy/AWSLambdaReadOnlyAccess",
        "AWSLambdaReplicator": "arn:aws:iam::aws:policy/aws-service-role/AWSLambdaReplicator",
        "AWSLambdaRole": "arn:aws:iam::aws:policy/service-role/AWSLambdaRole",
        "AWSLambdaSQSQueueExecutionRole": "arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole",
        "AWSLambdaVPCAccessExecutionRole": "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        "AWSLambda_FullAccess": "arn:aws:iam::aws:policy/AWSLambda_FullAccess",
        "AWSLambda_ReadOnlyAccess": "arn:aws:iam::aws:policy/AWSLambda_ReadOnlyAccess",
        "AWSLicenseManagerMasterAccountRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSLicenseManagerMasterAccountRolePolicy",
        "AWSLicenseManagerMemberAccountRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSLicenseManagerMemberAccountRolePolicy",
        "AWSLicenseManagerServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSLicenseManagerServiceRolePolicy",
        "AWSMarketplaceAmiIngestion": "arn:aws:iam::aws:policy/AWSMarketplaceAmiIngestion",
        "AWSMarketplaceFullAccess": "arn:aws:iam::aws:policy/AWSMarketplaceFullAccess",
        "AWSMarketplaceGetEntitlements": "arn:aws:iam::aws:policy/AWSMarketplaceGetEntitlements",
        "AWSMarketplaceImageBuildFullAccess": "arn:aws:iam::aws:policy/AWSMarketplaceImageBuildFullAccess",
        "AWSMarketplaceLicenseManagementServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSMarketplaceLicenseManagementServiceRolePolicy",
        "AWSMarketplaceManageSubscriptions": "arn:aws:iam::aws:policy/AWSMarketplaceManageSubscriptions",
        "AWSMarketplaceMeteringFullAccess": "arn:aws:iam::aws:policy/AWSMarketplaceMeteringFullAccess",
        "AWSMarketplaceMeteringRegisterUsage": "arn:aws:iam::aws:policy/AWSMarketplaceMeteringRegisterUsage",
        "AWSMarketplaceProcurementSystemAdminFullAccess": "arn:aws:iam::aws:policy/AWSMarketplaceProcurementSystemAdminFullAccess",
        "AWSMarketplaceRead-only": "arn:aws:iam::aws:policy/AWSMarketplaceRead-only",
        "AWSMarketplaceSellerFullAccess": "arn:aws:iam::aws:policy/AWSMarketplaceSellerFullAccess",
        "AWSMarketplaceSellerProductsFullAccess": "arn:aws:iam::aws:policy/AWSMarketplaceSellerProductsFullAccess",
        "AWSMarketplaceSellerProductsReadOnly": "arn:aws:iam::aws:policy/AWSMarketplaceSellerProductsReadOnly",
        "AWSMigrationHubDMSAccess": "arn:aws:iam::aws:policy/service-role/AWSMigrationHubDMSAccess",
        "AWSMigrationHubDiscoveryAccess": "arn:aws:iam::aws:policy/service-role/AWSMigrationHubDiscoveryAccess",
        "AWSMigrationHubFullAccess": "arn:aws:iam::aws:policy/AWSMigrationHubFullAccess",
        "AWSMigrationHubSMSAccess": "arn:aws:iam::aws:policy/service-role/AWSMigrationHubSMSAccess",
        "AWSMobileHub_FullAccess": "arn:aws:iam::aws:policy/AWSMobileHub_FullAccess",
        "AWSMobileHub_ReadOnly": "arn:aws:iam::aws:policy/AWSMobileHub_ReadOnly",
        "AWSNetworkFirewallServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSNetworkFirewallServiceRolePolicy",
        "AWSNetworkManagerFullAccess": "arn:aws:iam::aws:policy/AWSNetworkManagerFullAccess",
        "AWSNetworkManagerReadOnlyAccess": "arn:aws:iam::aws:policy/AWSNetworkManagerReadOnlyAccess",
        "AWSNetworkManagerServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSNetworkManagerServiceRolePolicy",
        "AWSOpsWorksCMInstanceProfileRole": "arn:aws:iam::aws:policy/AWSOpsWorksCMInstanceProfileRole",
        "AWSOpsWorksCMServiceRole": "arn:aws:iam::aws:policy/service-role/AWSOpsWorksCMServiceRole",
        "AWSOpsWorksCloudWatchLogs": "arn:aws:iam::aws:policy/AWSOpsWorksCloudWatchLogs",
        "AWSOpsWorksFullAccess": "arn:aws:iam::aws:policy/AWSOpsWorksFullAccess",
        "AWSOpsWorksInstanceRegistration": "arn:aws:iam::aws:policy/AWSOpsWorksInstanceRegistration",
        "AWSOpsWorksRegisterCLI_EC2": "arn:aws:iam::aws:policy/AWSOpsWorksRegisterCLI_EC2",
        "AWSOpsWorksRegisterCLI_OnPremises": "arn:aws:iam::aws:policy/AWSOpsWorksRegisterCLI_OnPremises",
        "AWSOpsWorksRole": "arn:aws:iam::aws:policy/service-role/AWSOpsWorksRole",
        "AWSOrganizationsFullAccess": "arn:aws:iam::aws:policy/AWSOrganizationsFullAccess",
        "AWSOrganizationsReadOnlyAccess": "arn:aws:iam::aws:policy/AWSOrganizationsReadOnlyAccess",
        "AWSOrganizationsServiceTrustPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSOrganizationsServiceTrustPolicy",
        "AWSOutpostsServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSOutpostsServiceRolePolicy",
        "AWSPanoramaApplianceRolePolicy": "arn:aws:iam::aws:policy/service-role/AWSPanoramaApplianceRolePolicy",
        "AWSPanoramaFullAccess": "arn:aws:iam::aws:policy/AWSPanoramaFullAccess",
        "AWSPanoramaGreengrassGroupRolePolicy": "arn:aws:iam::aws:policy/service-role/AWSPanoramaGreengrassGroupRolePolicy",
        "AWSPanoramaSageMakerRolePolicy": "arn:aws:iam::aws:policy/service-role/AWSPanoramaSageMakerRolePolicy",
        "AWSPanoramaServiceRolePolicy": "arn:aws:iam::aws:policy/service-role/AWSPanoramaServiceRolePolicy",
        "AWSPriceListServiceFullAccess": "arn:aws:iam::aws:policy/AWSPriceListServiceFullAccess",
        "AWSPrivateMarketplaceAdminFullAccess": "arn:aws:iam::aws:policy/AWSPrivateMarketplaceAdminFullAccess",
        "AWSPrivateMarketplaceRequests": "arn:aws:iam::aws:policy/AWSPrivateMarketplaceRequests",
        "AWSPurchaseOrdersServiceRolePolicy": "arn:aws:iam::aws:policy/AWSPurchaseOrdersServiceRolePolicy",
        "AWSQuickSightDescribeRDS": "arn:aws:iam::aws:policy/service-role/AWSQuickSightDescribeRDS",
        "AWSQuickSightDescribeRedshift": "arn:aws:iam::aws:policy/service-role/AWSQuickSightDescribeRedshift",
        "AWSQuickSightElasticsearchPolicy": "arn:aws:iam::aws:policy/service-role/AWSQuickSightElasticsearchPolicy",
        "AWSQuickSightIoTAnalyticsAccess": "arn:aws:iam::aws:policy/AWSQuickSightIoTAnalyticsAccess",
        "AWSQuickSightListIAM": "arn:aws:iam::aws:policy/service-role/AWSQuickSightListIAM",
        "AWSQuickSightSageMakerPolicy": "arn:aws:iam::aws:policy/service-role/AWSQuickSightSageMakerPolicy",
        "AWSQuickSightTimestreamPolicy": "arn:aws:iam::aws:policy/service-role/AWSQuickSightTimestreamPolicy",
        "AWSQuicksightAthenaAccess": "arn:aws:iam::aws:policy/service-role/AWSQuicksightAthenaAccess",
        "AWSResourceAccessManagerFullAccess": "arn:aws:iam::aws:policy/AWSResourceAccessManagerFullAccess",
        "AWSResourceAccessManagerReadOnlyAccess": "arn:aws:iam::aws:policy/AWSResourceAccessManagerReadOnlyAccess",
        "AWSResourceAccessManagerResourceShareParticipantAccess": "arn:aws:iam::aws:policy/AWSResourceAccessManagerResourceShareParticipantAccess",
        "AWSResourceAccessManagerServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSResourceAccessManagerServiceRolePolicy",
        "AWSResourceGroupsReadOnlyAccess": "arn:aws:iam::aws:policy/AWSResourceGroupsReadOnlyAccess",
        "AWSRoboMakerReadOnlyAccess": "arn:aws:iam::aws:policy/AWSRoboMakerReadOnlyAccess",
        "AWSRoboMakerServicePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSRoboMakerServicePolicy",
        "AWSRoboMakerServiceRolePolicy": "arn:aws:iam::aws:policy/AWSRoboMakerServiceRolePolicy",
        "AWSRoboMaker_FullAccess": "arn:aws:iam::aws:policy/AWSRoboMaker_FullAccess",
        "AWSSSODirectoryAdministrator": "arn:aws:iam::aws:policy/AWSSSODirectoryAdministrator",
        "AWSSSODirectoryReadOnly": "arn:aws:iam::aws:policy/AWSSSODirectoryReadOnly",
        "AWSSSOMasterAccountAdministrator": "arn:aws:iam::aws:policy/AWSSSOMasterAccountAdministrator",
        "AWSSSOMemberAccountAdministrator": "arn:aws:iam::aws:policy/AWSSSOMemberAccountAdministrator",
        "AWSSSOReadOnly": "arn:aws:iam::aws:policy/AWSSSOReadOnly",
        "AWSSSOServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSSSOServiceRolePolicy",
        "AWSSavingsPlansFullAccess": "arn:aws:iam::aws:policy/AWSSavingsPlansFullAccess",
        "AWSSavingsPlansReadOnlyAccess": "arn:aws:iam::aws:policy/AWSSavingsPlansReadOnlyAccess",
        "AWSSecurityHubFullAccess": "arn:aws:iam::aws:policy/AWSSecurityHubFullAccess",
        "AWSSecurityHubReadOnlyAccess": "arn:aws:iam::aws:policy/AWSSecurityHubReadOnlyAccess",
        "AWSSecurityHubServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSSecurityHubServiceRolePolicy",
        "AWSServiceCatalogAdminFullAccess": "arn:aws:iam::aws:policy/AWSServiceCatalogAdminFullAccess",
        "AWSServiceCatalogAdminReadOnlyAccess": "arn:aws:iam::aws:policy/AWSServiceCatalogAdminReadOnlyAccess",
        "AWSServiceCatalogAppRegistryFullAccess": "arn:aws:iam::aws:policy/AWSServiceCatalogAppRegistryFullAccess",
        "AWSServiceCatalogAppRegistryReadOnlyAccess": "arn:aws:iam::aws:policy/AWSServiceCatalogAppRegistryReadOnlyAccess",
        "AWSServiceCatalogEndUserFullAccess": "arn:aws:iam::aws:policy/AWSServiceCatalogEndUserFullAccess",
        "AWSServiceCatalogEndUserReadOnlyAccess": "arn:aws:iam::aws:policy/AWSServiceCatalogEndUserReadOnlyAccess",
        "AWSServiceRoleForAmazonEKSNodegroup": "arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForAmazonEKSNodegroup",
        "AWSServiceRoleForCloudWatchAlarmsActionSSMServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForCloudWatchAlarmsActionSSMServiceRolePolicy",
        "AWSServiceRoleForCodeGuru-Profiler": "arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForCodeGuru-Profiler",
        "AWSServiceRoleForEC2ScheduledInstances": "arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForEC2ScheduledInstances",
        "AWSServiceRoleForImageBuilder": "arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForImageBuilder",
        "AWSServiceRoleForIoTSiteWise": "arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForIoTSiteWise",
        "AWSServiceRoleForLogDeliveryPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForLogDeliveryPolicy",
        "AWSServiceRoleForMonitronPolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForMonitronPolicy",
        "AWSServiceRoleForSMS": "arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForSMS",
        "AWSShieldDRTAccessPolicy": "arn:aws:iam::aws:policy/service-role/AWSShieldDRTAccessPolicy",
        "AWSStepFunctionsConsoleFullAccess": "arn:aws:iam::aws:policy/AWSStepFunctionsConsoleFullAccess",
        "AWSStepFunctionsFullAccess": "arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess",
        "AWSStepFunctionsReadOnlyAccess": "arn:aws:iam::aws:policy/AWSStepFunctionsReadOnlyAccess",
        "AWSStorageGatewayFullAccess": "arn:aws:iam::aws:policy/AWSStorageGatewayFullAccess",
        "AWSStorageGatewayReadOnlyAccess": "arn:aws:iam::aws:policy/AWSStorageGatewayReadOnlyAccess",
        "AWSSupportAccess": "arn:aws:iam::aws:policy/AWSSupportAccess",
        "AWSSupportServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy",
        "AWSSystemsManagerAccountDiscoveryServicePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSSystemsManagerAccountDiscoveryServicePolicy",
        "AWSThinkboxAWSPortalAdminPolicy": "arn:aws:iam::aws:policy/AWSThinkboxAWSPortalAdminPolicy",
        "AWSThinkboxAWSPortalGatewayPolicy": "arn:aws:iam::aws:policy/AWSThinkboxAWSPortalGatewayPolicy",
        "AWSThinkboxAWSPortalWorkerPolicy": "arn:aws:iam::aws:policy/AWSThinkboxAWSPortalWorkerPolicy",
        "AWSThinkboxAssetServerPolicy": "arn:aws:iam::aws:policy/AWSThinkboxAssetServerPolicy",
        "AWSThinkboxDeadlineResourceTrackerAccessPolicy": "arn:aws:iam::aws:policy/AWSThinkboxDeadlineResourceTrackerAccessPolicy",
        "AWSThinkboxDeadlineResourceTrackerAdminPolicy": "arn:aws:iam::aws:policy/AWSThinkboxDeadlineResourceTrackerAdminPolicy",
        "AWSThinkboxDeadlineSpotEventPluginAdminPolicy": "arn:aws:iam::aws:policy/AWSThinkboxDeadlineSpotEventPluginAdminPolicy",
        "AWSThinkboxDeadlineSpotEventPluginWorkerPolicy": "arn:aws:iam::aws:policy/AWSThinkboxDeadlineSpotEventPluginWorkerPolicy",
        "AWSTransferLoggingAccess": "arn:aws:iam::aws:policy/service-role/AWSTransferLoggingAccess",
        "AWSTransferReadOnlyAccess": "arn:aws:iam::aws:policy/AWSTransferReadOnlyAccess",
        "AWSTrustedAdvisorReportingServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorReportingServiceRolePolicy",
        "AWSTrustedAdvisorServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorServiceRolePolicy",
        "AWSVPCS2SVpnServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSVPCS2SVpnServiceRolePolicy",
        "AWSVPCTransitGatewayServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AWSVPCTransitGatewayServiceRolePolicy",
        "AWSWAFConsoleFullAccess": "arn:aws:iam::aws:policy/AWSWAFConsoleFullAccess",
        "AWSWAFConsoleReadOnlyAccess": "arn:aws:iam::aws:policy/AWSWAFConsoleReadOnlyAccess",
        "AWSWAFFullAccess": "arn:aws:iam::aws:policy/AWSWAFFullAccess",
        "AWSWAFReadOnlyAccess": "arn:aws:iam::aws:policy/AWSWAFReadOnlyAccess",
        "AWSXRayDaemonWriteAccess": "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess",
        "AWSXrayFullAccess": "arn:aws:iam::aws:policy/AWSXrayFullAccess",
        "AWSXrayReadOnlyAccess": "arn:aws:iam::aws:policy/AWSXrayReadOnlyAccess",
        "AWSXrayWriteOnlyAccess": "arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess",
        "AWS_ConfigRole": "arn:aws:iam::aws:policy/service-role/AWS_ConfigRole",
        "AWS_Config_Role": "arn:aws:iam::aws:policy/AWS_Config_Role",
        "AccessAnalyzerServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AccessAnalyzerServiceRolePolicy",
        "AdministratorAccess": "arn:aws:iam::aws:policy/AdministratorAccess",
        "AdministratorAccess-Amplify": "arn:aws:iam::aws:policy/AdministratorAccess-Amplify",
        "AlexaForBusinessDeviceSetup": "arn:aws:iam::aws:policy/AlexaForBusinessDeviceSetup",
        "AlexaForBusinessFullAccess": "arn:aws:iam::aws:policy/AlexaForBusinessFullAccess",
        "AlexaForBusinessGatewayExecution": "arn:aws:iam::aws:policy/AlexaForBusinessGatewayExecution",
        "AlexaForBusinessLifesizeDelegatedAccessPolicy": "arn:aws:iam::aws:policy/AlexaForBusinessLifesizeDelegatedAccessPolicy",
        "AlexaForBusinessNetworkProfileServicePolicy": "arn:aws:iam::aws:policy/aws-service-role/AlexaForBusinessNetworkProfileServicePolicy",
        "AlexaForBusinessPolyDelegatedAccessPolicy": "arn:aws:iam::aws:policy/AlexaForBusinessPolyDelegatedAccessPolicy",
        "AlexaForBusinessReadOnlyAccess": "arn:aws:iam::aws:policy/AlexaForBusinessReadOnlyAccess",
        "AmazonAPIGatewayAdministrator": "arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator",
        "AmazonAPIGatewayInvokeFullAccess": "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess",
        "AmazonAPIGatewayPushToCloudWatchLogs": "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
        "AmazonAppFlowFullAccess": "arn:aws:iam::aws:policy/AmazonAppFlowFullAccess",
        "AmazonAppFlowReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonAppFlowReadOnlyAccess",
        "AmazonAppStreamFullAccess": "arn:aws:iam::aws:policy/AmazonAppStreamFullAccess",
        "AmazonAppStreamReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonAppStreamReadOnlyAccess",
        "AmazonAppStreamServiceAccess": "arn:aws:iam::aws:policy/service-role/AmazonAppStreamServiceAccess",
        "AmazonAthenaFullAccess": "arn:aws:iam::aws:policy/AmazonAthenaFullAccess",
        "AmazonAugmentedAIFullAccess": "arn:aws:iam::aws:policy/AmazonAugmentedAIFullAccess",
        "AmazonAugmentedAIHumanLoopFullAccess": "arn:aws:iam::aws:policy/AmazonAugmentedAIHumanLoopFullAccess",
        "AmazonAugmentedAIIntegratedAPIAccess": "arn:aws:iam::aws:policy/AmazonAugmentedAIIntegratedAPIAccess",
        "AmazonBraketFullAccess": "arn:aws:iam::aws:policy/AmazonBraketFullAccess",
        "AmazonBraketServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonBraketServiceRolePolicy",
        "AmazonChimeFullAccess": "arn:aws:iam::aws:policy/AmazonChimeFullAccess",
        "AmazonChimeReadOnly": "arn:aws:iam::aws:policy/AmazonChimeReadOnly",
        "AmazonChimeSDK": "arn:aws:iam::aws:policy/AmazonChimeSDK",
        "AmazonChimeServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonChimeServiceRolePolicy",
        "AmazonChimeUserManagement": "arn:aws:iam::aws:policy/AmazonChimeUserManagement",
        "AmazonChimeVoiceConnectorServiceLinkedRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonChimeVoiceConnectorServiceLinkedRolePolicy",
        "AmazonCloudDirectoryFullAccess": "arn:aws:iam::aws:policy/AmazonCloudDirectoryFullAccess",
        "AmazonCloudDirectoryReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonCloudDirectoryReadOnlyAccess",
        "AmazonCodeGuruProfilerFullAccess": "arn:aws:iam::aws:policy/AmazonCodeGuruProfilerFullAccess",
        "AmazonCodeGuruProfilerReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonCodeGuruProfilerReadOnlyAccess",
        "AmazonCodeGuruReviewerFullAccess": "arn:aws:iam::aws:policy/AmazonCodeGuruReviewerFullAccess",
        "AmazonCodeGuruReviewerReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonCodeGuruReviewerReadOnlyAccess",
        "AmazonCodeGuruReviewerServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonCodeGuruReviewerServiceRolePolicy",
        "AmazonCognitoDeveloperAuthenticatedIdentities": "arn:aws:iam::aws:policy/AmazonCognitoDeveloperAuthenticatedIdentities",
        "AmazonCognitoIdpEmailServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonCognitoIdpEmailServiceRolePolicy",
        "AmazonCognitoIdpServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonCognitoIdpServiceRolePolicy",
        "AmazonCognitoPowerUser": "arn:aws:iam::aws:policy/AmazonCognitoPowerUser",
        "AmazonCognitoReadOnly": "arn:aws:iam::aws:policy/AmazonCognitoReadOnly",
        "AmazonConnectReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonConnectReadOnlyAccess",
        "AmazonConnectServiceLinkedRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonConnectServiceLinkedRolePolicy",
        "AmazonConnect_FullAccess": "arn:aws:iam::aws:policy/AmazonConnect_FullAccess",
        "AmazonDMSCloudWatchLogsRole": "arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole",
        "AmazonDMSRedshiftS3Role": "arn:aws:iam::aws:policy/service-role/AmazonDMSRedshiftS3Role",
        "AmazonDMSVPCManagementRole": "arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole",
        "AmazonDRSVPCManagement": "arn:aws:iam::aws:policy/AmazonDRSVPCManagement",
        "AmazonDetectiveFullAccess": "arn:aws:iam::aws:policy/AmazonDetectiveFullAccess",
        "AmazonDevOpsGuruFullAccess": "arn:aws:iam::aws:policy/AmazonDevOpsGuruFullAccess",
        "AmazonDevOpsGuruReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonDevOpsGuruReadOnlyAccess",
        "AmazonDevOpsGuruServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonDevOpsGuruServiceRolePolicy",
        "AmazonDocDBConsoleFullAccess": "arn:aws:iam::aws:policy/AmazonDocDBConsoleFullAccess",
        "AmazonDocDBFullAccess": "arn:aws:iam::aws:policy/AmazonDocDBFullAccess",
        "AmazonDocDBReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonDocDBReadOnlyAccess",
        "AmazonDynamoDBFullAccess": "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
        "AmazonDynamoDBFullAccesswithDataPipeline": "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccesswithDataPipeline",
        "AmazonDynamoDBReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess",
        "AmazonEC2ContainerRegistryFullAccess": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess",
        "AmazonEC2ContainerRegistryPowerUser": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser",
        "AmazonEC2ContainerRegistryReadOnly": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
        "AmazonEC2ContainerServiceAutoscaleRole": "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole",
        "AmazonEC2ContainerServiceEventsRole": "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceEventsRole",
        "AmazonEC2ContainerServiceFullAccess": "arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess",
        "AmazonEC2ContainerServiceRole": "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole",
        "AmazonEC2ContainerServiceforEC2Role": "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role",
        "AmazonEC2FullAccess": "arn:aws:iam::aws:policy/AmazonEC2FullAccess",
        "AmazonEC2ReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess",
        "AmazonEC2RolePolicyForLaunchWizard": "arn:aws:iam::aws:policy/AmazonEC2RolePolicyForLaunchWizard",
        "AmazonEC2RoleforAWSCodeDeploy": "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy",
        "AmazonEC2RoleforAWSCodeDeployLimited": "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeployLimited",
        "AmazonEC2RoleforDataPipelineRole": "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforDataPipelineRole",
        "AmazonEC2RoleforSSM": "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM",
        "AmazonEC2SpotFleetAutoscaleRole": "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetAutoscaleRole",
        "AmazonEC2SpotFleetTaggingRole": "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole",
        "AmazonECSServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonECSServiceRolePolicy",
        "AmazonECSTaskExecutionRolePolicy": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        "AmazonECS_FullAccess": "arn:aws:iam::aws:policy/AmazonECS_FullAccess",
        "AmazonEKSClusterPolicy": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
        "AmazonEKSFargatePodExecutionRolePolicy": "arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy",
        "AmazonEKSForFargateServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonEKSForFargateServiceRolePolicy",
        "AmazonEKSServicePolicy": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
        "AmazonEKSServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonEKSServiceRolePolicy",
        "AmazonEKSVPCResourceController": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
        "AmazonEKSWorkerNodePolicy": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
        "AmazonEKS_CNI_Policy": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
        "AmazonEMRCleanupPolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonEMRCleanupPolicy",
        "AmazonESCognitoAccess": "arn:aws:iam::aws:policy/AmazonESCognitoAccess",
        "AmazonESFullAccess": "arn:aws:iam::aws:policy/AmazonESFullAccess",
        "AmazonESReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonESReadOnlyAccess",
        "AmazonElastiCacheFullAccess": "arn:aws:iam::aws:policy/AmazonElastiCacheFullAccess",
        "AmazonElastiCacheReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonElastiCacheReadOnlyAccess",
        "AmazonElasticContainerRegistryPublicFullAccess": "arn:aws:iam::aws:policy/AmazonElasticContainerRegistryPublicFullAccess",
        "AmazonElasticContainerRegistryPublicPowerUser": "arn:aws:iam::aws:policy/AmazonElasticContainerRegistryPublicPowerUser",
        "AmazonElasticContainerRegistryPublicReadOnly": "arn:aws:iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly",
        "AmazonElasticFileSystemClientFullAccess": "arn:aws:iam::aws:policy/AmazonElasticFileSystemClientFullAccess",
        "AmazonElasticFileSystemClientReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonElasticFileSystemClientReadOnlyAccess",
        "AmazonElasticFileSystemClientReadWriteAccess": "arn:aws:iam::aws:policy/AmazonElasticFileSystemClientReadWriteAccess",
        "AmazonElasticFileSystemFullAccess": "arn:aws:iam::aws:policy/AmazonElasticFileSystemFullAccess",
        "AmazonElasticFileSystemReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonElasticFileSystemReadOnlyAccess",
        "AmazonElasticFileSystemServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonElasticFileSystemServiceRolePolicy",
        "AmazonElasticFileSystemsUtils": "arn:aws:iam::aws:policy/AmazonElasticFileSystemsUtils",
        "AmazonElasticMapReduceEditorsRole": "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceEditorsRole",
        "AmazonElasticMapReduceFullAccess": "arn:aws:iam::aws:policy/AmazonElasticMapReduceFullAccess",
        "AmazonElasticMapReducePlacementGroupPolicy": "arn:aws:iam::aws:policy/AmazonElasticMapReducePlacementGroupPolicy",
        "AmazonElasticMapReduceReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonElasticMapReduceReadOnlyAccess",
        "AmazonElasticMapReduceRole": "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole",
        "AmazonElasticMapReduceforAutoScalingRole": "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforAutoScalingRole",
        "AmazonElasticMapReduceforEC2Role": "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role",
        "AmazonElasticTranscoderRole": "arn:aws:iam::aws:policy/service-role/AmazonElasticTranscoderRole",
        "AmazonElasticTranscoder_FullAccess": "arn:aws:iam::aws:policy/AmazonElasticTranscoder_FullAccess",
        "AmazonElasticTranscoder_JobsSubmitter": "arn:aws:iam::aws:policy/AmazonElasticTranscoder_JobsSubmitter",
        "AmazonElasticTranscoder_ReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonElasticTranscoder_ReadOnlyAccess",
        "AmazonElasticsearchServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonElasticsearchServiceRolePolicy",
        "AmazonEventBridgeFullAccess": "arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess",
        "AmazonEventBridgeReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonEventBridgeReadOnlyAccess",
        "AmazonEventBridgeSchemasFullAccess": "arn:aws:iam::aws:policy/AmazonEventBridgeSchemasFullAccess",
        "AmazonEventBridgeSchemasReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonEventBridgeSchemasReadOnlyAccess",
        "AmazonEventBridgeSchemasServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonEventBridgeSchemasServiceRolePolicy",
        "AmazonFSxConsoleFullAccess": "arn:aws:iam::aws:policy/AmazonFSxConsoleFullAccess",
        "AmazonFSxConsoleReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonFSxConsoleReadOnlyAccess",
        "AmazonFSxFullAccess": "arn:aws:iam::aws:policy/AmazonFSxFullAccess",
        "AmazonFSxReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonFSxReadOnlyAccess",
        "AmazonFSxServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonFSxServiceRolePolicy",
        "AmazonForecastFullAccess": "arn:aws:iam::aws:policy/AmazonForecastFullAccess",
        "AmazonFraudDetectorFullAccessPolicy": "arn:aws:iam::aws:policy/AmazonFraudDetectorFullAccessPolicy",
        "AmazonFreeRTOSFullAccess": "arn:aws:iam::aws:policy/AmazonFreeRTOSFullAccess",
        "AmazonFreeRTOSOTAUpdate": "arn:aws:iam::aws:policy/service-role/AmazonFreeRTOSOTAUpdate",
        "AmazonGlacierFullAccess": "arn:aws:iam::aws:policy/AmazonGlacierFullAccess",
        "AmazonGlacierReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonGlacierReadOnlyAccess",
        "AmazonGuardDutyFullAccess": "arn:aws:iam::aws:policy/AmazonGuardDutyFullAccess",
        "AmazonGuardDutyReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonGuardDutyReadOnlyAccess",
        "AmazonGuardDutyServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonGuardDutyServiceRolePolicy",
        "AmazonHoneycodeFullAccess": "arn:aws:iam::aws:policy/AmazonHoneycodeFullAccess",
        "AmazonHoneycodeReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonHoneycodeReadOnlyAccess",
        "AmazonHoneycodeServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonHoneycodeServiceRolePolicy",
        "AmazonHoneycodeTeamAssociationFullAccess": "arn:aws:iam::aws:policy/AmazonHoneycodeTeamAssociationFullAccess",
        "AmazonHoneycodeTeamAssociationReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonHoneycodeTeamAssociationReadOnlyAccess",
        "AmazonHoneycodeWorkbookFullAccess": "arn:aws:iam::aws:policy/AmazonHoneycodeWorkbookFullAccess",
        "AmazonHoneycodeWorkbookReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonHoneycodeWorkbookReadOnlyAccess",
        "AmazonInspectorFullAccess": "arn:aws:iam::aws:policy/AmazonInspectorFullAccess",
        "AmazonInspectorReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonInspectorReadOnlyAccess",
        "AmazonInspectorServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonInspectorServiceRolePolicy",
        "AmazonKendraFullAccess": "arn:aws:iam::aws:policy/AmazonKendraFullAccess",
        "AmazonKendraReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonKendraReadOnlyAccess",
        "AmazonKeyspacesFullAccess": "arn:aws:iam::aws:policy/AmazonKeyspacesFullAccess",
        "AmazonKeyspacesReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonKeyspacesReadOnlyAccess",
        "AmazonKinesisAnalyticsFullAccess": "arn:aws:iam::aws:policy/AmazonKinesisAnalyticsFullAccess",
        "AmazonKinesisAnalyticsReadOnly": "arn:aws:iam::aws:policy/AmazonKinesisAnalyticsReadOnly",
        "AmazonKinesisFirehoseFullAccess": "arn:aws:iam::aws:policy/AmazonKinesisFirehoseFullAccess",
        "AmazonKinesisFirehoseReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonKinesisFirehoseReadOnlyAccess",
        "AmazonKinesisFullAccess": "arn:aws:iam::aws:policy/AmazonKinesisFullAccess",
        "AmazonKinesisReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonKinesisReadOnlyAccess",
        "AmazonKinesisVideoStreamsFullAccess": "arn:aws:iam::aws:policy/AmazonKinesisVideoStreamsFullAccess",
        "AmazonKinesisVideoStreamsReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonKinesisVideoStreamsReadOnlyAccess",
        "AmazonLambdaRolePolicyForLaunchWizardSAP": "arn:aws:iam::aws:policy/AmazonLambdaRolePolicyForLaunchWizardSAP",
        "AmazonLaunchWizard_Fullaccess": "arn:aws:iam::aws:policy/AmazonLaunchWizard_Fullaccess",
        "AmazonLexBotPolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonLexBotPolicy",
        "AmazonLexFullAccess": "arn:aws:iam::aws:policy/AmazonLexFullAccess",
        "AmazonLexReadOnly": "arn:aws:iam::aws:policy/AmazonLexReadOnly",
        "AmazonLexRunBotsOnly": "arn:aws:iam::aws:policy/AmazonLexRunBotsOnly",
        "AmazonMCSFullAccess": "arn:aws:iam::aws:policy/AmazonMCSFullAccess",
        "AmazonMCSReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonMCSReadOnlyAccess",
        "AmazonMQApiFullAccess": "arn:aws:iam::aws:policy/AmazonMQApiFullAccess",
        "AmazonMQApiReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonMQApiReadOnlyAccess",
        "AmazonMQFullAccess": "arn:aws:iam::aws:policy/AmazonMQFullAccess",
        "AmazonMQReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonMQReadOnlyAccess",
        "AmazonMQServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonMQServiceRolePolicy",
        "AmazonMSKFullAccess": "arn:aws:iam::aws:policy/AmazonMSKFullAccess",
        "AmazonMSKReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonMSKReadOnlyAccess",
        "AmazonMWAAServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonMWAAServiceRolePolicy",
        "AmazonMachineLearningBatchPredictionsAccess": "arn:aws:iam::aws:policy/AmazonMachineLearningBatchPredictionsAccess",
        "AmazonMachineLearningCreateOnlyAccess": "arn:aws:iam::aws:policy/AmazonMachineLearningCreateOnlyAccess",
        "AmazonMachineLearningFullAccess": "arn:aws:iam::aws:policy/AmazonMachineLearningFullAccess",
        "AmazonMachineLearningManageRealTimeEndpointOnlyAccess": "arn:aws:iam::aws:policy/AmazonMachineLearningManageRealTimeEndpointOnlyAccess",
        "AmazonMachineLearningReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonMachineLearningReadOnlyAccess",
        "AmazonMachineLearningRealTimePredictionOnlyAccess": "arn:aws:iam::aws:policy/AmazonMachineLearningRealTimePredictionOnlyAccess",
        "AmazonMachineLearningRoleforRedshiftDataSourceV3": "arn:aws:iam::aws:policy/service-role/AmazonMachineLearningRoleforRedshiftDataSourceV3",
        "AmazonMacieFullAccess": "arn:aws:iam::aws:policy/AmazonMacieFullAccess",
        "AmazonMacieHandshakeRole": "arn:aws:iam::aws:policy/service-role/AmazonMacieHandshakeRole",
        "AmazonMacieServiceRole": "arn:aws:iam::aws:policy/service-role/AmazonMacieServiceRole",
        "AmazonMacieServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonMacieServiceRolePolicy",
        "AmazonMacieSetupRole": "arn:aws:iam::aws:policy/service-role/AmazonMacieSetupRole",
        "AmazonManagedBlockchainConsoleFullAccess": "arn:aws:iam::aws:policy/AmazonManagedBlockchainConsoleFullAccess",
        "AmazonManagedBlockchainFullAccess": "arn:aws:iam::aws:policy/AmazonManagedBlockchainFullAccess",
        "AmazonManagedBlockchainReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonManagedBlockchainReadOnlyAccess",
        "AmazonManagedBlockchainServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonManagedBlockchainServiceRolePolicy",
        "AmazonMechanicalTurkFullAccess": "arn:aws:iam::aws:policy/AmazonMechanicalTurkFullAccess",
        "AmazonMechanicalTurkReadOnly": "arn:aws:iam::aws:policy/AmazonMechanicalTurkReadOnly",
        "AmazonMobileAnalyticsFinancialReportAccess": "arn:aws:iam::aws:policy/AmazonMobileAnalyticsFinancialReportAccess",
        "AmazonMobileAnalyticsFullAccess": "arn:aws:iam::aws:policy/AmazonMobileAnalyticsFullAccess",
        "AmazonMobileAnalyticsNon-financialReportAccess": "arn:aws:iam::aws:policy/AmazonMobileAnalyticsNon-financialReportAccess",
        "AmazonMobileAnalyticsWriteOnlyAccess": "arn:aws:iam::aws:policy/AmazonMobileAnalyticsWriteOnlyAccess",
        "AmazonMonitronFullAccess": "arn:aws:iam::aws:policy/AmazonMonitronFullAccess",
        "AmazonPersonalizeFullAccess": "arn:aws:iam::aws:policy/service-role/AmazonPersonalizeFullAccess",
        "AmazonPollyFullAccess": "arn:aws:iam::aws:policy/AmazonPollyFullAccess",
        "AmazonPollyReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonPollyReadOnlyAccess",
        "AmazonQLDBConsoleFullAccess": "arn:aws:iam::aws:policy/AmazonQLDBConsoleFullAccess",
        "AmazonQLDBFullAccess": "arn:aws:iam::aws:policy/AmazonQLDBFullAccess",
        "AmazonQLDBReadOnly": "arn:aws:iam::aws:policy/AmazonQLDBReadOnly",
        "AmazonRDSBetaServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonRDSBetaServiceRolePolicy",
        "AmazonRDSDataFullAccess": "arn:aws:iam::aws:policy/AmazonRDSDataFullAccess",
        "AmazonRDSDirectoryServiceAccess": "arn:aws:iam::aws:policy/service-role/AmazonRDSDirectoryServiceAccess",
        "AmazonRDSEnhancedMonitoringRole": "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
        "AmazonRDSFullAccess": "arn:aws:iam::aws:policy/AmazonRDSFullAccess",
        "AmazonRDSPreviewServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonRDSPreviewServiceRolePolicy",
        "AmazonRDSReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonRDSReadOnlyAccess",
        "AmazonRDSServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonRDSServiceRolePolicy",
        "AmazonRedshiftDataFullAccess": "arn:aws:iam::aws:policy/AmazonRedshiftDataFullAccess",
        "AmazonRedshiftFullAccess": "arn:aws:iam::aws:policy/AmazonRedshiftFullAccess",
        "AmazonRedshiftQueryEditor": "arn:aws:iam::aws:policy/AmazonRedshiftQueryEditor",
        "AmazonRedshiftReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonRedshiftReadOnlyAccess",
        "AmazonRedshiftServiceLinkedRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonRedshiftServiceLinkedRolePolicy",
        "AmazonRekognitionCustomLabelsFullAccess": "arn:aws:iam::aws:policy/AmazonRekognitionCustomLabelsFullAccess",
        "AmazonRekognitionFullAccess": "arn:aws:iam::aws:policy/AmazonRekognitionFullAccess",
        "AmazonRekognitionReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonRekognitionReadOnlyAccess",
        "AmazonRekognitionServiceRole": "arn:aws:iam::aws:policy/service-role/AmazonRekognitionServiceRole",
        "AmazonRoute53AutoNamingFullAccess": "arn:aws:iam::aws:policy/AmazonRoute53AutoNamingFullAccess",
        "AmazonRoute53AutoNamingReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonRoute53AutoNamingReadOnlyAccess",
        "AmazonRoute53AutoNamingRegistrantAccess": "arn:aws:iam::aws:policy/AmazonRoute53AutoNamingRegistrantAccess",
        "AmazonRoute53DomainsFullAccess": "arn:aws:iam::aws:policy/AmazonRoute53DomainsFullAccess",
        "AmazonRoute53DomainsReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonRoute53DomainsReadOnlyAccess",
        "AmazonRoute53FullAccess": "arn:aws:iam::aws:policy/AmazonRoute53FullAccess",
        "AmazonRoute53ReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonRoute53ReadOnlyAccess",
        "AmazonRoute53ResolverFullAccess": "arn:aws:iam::aws:policy/AmazonRoute53ResolverFullAccess",
        "AmazonRoute53ResolverReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonRoute53ResolverReadOnlyAccess",
        "AmazonS3FullAccess": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
        "AmazonS3OutpostsFullAccess": "arn:aws:iam::aws:policy/AmazonS3OutpostsFullAccess",
        "AmazonS3OutpostsReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonS3OutpostsReadOnlyAccess",
        "AmazonS3ReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
        "AmazonSESFullAccess": "arn:aws:iam::aws:policy/AmazonSESFullAccess",
        "AmazonSESReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonSESReadOnlyAccess",
        "AmazonSNSFullAccess": "arn:aws:iam::aws:policy/AmazonSNSFullAccess",
        "AmazonSNSReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonSNSReadOnlyAccess",
        "AmazonSNSRole": "arn:aws:iam::aws:policy/service-role/AmazonSNSRole",
        "AmazonSQSFullAccess": "arn:aws:iam::aws:policy/AmazonSQSFullAccess",
        "AmazonSQSReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonSQSReadOnlyAccess",
        "AmazonSSMAutomationApproverAccess": "arn:aws:iam::aws:policy/AmazonSSMAutomationApproverAccess",
        "AmazonSSMAutomationRole": "arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole",
        "AmazonSSMDirectoryServiceAccess": "arn:aws:iam::aws:policy/AmazonSSMDirectoryServiceAccess",
        "AmazonSSMFullAccess": "arn:aws:iam::aws:policy/AmazonSSMFullAccess",
        "AmazonSSMMaintenanceWindowRole": "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole",
        "AmazonSSMManagedInstanceCore": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
        "AmazonSSMPatchAssociation": "arn:aws:iam::aws:policy/AmazonSSMPatchAssociation",
        "AmazonSSMReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess",
        "AmazonSSMServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonSSMServiceRolePolicy",
        "AmazonSageMakerAdmin-ServiceCatalogProductsServiceRolePolicy": "arn:aws:iam::aws:policy/AmazonSageMakerAdmin-ServiceCatalogProductsServiceRolePolicy",
        "AmazonSageMakerFeatureStoreAccess": "arn:aws:iam::aws:policy/AmazonSageMakerFeatureStoreAccess",
        "AmazonSageMakerFullAccess": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
        "AmazonSageMakerGroundTruthExecution": "arn:aws:iam::aws:policy/AmazonSageMakerGroundTruthExecution",
        "AmazonSageMakerMechanicalTurkAccess": "arn:aws:iam::aws:policy/AmazonSageMakerMechanicalTurkAccess",
        "AmazonSageMakerNotebooksServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonSageMakerNotebooksServiceRolePolicy",
        "AmazonSageMakerReadOnly": "arn:aws:iam::aws:policy/AmazonSageMakerReadOnly",
        "AmazonSumerianFullAccess": "arn:aws:iam::aws:policy/AmazonSumerianFullAccess",
        "AmazonTextractFullAccess": "arn:aws:iam::aws:policy/AmazonTextractFullAccess",
        "AmazonTextractServiceRole": "arn:aws:iam::aws:policy/service-role/AmazonTextractServiceRole",
        "AmazonTimestreamConsoleFullAccess": "arn:aws:iam::aws:policy/AmazonTimestreamConsoleFullAccess",
        "AmazonTimestreamFullAccess": "arn:aws:iam::aws:policy/AmazonTimestreamFullAccess",
        "AmazonTimestreamReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonTimestreamReadOnlyAccess",
        "AmazonTranscribeFullAccess": "arn:aws:iam::aws:policy/AmazonTranscribeFullAccess",
        "AmazonTranscribeReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonTranscribeReadOnlyAccess",
        "AmazonVPCCrossAccountNetworkInterfaceOperations": "arn:aws:iam::aws:policy/AmazonVPCCrossAccountNetworkInterfaceOperations",
        "AmazonVPCFullAccess": "arn:aws:iam::aws:policy/AmazonVPCFullAccess",
        "AmazonVPCReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonVPCReadOnlyAccess",
        "AmazonWorkDocsFullAccess": "arn:aws:iam::aws:policy/AmazonWorkDocsFullAccess",
        "AmazonWorkDocsReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonWorkDocsReadOnlyAccess",
        "AmazonWorkLinkFullAccess": "arn:aws:iam::aws:policy/AmazonWorkLinkFullAccess",
        "AmazonWorkLinkReadOnly": "arn:aws:iam::aws:policy/AmazonWorkLinkReadOnly",
        "AmazonWorkLinkServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonWorkLinkServiceRolePolicy",
        "AmazonWorkMailEventsServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AmazonWorkMailEventsServiceRolePolicy",
        "AmazonWorkMailFullAccess": "arn:aws:iam::aws:policy/AmazonWorkMailFullAccess",
        "AmazonWorkMailReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonWorkMailReadOnlyAccess",
        "AmazonWorkSpacesAdmin": "arn:aws:iam::aws:policy/AmazonWorkSpacesAdmin",
        "AmazonWorkSpacesApplicationManagerAdminAccess": "arn:aws:iam::aws:policy/AmazonWorkSpacesApplicationManagerAdminAccess",
        "AmazonWorkSpacesSelfServiceAccess": "arn:aws:iam::aws:policy/AmazonWorkSpacesSelfServiceAccess",
        "AmazonWorkSpacesServiceAccess": "arn:aws:iam::aws:policy/AmazonWorkSpacesServiceAccess",
        "AmazonZocaloFullAccess": "arn:aws:iam::aws:policy/AmazonZocaloFullAccess",
        "AmazonZocaloReadOnlyAccess": "arn:aws:iam::aws:policy/AmazonZocaloReadOnlyAccess",
        "ApplicationAutoScalingForAmazonAppStreamAccess": "arn:aws:iam::aws:policy/service-role/ApplicationAutoScalingForAmazonAppStreamAccess",
        "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/ApplicationDiscoveryServiceContinuousExportServiceRolePolicy",
        "AutoScalingConsoleFullAccess": "arn:aws:iam::aws:policy/AutoScalingConsoleFullAccess",
        "AutoScalingConsoleReadOnlyAccess": "arn:aws:iam::aws:policy/AutoScalingConsoleReadOnlyAccess",
        "AutoScalingFullAccess": "arn:aws:iam::aws:policy/AutoScalingFullAccess",
        "AutoScalingNotificationAccessRole": "arn:aws:iam::aws:policy/service-role/AutoScalingNotificationAccessRole",
        "AutoScalingReadOnlyAccess": "arn:aws:iam::aws:policy/AutoScalingReadOnlyAccess",
        "AutoScalingServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/AutoScalingServiceRolePolicy",
        "AwsGlueDataBrewFullAccessPolicy": "arn:aws:iam::aws:policy/AwsGlueDataBrewFullAccessPolicy",
        "Billing": "arn:aws:iam::aws:policy/job-function/Billing",
        "CertificateManagerServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/CertificateManagerServiceRolePolicy",
        "ClientVPNServiceConnectionsRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/ClientVPNServiceConnectionsRolePolicy",
        "ClientVPNServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/ClientVPNServiceRolePolicy",
        "CloudFormationStackSetsOrgAdminServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/CloudFormationStackSetsOrgAdminServiceRolePolicy",
        "CloudFormationStackSetsOrgMemberServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/CloudFormationStackSetsOrgMemberServiceRolePolicy",
        "CloudFrontFullAccess": "arn:aws:iam::aws:policy/CloudFrontFullAccess",
        "CloudFrontReadOnlyAccess": "arn:aws:iam::aws:policy/CloudFrontReadOnlyAccess",
        "CloudHSMServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/CloudHSMServiceRolePolicy",
        "CloudSearchFullAccess": "arn:aws:iam::aws:policy/CloudSearchFullAccess",
        "CloudSearchReadOnlyAccess": "arn:aws:iam::aws:policy/CloudSearchReadOnlyAccess",
        "CloudTrailServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/CloudTrailServiceRolePolicy",
        "CloudWatch-CrossAccountAccess": "arn:aws:iam::aws:policy/aws-service-role/CloudWatch-CrossAccountAccess",
        "CloudWatchActionsEC2Access": "arn:aws:iam::aws:policy/CloudWatchActionsEC2Access",
        "CloudWatchAgentAdminPolicy": "arn:aws:iam::aws:policy/CloudWatchAgentAdminPolicy",
        "CloudWatchAgentServerPolicy": "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        "CloudWatchApplicationInsightsFullAccess": "arn:aws:iam::aws:policy/CloudWatchApplicationInsightsFullAccess",
        "CloudWatchApplicationInsightsReadOnlyAccess": "arn:aws:iam::aws:policy/CloudWatchApplicationInsightsReadOnlyAccess",
        "CloudWatchAutomaticDashboardsAccess": "arn:aws:iam::aws:policy/CloudWatchAutomaticDashboardsAccess",
        "CloudWatchEventsBuiltInTargetExecutionAccess": "arn:aws:iam::aws:policy/service-role/CloudWatchEventsBuiltInTargetExecutionAccess",
        "CloudWatchEventsFullAccess": "arn:aws:iam::aws:policy/CloudWatchEventsFullAccess",
        "CloudWatchEventsInvocationAccess": "arn:aws:iam::aws:policy/service-role/CloudWatchEventsInvocationAccess",
        "CloudWatchEventsReadOnlyAccess": "arn:aws:iam::aws:policy/CloudWatchEventsReadOnlyAccess",
        "CloudWatchEventsServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/CloudWatchEventsServiceRolePolicy",
        "CloudWatchFullAccess": "arn:aws:iam::aws:policy/CloudWatchFullAccess",
        "CloudWatchLambdaInsightsExecutionRolePolicy": "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy",
        "CloudWatchLogsFullAccess": "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess",
        "CloudWatchLogsReadOnlyAccess": "arn:aws:iam::aws:policy/CloudWatchLogsReadOnlyAccess",
        "CloudWatchReadOnlyAccess": "arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess",
        "CloudWatchSyntheticsFullAccess": "arn:aws:iam::aws:policy/CloudWatchSyntheticsFullAccess",
        "CloudWatchSyntheticsReadOnlyAccess": "arn:aws:iam::aws:policy/CloudWatchSyntheticsReadOnlyAccess",
        "CloudwatchApplicationInsightsServiceLinkedRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/CloudwatchApplicationInsightsServiceLinkedRolePolicy",
        "ComprehendDataAccessRolePolicy": "arn:aws:iam::aws:policy/service-role/ComprehendDataAccessRolePolicy",
        "ComprehendFullAccess": "arn:aws:iam::aws:policy/ComprehendFullAccess",
        "ComprehendMedicalFullAccess": "arn:aws:iam::aws:policy/ComprehendMedicalFullAccess",
        "ComprehendReadOnly": "arn:aws:iam::aws:policy/ComprehendReadOnly",
        "ComputeOptimizerReadOnlyAccess": "arn:aws:iam::aws:policy/ComputeOptimizerReadOnlyAccess",
        "ComputeOptimizerServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/ComputeOptimizerServiceRolePolicy",
        "ConfigConformsServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/ConfigConformsServiceRolePolicy",
        "DAXServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/DAXServiceRolePolicy",
        "DataScientist": "arn:aws:iam::aws:policy/job-function/DataScientist",
        "DatabaseAdministrator": "arn:aws:iam::aws:policy/job-function/DatabaseAdministrator",
        "DynamoDBCloudWatchContributorInsightsServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/DynamoDBCloudWatchContributorInsightsServiceRolePolicy",
        "DynamoDBKinesisReplicationServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/DynamoDBKinesisReplicationServiceRolePolicy",
        "DynamoDBReplicationServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/DynamoDBReplicationServiceRolePolicy",
        "EC2FleetTimeShiftableServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/EC2FleetTimeShiftableServiceRolePolicy",
        "EC2InstanceConnect": "arn:aws:iam::aws:policy/EC2InstanceConnect",
        "EC2InstanceProfileForImageBuilder": "arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilder",
        "ECRReplicationServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/ECRReplicationServiceRolePolicy",
        "Ec2ImageBuilderCrossAccountDistributionAccess": "arn:aws:iam::aws:policy/Ec2ImageBuilderCrossAccountDistributionAccess",
        "ElastiCacheServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/ElastiCacheServiceRolePolicy",
        "ElasticLoadBalancingFullAccess": "arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess",
        "ElasticLoadBalancingReadOnly": "arn:aws:iam::aws:policy/ElasticLoadBalancingReadOnly",
        "ElementalActivationsDownloadSoftwareAccess": "arn:aws:iam::aws:policy/ElementalActivationsDownloadSoftwareAccess",
        "ElementalActivationsFullAccess": "arn:aws:iam::aws:policy/ElementalActivationsFullAccess",
        "ElementalActivationsGenerateLicenses": "arn:aws:iam::aws:policy/ElementalActivationsGenerateLicenses",
        "ElementalActivationsReadOnlyAccess": "arn:aws:iam::aws:policy/ElementalActivationsReadOnlyAccess",
        "ElementalAppliancesSoftwareFullAccess": "arn:aws:iam::aws:policy/ElementalAppliancesSoftwareFullAccess",
        "ElementalAppliancesSoftwareReadOnlyAccess": "arn:aws:iam::aws:policy/ElementalAppliancesSoftwareReadOnlyAccess",
        "ElementalSupportCenterFullAccess": "arn:aws:iam::aws:policy/ElementalSupportCenterFullAccess",
        "FMSServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/FMSServiceRolePolicy",
        "FSxDeleteServiceLinkedRoleAccess": "arn:aws:iam::aws:policy/aws-service-role/FSxDeleteServiceLinkedRoleAccess",
        "GameLiftGameServerGroupPolicy": "arn:aws:iam::aws:policy/GameLiftGameServerGroupPolicy",
        "GlobalAcceleratorFullAccess": "arn:aws:iam::aws:policy/GlobalAcceleratorFullAccess",
        "GlobalAcceleratorReadOnlyAccess": "arn:aws:iam::aws:policy/GlobalAcceleratorReadOnlyAccess",
        "GreengrassOTAUpdateArtifactAccess": "arn:aws:iam::aws:policy/service-role/GreengrassOTAUpdateArtifactAccess",
        "Health_OrganizationsServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/Health_OrganizationsServiceRolePolicy",
        "IAMAccessAdvisorReadOnly": "arn:aws:iam::aws:policy/IAMAccessAdvisorReadOnly",
        "IAMAccessAnalyzerFullAccess": "arn:aws:iam::aws:policy/IAMAccessAnalyzerFullAccess",
        "IAMAccessAnalyzerReadOnlyAccess": "arn:aws:iam::aws:policy/IAMAccessAnalyzerReadOnlyAccess",
        "IAMFullAccess": "arn:aws:iam::aws:policy/IAMFullAccess",
        "IAMReadOnlyAccess": "arn:aws:iam::aws:policy/IAMReadOnlyAccess",
        "IAMSelfManageServiceSpecificCredentials": "arn:aws:iam::aws:policy/IAMSelfManageServiceSpecificCredentials",
        "IAMUserChangePassword": "arn:aws:iam::aws:policy/IAMUserChangePassword",
        "IAMUserSSHKeys": "arn:aws:iam::aws:policy/IAMUserSSHKeys",
        "IVSRecordToS3": "arn:aws:iam::aws:policy/aws-service-role/IVSRecordToS3",
        "IsengardControllerPolicy": "arn:aws:iam::aws:policy/aws-service-role/IsengardControllerPolicy",
        "KafkaServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/KafkaServiceRolePolicy",
        "LakeFormationDataAccessServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/LakeFormationDataAccessServiceRolePolicy",
        "LexBotPolicy": "arn:aws:iam::aws:policy/aws-service-role/LexBotPolicy",
        "LexChannelPolicy": "arn:aws:iam::aws:policy/aws-service-role/LexChannelPolicy",
        "LightsailExportAccess": "arn:aws:iam::aws:policy/aws-service-role/LightsailExportAccess",
        "MediaPackageServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/MediaPackageServiceRolePolicy",
        "MigrationHubDMSAccessServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/MigrationHubDMSAccessServiceRolePolicy",
        "MigrationHubSMSAccessServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/MigrationHubSMSAccessServiceRolePolicy",
        "MigrationHubServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/MigrationHubServiceRolePolicy",
        "NeptuneConsoleFullAccess": "arn:aws:iam::aws:policy/NeptuneConsoleFullAccess",
        "NeptuneFullAccess": "arn:aws:iam::aws:policy/NeptuneFullAccess",
        "NeptuneReadOnlyAccess": "arn:aws:iam::aws:policy/NeptuneReadOnlyAccess",
        "NetworkAdministrator": "arn:aws:iam::aws:policy/job-function/NetworkAdministrator",
        "PowerUserAccess": "arn:aws:iam::aws:policy/PowerUserAccess",
        "QuickSightAccessForS3StorageManagementAnalyticsReadOnly": "arn:aws:iam::aws:policy/service-role/QuickSightAccessForS3StorageManagementAnalyticsReadOnly",
        "RDSCloudHsmAuthorizationRole": "arn:aws:iam::aws:policy/service-role/RDSCloudHsmAuthorizationRole",
        "ReadOnlyAccess": "arn:aws:iam::aws:policy/ReadOnlyAccess",
        "ResourceGroupsandTagEditorFullAccess": "arn:aws:iam::aws:policy/ResourceGroupsandTagEditorFullAccess",
        "ResourceGroupsandTagEditorReadOnlyAccess": "arn:aws:iam::aws:policy/ResourceGroupsandTagEditorReadOnlyAccess",
        "Route53ResolverServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/Route53ResolverServiceRolePolicy",
        "S3StorageLensServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/S3StorageLensServiceRolePolicy",
        "SecretsManagerReadWrite": "arn:aws:iam::aws:policy/SecretsManagerReadWrite",
        "SecurityAudit": "arn:aws:iam::aws:policy/SecurityAudit",
        "ServerMigrationConnector": "arn:aws:iam::aws:policy/ServerMigrationConnector",
        "ServerMigrationServiceConsoleFullAccess": "arn:aws:iam::aws:policy/ServerMigrationServiceConsoleFullAccess",
        "ServerMigrationServiceLaunchRole": "arn:aws:iam::aws:policy/service-role/ServerMigrationServiceLaunchRole",
        "ServerMigrationServiceRoleForInstanceValidation": "arn:aws:iam::aws:policy/service-role/ServerMigrationServiceRoleForInstanceValidation",
        "ServerMigration_ServiceRole": "arn:aws:iam::aws:policy/service-role/ServerMigration_ServiceRole",
        "ServiceQuotasFullAccess": "arn:aws:iam::aws:policy/ServiceQuotasFullAccess",
        "ServiceQuotasReadOnlyAccess": "arn:aws:iam::aws:policy/ServiceQuotasReadOnlyAccess",
        "ServiceQuotasServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/ServiceQuotasServiceRolePolicy",
        "SimpleWorkflowFullAccess": "arn:aws:iam::aws:policy/SimpleWorkflowFullAccess",
        "SupportUser": "arn:aws:iam::aws:policy/job-function/SupportUser",
        "SystemAdministrator": "arn:aws:iam::aws:policy/job-function/SystemAdministrator",
        "TranslateFullAccess": "arn:aws:iam::aws:policy/TranslateFullAccess",
        "TranslateReadOnly": "arn:aws:iam::aws:policy/TranslateReadOnly",
        "VMImportExportRoleForAWSConnector": "arn:aws:iam::aws:policy/service-role/VMImportExportRoleForAWSConnector",
        "ViewOnlyAccess": "arn:aws:iam::aws:policy/job-function/ViewOnlyAccess",
        "WAFLoggingServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/WAFLoggingServiceRolePolicy",
        "WAFRegionalLoggingServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/WAFRegionalLoggingServiceRolePolicy",
        "WAFV2LoggingServiceRolePolicy": "arn:aws:iam::aws:policy/aws-service-role/WAFV2LoggingServiceRolePolicy",
        "WellArchitectedConsoleFullAccess": "arn:aws:iam::aws:policy/WellArchitectedConsoleFullAccess",
        "WellArchitectedConsoleReadOnlyAccess": "arn:aws:iam::aws:policy/WellArchitectedConsoleReadOnlyAccess",
        "WorkLinkServiceRolePolicy": "arn:aws:iam::aws:policy/WorkLinkServiceRolePolicy"
    },
    "documents": {
        "APIGatewayServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elasticloadbalancing:AddListenerCertificates",
                            "elasticloadbalancing:RemoveListenerCertificates",
                            "elasticloadbalancing:ModifyListener",
                            "elasticloadbalancing:DescribeListeners",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords",
                            "xray:GetSamplingTargets",
                            "xray:GetSamplingRules",
                            "logs:CreateLogDelivery",
                            "logs:GetLogDelivery",
                            "logs:UpdateLogDelivery",
                            "logs:DeleteLogDelivery",
                            "logs:ListLogDeliveries",
                            "servicediscovery:DiscoverInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "firehose:DescribeDeliveryStream",
                            "firehose:PutRecord",
                            "firehose:PutRecordBatch"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:firehose:*:*:deliverystream/amazon-apigateway-*"
                    },
                    {
                        "Action": [
                            "acm:DescribeCertificate"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:acm:*:*:certificate/*"
                    },
                    {
                        "Action": "ec2:CreateNetworkInterfacePermission",
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:network-interface/*"
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "Owner",
                                    "VpcLinkId"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:network-interface/*"
                    },
                    {
                        "Action": [
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DeleteNetworkInterface",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeNetworkInterfaceAttribute",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeNetworkInterfacePermissions",
                            "ec2:UnassignPrivateIpAddresses",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "servicediscovery:GetNamespace",
                        "Effect": "Allow",
                        "Resource": "arn:aws:servicediscovery:*:*:namespace/*"
                    },
                    {
                        "Action": "servicediscovery:GetService",
                        "Effect": "Allow",
                        "Resource": "arn:aws:servicediscovery:*:*:service/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQQDZNLDBF2ULTWK6",
            "PolicyName": "APIGatewayServiceRolePolicy",
            "VersionId": "v8"
        },
        "AWSAccountActivityAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-portal:ViewBilling"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQRYCWMFX5J3E333K",
            "PolicyName": "AWSAccountActivityAccess",
            "VersionId": "v1"
        },
        "AWSAccountUsageReportAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-portal:ViewUsage"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJLIB4VSBVO47ZSBB6",
            "PolicyName": "AWSAccountUsageReportAccess",
            "VersionId": "v1"
        },
        "AWSAgentlessDiscoveryService": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "awsconnector:RegisterConnector",
                            "awsconnector:GetConnectorHealth"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:GetUser",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::connector-platform-upgrade-info/*",
                            "arn:aws:s3:::connector-platform-upgrade-info",
                            "arn:aws:s3:::connector-platform-upgrade-bundles/*",
                            "arn:aws:s3:::connector-platform-upgrade-bundles",
                            "arn:aws:s3:::connector-platform-release-notes/*",
                            "arn:aws:s3:::connector-platform-release-notes",
                            "arn:aws:s3:::prod.agentless.discovery.connector.upgrade/*",
                            "arn:aws:s3:::prod.agentless.discovery.connector.upgrade"
                        ]
                    },
                    {
                        "Action": [
                            "s3:PutObject",
                            "s3:PutObjectAcl"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::import-to-ec2-connector-debug-logs/*"
                        ]
                    },
                    {
                        "Action": [
                            "SNS:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:metrics-sns-topic-for-*"
                    },
                    {
                        "Action": [
                            "Discovery:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "Discovery"
                    },
                    {
                        "Action": [
                            "arsenal:RegisterOnPremisesAgent"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "arsenal"
                    },
                    {
                        "Action": [
                            "mgh:GetHomeRegion"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIA3DIL7BYQ35ISM4K",
            "PolicyName": "AWSAgentlessDiscoveryService",
            "VersionId": "v2"
        },
        "AWSAppMeshEnvoyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "appmesh:StreamAggregatedResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4PMG6ZGSZZ",
            "PolicyName": "AWSAppMeshEnvoyAccess",
            "VersionId": "v1"
        },
        "AWSAppMeshFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "appmesh:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "appmesh.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/appmesh.amazonaws.com/AWSServiceRoleForAppMesh"
                    },
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeStack*",
                            "cloudformation:UpdateStack"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/AWSAppMesh-GettingStarted-*"
                    },
                    {
                        "Action": [
                            "acm:ListCertificates",
                            "acm:DescribeCertificate",
                            "acm-pca:DescribeCertificateAuthority",
                            "acm-pca:ListCertificateAuthorities"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ILVZ5BWFU",
            "PolicyName": "AWSAppMeshFullAccess",
            "VersionId": "v5"
        },
        "AWSAppMeshPreviewEnvoyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "appmesh-preview:StreamAggregatedResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NKURE3R2M",
            "PolicyName": "AWSAppMeshPreviewEnvoyAccess",
            "VersionId": "v1"
        },
        "AWSAppMeshPreviewServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "servicediscovery:DiscoverInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudMapServiceDiscovery"
                    },
                    {
                        "Action": [
                            "acm:DescribeCertificate"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ACMCertificateVerification"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FAQWKJYPJ",
            "PolicyName": "AWSAppMeshPreviewServiceRolePolicy",
            "VersionId": "v3"
        },
        "AWSAppMeshReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "appmesh:Describe*",
                            "appmesh:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudformation:DescribeStack*"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/AWSAppMesh-GettingStarted-*"
                    },
                    {
                        "Action": [
                            "acm:ListCertificates",
                            "acm:DescribeCertificate",
                            "acm-pca:DescribeCertificateAuthority",
                            "acm-pca:ListCertificateAuthorities"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4HOPFCIWXP",
            "PolicyName": "AWSAppMeshReadOnly",
            "VersionId": "v4"
        },
        "AWSAppMeshServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "servicediscovery:DiscoverInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudMapServiceDiscovery"
                    },
                    {
                        "Action": [
                            "acm:DescribeCertificate"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ACMCertificateVerification"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4B5IHMMEND",
            "PolicyName": "AWSAppMeshServiceRolePolicy",
            "VersionId": "v2"
        },
        "AWSAppSyncAdministrator": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "appsync:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "appsync.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "appsync.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/appsync.amazonaws.com/AWSServiceRoleForAppSync*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJBYY36AJPXTTWIXCY",
            "PolicyName": "AWSAppSyncAdministrator",
            "VersionId": "v2"
        },
        "AWSAppSyncInvokeFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "appsync:GraphQL",
                            "appsync:GetGraphqlApi",
                            "appsync:ListGraphqlApis",
                            "appsync:ListApiKeys"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAILMPWRRZN27MPE3VM",
            "PolicyName": "AWSAppSyncInvokeFullAccess",
            "VersionId": "v1"
        },
        "AWSAppSyncPushToCloudWatchLogs": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIWN7WNO34HLMJPUQS",
            "PolicyName": "AWSAppSyncPushToCloudWatchLogs",
            "VersionId": "v1"
        },
        "AWSAppSyncSchemaAuthor": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "appsync:GraphQL",
                            "appsync:CreateResolver",
                            "appsync:CreateType",
                            "appsync:DeleteResolver",
                            "appsync:DeleteType",
                            "appsync:GetResolver",
                            "appsync:GetType",
                            "appsync:GetDataSource",
                            "appsync:GetSchemaCreationStatus",
                            "appsync:GetIntrospectionSchema",
                            "appsync:GetGraphqlApi",
                            "appsync:ListTypes",
                            "appsync:ListApiKeys",
                            "appsync:ListResolvers",
                            "appsync:ListDataSources",
                            "appsync:ListGraphqlApis",
                            "appsync:StartSchemaCreation",
                            "appsync:UpdateResolver",
                            "appsync:UpdateType"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIUCF5WVTOFQXFKY5E",
            "PolicyName": "AWSAppSyncSchemaAuthor",
            "VersionId": "v1"
        },
        "AWSAppSyncServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords",
                            "xray:GetSamplingTargets",
                            "xray:GetSamplingRules",
                            "xray:GetSamplingStatisticSummaries"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IKBIQXBOO",
            "PolicyName": "AWSAppSyncServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSApplicationAutoScalingCustomResourcePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "execute-api:Invoke",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJYTKXPX6DO32Z4XXA",
            "PolicyName": "AWSApplicationAutoScalingCustomResourcePolicy",
            "VersionId": "v1"
        },
        "AWSApplicationAutoscalingAppStreamFleetPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "appstream:UpdateFleet",
                            "appstream:DescribeFleets",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIRI724OWKP56ZG62M",
            "PolicyName": "AWSApplicationAutoscalingAppStreamFleetPolicy",
            "VersionId": "v1"
        },
        "AWSApplicationAutoscalingCassandraTablePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": "cassandra:Select",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:*:cassandra:*:*:/keyspace/system/table/*",
                            "arn:*:cassandra:*:*:/keyspace/system_schema/table/*",
                            "arn:*:cassandra:*:*:/keyspace/system_schema_mcs/table/*"
                        ]
                    },
                    {
                        "Action": [
                            "cassandra:Alter",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4BOOOZAOTV",
            "PolicyName": "AWSApplicationAutoscalingCassandraTablePolicy",
            "VersionId": "v1"
        },
        "AWSApplicationAutoscalingComprehendEndpointPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "comprehend:UpdateEndpoint",
                            "comprehend:DescribeEndpoint",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4HD4ODS6K6",
            "PolicyName": "AWSApplicationAutoscalingComprehendEndpointPolicy",
            "VersionId": "v1"
        },
        "AWSApplicationAutoscalingDynamoDBTablePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "dynamodb:DescribeTable",
                            "dynamodb:UpdateTable",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJOVQMDI3JFCBW4LFO",
            "PolicyName": "AWSApplicationAutoscalingDynamoDBTablePolicy",
            "VersionId": "v1"
        },
        "AWSApplicationAutoscalingEC2SpotFleetRequestPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeSpotFleetRequests",
                            "ec2:ModifySpotFleetRequest",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJNRH3VE3WW4Q4RDTU",
            "PolicyName": "AWSApplicationAutoscalingEC2SpotFleetRequestPolicy",
            "VersionId": "v1"
        },
        "AWSApplicationAutoscalingECSServicePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecs:DescribeServices",
                            "ecs:UpdateService",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJFXLLV7AKH5PSFOYG",
            "PolicyName": "AWSApplicationAutoscalingECSServicePolicy",
            "VersionId": "v1"
        },
        "AWSApplicationAutoscalingEMRInstanceGroupPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elasticmapreduce:ListInstanceGroups",
                            "elasticmapreduce:ModifyInstanceGroups",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIQ6M5Z7LQY2YSG2JS",
            "PolicyName": "AWSApplicationAutoscalingEMRInstanceGroupPolicy",
            "VersionId": "v1"
        },
        "AWSApplicationAutoscalingKafkaClusterPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "kafka:DescribeCluster",
                            "kafka:DescribeClusterOperation",
                            "kafka:UpdateBrokerStorage",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FTCIZBJA2",
            "PolicyName": "AWSApplicationAutoscalingKafkaClusterPolicy",
            "VersionId": "v1"
        },
        "AWSApplicationAutoscalingLambdaConcurrencyPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "lambda:PutProvisionedConcurrencyConfig",
                            "lambda:GetProvisionedConcurrencyConfig",
                            "lambda:DeleteProvisionedConcurrencyConfig",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KIR2KPJCU",
            "PolicyName": "AWSApplicationAutoscalingLambdaConcurrencyPolicy",
            "VersionId": "v1"
        },
        "AWSApplicationAutoscalingRDSClusterPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rds:AddTagsToResource",
                            "rds:CreateDBInstance",
                            "rds:DeleteDBInstance",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBInstances",
                            "rds:ModifyDBCluster",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "rds.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ7XS52I27Q2JVKALU",
            "PolicyName": "AWSApplicationAutoscalingRDSClusterPolicy",
            "VersionId": "v3"
        },
        "AWSApplicationAutoscalingSageMakerEndpointPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sagemaker:DescribeEndpoint",
                            "sagemaker:DescribeEndpointConfig",
                            "sagemaker:UpdateEndpointWeightsAndCapacities",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI5DBEBNRZQ4SXYTAW",
            "PolicyName": "AWSApplicationAutoscalingSageMakerEndpointPolicy",
            "VersionId": "v1"
        },
        "AWSApplicationDiscoveryAgentAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "arsenal:RegisterOnPremisesAgent"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "mgh:GetHomeRegion"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAICZIOVAGC6JPF3WHC",
            "PolicyName": "AWSApplicationDiscoveryAgentAccess",
            "VersionId": "v2"
        },
        "AWSApplicationDiscoveryServiceFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mgh:*",
                            "discovery:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "continuousexport.discovery.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/continuousexport.discovery.amazonaws.com/AWSServiceRoleForApplicationDiscoveryServiceContinuousExport*"
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/continuousexport.discovery.amazonaws.com/AWSServiceRoleForApplicationDiscoveryServiceContinuousExport*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "migrationhub.amazonaws.com",
                                    "dmsintegration.migrationhub.amazonaws.com",
                                    "smsintegration.migrationhub.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJBNJEA6ZXM2SBOPDU",
            "PolicyName": "AWSApplicationDiscoveryServiceFullAccess",
            "VersionId": "v4"
        },
        "AWSArtifactAccountSync": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "organizations:ListAccounts",
                            "organizations:DescribeOrganization"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJMVPXRWZJZWDTYDNC",
            "PolicyName": "AWSArtifactAccountSync",
            "VersionId": "v1"
        },
        "AWSAutoScalingPlansEC2AutoScalingPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:GetMetricData",
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribeScheduledActions",
                            "autoscaling:BatchPutScheduledUpdateGroupAction",
                            "autoscaling:BatchDeleteScheduledAction"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIXWLPZPD4RYBM3JSU",
            "PolicyName": "AWSAutoScalingPlansEC2AutoScalingPolicy",
            "VersionId": "v1"
        },
        "AWSBackupFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "backup:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "backup-storage:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "rds:DescribeDBSnapshots",
                            "rds:ListTagsForResource",
                            "rds:DescribeDBInstances",
                            "rds:describeDBEngineVersions",
                            "rds:describeOptionGroups",
                            "rds:describeOrderableDBInstanceOptions",
                            "rds:describeDBSubnetGroups",
                            "rds:describeDBClusterSnapshots",
                            "rds:describeDBClusters",
                            "rds:describeDBParameterGroups",
                            "rds:describeDBClusterParameterGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "rds:DeleteDBSnapshot",
                            "rds:DeleteDBClusterSnapshot"
                        ],
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:CalledVia": [
                                    "backup.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "dynamodb:ListBackups",
                            "dynamodb:ListTables"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "dynamodb:DeleteBackup"
                        ],
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:CalledVia": [
                                    "backup.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "elasticfilesystem:DescribeFilesystems"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:elasticfilesystem:*:*:file-system/*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeVolumes",
                            "ec2:describeAvailabilityZones",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeImages",
                            "ec2:DescribeSubnets",
                            "ec2:DescribePlacementGroups",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInstanceTypes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DeleteSnapshot",
                            "ec2:DeregisterImage"
                        ],
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:CalledVia": [
                                    "backup.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "tag:GetTagKeys",
                            "tag:GetTagValues",
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "storagegateway:DescribeCachediSCSIVolumes",
                            "storagegateway:DescribeStorediSCSIVolumes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:storagegateway:*:*:gateway/*/volume/*"
                    },
                    {
                        "Action": [
                            "storagegateway:ListGateways"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:storagegateway:*:*:*"
                    },
                    {
                        "Action": [
                            "storagegateway:DescribeGatewayInformation",
                            "storagegateway:ListVolumes",
                            "storagegateway:ListLocalDisks"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:storagegateway:*:*:gateway/*"
                    },
                    {
                        "Action": [
                            "iam:ListRoles",
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "backup.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/*AwsBackup*",
                            "arn:aws:iam::*:role/*AWSBackup*"
                        ]
                    },
                    {
                        "Action": "organizations:DescribeOrganization",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:ListKeys",
                            "kms:DescribeKey",
                            "kms:GenerateDataKey",
                            "kms:ListAliases"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:CreateGrant"
                        ],
                        "Condition": {
                            "Bool": {
                                "kms:GrantIsForAWSResource": true
                            },
                            "ForAnyValue:StringEquals": {
                                "kms:EncryptionContextKeys": "aws:backup:backup-vault"
                            },
                            "StringLike": {
                                "kms:ViaService": "backup.*.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ssm:CancelCommand",
                            "ssm:GetCommandInvocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ssm:SendCommand",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ssm:*:*:document/AWSEC2-CreateVssSnapshot",
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": "fsx:DescribeFileSystems",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "fsx:DescribeBackups",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "fsx:DeleteBackup",
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:CalledVia": [
                                    "backup.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:fsx:*:*:backup/*"
                    },
                    {
                        "Action": "ds:DescribeDirectories",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LL52EIPJX",
            "PolicyName": "AWSBackupFullAccess",
            "VersionId": "v6"
        },
        "AWSBackupOperatorAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "backup:Get*",
                            "backup:List*",
                            "backup:Describe*",
                            "backup:CreateBackupSelection",
                            "backup:DeleteBackupSelection",
                            "backup:GetRecoveryPointRestoreMetadata",
                            "backup:StartBackupJob",
                            "backup:StartRestoreJob",
                            "backup:StartCopyJob"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "rds:DescribeDBSnapshots",
                            "rds:ListTagsForResource",
                            "rds:DescribeDBInstances",
                            "rds:describeDBSnapshots",
                            "rds:describeDBEngineVersions",
                            "rds:describeOptionGroups",
                            "rds:describeOrderableDBInstanceOptions",
                            "rds:describeDBSubnetGroups",
                            "rds:DescribeDBClusterSnapshots",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBParameterGroups",
                            "rds:DescribeDBClusterParameterGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "dynamodb:ListBackups",
                            "dynamodb:ListTables"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "elasticfilesystem:DescribeFilesystems"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:elasticfilesystem:*:*:file-system/*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeVolumes",
                            "ec2:describeAvailabilityZones",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeImages",
                            "ec2:DescribeSubnets",
                            "ec2:DescribePlacementGroups",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInstanceTypes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "tag:GetTagKeys",
                            "tag:GetTagValues",
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "storagegateway:DescribeCachediSCSIVolumes",
                            "storagegateway:DescribeStorediSCSIVolumes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:storagegateway:*:*:gateway/*/volume/*"
                    },
                    {
                        "Action": [
                            "storagegateway:ListGateways"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:storagegateway:*:*:*"
                    },
                    {
                        "Action": [
                            "storagegateway:DescribeGatewayInformation",
                            "storagegateway:ListVolumes",
                            "storagegateway:ListLocalDisks"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:storagegateway:*:*:gateway/*"
                    },
                    {
                        "Action": [
                            "iam:ListRoles",
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "backup.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/*AwsBackup*",
                            "arn:aws:iam::*:role/*AWSBackup*"
                        ]
                    },
                    {
                        "Action": "organizations:DescribeOrganization",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ssm:CancelCommand",
                            "ssm:GetCommandInvocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ssm:SendCommand",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ssm:*:*:document/AWSEC2-CreateVssSnapshot",
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": "fsx:DescribeBackups",
                        "Effect": "Allow",
                        "Resource": "arn:aws:fsx:*:*:backup/*"
                    },
                    {
                        "Action": "fsx:DescribeFileSystems",
                        "Effect": "Allow",
                        "Resource": "arn:aws:fsx:*:*:file-system/*"
                    },
                    {
                        "Action": "ds:DescribeDirectories",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KHXVYMY4O",
            "PolicyName": "AWSBackupOperatorAccess",
            "VersionId": "v6"
        },
        "AWSBackupOrganizationAdminAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "organizations:DisableAWSServiceAccess",
                            "organizations:EnableAWSServiceAccess"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "organizations:ServicePrincipal": [
                                    "backup.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "organizations:AttachPolicy",
                            "organizations:ListPoliciesForTarget",
                            "organizations:ListTargetsForPolicy",
                            "organizations:DetachPolicy",
                            "organizations:DisablePolicyType",
                            "organizations:DescribePolicy",
                            "organizations:DescribeEffectivePolicy",
                            "organizations:ListPolicies",
                            "organizations:EnablePolicyType",
                            "organizations:CreatePolicy",
                            "organizations:UpdatePolicy",
                            "organizations:DeletePolicy"
                        ],
                        "Condition": {
                            "StringLikeIfExists": {
                                "organizations:PolicyType": [
                                    "BACKUP_POLICY"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "organizations:ListRoots",
                            "organizations:ListParents",
                            "organizations:ListAWSServiceAccessForOrganization",
                            "organizations:ListAccountsForParent",
                            "organizations:ListAccounts",
                            "organizations:DescribeOrganization",
                            "organizations:ListOrganizationalUnitsForParent",
                            "organizations:ListChildren",
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganizationalUnit"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4E5BC3XLFS",
            "PolicyName": "AWSBackupOrganizationAdminAccess",
            "VersionId": "v2"
        },
        "AWSBackupServiceLinkedRolePolicyForBackup": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elasticfilesystem:Backup",
                            "elasticfilesystem:DescribeTags"
                        ],
                        "Condition": {
                            "StringLike": {
                                "aws:ResourceTag/aws:elasticfilesystem:default-backup": "enabled"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:elasticfilesystem:*:*:file-system/*"
                    },
                    {
                        "Action": [
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Condition": {
                            "StringEquals": {
                                "ec2:CreateAction": "CopySnapshot"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*::snapshot/*"
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "AWSBackupManagedResource"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*::image/*",
                            "arn:aws:ec2:*::snapshot/*"
                        ]
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Condition": {
                            "Null": {
                                "ec2:ResourceTag/AWSBackupManagedResource": "false"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*::image/*",
                            "arn:aws:ec2:*::snapshot/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeImages",
                            "rds:DescribeDBSnapshots",
                            "rds:DescribeDBClusterSnapshots"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:CopySnapshot",
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*::snapshot/*"
                    },
                    {
                        "Action": "ec2:CopyImage",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DeregisterImage",
                            "ec2:DeleteSnapshot"
                        ],
                        "Condition": {
                            "Null": {
                                "ec2:ResourceTag/AWSBackupManagedResource": "false"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "rds:AddTagsToResource",
                            "rds:CopyDBSnapshot",
                            "rds:DeleteDBSnapshot"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:rds:*:*:snapshot:awsbackup:*"
                    },
                    {
                        "Action": [
                            "rds:AddTagsToResource",
                            "rds:CopyDBClusterSnapshot",
                            "rds:DeleteDBClusterSnapshot"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:rds:*:*:cluster-snapshot:awsbackup:*"
                    },
                    {
                        "Action": "kms:DescribeKey",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:ListGrants",
                            "kms:ReEncryptFrom",
                            "kms:GenerateDataKeyWithoutPlaintext"
                        ],
                        "Condition": {
                            "StringLike": {
                                "kms:ViaService": [
                                    "ec2.*.amazonaws.com",
                                    "rds.*.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "kms:CreateGrant",
                        "Condition": {
                            "Bool": {
                                "kms:GrantIsForAWSResource": "true"
                            },
                            "StringLike": {
                                "kms:ViaService": [
                                    "ec2.*.amazonaws.com",
                                    "rds.*.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ONJBD4ZY2",
            "PolicyName": "AWSBackupServiceLinkedRolePolicyForBackup",
            "VersionId": "v2"
        },
        "AWSBackupServiceLinkedRolePolicyForBackupTest": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elasticfilesystem:Backup",
                            "elasticfilesystem:DescribeTags"
                        ],
                        "Condition": {
                            "StringLike": {
                                "aws:ResourceTag/aws:elasticfilesystem:default-backup": "enabled"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:elasticfilesystem:*:*:file-system/*"
                    },
                    {
                        "Action": [
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KMHRZD5LV",
            "PolicyName": "AWSBackupServiceLinkedRolePolicyForBackupTest",
            "VersionId": "v1"
        },
        "AWSBackupServiceRolePolicyForBackup": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "dynamodb:DescribeTable",
                            "dynamodb:CreateBackup"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:dynamodb:*:*:table/*"
                    },
                    {
                        "Action": [
                            "dynamodb:DescribeBackup",
                            "dynamodb:DeleteBackup"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:dynamodb:*:*:table/*/backup/*"
                    },
                    {
                        "Action": [
                            "rds:AddTagsToResource",
                            "rds:ListTagsForResource",
                            "rds:DescribeDBSnapshots",
                            "rds:CreateDBSnapshot",
                            "rds:CopyDBSnapshot",
                            "rds:DescribeDBInstances",
                            "rds:CreateDBClusterSnapshot",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBClusterSnapshots",
                            "rds:CopyDBClusterSnapshot"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "rds:DeleteDBSnapshot",
                            "rds:ModifyDBSnapshotAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:rds:*:*:snapshot:awsbackup:*"
                        ]
                    },
                    {
                        "Action": [
                            "rds:DeleteDBClusterSnapshot",
                            "rds:ModifyDBClusterSnapshotAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:rds:*:*:cluster-snapshot:awsbackup:*"
                        ]
                    },
                    {
                        "Action": [
                            "storagegateway:CreateSnapshot",
                            "storagegateway:ListTagsForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:storagegateway:*:*:gateway/*/volume/*"
                    },
                    {
                        "Action": [
                            "ec2:CopySnapshot"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*::snapshot/*"
                    },
                    {
                        "Action": [
                            "ec2:CopyImage"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:DeleteSnapshot"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*::snapshot/*"
                    },
                    {
                        "Action": [
                            "ec2:CreateImage",
                            "ec2:DeregisterImage"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:image/*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeTags",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInstanceAttribute",
                            "ec2:DescribeInstanceCreditSpecifications",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeElasticGpus",
                            "ec2:DescribeSpotInstanceRequests"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:ModifySnapshotAttribute",
                            "ec2:ModifyImageAttribute"
                        ],
                        "Condition": {
                            "Null": {
                                "aws:ResourceTag/aws:backup:source-resource": "false"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "backup:DescribeBackupVault",
                            "backup:CopyIntoBackupVault"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:backup:*:*:backup-vault:*"
                    },
                    {
                        "Action": [
                            "backup:CopyFromBackupVault"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "elasticfilesystem:Backup",
                            "elasticfilesystem:DescribeTags"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:elasticfilesystem:*:*:file-system/*"
                    },
                    {
                        "Action": [
                            "ec2:CreateSnapshot",
                            "ec2:DeleteSnapshot",
                            "ec2:DescribeVolumes",
                            "ec2:DescribeSnapshots"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*::snapshot/*",
                            "arn:aws:ec2:*:*:volume/*"
                        ]
                    },
                    {
                        "Action": "kms:DescribeKey",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "kms:CreateGrant",
                        "Condition": {
                            "Bool": {
                                "kms:GrantIsForAWSResource": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:GenerateDataKeyWithoutPlaintext"
                        ],
                        "Condition": {
                            "StringLike": {
                                "kms:ViaService": [
                                    "ec2.*.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:kms:*:*:key/*"
                    },
                    {
                        "Action": [
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ssm:CancelCommand",
                            "ssm:GetCommandInvocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ssm:SendCommand",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ssm:*:*:document/AWSEC2-CreateVssSnapshot",
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": "fsx:DescribeBackups",
                        "Effect": "Allow",
                        "Resource": "arn:aws:fsx:*:*:backup/*"
                    },
                    {
                        "Action": "fsx:CreateBackup",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:fsx:*:*:file-system/*",
                            "arn:aws:fsx:*:*:backup/*"
                        ]
                    },
                    {
                        "Action": "fsx:DescribeFileSystems",
                        "Effect": "Allow",
                        "Resource": "arn:aws:fsx:*:*:file-system/*"
                    },
                    {
                        "Action": "fsx:ListTagsForResource",
                        "Effect": "Allow",
                        "Resource": "arn:aws:fsx:*:*:file-system/*"
                    },
                    {
                        "Action": "fsx:DeleteBackup",
                        "Effect": "Allow",
                        "Resource": "arn:aws:fsx:*:*:backup/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIOOYZSLZZXWFJJ5N2",
            "PolicyName": "AWSBackupServiceRolePolicyForBackup",
            "VersionId": "v8"
        },
        "AWSBackupServiceRolePolicyForRestores": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "dynamodb:Scan",
                            "dynamodb:Query",
                            "dynamodb:UpdateItem",
                            "dynamodb:PutItem",
                            "dynamodb:GetItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:BatchWriteItem",
                            "dynamodb:DescribeTable"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:dynamodb:*:*:table/*"
                    },
                    {
                        "Action": [
                            "dynamodb:RestoreTableFromBackup"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:dynamodb:*:*:table/*/backup/*"
                    },
                    {
                        "Action": [
                            "ec2:CreateVolume",
                            "ec2:DeleteVolume"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*::snapshot/*",
                            "arn:aws:ec2:*:*:volume/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeVolumes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "storagegateway:DeleteVolume",
                            "storagegateway:DescribeCachediSCSIVolumes",
                            "storagegateway:DescribeStorediSCSIVolumes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:storagegateway:*:*:gateway/*/volume/*"
                    },
                    {
                        "Action": [
                            "storagegateway:DescribeGatewayInformation",
                            "storagegateway:CreateStorediSCSIVolume",
                            "storagegateway:CreateCachediSCSIVolume"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:storagegateway:*:*:gateway/*"
                    },
                    {
                        "Action": [
                            "storagegateway:ListVolumes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:storagegateway:*:*:*"
                    },
                    {
                        "Action": [
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBSnapshots",
                            "rds:ListTagsForResource",
                            "rds:RestoreDBInstanceFromDBSnapshot",
                            "rds:DeleteDBInstance",
                            "rds:AddTagsToResource",
                            "rds:DescribeDBClusters",
                            "rds:RestoreDBClusterFromSnapshot",
                            "rds:DeleteDBCluster"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "elasticfilesystem:Restore",
                            "elasticfilesystem:CreateFilesystem",
                            "elasticfilesystem:DescribeFilesystems",
                            "elasticfilesystem:DeleteFilesystem"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:elasticfilesystem:*:*:file-system/*"
                    },
                    {
                        "Action": "kms:DescribeKey",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:Decrypt",
                            "kms:Encrypt",
                            "kms:GenerateDataKey",
                            "kms:ReEncryptTo",
                            "kms:ReEncryptFrom"
                        ],
                        "Condition": {
                            "StringLike": {
                                "kms:ViaService": [
                                    "dynamodb.*.amazonaws.com",
                                    "ec2.*.amazonaws.com",
                                    "elasticfilesystem.*.amazonaws.com",
                                    "rds.*.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "kms:CreateGrant",
                        "Condition": {
                            "Bool": {
                                "kms:GrantIsForAWSResource": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:RunInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:TerminateInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": [
                            "fsx:CreateFileSystemFromBackup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:fsx:*:*:file-system/*",
                            "arn:aws:fsx:*:*:backup/*"
                        ]
                    },
                    {
                        "Action": "fsx:DescribeFileSystems",
                        "Effect": "Allow",
                        "Resource": "arn:aws:fsx:*:*:file-system/*"
                    },
                    {
                        "Action": "fsx:DescribeBackups",
                        "Effect": "Allow",
                        "Resource": "arn:aws:fsx:*:*:backup/*"
                    },
                    {
                        "Action": [
                            "fsx:DeleteFileSystem",
                            "fsx:UntagResource"
                        ],
                        "Condition": {
                            "Null": {
                                "aws:ResourceTag/aws:backup:source-resource": "false"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:fsx:*:*:file-system/*"
                    },
                    {
                        "Action": "ds:DescribeDirectories",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJZCCL6F2WPVOUXZKI",
            "PolicyName": "AWSBackupServiceRolePolicyForRestores",
            "VersionId": "v7"
        },
        "AWSBatchFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "batch:*",
                            "cloudwatch:GetMetricStatistics",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeImages",
                            "ec2:DescribeLaunchTemplates",
                            "ec2:DescribeLaunchTemplateVersions",
                            "ecs:DescribeClusters",
                            "ecs:Describe*",
                            "ecs:List*",
                            "logs:Describe*",
                            "logs:Get*",
                            "logs:TestMetricFilter",
                            "logs:FilterLogEvents",
                            "iam:ListInstanceProfiles",
                            "iam:ListRoles"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/AWSBatchServiceRole",
                            "arn:aws:iam::*:role/service-role/AWSBatchServiceRole",
                            "arn:aws:iam::*:role/ecsInstanceRole",
                            "arn:aws:iam::*:instance-profile/ecsInstanceRole",
                            "arn:aws:iam::*:role/iaws-ec2-spot-fleet-role",
                            "arn:aws:iam::*:role/aws-ec2-spot-fleet-role",
                            "arn:aws:iam::*:role/AWSBatchJobRole*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ7K2KIWB3HZVK3CUO",
            "PolicyName": "AWSBatchFullAccess",
            "VersionId": "v5"
        },
        "AWSBatchServiceEventTargetRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "batch:SubmitJob"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAICVHHZ6XHNMA6VE3Q",
            "PolicyName": "AWSBatchServiceEventTargetRole",
            "VersionId": "v1"
        },
        "AWSBatchServiceRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInstanceAttribute",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeImages",
                            "ec2:DescribeImageAttribute",
                            "ec2:DescribeSpotInstanceRequests",
                            "ec2:DescribeSpotFleetInstances",
                            "ec2:DescribeSpotFleetRequests",
                            "ec2:DescribeSpotPriceHistory",
                            "ec2:DescribeVpcClassicLink",
                            "ec2:DescribeLaunchTemplateVersions",
                            "ec2:CreateLaunchTemplate",
                            "ec2:DeleteLaunchTemplate",
                            "ec2:RequestSpotFleet",
                            "ec2:CancelSpotFleetRequests",
                            "ec2:ModifySpotFleetRequest",
                            "ec2:TerminateInstances",
                            "ec2:RunInstances",
                            "autoscaling:DescribeAccountLimits",
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribeLaunchConfigurations",
                            "autoscaling:DescribeAutoScalingInstances",
                            "autoscaling:CreateLaunchConfiguration",
                            "autoscaling:CreateAutoScalingGroup",
                            "autoscaling:UpdateAutoScalingGroup",
                            "autoscaling:SetDesiredCapacity",
                            "autoscaling:DeleteLaunchConfiguration",
                            "autoscaling:DeleteAutoScalingGroup",
                            "autoscaling:CreateOrUpdateTags",
                            "autoscaling:SuspendProcesses",
                            "autoscaling:PutNotificationConfiguration",
                            "autoscaling:TerminateInstanceInAutoScalingGroup",
                            "ecs:DescribeClusters",
                            "ecs:DescribeContainerInstances",
                            "ecs:DescribeTaskDefinition",
                            "ecs:DescribeTasks",
                            "ecs:ListAccountSettings",
                            "ecs:ListClusters",
                            "ecs:ListContainerInstances",
                            "ecs:ListTaskDefinitionFamilies",
                            "ecs:ListTaskDefinitions",
                            "ecs:ListTasks",
                            "ecs:CreateCluster",
                            "ecs:DeleteCluster",
                            "ecs:RegisterTaskDefinition",
                            "ecs:DeregisterTaskDefinition",
                            "ecs:RunTask",
                            "ecs:StartTask",
                            "ecs:StopTask",
                            "ecs:UpdateContainerAgent",
                            "ecs:DeregisterContainerInstance",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogGroups",
                            "iam:GetInstanceProfile",
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ecs:TagResource",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ecs:*:*:task/*_Batch_*"
                        ]
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com",
                                    "ec2.amazonaws.com.cn",
                                    "ecs-tasks.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "spot.amazonaws.com",
                                    "spotfleet.amazonaws.com",
                                    "autoscaling.amazonaws.com",
                                    "ecs.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "ec2:CreateAction": "RunInstances"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIUETIXPCKASQJURFE",
            "PolicyName": "AWSBatchServiceRole",
            "VersionId": "v11"
        },
        "AWSBillingReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-portal:ViewBilling"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LJ3OSZ5SX",
            "PolicyName": "AWSBillingReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSBudgetsActionsRolePolicyForResourceAdministrationWithSSM": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeInstanceStatus",
                            "ec2:StartInstances",
                            "ec2:StopInstances",
                            "rds:DescribeDBInstances",
                            "rds:StartDBInstance",
                            "rds:StopDBInstance"
                        ],
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:CalledVia": [
                                    "ssm.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ssm:StartAutomationExecution"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KIUIYBT2X",
            "PolicyName": "AWSBudgetsActionsRolePolicyForResourceAdministrationWithSSM",
            "VersionId": "v1"
        },
        "AWSBudgetsActionsWithAWSResourceControlAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "budgets:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "aws-portal:ViewBilling"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "budgets.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "aws-portal:ModifyBilling",
                            "ec2:DescribeInstances",
                            "iam:ListGroups",
                            "iam:ListPolicies",
                            "iam:ListRoles",
                            "iam:ListUsers",
                            "organizations:ListAccounts",
                            "organizations:ListOrganizationalUnitsForParent",
                            "organizations:ListPolicies",
                            "organizations:ListRoots",
                            "rds:DescribeDBInstances",
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4AHTKKGHHS",
            "PolicyName": "AWSBudgetsActionsWithAWSResourceControlAccess",
            "VersionId": "v1"
        },
        "AWSBudgetsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-portal:ViewBilling",
                            "budgets:ViewBudget",
                            "budgets:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4EZCFS6BHW",
            "PolicyName": "AWSBudgetsReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSCertificateManagerFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "acm.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/acm.amazonaws.com/AWSServiceRoleForCertificateManager*"
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus",
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/acm.amazonaws.com/AWSServiceRoleForCertificateManager*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJYCHABBP6VQIVBCBQ",
            "PolicyName": "AWSCertificateManagerFullAccess",
            "VersionId": "v2"
        },
        "AWSCertificateManagerPrivateCAAuditor": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm-pca:CreateCertificateAuthorityAuditReport",
                            "acm-pca:DescribeCertificateAuthority",
                            "acm-pca:DescribeCertificateAuthorityAuditReport",
                            "acm-pca:GetCertificateAuthorityCsr",
                            "acm-pca:GetCertificateAuthorityCertificate",
                            "acm-pca:GetCertificate",
                            "acm-pca:GetPolicy",
                            "acm-pca:ListPermissions",
                            "acm-pca:ListTags"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:acm-pca:*:*:certificate-authority/*"
                    },
                    {
                        "Action": [
                            "acm-pca:ListCertificateAuthorities"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJW77VE4UEBJ4PEXEY",
            "PolicyName": "AWSCertificateManagerPrivateCAAuditor",
            "VersionId": "v4"
        },
        "AWSCertificateManagerPrivateCAFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm-pca:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIRTQUC55CREAWFLBG",
            "PolicyName": "AWSCertificateManagerPrivateCAFullAccess",
            "VersionId": "v1"
        },
        "AWSCertificateManagerPrivateCAPrivilegedUser": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm-pca:IssueCertificate"
                        ],
                        "Condition": {
                            "StringLike": {
                                "acm-pca:TemplateArn": [
                                    "arn:aws:acm-pca:::template/*CACertificate*/V*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:acm-pca:*:*:certificate-authority/*"
                    },
                    {
                        "Action": [
                            "acm-pca:IssueCertificate"
                        ],
                        "Condition": {
                            "StringNotLike": {
                                "acm-pca:TemplateArn": [
                                    "arn:aws:acm-pca:::template/*CACertificate*/V*"
                                ]
                            }
                        },
                        "Effect": "Deny",
                        "Resource": "arn:aws:acm-pca:*:*:certificate-authority/*"
                    },
                    {
                        "Action": [
                            "acm-pca:RevokeCertificate",
                            "acm-pca:GetCertificate",
                            "acm-pca:ListPermissions"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:acm-pca:*:*:certificate-authority/*"
                    },
                    {
                        "Action": [
                            "acm-pca:ListCertificateAuthorities"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4EQ6CWU5X5",
            "PolicyName": "AWSCertificateManagerPrivateCAPrivilegedUser",
            "VersionId": "v1"
        },
        "AWSCertificateManagerPrivateCAReadOnly": {
            "Document": {
                "Statement": {
                    "Action": [
                        "acm-pca:DescribeCertificateAuthority",
                        "acm-pca:DescribeCertificateAuthorityAuditReport",
                        "acm-pca:ListCertificateAuthorities",
                        "acm-pca:GetCertificateAuthorityCsr",
                        "acm-pca:GetCertificateAuthorityCertificate",
                        "acm-pca:GetCertificate",
                        "acm-pca:GetPolicy",
                        "acm-pca:ListPermissions",
                        "acm-pca:ListTags"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                },
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQAQT3WIXOXY7TD4A",
            "PolicyName": "AWSCertificateManagerPrivateCAReadOnly",
            "VersionId": "v3"
        },
        "AWSCertificateManagerPrivateCAUser": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm-pca:IssueCertificate"
                        ],
                        "Condition": {
                            "StringLike": {
                                "acm-pca:TemplateArn": [
                                    "arn:aws:acm-pca:::template/EndEntityCertificate/V*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:acm-pca:*:*:certificate-authority/*"
                    },
                    {
                        "Action": [
                            "acm-pca:IssueCertificate"
                        ],
                        "Condition": {
                            "StringNotLike": {
                                "acm-pca:TemplateArn": [
                                    "arn:aws:acm-pca:::template/EndEntityCertificate/V*"
                                ]
                            }
                        },
                        "Effect": "Deny",
                        "Resource": "arn:aws:acm-pca:*:*:certificate-authority/*"
                    },
                    {
                        "Action": [
                            "acm-pca:RevokeCertificate",
                            "acm-pca:GetCertificate",
                            "acm-pca:ListPermissions"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:acm-pca:*:*:certificate-authority/*"
                    },
                    {
                        "Action": [
                            "acm-pca:ListCertificateAuthorities"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJBXCSJJULLMRWSNII",
            "PolicyName": "AWSCertificateManagerPrivateCAUser",
            "VersionId": "v4"
        },
        "AWSCertificateManagerReadOnly": {
            "Document": {
                "Statement": {
                    "Action": [
                        "acm:DescribeCertificate",
                        "acm:ListCertificates",
                        "acm:GetCertificate",
                        "acm:ListTagsForCertificate"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                },
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI4GSWX6S4MESJ3EWC",
            "PolicyName": "AWSCertificateManagerReadOnly",
            "VersionId": "v2"
        },
        "AWSChatbotServiceLinkedRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sns:ListSubscriptionsByTopic",
                            "sns:ListTopics",
                            "sns:Unsubscribe",
                            "sns:Subscribe",
                            "sns:ListSubscriptions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:PutLogEvents",
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams",
                            "logs:CreateLogGroup",
                            "logs:DescribeLogGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/chatbot/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ID4WRYKST",
            "PolicyName": "AWSChatbotServiceLinkedRolePolicy",
            "VersionId": "v1"
        },
        "AWSCloud9Administrator": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloud9:*",
                            "iam:GetUser",
                            "iam:ListUsers",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "cloud9.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ssm:StartSession",
                        "Condition": {
                            "StringEquals": {
                                "aws:CalledViaFirst": "cloud9.amazonaws.com"
                            },
                            "StringLike": {
                                "ssm:resourceTag/aws:cloud9:environment": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": [
                            "ssm:StartSession"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ssm:*:*:document/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIQ4KWP455WDTCBGWK",
            "PolicyName": "AWSCloud9Administrator",
            "VersionId": "v2"
        },
        "AWSCloud9EnvironmentMember": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloud9:GetUserSettings",
                            "cloud9:UpdateUserSettings",
                            "iam:GetUser",
                            "iam:ListUsers"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloud9:DescribeEnvironmentMemberships"
                        ],
                        "Condition": {
                            "Null": {
                                "cloud9:EnvironmentId": "true",
                                "cloud9:UserArn": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "ssm:StartSession",
                        "Condition": {
                            "StringEquals": {
                                "aws:CalledViaFirst": "cloud9.amazonaws.com"
                            },
                            "StringLike": {
                                "ssm:resourceTag/aws:cloud9:environment": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": [
                            "ssm:StartSession"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ssm:*:*:document/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI54ULAIPVT5HFTYGK",
            "PolicyName": "AWSCloud9EnvironmentMember",
            "VersionId": "v2"
        },
        "AWSCloud9SSMInstanceProfile": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ssmmessages:CreateControlChannel",
                            "ssmmessages:CreateDataChannel",
                            "ssmmessages:OpenControlChannel",
                            "ssmmessages:OpenDataChannel",
                            "ssm:UpdateInstanceInformation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IQOSNAKW6",
            "PolicyName": "AWSCloud9SSMInstanceProfile",
            "VersionId": "v1"
        },
        "AWSCloud9ServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:RunInstances",
                            "ec2:CreateSecurityGroup",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInstanceStatus",
                            "cloudformation:CreateStack",
                            "cloudformation:DescribeStacks",
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStackResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:TerminateInstances",
                            "ec2:DeleteSecurityGroup",
                            "ec2:AuthorizeSecurityGroupIngress"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudformation:DeleteStack"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/aws-cloud9-*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Condition": {
                            "StringLike": {
                                "aws:RequestTag/Name": "aws-cloud9-*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*",
                            "arn:aws:ec2:*:*:security-group/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:StartInstances",
                            "ec2:StopInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:cloudformation:stack-name": "aws-cloud9-*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:ListInstanceProfiles",
                            "iam:GetInstanceProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:instance-profile/cloud9/*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "ec2.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AWSCloud9SSMAccessRole"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJFXGCBXQIZATFZ4YG",
            "PolicyName": "AWSCloud9ServiceRolePolicy",
            "VersionId": "v7"
        },
        "AWSCloud9User": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloud9:ValidateEnvironmentName",
                            "cloud9:UpdateUserSettings",
                            "cloud9:GetUserSettings",
                            "iam:GetUser",
                            "iam:ListUsers",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloud9:CreateEnvironmentEC2",
                            "cloud9:CreateEnvironmentSSH"
                        ],
                        "Condition": {
                            "Null": {
                                "cloud9:OwnerArn": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloud9:GetUserPublicKey"
                        ],
                        "Condition": {
                            "Null": {
                                "cloud9:UserArn": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloud9:DescribeEnvironmentMemberships"
                        ],
                        "Condition": {
                            "Null": {
                                "cloud9:EnvironmentId": "true",
                                "cloud9:UserArn": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "cloud9.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ssm:StartSession",
                        "Condition": {
                            "StringEquals": {
                                "aws:CalledViaFirst": "cloud9.amazonaws.com"
                            },
                            "StringLike": {
                                "ssm:resourceTag/aws:cloud9:environment": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": [
                            "ssm:StartSession"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ssm:*:*:document/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJPFGFWQF67QVARP6U",
            "PolicyName": "AWSCloud9User",
            "VersionId": "v4"
        },
        "AWSCloudFormationFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CRR3ZS723",
            "PolicyName": "AWSCloudFormationFullAccess",
            "VersionId": "v1"
        },
        "AWSCloudFormationReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:Describe*",
                            "cloudformation:EstimateTemplateCost",
                            "cloudformation:Get*",
                            "cloudformation:List*",
                            "cloudformation:ValidateTemplate",
                            "cloudformation:Detect*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJWVBEE4I2POWLODLW",
            "PolicyName": "AWSCloudFormationReadOnlyAccess",
            "VersionId": "v4"
        },
        "AWSCloudFrontLogger": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/cloudfront/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIOI7RPKLCNINBTRP4",
            "PolicyName": "AWSCloudFrontLogger",
            "VersionId": "v2"
        },
        "AWSCloudHSMFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "cloudhsm:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIMBQYQZM7F63DA2UU",
            "PolicyName": "AWSCloudHSMFullAccess",
            "VersionId": "v1"
        },
        "AWSCloudHSMReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudhsm:Get*",
                            "cloudhsm:List*",
                            "cloudhsm:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAISVCBSY7YDBOT67KE",
            "PolicyName": "AWSCloudHSMReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSCloudHSMRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateTags",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeNetworkInterfaceAttribute",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DetachNetworkInterface"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI7QIUU4GC66SF26WE",
            "PolicyName": "AWSCloudHSMRole",
            "VersionId": "v1"
        },
        "AWSCloudMapDiscoverInstanceAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "servicediscovery:DiscoverInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIPRD7PYYQVYPDME4K",
            "PolicyName": "AWSCloudMapDiscoverInstanceAccess",
            "VersionId": "v1"
        },
        "AWSCloudMapFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "route53:GetHostedZone",
                            "route53:ListHostedZonesByName",
                            "route53:CreateHostedZone",
                            "route53:DeleteHostedZone",
                            "route53:ChangeResourceRecordSets",
                            "route53:CreateHealthCheck",
                            "route53:GetHealthCheck",
                            "route53:DeleteHealthCheck",
                            "route53:UpdateHealthCheck",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeRegions",
                            "ec2:DescribeInstances",
                            "servicediscovery:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIZPIMAQZJS3WUXUJM",
            "PolicyName": "AWSCloudMapFullAccess",
            "VersionId": "v2"
        },
        "AWSCloudMapReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "servicediscovery:Get*",
                            "servicediscovery:List*",
                            "servicediscovery:DiscoverInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIOHISHKLCJTVQQL5E",
            "PolicyName": "AWSCloudMapReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSCloudMapRegisterInstanceAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "route53:GetHostedZone",
                            "route53:ListHostedZonesByName",
                            "route53:ChangeResourceRecordSets",
                            "route53:CreateHealthCheck",
                            "route53:GetHealthCheck",
                            "route53:DeleteHealthCheck",
                            "route53:UpdateHealthCheck",
                            "servicediscovery:Get*",
                            "servicediscovery:List*",
                            "servicediscovery:RegisterInstance",
                            "servicediscovery:DeregisterInstance",
                            "servicediscovery:DiscoverInstances",
                            "ec2:DescribeInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI4P5Z5HXVWJ75WQBC",
            "PolicyName": "AWSCloudMapRegisterInstanceAccess",
            "VersionId": "v2"
        },
        "AWSCloudTrailReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:GetBucketLocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudtrail:GetTrail",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:ListTrails",
                            "cloudtrail:LookupEvents",
                            "cloudtrail:ListTags",
                            "cloudtrail:ListPublicKeys",
                            "cloudtrail:GetEventSelectors",
                            "cloudtrail:GetInsightSelectors",
                            "s3:ListAllMyBuckets",
                            "kms:ListAliases",
                            "lambda:ListFunctions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJDU7KJADWBSEQ3E7S",
            "PolicyName": "AWSCloudTrailReadOnlyAccess",
            "VersionId": "v9"
        },
        "AWSCloudTrail_FullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sns:AddPermission",
                            "sns:CreateTopic",
                            "sns:SetTopicAttributes",
                            "sns:GetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sns:*:*:aws-cloudtrail-logs*"
                        ]
                    },
                    {
                        "Action": [
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:PutBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-cloudtrail-logs*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketLocation",
                            "s3:GetBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "cloudtrail:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:aws-cloudtrail-logs*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:ListRoles",
                            "iam:GetRolePolicy",
                            "iam:GetUser"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "cloudtrail.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:CreateKey",
                            "kms:CreateAlias",
                            "kms:ListKeys",
                            "kms:ListAliases"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "lambda:ListFunctions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CA4SIJQAM",
            "PolicyName": "AWSCloudTrail_FullAccess",
            "VersionId": "v1"
        },
        "AWSCodeArtifactAdminAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codeartifact:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "sts:GetServiceBearerToken",
                        "Condition": {
                            "StringEquals": {
                                "sts:AWSServiceName": "codeartifact.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MBONPJNI5",
            "PolicyName": "AWSCodeArtifactAdminAccess",
            "VersionId": "v1"
        },
        "AWSCodeArtifactReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codeartifact:Describe*",
                            "codeartifact:Get*",
                            "codeartifact:List*",
                            "codeartifact:ReadFromRepository"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "sts:GetServiceBearerToken",
                        "Condition": {
                            "StringEquals": {
                                "sts:AWSServiceName": "codeartifact.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4PVTKOJHFB",
            "PolicyName": "AWSCodeArtifactReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSCodeBuildAdminAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codebuild:*",
                            "codecommit:GetBranch",
                            "codecommit:GetCommit",
                            "codecommit:GetRepository",
                            "codecommit:ListBranches",
                            "codecommit:ListRepositories",
                            "cloudwatch:GetMetricStatistics",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ecr:DescribeRepositories",
                            "ecr:ListImages",
                            "elasticfilesystem:DescribeFileSystems",
                            "events:DeleteRule",
                            "events:DescribeRule",
                            "events:DisableRule",
                            "events:EnableRule",
                            "events:ListTargetsByRule",
                            "events:ListRuleNamesByTarget",
                            "events:PutRule",
                            "events:PutTargets",
                            "events:RemoveTargets",
                            "logs:GetLogEvents",
                            "s3:GetBucketLocation",
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:DeleteLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/codebuild/*:log-stream:*"
                    },
                    {
                        "Action": [
                            "ssm:PutParameter"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ssm:*:*:parameter/CodeBuild/*"
                    },
                    {
                        "Action": [
                            "ssm:StartSession"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ecs:*:*:task/*/*"
                    },
                    {
                        "Action": [
                            "codestar-connections:CreateConnection",
                            "codestar-connections:DeleteConnection",
                            "codestar-connections:UpdateConnectionInstallation",
                            "codestar-connections:TagResource",
                            "codestar-connections:UntagResource",
                            "codestar-connections:ListConnections",
                            "codestar-connections:ListInstallationTargets",
                            "codestar-connections:ListTagsForResource",
                            "codestar-connections:GetConnection",
                            "codestar-connections:GetIndividualAccessToken",
                            "codestar-connections:GetInstallationUrl",
                            "codestar-connections:PassConnection",
                            "codestar-connections:StartOAuthHandshake",
                            "codestar-connections:UseConnection"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:codestar-connections:*:*:connection/*",
                        "Sid": "CodeStarConnectionsReadWriteAccess"
                    },
                    {
                        "Action": [
                            "codestar-notifications:CreateNotificationRule",
                            "codestar-notifications:DescribeNotificationRule",
                            "codestar-notifications:UpdateNotificationRule",
                            "codestar-notifications:DeleteNotificationRule",
                            "codestar-notifications:Subscribe",
                            "codestar-notifications:Unsubscribe"
                        ],
                        "Condition": {
                            "StringLike": {
                                "codestar-notifications:NotificationsForResource": "arn:aws:codebuild:*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsReadWriteAccess"
                    },
                    {
                        "Action": [
                            "codestar-notifications:ListNotificationRules",
                            "codestar-notifications:ListEventTypes",
                            "codestar-notifications:ListTargets",
                            "codestar-notifications:ListTagsforResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsListAccess"
                    },
                    {
                        "Action": [
                            "sns:CreateTopic",
                            "sns:SetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:codestar-notifications*",
                        "Sid": "CodeStarNotificationsSNSTopicCreateAccess"
                    },
                    {
                        "Action": [
                            "sns:ListTopics",
                            "sns:GetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SNSTopicListAccess"
                    },
                    {
                        "Action": [
                            "chatbot:DescribeSlackChannelConfigurations"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsChatbotAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQJGIOIE3CD2TQXDS",
            "PolicyName": "AWSCodeBuildAdminAccess",
            "VersionId": "v12"
        },
        "AWSCodeBuildDeveloperAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codebuild:StartBuild",
                            "codebuild:StopBuild",
                            "codebuild:StartBuildBatch",
                            "codebuild:StopBuildBatch",
                            "codebuild:RetryBuild",
                            "codebuild:RetryBuildBatch",
                            "codebuild:BatchGet*",
                            "codebuild:GetResourcePolicy",
                            "codebuild:DescribeTestCases",
                            "codebuild:DescribeCodeCoverages",
                            "codebuild:List*",
                            "codecommit:GetBranch",
                            "codecommit:GetCommit",
                            "codecommit:GetRepository",
                            "codecommit:ListBranches",
                            "cloudwatch:GetMetricStatistics",
                            "events:DescribeRule",
                            "events:ListTargetsByRule",
                            "events:ListRuleNamesByTarget",
                            "logs:GetLogEvents",
                            "s3:GetBucketLocation",
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ssm:PutParameter"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ssm:*:*:parameter/CodeBuild/*"
                    },
                    {
                        "Action": [
                            "ssm:StartSession"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ecs:*:*:task/*/*"
                    },
                    {
                        "Action": [
                            "codestar-connections:ListConnections",
                            "codestar-connections:GetConnection"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:codestar-connections:*:*:connection/*",
                        "Sid": "CodeStarConnectionsUserAccess"
                    },
                    {
                        "Action": [
                            "codestar-notifications:CreateNotificationRule",
                            "codestar-notifications:DescribeNotificationRule",
                            "codestar-notifications:UpdateNotificationRule",
                            "codestar-notifications:Subscribe",
                            "codestar-notifications:Unsubscribe"
                        ],
                        "Condition": {
                            "StringLike": {
                                "codestar-notifications:NotificationsForResource": "arn:aws:codebuild:*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsReadWriteAccess"
                    },
                    {
                        "Action": [
                            "codestar-notifications:ListNotificationRules",
                            "codestar-notifications:ListEventTypes",
                            "codestar-notifications:ListTargets",
                            "codestar-notifications:ListTagsforResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsListAccess"
                    },
                    {
                        "Action": [
                            "sns:ListTopics",
                            "sns:GetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SNSTopicListAccess"
                    },
                    {
                        "Action": [
                            "chatbot:DescribeSlackChannelConfigurations"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsChatbotAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIMKTMR34XSBQW45HS",
            "PolicyName": "AWSCodeBuildDeveloperAccess",
            "VersionId": "v13"
        },
        "AWSCodeBuildReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codebuild:BatchGet*",
                            "codebuild:GetResourcePolicy",
                            "codebuild:List*",
                            "codebuild:DescribeTestCases",
                            "codebuild:DescribeCodeCoverages",
                            "codecommit:GetBranch",
                            "codecommit:GetCommit",
                            "codecommit:GetRepository",
                            "cloudwatch:GetMetricStatistics",
                            "events:DescribeRule",
                            "events:ListTargetsByRule",
                            "events:ListRuleNamesByTarget",
                            "logs:GetLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "codestar-connections:ListConnections",
                            "codestar-connections:GetConnection"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:codestar-connections:*:*:connection/*",
                        "Sid": "CodeStarConnectionsUserAccess"
                    },
                    {
                        "Action": [
                            "codestar-notifications:DescribeNotificationRule"
                        ],
                        "Condition": {
                            "StringLike": {
                                "codestar-notifications:NotificationsForResource": "arn:aws:codebuild:*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsPowerUserAccess"
                    },
                    {
                        "Action": [
                            "codestar-notifications:ListNotificationRules",
                            "codestar-notifications:ListEventTypes",
                            "codestar-notifications:ListTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsListAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJIZZWN6557F5HVP2K",
            "PolicyName": "AWSCodeBuildReadOnlyAccess",
            "VersionId": "v11"
        },
        "AWSCodeCommitFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codecommit:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "events:DeleteRule",
                            "events:DescribeRule",
                            "events:DisableRule",
                            "events:EnableRule",
                            "events:PutRule",
                            "events:PutTargets",
                            "events:RemoveTargets",
                            "events:ListTargetsByRule"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:events:*:*:rule/codecommit*",
                        "Sid": "CloudWatchEventsCodeCommitRulesAccess"
                    },
                    {
                        "Action": [
                            "sns:CreateTopic",
                            "sns:DeleteTopic",
                            "sns:Subscribe",
                            "sns:Unsubscribe",
                            "sns:SetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:codecommit*",
                        "Sid": "SNSTopicAndSubscriptionAccess"
                    },
                    {
                        "Action": [
                            "sns:ListTopics",
                            "sns:ListSubscriptionsByTopic",
                            "sns:GetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SNSTopicAndSubscriptionReadAccess"
                    },
                    {
                        "Action": [
                            "lambda:ListFunctions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "LambdaReadOnlyListAccess"
                    },
                    {
                        "Action": [
                            "iam:ListUsers"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "IAMReadOnlyListAccess"
                    },
                    {
                        "Action": [
                            "iam:ListAccessKeys",
                            "iam:ListSSHPublicKeys",
                            "iam:ListServiceSpecificCredentials"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:user/${aws:username}",
                        "Sid": "IAMReadOnlyConsoleAccess"
                    },
                    {
                        "Action": [
                            "iam:DeleteSSHPublicKey",
                            "iam:GetSSHPublicKey",
                            "iam:ListSSHPublicKeys",
                            "iam:UpdateSSHPublicKey",
                            "iam:UploadSSHPublicKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:user/${aws:username}",
                        "Sid": "IAMUserSSHKeys"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceSpecificCredential",
                            "iam:UpdateServiceSpecificCredential",
                            "iam:DeleteServiceSpecificCredential",
                            "iam:ResetServiceSpecificCredential"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:user/${aws:username}",
                        "Sid": "IAMSelfManageServiceSpecificCredentials"
                    },
                    {
                        "Action": [
                            "codestar-notifications:CreateNotificationRule",
                            "codestar-notifications:DescribeNotificationRule",
                            "codestar-notifications:UpdateNotificationRule",
                            "codestar-notifications:DeleteNotificationRule",
                            "codestar-notifications:Subscribe",
                            "codestar-notifications:Unsubscribe"
                        ],
                        "Condition": {
                            "StringLike": {
                                "codestar-notifications:NotificationsForResource": "arn:aws:codecommit:*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsReadWriteAccess"
                    },
                    {
                        "Action": [
                            "codestar-notifications:ListNotificationRules",
                            "codestar-notifications:ListTargets",
                            "codestar-notifications:ListTagsforResource",
                            "codestar-notifications:ListEventTypes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsListAccess"
                    },
                    {
                        "Action": [
                            "sns:CreateTopic",
                            "sns:SetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:codestar-notifications*",
                        "Sid": "CodeStarNotificationsSNSTopicCreateAccess"
                    },
                    {
                        "Action": [
                            "codeguru-reviewer:AssociateRepository",
                            "codeguru-reviewer:DescribeRepositoryAssociation",
                            "codeguru-reviewer:ListRepositoryAssociations",
                            "codeguru-reviewer:DisassociateRepository",
                            "codeguru-reviewer:DescribeCodeReview",
                            "codeguru-reviewer:ListCodeReviews"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AmazonCodeGuruReviewerFullAccess"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "codeguru-reviewer.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer",
                        "Sid": "AmazonCodeGuruReviewerSLRCreation"
                    },
                    {
                        "Action": [
                            "events:PutRule",
                            "events:PutTargets",
                            "events:DeleteRule",
                            "events:RemoveTargets"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "events:ManagedBy": "codeguru-reviewer.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudWatchEventsManagedRules"
                    },
                    {
                        "Action": [
                            "chatbot:DescribeSlackChannelConfigurations"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsChatbotAccess"
                    },
                    {
                        "Action": [
                            "codestar-connections:ListConnections",
                            "codestar-connections:GetConnection"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:codestar-connections:*:*:connection/*",
                        "Sid": "CodeStarConnectionsReadOnlyAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI4VCZ3XPIZLQ5NZV2",
            "PolicyName": "AWSCodeCommitFullAccess",
            "VersionId": "v9"
        },
        "AWSCodeCommitPowerUser": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codecommit:AssociateApprovalRuleTemplateWithRepository",
                            "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
                            "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
                            "codecommit:BatchGet*",
                            "codecommit:BatchDescribe*",
                            "codecommit:Create*",
                            "codecommit:DeleteBranch",
                            "codecommit:DeleteFile",
                            "codecommit:Describe*",
                            "codecommit:DisassociateApprovalRuleTemplateFromRepository",
                            "codecommit:EvaluatePullRequestApprovalRules",
                            "codecommit:Get*",
                            "codecommit:List*",
                            "codecommit:Merge*",
                            "codecommit:OverridePullRequestApprovalRules",
                            "codecommit:Put*",
                            "codecommit:Post*",
                            "codecommit:TagResource",
                            "codecommit:Test*",
                            "codecommit:UntagResource",
                            "codecommit:Update*",
                            "codecommit:GitPull",
                            "codecommit:GitPush"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "events:DeleteRule",
                            "events:DescribeRule",
                            "events:DisableRule",
                            "events:EnableRule",
                            "events:PutRule",
                            "events:PutTargets",
                            "events:RemoveTargets",
                            "events:ListTargetsByRule"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:events:*:*:rule/codecommit*",
                        "Sid": "CloudWatchEventsCodeCommitRulesAccess"
                    },
                    {
                        "Action": [
                            "sns:Subscribe",
                            "sns:Unsubscribe"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:codecommit*",
                        "Sid": "SNSTopicAndSubscriptionAccess"
                    },
                    {
                        "Action": [
                            "sns:ListTopics",
                            "sns:ListSubscriptionsByTopic",
                            "sns:GetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SNSTopicAndSubscriptionReadAccess"
                    },
                    {
                        "Action": [
                            "lambda:ListFunctions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "LambdaReadOnlyListAccess"
                    },
                    {
                        "Action": [
                            "iam:ListUsers"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "IAMReadOnlyListAccess"
                    },
                    {
                        "Action": [
                            "iam:ListAccessKeys",
                            "iam:ListSSHPublicKeys",
                            "iam:ListServiceSpecificCredentials"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:user/${aws:username}",
                        "Sid": "IAMReadOnlyConsoleAccess"
                    },
                    {
                        "Action": [
                            "iam:DeleteSSHPublicKey",
                            "iam:GetSSHPublicKey",
                            "iam:ListSSHPublicKeys",
                            "iam:UpdateSSHPublicKey",
                            "iam:UploadSSHPublicKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:user/${aws:username}",
                        "Sid": "IAMUserSSHKeys"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceSpecificCredential",
                            "iam:UpdateServiceSpecificCredential",
                            "iam:DeleteServiceSpecificCredential",
                            "iam:ResetServiceSpecificCredential"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:user/${aws:username}",
                        "Sid": "IAMSelfManageServiceSpecificCredentials"
                    },
                    {
                        "Action": [
                            "codestar-notifications:CreateNotificationRule",
                            "codestar-notifications:DescribeNotificationRule",
                            "codestar-notifications:UpdateNotificationRule",
                            "codestar-notifications:Subscribe",
                            "codestar-notifications:Unsubscribe"
                        ],
                        "Condition": {
                            "StringLike": {
                                "codestar-notifications:NotificationsForResource": "arn:aws:codecommit:*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsReadWriteAccess"
                    },
                    {
                        "Action": [
                            "codestar-notifications:ListNotificationRules",
                            "codestar-notifications:ListTargets",
                            "codestar-notifications:ListTagsforResource",
                            "codestar-notifications:ListEventTypes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsListAccess"
                    },
                    {
                        "Action": [
                            "codeguru-reviewer:AssociateRepository",
                            "codeguru-reviewer:DescribeRepositoryAssociation",
                            "codeguru-reviewer:ListRepositoryAssociations",
                            "codeguru-reviewer:DisassociateRepository",
                            "codeguru-reviewer:DescribeCodeReview",
                            "codeguru-reviewer:ListCodeReviews"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AmazonCodeGuruReviewerFullAccess"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "codeguru-reviewer.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer",
                        "Sid": "AmazonCodeGuruReviewerSLRCreation"
                    },
                    {
                        "Action": [
                            "events:PutRule",
                            "events:PutTargets",
                            "events:DeleteRule",
                            "events:RemoveTargets"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "events:ManagedBy": "codeguru-reviewer.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudWatchEventsManagedRules"
                    },
                    {
                        "Action": [
                            "chatbot:DescribeSlackChannelConfigurations"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsChatbotAccess"
                    },
                    {
                        "Action": [
                            "codestar-connections:ListConnections",
                            "codestar-connections:GetConnection"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:codestar-connections:*:*:connection/*",
                        "Sid": "CodeStarConnectionsReadOnlyAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI4UIINUVGB5SEC57G",
            "PolicyName": "AWSCodeCommitPowerUser",
            "VersionId": "v14"
        },
        "AWSCodeCommitReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codecommit:BatchGet*",
                            "codecommit:BatchDescribe*",
                            "codecommit:Describe*",
                            "codecommit:EvaluatePullRequestApprovalRules",
                            "codecommit:Get*",
                            "codecommit:List*",
                            "codecommit:GitPull"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "events:DescribeRule",
                            "events:ListTargetsByRule"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:events:*:*:rule/codecommit*",
                        "Sid": "CloudWatchEventsCodeCommitRulesReadOnlyAccess"
                    },
                    {
                        "Action": [
                            "sns:ListTopics",
                            "sns:ListSubscriptionsByTopic",
                            "sns:GetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SNSSubscriptionAccess"
                    },
                    {
                        "Action": [
                            "lambda:ListFunctions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "LambdaReadOnlyListAccess"
                    },
                    {
                        "Action": [
                            "iam:ListUsers"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "IAMReadOnlyListAccess"
                    },
                    {
                        "Action": [
                            "iam:ListAccessKeys",
                            "iam:ListSSHPublicKeys",
                            "iam:ListServiceSpecificCredentials",
                            "iam:ListAccessKeys",
                            "iam:GetSSHPublicKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:user/${aws:username}",
                        "Sid": "IAMReadOnlyConsoleAccess"
                    },
                    {
                        "Action": [
                            "codestar-connections:ListConnections",
                            "codestar-connections:GetConnection"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:codestar-connections:*:*:connection/*",
                        "Sid": "CodeStarConnectionsReadOnlyAccess"
                    },
                    {
                        "Action": [
                            "codestar-notifications:DescribeNotificationRule"
                        ],
                        "Condition": {
                            "StringLike": {
                                "codestar-notifications:NotificationsForResource": "arn:aws:codecommit:*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsReadOnlyAccess"
                    },
                    {
                        "Action": [
                            "codestar-notifications:ListNotificationRules",
                            "codestar-notifications:ListEventTypes",
                            "codestar-notifications:ListTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsListAccess"
                    },
                    {
                        "Action": [
                            "codeguru-reviewer:DescribeRepositoryAssociation",
                            "codeguru-reviewer:ListRepositoryAssociations",
                            "codeguru-reviewer:DescribeCodeReview",
                            "codeguru-reviewer:ListCodeReviews"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AmazonCodeGuruReviewerReadOnlyAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJACNSXR7Z2VLJW3D6",
            "PolicyName": "AWSCodeCommitReadOnly",
            "VersionId": "v10"
        },
        "AWSCodeDeployDeployerAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codedeploy:Batch*",
                            "codedeploy:CreateDeployment",
                            "codedeploy:Get*",
                            "codedeploy:List*",
                            "codedeploy:RegisterApplicationRevision"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "codestar-notifications:CreateNotificationRule",
                            "codestar-notifications:DescribeNotificationRule",
                            "codestar-notifications:UpdateNotificationRule",
                            "codestar-notifications:Subscribe",
                            "codestar-notifications:Unsubscribe"
                        ],
                        "Condition": {
                            "StringLike": {
                                "codestar-notifications:NotificationsForResource": "arn:aws:codedeploy:*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsReadWriteAccess"
                    },
                    {
                        "Action": [
                            "codestar-notifications:ListNotificationRules",
                            "codestar-notifications:ListTargets",
                            "codestar-notifications:ListTagsforResource",
                            "codestar-notifications:ListEventTypes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsListAccess"
                    },
                    {
                        "Action": [
                            "chatbot:DescribeSlackChannelConfigurations"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsChatbotAccess"
                    },
                    {
                        "Action": [
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SNSTopicListAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJUWEPOMGLMVXJAPUI",
            "PolicyName": "AWSCodeDeployDeployerAccess",
            "VersionId": "v3"
        },
        "AWSCodeDeployFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "codedeploy:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "codestar-notifications:CreateNotificationRule",
                            "codestar-notifications:DescribeNotificationRule",
                            "codestar-notifications:UpdateNotificationRule",
                            "codestar-notifications:DeleteNotificationRule",
                            "codestar-notifications:Subscribe",
                            "codestar-notifications:Unsubscribe"
                        ],
                        "Condition": {
                            "StringLike": {
                                "codestar-notifications:NotificationsForResource": "arn:aws:codedeploy:*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsReadWriteAccess"
                    },
                    {
                        "Action": [
                            "codestar-notifications:ListNotificationRules",
                            "codestar-notifications:ListTargets",
                            "codestar-notifications:ListTagsforResource",
                            "codestar-notifications:ListEventTypes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsListAccess"
                    },
                    {
                        "Action": [
                            "sns:CreateTopic",
                            "sns:SetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:codestar-notifications*",
                        "Sid": "CodeStarNotificationsSNSTopicCreateAccess"
                    },
                    {
                        "Action": [
                            "chatbot:DescribeSlackChannelConfigurations"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsChatbotAccess"
                    },
                    {
                        "Action": [
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SNSTopicListAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIONKN3TJZUKXCHXWC",
            "PolicyName": "AWSCodeDeployFullAccess",
            "VersionId": "v3"
        },
        "AWSCodeDeployReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codedeploy:Batch*",
                            "codedeploy:Get*",
                            "codedeploy:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "codestar-notifications:DescribeNotificationRule"
                        ],
                        "Condition": {
                            "StringLike": {
                                "codestar-notifications:NotificationsForResource": "arn:aws:codedeploy:*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsPowerUserAccess"
                    },
                    {
                        "Action": [
                            "codestar-notifications:ListNotificationRules",
                            "codestar-notifications:ListEventTypes",
                            "codestar-notifications:ListTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsListAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAILZHHKCKB4NE7XOIQ",
            "PolicyName": "AWSCodeDeployReadOnlyAccess",
            "VersionId": "v3"
        },
        "AWSCodeDeployRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "autoscaling:CompleteLifecycleAction",
                            "autoscaling:DeleteLifecycleHook",
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribeLifecycleHooks",
                            "autoscaling:PutLifecycleHook",
                            "autoscaling:RecordLifecycleActionHeartbeat",
                            "autoscaling:CreateAutoScalingGroup",
                            "autoscaling:UpdateAutoScalingGroup",
                            "autoscaling:EnableMetricsCollection",
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribePolicies",
                            "autoscaling:DescribeScheduledActions",
                            "autoscaling:DescribeNotificationConfigurations",
                            "autoscaling:DescribeLifecycleHooks",
                            "autoscaling:SuspendProcesses",
                            "autoscaling:ResumeProcesses",
                            "autoscaling:AttachLoadBalancers",
                            "autoscaling:AttachLoadBalancerTargetGroups",
                            "autoscaling:PutScalingPolicy",
                            "autoscaling:PutScheduledUpdateGroupAction",
                            "autoscaling:PutNotificationConfiguration",
                            "autoscaling:PutLifecycleHook",
                            "autoscaling:DescribeScalingActivities",
                            "autoscaling:DeleteAutoScalingGroup",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInstanceStatus",
                            "ec2:TerminateInstances",
                            "tag:GetResources",
                            "sns:Publish",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:PutMetricAlarm",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeInstanceHealth",
                            "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                            "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                            "elasticloadbalancing:DescribeTargetGroups",
                            "elasticloadbalancing:DescribeTargetHealth",
                            "elasticloadbalancing:RegisterTargets",
                            "elasticloadbalancing:DeregisterTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ2NKMKD73QS5NBFLA",
            "PolicyName": "AWSCodeDeployRole",
            "VersionId": "v8"
        },
        "AWSCodeDeployRoleForCloudFormation": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:lambda:*:*:function:CodeDeployHook_*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CO24UTMFH",
            "PolicyName": "AWSCodeDeployRoleForCloudFormation",
            "VersionId": "v1"
        },
        "AWSCodeDeployRoleForECS": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecs:DescribeServices",
                            "ecs:CreateTaskSet",
                            "ecs:UpdateServicePrimaryTaskSet",
                            "ecs:DeleteTaskSet",
                            "elasticloadbalancing:DescribeTargetGroups",
                            "elasticloadbalancing:DescribeListeners",
                            "elasticloadbalancing:ModifyListener",
                            "elasticloadbalancing:DescribeRules",
                            "elasticloadbalancing:ModifyRule",
                            "lambda:InvokeFunction",
                            "cloudwatch:DescribeAlarms",
                            "sns:Publish",
                            "s3:GetObject",
                            "s3:GetObjectVersion"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "ecs-tasks.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIIL3KXEKRGEN2HFIO",
            "PolicyName": "AWSCodeDeployRoleForECS",
            "VersionId": "v3"
        },
        "AWSCodeDeployRoleForECSLimited": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecs:DescribeServices",
                            "ecs:CreateTaskSet",
                            "ecs:UpdateServicePrimaryTaskSet",
                            "ecs:DeleteTaskSet",
                            "cloudwatch:DescribeAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:CodeDeployTopic_*"
                    },
                    {
                        "Action": [
                            "elasticloadbalancing:DescribeTargetGroups",
                            "elasticloadbalancing:DescribeListeners",
                            "elasticloadbalancing:ModifyListener",
                            "elasticloadbalancing:DescribeRules",
                            "elasticloadbalancing:ModifyRule"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:lambda:*:*:function:CodeDeployHook_*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:GetObjectVersion"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "s3:ExistingObjectTag/UseWithCodeDeploy": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "ecs-tasks.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/ecsTaskExecutionRole",
                            "arn:aws:iam::*:role/ECSTaskExecution*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ6Z7L2IOXEFFOGD2M",
            "PolicyName": "AWSCodeDeployRoleForECSLimited",
            "VersionId": "v3"
        },
        "AWSCodeDeployRoleForLambda": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:DescribeAlarms",
                            "lambda:UpdateAlias",
                            "lambda:GetAlias",
                            "lambda:GetProvisionedConcurrencyConfig",
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:GetObjectVersion"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*/CodeDeploy/*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:GetObjectVersion"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "s3:ExistingObjectTag/UseWithCodeDeploy": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:lambda:*:*:function:CodeDeployHook_*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJA3RQZIKNOSJ4ZQSA",
            "PolicyName": "AWSCodeDeployRoleForLambda",
            "VersionId": "v3"
        },
        "AWSCodeDeployRoleForLambdaLimited": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:DescribeAlarms",
                            "lambda:UpdateAlias",
                            "lambda:GetAlias",
                            "lambda:GetProvisionedConcurrencyConfig"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:GetObjectVersion"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*/CodeDeploy/*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:GetObjectVersion"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "s3:ExistingObjectTag/UseWithCodeDeploy": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:lambda:*:*:function:CodeDeployHook_*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4C55RUFGEB",
            "PolicyName": "AWSCodeDeployRoleForLambdaLimited",
            "VersionId": "v1"
        },
        "AWSCodePipelineApproverAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codepipeline:GetPipeline",
                            "codepipeline:GetPipelineState",
                            "codepipeline:GetPipelineExecution",
                            "codepipeline:ListPipelineExecutions",
                            "codepipeline:ListPipelines",
                            "codepipeline:PutApprovalResult"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAICXNWK42SQ6LMDXM2",
            "PolicyName": "AWSCodePipelineApproverAccess",
            "VersionId": "v3"
        },
        "AWSCodePipelineCustomActionAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codepipeline:AcknowledgeJob",
                            "codepipeline:GetJobDetails",
                            "codepipeline:PollForJobs",
                            "codepipeline:PutJobFailureResult",
                            "codepipeline:PutJobSuccessResult"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJFW5Z32BTVF76VCYC",
            "PolicyName": "AWSCodePipelineCustomActionAccess",
            "VersionId": "v1"
        },
        "AWSCodePipelineFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codepipeline:*",
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListChangeSets",
                            "cloudtrail:CreateTrail",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetEventSelectors",
                            "cloudtrail:PutEventSelectors",
                            "cloudtrail:StartLogging",
                            "codebuild:BatchGetProjects",
                            "codebuild:CreateProject",
                            "codebuild:ListCuratedEnvironmentImages",
                            "codebuild:ListProjects",
                            "codecommit:GetBranch",
                            "codecommit:GetRepositoryTriggers",
                            "codecommit:ListBranches",
                            "codecommit:ListRepositories",
                            "codecommit:PutRepositoryTriggers",
                            "codecommit:GetReferences",
                            "codedeploy:GetApplication",
                            "codedeploy:BatchGetApplications",
                            "codedeploy:GetDeploymentGroup",
                            "codedeploy:BatchGetDeploymentGroups",
                            "codedeploy:ListApplications",
                            "codedeploy:ListDeploymentGroups",
                            "devicefarm:GetDevicePool",
                            "devicefarm:GetProject",
                            "devicefarm:ListDevicePools",
                            "devicefarm:ListProjects",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ecr:DescribeRepositories",
                            "ecr:ListImages",
                            "ecs:ListClusters",
                            "ecs:ListServices",
                            "elasticbeanstalk:DescribeApplications",
                            "elasticbeanstalk:DescribeEnvironments",
                            "iam:ListRoles",
                            "iam:GetRole",
                            "lambda:GetFunctionConfiguration",
                            "lambda:ListFunctions",
                            "events:ListRules",
                            "events:ListTargetsByRule",
                            "events:DescribeRule",
                            "opsworks:DescribeApps",
                            "opsworks:DescribeLayers",
                            "opsworks:DescribeStacks",
                            "s3:GetBucketPolicy",
                            "s3:GetBucketVersioning",
                            "s3:GetObjectVersion",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "sns:ListTopics",
                            "codestar-notifications:ListNotificationRules",
                            "codestar-notifications:ListTargets",
                            "codestar-notifications:ListTagsforResource",
                            "codestar-notifications:ListEventTypes",
                            "states:ListStateMachines"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:CreateBucket",
                            "s3:PutBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3::*:codepipeline-*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "events.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/cwe-role-*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "codepipeline.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "events:PutRule",
                            "events:PutTargets",
                            "events:DeleteRule",
                            "events:DisableRule",
                            "events:RemoveTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:events:*:*:rule/codepipeline-*"
                        ]
                    },
                    {
                        "Action": [
                            "codestar-notifications:CreateNotificationRule",
                            "codestar-notifications:DescribeNotificationRule",
                            "codestar-notifications:UpdateNotificationRule",
                            "codestar-notifications:DeleteNotificationRule",
                            "codestar-notifications:Subscribe",
                            "codestar-notifications:Unsubscribe"
                        ],
                        "Condition": {
                            "StringLike": {
                                "codestar-notifications:NotificationsForResource": "arn:aws:codepipeline:*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsReadWriteAccess"
                    },
                    {
                        "Action": [
                            "sns:CreateTopic",
                            "sns:SetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:codestar-notifications*",
                        "Sid": "CodeStarNotificationsSNSTopicCreateAccess"
                    },
                    {
                        "Action": [
                            "chatbot:DescribeSlackChannelConfigurations"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsChatbotAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJP5LH77KSAT2KHQGG",
            "PolicyName": "AWSCodePipelineFullAccess",
            "VersionId": "v10"
        },
        "AWSCodePipelineReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codepipeline:GetPipeline",
                            "codepipeline:GetPipelineState",
                            "codepipeline:GetPipelineExecution",
                            "codepipeline:ListPipelineExecutions",
                            "codepipeline:ListActionExecutions",
                            "codepipeline:ListActionTypes",
                            "codepipeline:ListPipelines",
                            "codepipeline:ListTagsForResource",
                            "iam:ListRoles",
                            "s3:GetBucketPolicy",
                            "s3:GetObject",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "codecommit:ListBranches",
                            "codecommit:ListRepositories",
                            "codedeploy:GetApplication",
                            "codedeploy:GetDeploymentGroup",
                            "codedeploy:ListApplications",
                            "codedeploy:ListDeploymentGroups",
                            "elasticbeanstalk:DescribeApplications",
                            "elasticbeanstalk:DescribeEnvironments",
                            "lambda:GetFunctionConfiguration",
                            "lambda:ListFunctions",
                            "opsworks:DescribeApps",
                            "opsworks:DescribeLayers",
                            "opsworks:DescribeStacks",
                            "codestar-notifications:ListNotificationRules",
                            "codestar-notifications:ListEventTypes",
                            "codestar-notifications:ListTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "codestar-notifications:DescribeNotificationRule"
                        ],
                        "Condition": {
                            "StringLike": {
                                "codestar-notifications:NotificationsForResource": "arn:aws:codepipeline:*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsReadOnlyAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAILFKZXIBOTNC5TO2Q",
            "PolicyName": "AWSCodePipelineReadOnlyAccess",
            "VersionId": "v9"
        },
        "AWSCodePipeline_FullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codepipeline:*",
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListChangeSets",
                            "cloudtrail:DescribeTrails",
                            "codebuild:BatchGetProjects",
                            "codebuild:CreateProject",
                            "codebuild:ListCuratedEnvironmentImages",
                            "codebuild:ListProjects",
                            "codecommit:ListBranches",
                            "codecommit:GetReferences",
                            "codecommit:ListRepositories",
                            "codedeploy:BatchGetDeploymentGroups",
                            "codedeploy:ListApplications",
                            "codedeploy:ListDeploymentGroups",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ecr:DescribeRepositories",
                            "ecr:ListImages",
                            "ecs:ListClusters",
                            "ecs:ListServices",
                            "elasticbeanstalk:DescribeApplications",
                            "elasticbeanstalk:DescribeEnvironments",
                            "iam:ListRoles",
                            "iam:GetRole",
                            "lambda:ListFunctions",
                            "events:ListRules",
                            "events:ListTargetsByRule",
                            "events:DescribeRule",
                            "opsworks:DescribeApps",
                            "opsworks:DescribeLayers",
                            "opsworks:DescribeStacks",
                            "s3:ListAllMyBuckets",
                            "sns:ListTopics",
                            "codestar-notifications:ListNotificationRules",
                            "codestar-notifications:ListTargets",
                            "codestar-notifications:ListTagsforResource",
                            "codestar-notifications:ListEventTypes",
                            "states:ListStateMachines"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:GetBucketPolicy",
                            "s3:GetBucketVersioning",
                            "s3:GetObjectVersion",
                            "s3:CreateBucket",
                            "s3:PutBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3::*:codepipeline-*"
                    },
                    {
                        "Action": [
                            "cloudtrail:PutEventSelectors",
                            "cloudtrail:CreateTrail",
                            "cloudtrail:GetEventSelectors",
                            "cloudtrail:StartLogging"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudtrail:*:*:trail/codepipeline-source-trail"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "events.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/cwe-role-*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "codepipeline.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "events:PutRule",
                            "events:PutTargets",
                            "events:DeleteRule",
                            "events:DisableRule",
                            "events:RemoveTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:events:*:*:rule/codepipeline-*"
                        ]
                    },
                    {
                        "Action": [
                            "codestar-notifications:CreateNotificationRule",
                            "codestar-notifications:DescribeNotificationRule",
                            "codestar-notifications:UpdateNotificationRule",
                            "codestar-notifications:DeleteNotificationRule",
                            "codestar-notifications:Subscribe",
                            "codestar-notifications:Unsubscribe"
                        ],
                        "Condition": {
                            "StringLike": {
                                "codestar-notifications:NotificationsForResource": "arn:aws:codepipeline:*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsReadWriteAccess"
                    },
                    {
                        "Action": [
                            "sns:CreateTopic",
                            "sns:SetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:codestar-notifications*",
                        "Sid": "CodeStarNotificationsSNSTopicCreateAccess"
                    },
                    {
                        "Action": [
                            "chatbot:DescribeSlackChannelConfigurations"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsChatbotAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4A6ZKP3LKA",
            "PolicyName": "AWSCodePipeline_FullAccess",
            "VersionId": "v1"
        },
        "AWSCodePipeline_ReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codepipeline:GetPipeline",
                            "codepipeline:GetPipelineState",
                            "codepipeline:GetPipelineExecution",
                            "codepipeline:ListPipelineExecutions",
                            "codepipeline:ListActionExecutions",
                            "codepipeline:ListActionTypes",
                            "codepipeline:ListPipelines",
                            "codepipeline:ListTagsForResource",
                            "s3:ListAllMyBuckets",
                            "codestar-notifications:ListNotificationRules",
                            "codestar-notifications:ListEventTypes",
                            "codestar-notifications:ListTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:GetBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3::*:codepipeline-*"
                    },
                    {
                        "Action": [
                            "codestar-notifications:DescribeNotificationRule"
                        ],
                        "Condition": {
                            "StringLike": {
                                "codestar-notifications:NotificationsForResource": "arn:aws:codepipeline:*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarNotificationsReadOnlyAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IGBTPGT6W",
            "PolicyName": "AWSCodePipeline_ReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSCodeStarFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codestar:*",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets",
                            "cloud9:DescribeEnvironment*",
                            "cloud9:ValidateEnvironmentName"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeStarEC2"
                    },
                    {
                        "Action": [
                            "cloudformation:DescribeStack*",
                            "cloudformation:GetTemplateSummary"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/awscodestar-*"
                        ],
                        "Sid": "CodeStarCF"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIXI233TFUGLZOJBEC",
            "PolicyName": "AWSCodeStarFullAccess",
            "VersionId": "v2"
        },
        "AWSCodeStarNotificationsServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "events:PutTargets",
                            "events:PutRule",
                            "events:DescribeRule"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:events:*:*:rule/awscodestarnotifications-*"
                    },
                    {
                        "Action": [
                            "sns:CreateTopic"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:CodeStarNotifications-*"
                    },
                    {
                        "Action": [
                            "codecommit:GetCommentsForPullRequest",
                            "codecommit:GetCommentsForComparedCommit",
                            "chatbot:DescribeSlackChannelConfigurations",
                            "chatbot:UpdateSlackChannelConfiguration",
                            "codecommit:GetDifferences",
                            "codepipeline:ListActionExecutions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "codecommit:GetFile"
                        ],
                        "Condition": {
                            "StringNotEquals": {
                                "aws:ResourceTag/ExcludeFileContentFromNotifications": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4BGRXOB2GH",
            "PolicyName": "AWSCodeStarNotificationsServiceRolePolicy",
            "VersionId": "v4"
        },
        "AWSCodeStarServiceRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "events:PutTargets",
                            "events:RemoveTargets",
                            "events:PutRule",
                            "events:DeleteRule",
                            "events:DescribeRule"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:events:*:*:rule/awscodestar-*"
                        ],
                        "Sid": "ProjectEventRules"
                    },
                    {
                        "Action": [
                            "cloudformation:*Stack*",
                            "cloudformation:CreateChangeSet",
                            "cloudformation:ExecuteChangeSet",
                            "cloudformation:DeleteChangeSet",
                            "cloudformation:GetTemplate"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/awscodestar-*",
                            "arn:aws:cloudformation:*:*:stack/awseb-*",
                            "arn:aws:cloudformation:*:*:stack/aws-cloud9-*",
                            "arn:aws:cloudformation:*:aws:transform/CodeStar*"
                        ],
                        "Sid": "ProjectStack"
                    },
                    {
                        "Action": [
                            "cloudformation:GetTemplateSummary",
                            "cloudformation:DescribeChangeSet"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ProjectStackTemplate"
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::awscodestar-*/*"
                        ],
                        "Sid": "ProjectQuickstarts"
                    },
                    {
                        "Action": [
                            "s3:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-codestar-*",
                            "arn:aws:s3:::aws-codestar-*/*",
                            "arn:aws:s3:::elasticbeanstalk-*",
                            "arn:aws:s3:::elasticbeanstalk-*/*"
                        ],
                        "Sid": "ProjectS3Buckets"
                    },
                    {
                        "Action": [
                            "codestar:*",
                            "codecommit:*",
                            "codepipeline:*",
                            "codedeploy:*",
                            "codebuild:*",
                            "ec2:RunInstances",
                            "autoscaling:*",
                            "cloudwatch:Put*",
                            "ec2:*",
                            "elasticbeanstalk:*",
                            "elasticloadbalancing:*",
                            "iam:ListRoles",
                            "logs:*",
                            "sns:*",
                            "cloud9:CreateEnvironmentEC2",
                            "cloud9:DeleteEnvironment",
                            "cloud9:DescribeEnvironment*",
                            "cloud9:ListEnvironments"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ProjectServices"
                    },
                    {
                        "Action": [
                            "iam:AttachRolePolicy",
                            "iam:CreateRole",
                            "iam:DeleteRole",
                            "iam:DeleteRolePolicy",
                            "iam:DetachRolePolicy",
                            "iam:GetRole",
                            "iam:PassRole",
                            "iam:GetRolePolicy",
                            "iam:PutRolePolicy",
                            "iam:SetDefaultPolicyVersion",
                            "iam:CreatePolicy",
                            "iam:DeletePolicy",
                            "iam:AddRoleToInstanceProfile",
                            "iam:CreateInstanceProfile",
                            "iam:DeleteInstanceProfile",
                            "iam:RemoveRoleFromInstanceProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/CodeStarWorker*",
                            "arn:aws:iam::*:policy/CodeStarWorker*",
                            "arn:aws:iam::*:instance-profile/awscodestar-*"
                        ],
                        "Sid": "ProjectWorkerRoles"
                    },
                    {
                        "Action": [
                            "iam:AttachUserPolicy",
                            "iam:DetachUserPolicy"
                        ],
                        "Condition": {
                            "ArnEquals": {
                                "iam:PolicyArn": [
                                    "arn:aws:iam::*:policy/CodeStar_*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ProjectTeamMembers"
                    },
                    {
                        "Action": [
                            "iam:CreatePolicy",
                            "iam:DeletePolicy",
                            "iam:CreatePolicyVersion",
                            "iam:DeletePolicyVersion",
                            "iam:ListEntitiesForPolicy",
                            "iam:ListPolicyVersions",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:policy/CodeStar_*"
                        ],
                        "Sid": "ProjectRoles"
                    },
                    {
                        "Action": [
                            "iam:ListAttachedRolePolicies"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-codestar-service-role",
                            "arn:aws:iam::*:role/service-role/aws-codestar-service-role"
                        ],
                        "Sid": "InspectServiceRole"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "cloud9.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "IAMLinkRole"
                    },
                    {
                        "Action": [
                            "config:DescribeConfigRules"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "DescribeConfigRuleForARN"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIN6D4M2KD3NBOC4M4",
            "PolicyName": "AWSCodeStarServiceRole",
            "VersionId": "v9"
        },
        "AWSCompromisedKeyQuarantine": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:AttachGroupPolicy",
                            "iam:AttachRolePolicy",
                            "iam:AttachUserPolicy",
                            "iam:ChangePassword",
                            "iam:CreateAccessKey",
                            "iam:CreateInstanceProfile",
                            "iam:CreateLoginProfile",
                            "iam:CreateRole",
                            "iam:CreateUser",
                            "iam:DetachUserPolicy",
                            "iam:PutUserPermissionsBoundary",
                            "iam:PutUserPolicy",
                            "iam:UpdateAccessKey",
                            "iam:UpdateAccountPasswordPolicy",
                            "iam:UpdateUser",
                            "ec2:RequestSpotInstances",
                            "ec2:RunInstances",
                            "ec2:StartInstances",
                            "organizations:CreateAccount",
                            "organizations:CreateOrganization",
                            "organizations:InviteAccountToOrganization",
                            "lambda:CreateFunction",
                            "lightsail:Create*",
                            "lightsail:Start*",
                            "lightsail:Delete*",
                            "lightsail:Update*",
                            "lightsail:GetInstanceAccessDetails",
                            "lightsail:DownloadDefaultKeyPair"
                        ],
                        "Effect": "Deny",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4PLD3NKX4L",
            "PolicyName": "AWSCompromisedKeyQuarantine",
            "VersionId": "v1"
        },
        "AWSConfigMultiAccountSetupPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "config:PutConfigRule",
                            "config:DeleteConfigRule"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/config-multiaccountsetup.amazonaws.com/*"
                    },
                    {
                        "Action": [
                            "config:DescribeConfigurationRecorders"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "organizations:ListAccounts",
                            "organizations:DescribeOrganization",
                            "organizations:ListAWSServiceAccessForOrganization",
                            "organizations:DescribeAccount"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "config:PutConformancePack",
                            "config:DeleteConformancePack",
                            "config:DescribeConformancePackStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:config:*:*:conformance-pack/aws-service-conformance-pack/config-multiaccountsetup.amazonaws.com/*"
                    },
                    {
                        "Action": [
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "config-conforms.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "ssm.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4L5NAGNGTD",
            "PolicyName": "AWSConfigMultiAccountSetupPolicy",
            "VersionId": "v4"
        },
        "AWSConfigRemediationServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ssm:GetDocument",
                            "ssm:DescribeDocument",
                            "ssm:StartAutomationExecution"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "ssm.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4BC7ZOM6NP",
            "PolicyName": "AWSConfigRemediationServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSConfigRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm:DescribeCertificate",
                            "acm:ListCertificates",
                            "acm:ListTagsForCertificate",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingPolicies",
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribeLaunchConfigurations",
                            "autoscaling:DescribeLifecycleHooks",
                            "autoscaling:DescribePolicies",
                            "autoscaling:DescribeScheduledActions",
                            "autoscaling:DescribeTags",
                            "backup:ListBackupPlans",
                            "backup:ListBackupSelections",
                            "backup:GetBackupSelection",
                            "cloudfront:ListTagsForResource",
                            "cloudformation:describeType",
                            "cloudformation:listTypes",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetEventSelectors",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:ListTags",
                            "cloudwatch:DescribeAlarms",
                            "codepipeline:GetPipeline",
                            "codepipeline:GetPipelineState",
                            "codepipeline:ListPipelines",
                            "config:BatchGet*",
                            "config:Describe*",
                            "config:Get*",
                            "config:List*",
                            "config:Put*",
                            "config:Select*",
                            "dax:DescribeClusters",
                            "dms:DescribeReplicationInstances",
                            "dynamodb:DescribeContinuousBackups",
                            "dynamodb:DescribeLimits",
                            "dynamodb:DescribeTable",
                            "dynamodb:ListTables",
                            "dynamodb:ListTagsOfResource",
                            "ec2:Describe*",
                            "ec2:GetEbsEncryptionByDefault",
                            "eks:DescribeCluster",
                            "eks:ListClusters",
                            "elasticache:DescribeCacheClusters",
                            "elasticache:DescribeReplicationGroups",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticloadbalancing:DescribeListeners",
                            "elasticloadbalancing:DescribeLoadBalancerAttributes",
                            "elasticloadbalancing:DescribeLoadBalancerPolicies",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeRules",
                            "elasticloadbalancing:DescribeTags",
                            "elasticmapreduce:DescribeCluster",
                            "elasticmapreduce:DescribeSecurityConfiguration",
                            "elasticmapreduce:GetBlockPublicAccessConfiguration",
                            "elasticmapreduce:ListClusters",
                            "elasticmapreduce:ListInstances",
                            "es:DescribeElasticsearchDomain",
                            "es:DescribeElasticsearchDomains",
                            "es:ListDomainNames",
                            "es:ListTags",
                            "guardduty:GetDetector",
                            "guardduty:GetFindings",
                            "guardduty:GetMasterAccount",
                            "guardduty:ListDetectors",
                            "guardduty:ListFindings",
                            "iam:GenerateCredentialReport",
                            "iam:GetAccountAuthorizationDetails",
                            "iam:GetAccountPasswordPolicy",
                            "iam:GetAccountSummary",
                            "iam:GetCredentialReport",
                            "iam:GetGroup",
                            "iam:GetGroupPolicy",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:GetUser",
                            "iam:GetUserPolicy",
                            "iam:ListAttachedGroupPolicies",
                            "iam:ListAttachedRolePolicies",
                            "iam:ListAttachedUserPolicies",
                            "iam:ListEntitiesForPolicy",
                            "iam:ListGroupPolicies",
                            "iam:ListGroupsForUser",
                            "iam:ListInstanceProfilesForRole",
                            "iam:ListPolicyVersions",
                            "iam:ListRolePolicies",
                            "iam:ListUserPolicies",
                            "iam:ListVirtualMFADevices",
                            "kms:DescribeKey",
                            "kms:GetKeyPolicy",
                            "kms:GetKeyRotationStatus",
                            "kms:ListKeys",
                            "kms:ListResourceTags",
                            "lambda:GetAlias",
                            "lambda:GetFunction",
                            "lambda:GetPolicy",
                            "lambda:ListAliases",
                            "lambda:ListFunctions",
                            "logs:DescribeLogGroups",
                            "organizations:DescribeOrganization",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBClusterSnapshotAttributes",
                            "rds:DescribeDBClusterSnapshots",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBSecurityGroups",
                            "rds:DescribeDBSnapshotAttributes",
                            "rds:DescribeDBSnapshots",
                            "rds:DescribeDBSubnetGroups",
                            "rds:DescribeEventSubscriptions",
                            "rds:ListTagsForResource",
                            "redshift:DescribeClusterParameterGroups",
                            "redshift:DescribeClusterParameters",
                            "redshift:DescribeClusterSecurityGroups",
                            "redshift:DescribeClusterSnapshots",
                            "redshift:DescribeClusterSubnetGroups",
                            "redshift:DescribeClusters",
                            "redshift:DescribeEventSubscriptions",
                            "redshift:DescribeLoggingStatus",
                            "s3:GetAccelerateConfiguration",
                            "s3:GetAccountPublicAccessBlock",
                            "s3:GetBucketAcl",
                            "s3:GetBucketCORS",
                            "s3:GetBucketLocation",
                            "s3:GetBucketLogging",
                            "s3:GetBucketNotification",
                            "s3:GetBucketObjectLockConfiguration",
                            "s3:GetBucketPolicy",
                            "s3:GetBucketPublicAccessBlock",
                            "s3:GetBucketRequestPayment",
                            "s3:GetBucketTagging",
                            "s3:GetBucketVersioning",
                            "s3:GetBucketWebsite",
                            "s3:GetEncryptionConfiguration",
                            "s3:GetLifecycleConfiguration",
                            "s3:GetObject",
                            "s3:GetReplicationConfiguration",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "sagemaker:DescribeEndpointConfig",
                            "sagemaker:DescribeNotebookInstance",
                            "sagemaker:ListEndpointConfigs",
                            "sagemaker:ListNotebookInstances",
                            "secretsmanager:ListSecrets",
                            "secretsmanager:ListSecretVersionIds",
                            "securityhub:describeHub",
                            "shield:DescribeDRTAccess",
                            "shield:DescribeProtection",
                            "shield:DescribeSubscription",
                            "sns:GetTopicAttributes",
                            "sns:ListSubscriptions",
                            "sns:ListTagsForResource",
                            "sns:ListTopics",
                            "sqs:GetQueueAttributes",
                            "sqs:ListQueues",
                            "sqs:ListQueueTags",
                            "ssm:DescribeAutomationExecutions",
                            "ssm:DescribeDocument",
                            "ssm:GetAutomationExecution",
                            "ssm:GetDocument",
                            "storagegateway:ListGateways",
                            "storagegateway:ListVolumes",
                            "support:DescribeCases",
                            "waf:GetLoggingConfiguration",
                            "waf:GetWebACL",
                            "wafv2:GetLoggingConfiguration",
                            "waf-regional:GetLoggingConfiguration",
                            "waf-regional:GetWebACL",
                            "waf-regional:GetWebACLForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIQRXRDRGJUA33ELIO",
            "PolicyName": "AWSConfigRole",
            "VersionId": "v34"
        },
        "AWSConfigRoleForOrganizations": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "organizations:ListAccounts",
                            "organizations:DescribeOrganization",
                            "organizations:ListAWSServiceAccessForOrganization",
                            "organizations:ListDelegatedAdministrators"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIEHGYAUTHXSXZAW2E",
            "PolicyName": "AWSConfigRoleForOrganizations",
            "VersionId": "v2"
        },
        "AWSConfigRulesExecutionRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*/AWSLogs/*/Config/*"
                    },
                    {
                        "Action": [
                            "config:Put*",
                            "config:Get*",
                            "config:List*",
                            "config:Describe*",
                            "config:BatchGet*",
                            "config:Select*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJUB3KIKTA4PU4OYAA",
            "PolicyName": "AWSConfigRulesExecutionRole",
            "VersionId": "v3"
        },
        "AWSConfigServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm:DescribeCertificate",
                            "acm:ListCertificates",
                            "acm:ListTagsForCertificate",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingPolicies",
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribeLaunchConfigurations",
                            "autoscaling:DescribeLifecycleHooks",
                            "autoscaling:DescribePolicies",
                            "autoscaling:DescribeScheduledActions",
                            "autoscaling:DescribeTags",
                            "backup:ListBackupPlans",
                            "backup:ListBackupSelections",
                            "backup:GetBackupSelection",
                            "cloudfront:ListTagsForResource",
                            "cloudformation:describeType",
                            "cloudformation:listTypes",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetEventSelectors",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:ListTags",
                            "cloudwatch:DescribeAlarms",
                            "codepipeline:GetPipeline",
                            "codepipeline:GetPipelineState",
                            "codepipeline:ListPipelines",
                            "config:BatchGet*",
                            "config:Describe*",
                            "config:Get*",
                            "config:List*",
                            "config:Put*",
                            "config:Select*",
                            "dax:DescribeClusters",
                            "dms:DescribeReplicationInstances",
                            "dynamodb:DescribeContinuousBackups",
                            "dynamodb:DescribeLimits",
                            "dynamodb:DescribeTable",
                            "dynamodb:ListTables",
                            "dynamodb:ListTagsOfResource",
                            "ec2:Describe*",
                            "ec2:GetEbsEncryptionByDefault",
                            "eks:DescribeCluster",
                            "eks:ListClusters",
                            "elasticache:DescribeCacheClusters",
                            "elasticache:DescribeReplicationGroups",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticloadbalancing:DescribeListeners",
                            "elasticloadbalancing:DescribeLoadBalancerAttributes",
                            "elasticloadbalancing:DescribeLoadBalancerPolicies",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeRules",
                            "elasticloadbalancing:DescribeTags",
                            "elasticmapreduce:DescribeCluster",
                            "elasticmapreduce:DescribeSecurityConfiguration",
                            "elasticmapreduce:GetBlockPublicAccessConfiguration",
                            "elasticmapreduce:ListClusters",
                            "elasticmapreduce:ListInstances",
                            "es:DescribeElasticsearchDomain",
                            "es:DescribeElasticsearchDomains",
                            "es:ListDomainNames",
                            "es:ListTags",
                            "guardduty:GetDetector",
                            "guardduty:GetFindings",
                            "guardduty:GetMasterAccount",
                            "guardduty:ListDetectors",
                            "guardduty:ListFindings",
                            "iam:GenerateCredentialReport",
                            "iam:GetAccountAuthorizationDetails",
                            "iam:GetAccountPasswordPolicy",
                            "iam:GetAccountSummary",
                            "iam:GetCredentialReport",
                            "iam:GetGroup",
                            "iam:GetGroupPolicy",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:GetUser",
                            "iam:GetUserPolicy",
                            "iam:ListAttachedGroupPolicies",
                            "iam:ListAttachedRolePolicies",
                            "iam:ListAttachedUserPolicies",
                            "iam:ListEntitiesForPolicy",
                            "iam:ListGroupPolicies",
                            "iam:ListGroupsForUser",
                            "iam:ListInstanceProfilesForRole",
                            "iam:ListPolicyVersions",
                            "iam:ListRolePolicies",
                            "iam:ListUserPolicies",
                            "iam:ListVirtualMFADevices",
                            "kms:DescribeKey",
                            "kms:GetKeyPolicy",
                            "kms:GetKeyRotationStatus",
                            "kms:ListKeys",
                            "kms:ListResourceTags",
                            "lambda:GetAlias",
                            "lambda:GetFunction",
                            "lambda:GetPolicy",
                            "lambda:ListAliases",
                            "lambda:ListFunctions",
                            "logs:DescribeLogGroups",
                            "organizations:DescribeOrganization",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBClusterSnapshotAttributes",
                            "rds:DescribeDBClusterSnapshots",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBSecurityGroups",
                            "rds:DescribeDBSnapshotAttributes",
                            "rds:DescribeDBSnapshots",
                            "rds:DescribeDBSubnetGroups",
                            "rds:DescribeEventSubscriptions",
                            "rds:ListTagsForResource",
                            "redshift:DescribeClusterParameterGroups",
                            "redshift:DescribeClusterParameters",
                            "redshift:DescribeClusterSecurityGroups",
                            "redshift:DescribeClusterSnapshots",
                            "redshift:DescribeClusterSubnetGroups",
                            "redshift:DescribeClusters",
                            "redshift:DescribeEventSubscriptions",
                            "redshift:DescribeLoggingStatus",
                            "s3:GetAccelerateConfiguration",
                            "s3:GetAccountPublicAccessBlock",
                            "s3:GetBucketAcl",
                            "s3:GetBucketCORS",
                            "s3:GetBucketLocation",
                            "s3:GetBucketLogging",
                            "s3:GetBucketNotification",
                            "s3:GetBucketObjectLockConfiguration",
                            "s3:GetBucketPolicy",
                            "s3:GetBucketPublicAccessBlock",
                            "s3:GetBucketRequestPayment",
                            "s3:GetBucketTagging",
                            "s3:GetBucketVersioning",
                            "s3:GetBucketWebsite",
                            "s3:GetEncryptionConfiguration",
                            "s3:GetLifecycleConfiguration",
                            "s3:GetReplicationConfiguration",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "sagemaker:DescribeEndpointConfig",
                            "sagemaker:DescribeNotebookInstance",
                            "sagemaker:ListEndpointConfigs",
                            "sagemaker:ListNotebookInstances",
                            "secretsmanager:ListSecrets",
                            "secretsmanager:ListSecretVersionIds",
                            "securityhub:describeHub",
                            "shield:DescribeDRTAccess",
                            "shield:DescribeProtection",
                            "shield:DescribeSubscription",
                            "sns:GetTopicAttributes",
                            "sns:ListSubscriptions",
                            "sns:ListTagsForResource",
                            "sns:ListTopics",
                            "sqs:GetQueueAttributes",
                            "sqs:ListQueues",
                            "sqs:ListQueueTags",
                            "ssm:DescribeAutomationExecutions",
                            "ssm:DescribeDocument",
                            "ssm:GetAutomationExecution",
                            "ssm:GetDocument",
                            "storagegateway:ListGateways",
                            "storagegateway:ListVolumes",
                            "support:DescribeCases",
                            "waf:GetLoggingConfiguration",
                            "waf:GetWebACL",
                            "wafv2:GetLoggingConfiguration",
                            "waf-regional:GetLoggingConfiguration",
                            "waf-regional:GetWebACL",
                            "waf-regional:GetWebACLForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJUCWFHNZER665LLQQ",
            "PolicyName": "AWSConfigServiceRolePolicy",
            "VersionId": "v20"
        },
        "AWSConfigUserAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "config:Get*",
                            "config:Describe*",
                            "config:Deliver*",
                            "config:List*",
                            "config:Select*",
                            "tag:GetResources",
                            "tag:GetTagKeys",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:LookupEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIWTTSFJ7KKJE3MWGA",
            "PolicyName": "AWSConfigUserAccess",
            "VersionId": "v4"
        },
        "AWSConnector": {
            "Document": {
                "Statement": [
                    {
                        "Action": "iam:GetUser",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:DeleteBucket",
                            "s3:DeleteObject",
                            "s3:GetBucketLocation",
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:PutObject",
                            "s3:PutObjectAcl",
                            "s3:AbortMultipartUpload",
                            "s3:ListBucketMultipartUploads",
                            "s3:ListMultipartUploadParts"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::import-to-ec2-*"
                    },
                    {
                        "Action": [
                            "ec2:CancelConversionTask",
                            "ec2:CancelExportTask",
                            "ec2:CreateImage",
                            "ec2:CreateInstanceExportTask",
                            "ec2:CreateTags",
                            "ec2:CreateVolume",
                            "ec2:DeleteTags",
                            "ec2:DeleteVolume",
                            "ec2:DescribeConversionTasks",
                            "ec2:DescribeExportTasks",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstanceAttribute",
                            "ec2:DescribeInstanceStatus",
                            "ec2:DescribeInstances",
                            "ec2:DescribeRegions",
                            "ec2:DescribeTags",
                            "ec2:DetachVolume",
                            "ec2:ImportInstance",
                            "ec2:ImportVolume",
                            "ec2:ModifyInstanceAttribute",
                            "ec2:RunInstances",
                            "ec2:StartInstances",
                            "ec2:StopInstances",
                            "ec2:TerminateInstances",
                            "ec2:ImportImage",
                            "ec2:DescribeImportImageTasks",
                            "ec2:DeregisterImage",
                            "ec2:DescribeSnapshots",
                            "ec2:DeleteSnapshot",
                            "ec2:CancelImportTask",
                            "ec2:ImportSnapshot",
                            "ec2:DescribeImportSnapshotTasks"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "SNS:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:metrics-sns-topic-for-*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ6YATONJHICG3DJ3U",
            "PolicyName": "AWSConnector",
            "VersionId": "v3"
        },
        "AWSControlTowerServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:CreateStackInstances",
                            "cloudformation:CreateStackSet",
                            "cloudformation:DeleteStack",
                            "cloudformation:DeleteStackInstances",
                            "cloudformation:DeleteStackSet",
                            "cloudformation:DescribeStackInstance",
                            "cloudformation:DescribeStacks",
                            "cloudformation:DescribeStackSet",
                            "cloudformation:DescribeStackSetOperation",
                            "cloudformation:ListStackInstances",
                            "cloudformation:UpdateStack",
                            "cloudformation:UpdateStackInstances",
                            "cloudformation:UpdateStackSet"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:type/resource/AWS-IAM-Role"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:CreateStackInstances",
                            "cloudformation:CreateStackSet",
                            "cloudformation:DeleteStack",
                            "cloudformation:DeleteStackInstances",
                            "cloudformation:DeleteStackSet",
                            "cloudformation:DescribeStackInstance",
                            "cloudformation:DescribeStacks",
                            "cloudformation:DescribeStackSet",
                            "cloudformation:DescribeStackSetOperation",
                            "cloudformation:GetTemplate",
                            "cloudformation:ListStackInstances",
                            "cloudformation:UpdateStack",
                            "cloudformation:UpdateStackInstances",
                            "cloudformation:UpdateStackSet"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/AWSControlTower*/*",
                            "arn:aws:cloudformation:*:*:stack/StackSet-AWSControlTower*/*",
                            "arn:aws:cloudformation:*:*:stackset/AWSControlTower*:*",
                            "arn:aws:cloudformation:*:*:stackset-target/AWSControlTower*/*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudtrail:CreateTrail",
                            "cloudtrail:DeleteTrail",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:StartLogging",
                            "cloudtrail:StopLogging",
                            "cloudtrail:UpdateTrail",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:PutRetentionPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:aws-controltower/CloudTrailLogs:*",
                            "arn:aws:cloudtrail:*:*:trail/aws-controltower*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-controltower*/*"
                        ]
                    },
                    {
                        "Action": [
                            "sts:AssumeRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/AWSControlTowerExecution"
                        ]
                    },
                    {
                        "Action": [
                            "cloudtrail:DescribeTrails",
                            "ec2:DescribeAvailabilityZones",
                            "iam:ListRoles",
                            "logs:CreateLogGroup",
                            "logs:DescribeLogGroups",
                            "organizations:CreateAccount",
                            "organizations:DescribeAccount",
                            "organizations:DescribeCreateAccountStatus",
                            "organizations:DescribeOrganization",
                            "organizations:DescribeOrganizationalUnit",
                            "organizations:DescribePolicy",
                            "organizations:ListAccounts",
                            "organizations:ListAccountsForParent",
                            "organizations:ListAWSServiceAccessForOrganization",
                            "organizations:ListChildren",
                            "organizations:ListOrganizationalUnitsForParent",
                            "organizations:ListParents",
                            "organizations:ListPoliciesForTarget",
                            "organizations:ListTargetsForPolicy",
                            "organizations:ListRoots",
                            "organizations:MoveAccount",
                            "servicecatalog:AssociatePrincipalWithPortfolio"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "iam:GetUser",
                            "iam:ListAttachedRolePolicies",
                            "iam:GetRolePolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AWSControlTowerStackSetRole",
                            "arn:aws:iam::*:role/service-role/AWSControlTowerCloudTrailRole",
                            "arn:aws:iam::*:role/service-role/AWSControlTowerConfigAggregatorRoleForOrganizations"
                        ]
                    },
                    {
                        "Action": [
                            "config:DeleteConfigurationAggregator",
                            "config:PutConfigurationAggregator",
                            "config:TagResource"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/aws-control-tower": "managed-by-control-tower"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "organizations:EnableAWSServiceAccess",
                        "Condition": {
                            "StringLike": {
                                "organizations:ServicePrincipal": "config.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MW35THVLF",
            "PolicyName": "AWSControlTowerServiceRolePolicy",
            "VersionId": "v6"
        },
        "AWSDataExchangeFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "dataexchange:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "s3:GetObject",
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*aws-data-exchange*"
                    },
                    {
                        "Action": "s3:GetObject",
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "s3:ExistingObjectTag/AWSDataExchange": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:PutObject",
                            "s3:PutObjectAcl"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*aws-data-exchange*"
                    },
                    {
                        "Action": [
                            "s3:GetBucketLocation",
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "aws-marketplace:DescribeEntity",
                            "aws-marketplace:ListEntities",
                            "aws-marketplace:StartChangeSet",
                            "aws-marketplace:ListChangeSets",
                            "aws-marketplace:DescribeChangeSet",
                            "aws-marketplace:CancelChangeSet",
                            "aws-marketplace:GetAgreementApprovalRequest",
                            "aws-marketplace:ListAgreementApprovalRequests",
                            "aws-marketplace:AcceptAgreementApprovalRequest",
                            "aws-marketplace:RejectAgreementApprovalRequest",
                            "aws-marketplace:UpdateAgreementApprovalRequest"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "aws-marketplace:Subscribe",
                            "aws-marketplace:Unsubscribe",
                            "aws-marketplace:ViewSubscriptions",
                            "aws-marketplace:GetAgreementRequest",
                            "aws-marketplace:ListAgreementRequests",
                            "aws-marketplace:CancelAgreementRequest"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:DescribeKey",
                            "kms:ListAliases",
                            "kms:ListKeys"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MPDTDB3FH",
            "PolicyName": "AWSDataExchangeFullAccess",
            "VersionId": "v2"
        },
        "AWSDataExchangeProviderFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "dataexchange:CreateDataSet",
                            "dataexchange:CreateRevision",
                            "dataexchange:CreateAsset",
                            "dataexchange:Get*",
                            "dataexchange:Update*",
                            "dataexchange:List*",
                            "dataexchange:Delete*",
                            "dataexchange:TagResource",
                            "dataexchange:UntagResource",
                            "tag:GetTagKeys",
                            "tag:GetTagValues"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "dataexchange:CreateJob",
                            "dataexchange:StartJob",
                            "dataexchange:CancelJob"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "dataexchange:JobType": [
                                    "IMPORT_ASSETS_FROM_S3",
                                    "IMPORT_ASSET_FROM_SIGNED_URL",
                                    "EXPORT_ASSETS_TO_S3",
                                    "EXPORT_ASSET_TO_SIGNED_URL"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "s3:GetObject",
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*aws-data-exchange*"
                    },
                    {
                        "Action": "s3:GetObject",
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "s3:ExistingObjectTag/AWSDataExchange": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:PutObject",
                            "s3:PutObjectAcl"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*aws-data-exchange*"
                    },
                    {
                        "Action": [
                            "s3:GetBucketLocation",
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "aws-marketplace:DescribeEntity",
                            "aws-marketplace:ListEntities",
                            "aws-marketplace:DescribeChangeSet",
                            "aws-marketplace:ListChangeSets",
                            "aws-marketplace:StartChangeSet",
                            "aws-marketplace:CancelChangeSet",
                            "aws-marketplace:GetAgreementApprovalRequest",
                            "aws-marketplace:ListAgreementApprovalRequests",
                            "aws-marketplace:AcceptAgreementApprovalRequest",
                            "aws-marketplace:RejectAgreementApprovalRequest",
                            "aws-marketplace:UpdateAgreementApprovalRequest"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:DescribeKey",
                            "kms:ListAliases",
                            "kms:ListKeys"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MQSUGZZPZ",
            "PolicyName": "AWSDataExchangeProviderFullAccess",
            "VersionId": "v4"
        },
        "AWSDataExchangeReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "dataexchange:Get*",
                            "dataexchange:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "aws-marketplace:ViewSubscriptions",
                            "aws-marketplace:GetAgreementRequest",
                            "aws-marketplace:ListAgreementRequests",
                            "aws-marketplace:GetAgreementApprovalRequest",
                            "aws-marketplace:ListAgreementApprovalRequests",
                            "aws-marketplace:DescribeEntity",
                            "aws-marketplace:ListEntities",
                            "aws-marketplace:DescribeChangeSet",
                            "aws-marketplace:ListChangeSets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4DQNFEZURI",
            "PolicyName": "AWSDataExchangeReadOnly",
            "VersionId": "v1"
        },
        "AWSDataExchangeSubscriberFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "dataexchange:Get*",
                            "dataexchange:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "dataexchange:CreateJob",
                            "dataexchange:StartJob",
                            "dataexchange:CancelJob"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "dataexchange:JobType": [
                                    "EXPORT_ASSETS_TO_S3",
                                    "EXPORT_ASSET_TO_SIGNED_URL"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "s3:GetObject",
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*aws-data-exchange*"
                    },
                    {
                        "Action": [
                            "s3:GetBucketLocation",
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "aws-marketplace:Subscribe",
                            "aws-marketplace:Unsubscribe",
                            "aws-marketplace:ViewSubscriptions",
                            "aws-marketplace:GetAgreementRequest",
                            "aws-marketplace:ListAgreementRequests",
                            "aws-marketplace:CancelAgreementRequest"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:DescribeKey",
                            "kms:ListAliases",
                            "kms:ListKeys"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MAWRW4GF7",
            "PolicyName": "AWSDataExchangeSubscriberFullAccess",
            "VersionId": "v2"
        },
        "AWSDataLifecycleManagerServiceRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateSnapshot",
                            "ec2:CreateSnapshots",
                            "ec2:DeleteSnapshot",
                            "ec2:DescribeInstances",
                            "ec2:DescribeVolumes",
                            "ec2:DescribeSnapshots",
                            "ec2:EnableFastSnapshotRestores",
                            "ec2:DescribeFastSnapshotRestores",
                            "ec2:DisableFastSnapshotRestores",
                            "ec2:CopySnapshot",
                            "ec2:ModifySnapshotAttribute",
                            "ec2:DescribeSnapshotAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*::snapshot/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIZRLOKFUFE7YXQOJS",
            "PolicyName": "AWSDataLifecycleManagerServiceRole",
            "VersionId": "v5"
        },
        "AWSDataLifecycleManagerServiceRoleForAMIManagement": {
            "Document": {
                "Statement": [
                    {
                        "Action": "ec2:CreateTags",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*::snapshot/*",
                            "arn:aws:ec2:*::image/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:DescribeImages",
                            "ec2:DescribeInstances",
                            "ec2:DescribeImageAttribute",
                            "ec2:DescribeVolumes",
                            "ec2:DescribeSnapshots"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:DeleteSnapshot",
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*::snapshot/*"
                    },
                    {
                        "Action": [
                            "ec2:ResetImageAttribute",
                            "ec2:DeregisterImage",
                            "ec2:CreateImage",
                            "ec2:CopyImage",
                            "ec2:ModifyImageAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MG6O7FWSP",
            "PolicyName": "AWSDataLifecycleManagerServiceRoleForAMIManagement",
            "VersionId": "v1"
        },
        "AWSDataPipelineRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:*",
                            "datapipeline:DescribeObjects",
                            "datapipeline:EvaluateExpression",
                            "dynamodb:BatchGetItem",
                            "dynamodb:DescribeTable",
                            "dynamodb:GetItem",
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "dynamodb:UpdateTable",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CancelSpotInstanceRequests",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateTags",
                            "ec2:DeleteTags",
                            "ec2:Describe*",
                            "ec2:ModifyImageAttribute",
                            "ec2:ModifyInstanceAttribute",
                            "ec2:RequestSpotInstances",
                            "ec2:RunInstances",
                            "ec2:StartInstances",
                            "ec2:StopInstances",
                            "ec2:TerminateInstances",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:DeleteSecurityGroup",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DetachNetworkInterface",
                            "elasticmapreduce:*",
                            "iam:GetInstanceProfile",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:ListAttachedRolePolicies",
                            "iam:ListRolePolicies",
                            "iam:ListInstanceProfiles",
                            "iam:PassRole",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBSecurityGroups",
                            "redshift:DescribeClusters",
                            "redshift:DescribeClusterSecurityGroups",
                            "s3:CreateBucket",
                            "s3:DeleteObject",
                            "s3:Get*",
                            "s3:List*",
                            "s3:Put*",
                            "sdb:BatchPutAttributes",
                            "sdb:Select*",
                            "sns:GetTopicAttributes",
                            "sns:ListTopics",
                            "sns:Publish",
                            "sns:Subscribe",
                            "sns:Unsubscribe",
                            "sqs:CreateQueue",
                            "sqs:Delete*",
                            "sqs:GetQueue*",
                            "sqs:PurgeQueue",
                            "sqs:ReceiveMessage"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "elasticmapreduce.amazonaws.com",
                                    "spot.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIKCP6XS3ESGF4GLO2",
            "PolicyName": "AWSDataPipelineRole",
            "VersionId": "v6"
        },
        "AWSDataPipeline_FullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:List*",
                            "dynamodb:DescribeTable",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBSecurityGroups",
                            "redshift:DescribeClusters",
                            "redshift:DescribeClusterSecurityGroups",
                            "sns:ListTopics",
                            "sns:Subscribe",
                            "iam:ListRoles",
                            "iam:GetRolePolicy",
                            "iam:GetInstanceProfile",
                            "iam:ListInstanceProfiles",
                            "datapipeline:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:PassRole",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/DataPipelineDefaultResourceRole",
                            "arn:aws:iam::*:role/DataPipelineDefaultRole"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIXOFIG7RSBMRPHXJ4",
            "PolicyName": "AWSDataPipeline_FullAccess",
            "VersionId": "v2"
        },
        "AWSDataPipeline_PowerUser": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:List*",
                            "dynamodb:DescribeTable",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBSecurityGroups",
                            "redshift:DescribeClusters",
                            "redshift:DescribeClusterSecurityGroups",
                            "sns:ListTopics",
                            "iam:ListRoles",
                            "iam:GetRolePolicy",
                            "iam:GetInstanceProfile",
                            "iam:ListInstanceProfiles",
                            "datapipeline:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:PassRole",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/DataPipelineDefaultResourceRole",
                            "arn:aws:iam::*:role/DataPipelineDefaultRole"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIMXGLVY6DVR24VTYS",
            "PolicyName": "AWSDataPipeline_PowerUser",
            "VersionId": "v2"
        },
        "AWSDataSyncFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "datasync:*",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "fsx:DescribeFileSystems",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticfilesystem:DescribeMountTargets",
                            "iam:GetRole",
                            "iam:ListRoles",
                            "logs:CreateLogGroup",
                            "logs:DescribeLogGroups",
                            "logs:DescribeResourcePolicies",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "datasync.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJGOHCDUQULZJKDGT4",
            "PolicyName": "AWSDataSyncFullAccess",
            "VersionId": "v3"
        },
        "AWSDataSyncReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "datasync:Describe*",
                            "datasync:List*",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticfilesystem:DescribeMountTargets",
                            "fsx:DescribeFileSystems",
                            "iam:GetRole",
                            "iam:ListRoles",
                            "logs:DescribeLogGroups",
                            "logs:DescribeResourcePolicies",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJRYVEZEDR7ZEAGYLY",
            "PolicyName": "AWSDataSyncReadOnlyAccess",
            "VersionId": "v3"
        },
        "AWSDeepLensLambdaFunctionAccessPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::deeplens*/*",
                            "arn:aws:s3:::deeplens*"
                        ],
                        "Sid": "DeepLensS3ObjectAccess"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams",
                            "logs:PutLogEvents",
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/greengrass/*",
                        "Sid": "DeepLensGreenGrassCloudWatchAccess"
                    },
                    {
                        "Action": [
                            "deeplens:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "DeepLensAccess"
                    },
                    {
                        "Action": [
                            "kinesisvideo:DescribeStream",
                            "kinesisvideo:CreateStream",
                            "kinesisvideo:GetDataEndpoint",
                            "kinesisvideo:PutMedia"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "DeepLensKinesisVideoAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIKIEE4PRM54V4G3ZG",
            "PolicyName": "AWSDeepLensLambdaFunctionAccessPolicy",
            "VersionId": "v4"
        },
        "AWSDeepLensServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:CreateThing",
                            "iot:DeleteThing",
                            "iot:DeleteThingShadow",
                            "iot:DescribeThing",
                            "iot:GetThingShadow",
                            "iot:UpdateThing",
                            "iot:UpdateThingShadow"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:thing/deeplens*"
                        ],
                        "Sid": "DeepLensIoTThingAccess"
                    },
                    {
                        "Action": [
                            "iot:AttachThingPrincipal",
                            "iot:DetachThingPrincipal",
                            "iot:UpdateCertificate",
                            "iot:DeleteCertificate",
                            "iot:DetachPrincipalPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:thing/deeplens*",
                            "arn:aws:iot:*:*:cert/*"
                        ],
                        "Sid": "DeepLensIoTCertificateAccess"
                    },
                    {
                        "Action": [
                            "iot:CreateKeysAndCertificate",
                            "iot:CreatePolicy",
                            "iot:CreatePolicyVersion"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "DeepLensIoTCreateCertificateAndPolicyAccess"
                    },
                    {
                        "Action": [
                            "iot:AttachPrincipalPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:policy/deeplens*",
                            "arn:aws:iot:*:*:cert/*"
                        ],
                        "Sid": "DeepLensIoTAttachCertificatePolicyAccess"
                    },
                    {
                        "Action": [
                            "iot:GetThingShadow",
                            "iot:UpdateThingShadow"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:thing/deeplens*"
                        ],
                        "Sid": "DeepLensIoTDataAccess"
                    },
                    {
                        "Action": [
                            "iot:DescribeEndpoint"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "DeepLensIoTEndpointAccess"
                    },
                    {
                        "Action": [
                            "deeplens:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "DeepLensAccess"
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::deeplens*"
                        ],
                        "Sid": "DeepLensS3ObjectAccess"
                    },
                    {
                        "Action": [
                            "s3:DeleteBucket",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::deeplens*"
                        ],
                        "Sid": "DeepLensS3Buckets"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "DeepLensCreateS3Buckets"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "greengrass.amazonaws.com",
                                    "sagemaker.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "DeepLensIAMPassRoleAccess"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEqualsIfExists": {
                                "iam:PassedToService": "lambda.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/AWSDeepLens*",
                            "arn:aws:iam::*:role/service-role/AWSDeepLens*"
                        ],
                        "Sid": "DeepLensIAMLambdaPassRoleAccess"
                    },
                    {
                        "Action": [
                            "greengrass:AssociateRoleToGroup",
                            "greengrass:AssociateServiceRoleToAccount",
                            "greengrass:CreateResourceDefinition",
                            "greengrass:CreateResourceDefinitionVersion",
                            "greengrass:CreateCoreDefinition",
                            "greengrass:CreateCoreDefinitionVersion",
                            "greengrass:CreateDeployment",
                            "greengrass:CreateFunctionDefinition",
                            "greengrass:CreateFunctionDefinitionVersion",
                            "greengrass:CreateGroup",
                            "greengrass:CreateGroupCertificateAuthority",
                            "greengrass:CreateGroupVersion",
                            "greengrass:CreateLoggerDefinition",
                            "greengrass:CreateLoggerDefinitionVersion",
                            "greengrass:CreateSubscriptionDefinition",
                            "greengrass:CreateSubscriptionDefinitionVersion",
                            "greengrass:DeleteCoreDefinition",
                            "greengrass:DeleteFunctionDefinition",
                            "greengrass:DeleteGroup",
                            "greengrass:DeleteLoggerDefinition",
                            "greengrass:DeleteSubscriptionDefinition",
                            "greengrass:DisassociateRoleFromGroup",
                            "greengrass:DisassociateServiceRoleFromAccount",
                            "greengrass:GetAssociatedRole",
                            "greengrass:GetConnectivityInfo",
                            "greengrass:GetCoreDefinition",
                            "greengrass:GetCoreDefinitionVersion",
                            "greengrass:GetDeploymentStatus",
                            "greengrass:GetDeviceDefinition",
                            "greengrass:GetDeviceDefinitionVersion",
                            "greengrass:GetFunctionDefinition",
                            "greengrass:GetFunctionDefinitionVersion",
                            "greengrass:GetGroup",
                            "greengrass:GetGroupCertificateAuthority",
                            "greengrass:GetGroupCertificateConfiguration",
                            "greengrass:GetGroupVersion",
                            "greengrass:GetLoggerDefinition",
                            "greengrass:GetLoggerDefinitionVersion",
                            "greengrass:GetResourceDefinition",
                            "greengrass:GetServiceRoleForAccount",
                            "greengrass:GetSubscriptionDefinition",
                            "greengrass:GetSubscriptionDefinitionVersion",
                            "greengrass:ListCoreDefinitionVersions",
                            "greengrass:ListCoreDefinitions",
                            "greengrass:ListDeployments",
                            "greengrass:ListDeviceDefinitionVersions",
                            "greengrass:ListDeviceDefinitions",
                            "greengrass:ListFunctionDefinitionVersions",
                            "greengrass:ListFunctionDefinitions",
                            "greengrass:ListGroupCertificateAuthorities",
                            "greengrass:ListGroupVersions",
                            "greengrass:ListGroups",
                            "greengrass:ListLoggerDefinitionVersions",
                            "greengrass:ListLoggerDefinitions",
                            "greengrass:ListSubscriptionDefinitionVersions",
                            "greengrass:ListSubscriptionDefinitions",
                            "greengrass:ResetDeployments",
                            "greengrass:UpdateConnectivityInfo",
                            "greengrass:UpdateCoreDefinition",
                            "greengrass:UpdateDeviceDefinition",
                            "greengrass:UpdateFunctionDefinition",
                            "greengrass:UpdateGroup",
                            "greengrass:UpdateGroupCertificateConfiguration",
                            "greengrass:UpdateLoggerDefinition",
                            "greengrass:UpdateSubscriptionDefinition",
                            "greengrass:UpdateResourceDefinition"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "DeepLensGreenGrassAccess"
                    },
                    {
                        "Action": [
                            "lambda:CreateFunction",
                            "lambda:DeleteFunction",
                            "lambda:GetFunction",
                            "lambda:GetFunctionConfiguration",
                            "lambda:ListFunctions",
                            "lambda:ListVersionsByFunction",
                            "lambda:PublishVersion",
                            "lambda:UpdateFunctionCode",
                            "lambda:UpdateFunctionConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:deeplens*"
                        ],
                        "Sid": "DeepLensLambdaAdminFunctionAccess"
                    },
                    {
                        "Action": [
                            "lambda:GetFunction",
                            "lambda:GetFunctionConfiguration",
                            "lambda:ListFunctions",
                            "lambda:ListVersionsByFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:*"
                        ],
                        "Sid": "DeepLensLambdaUsersFunctionAccess"
                    },
                    {
                        "Action": [
                            "sagemaker:CreateTrainingJob",
                            "sagemaker:DescribeTrainingJob",
                            "sagemaker:StopTrainingJob"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sagemaker:*:*:training-job/deeplens*"
                        ],
                        "Sid": "DeepLensSageMakerWriteAccess"
                    },
                    {
                        "Action": [
                            "sagemaker:DescribeTrainingJob"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sagemaker:*:*:training-job/*"
                        ],
                        "Sid": "DeepLensSageMakerReadAccess"
                    },
                    {
                        "Action": [
                            "kinesisvideo:CreateStream",
                            "kinesisvideo:DescribeStream",
                            "kinesisvideo:DeleteStream"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:kinesisvideo:*:*:stream/deeplens*/*"
                        ],
                        "Sid": "DeepLensKinesisVideoStreamAccess"
                    },
                    {
                        "Action": [
                            "kinesisvideo:GetDataEndpoint"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "DeepLensKinesisVideoEndpointAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJK2Z2S7FPJFCYGR72",
            "PolicyName": "AWSDeepLensServiceRolePolicy",
            "VersionId": "v6"
        },
        "AWSDeepRacerCloudFormationAccessPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:AllocateAddress",
                            "ec2:AttachInternetGateway",
                            "ec2:AssociateRouteTable",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateInternetGateway",
                            "ec2:CreateNatGateway",
                            "ec2:CreateNetworkAcl",
                            "ec2:CreateNetworkAclEntry",
                            "ec2:CreateRoute",
                            "ec2:CreateRouteTable",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSubnet",
                            "ec2:CreateTags",
                            "ec2:CreateVpc",
                            "ec2:CreateVpcEndpoint",
                            "ec2:DeleteInternetGateway",
                            "ec2:DeleteNatGateway",
                            "ec2:DeleteNetworkAcl",
                            "ec2:DeleteNetworkAclEntry",
                            "ec2:DeleteRoute",
                            "ec2:DeleteRouteTable",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DeleteSubnet",
                            "ec2:DeleteTags",
                            "ec2:DeleteVpc",
                            "ec2:DeleteVpcEndpoints",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeNatGateways",
                            "ec2:DescribeNetworkAcls",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeTags",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcs",
                            "ec2:DetachInternetGateway",
                            "ec2:DisassociateRouteTable",
                            "ec2:ModifySubnetAttribute",
                            "ec2:ModifyVpcAttribute",
                            "ec2:ReleaseAddress",
                            "ec2:ReplaceNetworkAclAssociation",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RevokeSecurityGroupIngress"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLikeIfExists": {
                                "iam:PassedToService": "lambda.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/service-role/AWSDeepRacerLambdaAccessRole"
                    },
                    {
                        "Action": [
                            "lambda:CreateFunction",
                            "lambda:GetFunction",
                            "lambda:DeleteFunction",
                            "lambda:TagResource",
                            "lambda:UpdateFunctionCode"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:*DeepRacer*",
                            "arn:aws:lambda:*:*:function:*Deepracer*",
                            "arn:aws:lambda:*:*:function:*deepracer*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:PutBucketPolicy",
                            "s3:CreateBucket",
                            "s3:ListBucket",
                            "s3:GetBucketAcl",
                            "s3:DeleteBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*DeepRacer*",
                            "arn:aws:s3:::*Deepracer*",
                            "arn:aws:s3:::*deepracer*"
                        ]
                    },
                    {
                        "Action": [
                            "robomaker:CreateSimulationApplication",
                            "robomaker:CreateSimulationApplicationVersion",
                            "robomaker:DeleteSimulationApplication",
                            "robomaker:DescribeSimulationApplication",
                            "robomaker:ListSimulationApplications",
                            "robomaker:TagResource",
                            "robomaker:UpdateSimulationApplication"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:robomaker:*:*:/createSimulationApplication",
                            "arn:aws:robomaker:*:*:simulation-application/deepracer*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJYG7FM75UF5CW5ICS",
            "PolicyName": "AWSDeepRacerCloudFormationAccessPolicy",
            "VersionId": "v2"
        },
        "AWSDeepRacerFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:DeleteObject",
                            "s3:DeleteObjectVersion",
                            "s3:GetBucketPolicy",
                            "s3:PutBucketPolicy",
                            "s3:ListBucket",
                            "s3:GetBucketAcl",
                            "s3:GetObject",
                            "s3:GetObjectVersion",
                            "s3:GetObjectAcl",
                            "s3:GetBucketLocation"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*DeepRacer*",
                            "arn:aws:s3:::*Deepracer*",
                            "arn:aws:s3:::*deepracer*",
                            "arn:aws:s3:::dr-*",
                            "arn:aws:s3:::*DeepRacer*/*",
                            "arn:aws:s3:::*Deepracer*/*",
                            "arn:aws:s3:::*deepracer*/*",
                            "arn:aws:s3:::dr-*/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JFTOPTVBM",
            "PolicyName": "AWSDeepRacerFullAccess",
            "VersionId": "v1"
        },
        "AWSDeepRacerRoboMakerAccessPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "robomaker:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:PutMetricData",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeVpcs"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/robomaker/SimulationJobs",
                            "arn:aws:logs:*:*:log-group:/aws/robomaker/SimulationJobs:log-stream:*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:GetBucketLocation",
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*DeepRacer*",
                            "arn:aws:s3:::*Deepracer*",
                            "arn:aws:s3:::*deepracer*",
                            "arn:aws:s3:::dr-*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "s3:ExistingObjectTag/DeepRacer": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kinesisvideo:CreateStream",
                            "kinesisvideo:DescribeStream",
                            "kinesisvideo:GetDataEndpoint",
                            "kinesisvideo:PutMedia",
                            "kinesisvideo:TagStream"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:kinesisvideo:*:*:stream/dr-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIUKGYRTDCUFOMRGAM",
            "PolicyName": "AWSDeepRacerRoboMakerAccessPolicy",
            "VersionId": "v1"
        },
        "AWSDeepRacerServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "deepracer:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "robomaker:*",
                            "sagemaker:*",
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudformation:ListStackResources",
                            "cloudformation:DescribeStacks",
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeStackResource",
                            "cloudformation:DescribeStackResources",
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DetectStackDrift",
                            "cloudformation:DescribeStackDriftDetectionStatus",
                            "cloudformation:DescribeStackResourceDrifts"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "robomaker.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/AWSDeepRacer*",
                            "arn:aws:iam::*:role/service-role/AWSDeepRacer*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricData",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "lambda:CreateFunction",
                            "lambda:DeleteFunction",
                            "lambda:GetFunction",
                            "lambda:InvokeFunction",
                            "lambda:UpdateFunctionCode"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:*DeepRacer*",
                            "arn:aws:lambda:*:*:function:*Deepracer*",
                            "arn:aws:lambda:*:*:function:*deepracer*",
                            "arn:aws:lambda:*:*:function:*dr-*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:GetBucketLocation",
                            "s3:DeleteObject",
                            "s3:ListBucket",
                            "s3:PutObject",
                            "s3:PutBucketPolicy",
                            "s3:GetBucketAcl"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*DeepRacer*",
                            "arn:aws:s3:::*Deepracer*",
                            "arn:aws:s3:::*deepracer*",
                            "arn:aws:s3:::dr-*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "s3:ExistingObjectTag/DeepRacer": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kinesisvideo:CreateStream",
                            "kinesisvideo:DeleteStream",
                            "kinesisvideo:DescribeStream",
                            "kinesisvideo:GetDataEndpoint",
                            "kinesisvideo:GetHLSStreamingSessionURL",
                            "kinesisvideo:GetMedia",
                            "kinesisvideo:PutMedia",
                            "kinesisvideo:TagStream"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:kinesisvideo:*:*:stream/dr-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJTUAQLIAVBJ7LZ32S",
            "PolicyName": "AWSDeepRacerServiceRolePolicy",
            "VersionId": "v3"
        },
        "AWSDenyAll": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "*"
                        ],
                        "Effect": "Deny",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4P43IUQ5E5",
            "PolicyName": "AWSDenyAll",
            "VersionId": "v1"
        },
        "AWSDeviceFarmFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "devicefarm:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJO7KEDP4VYJPNT5UW",
            "PolicyName": "AWSDeviceFarmFullAccess",
            "VersionId": "v1"
        },
        "AWSDirectConnectFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "directconnect:*",
                            "ec2:DescribeVpnGateways",
                            "ec2:DescribeTransitGateways"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQF2QKZSK74KTIHOW",
            "PolicyName": "AWSDirectConnectFullAccess",
            "VersionId": "v3"
        },
        "AWSDirectConnectReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "directconnect:Describe*",
                            "directconnect:List*",
                            "ec2:DescribeVpnGateways",
                            "ec2:DescribeTransitGateways"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI23HZ27SI6FQMGNQ2",
            "PolicyName": "AWSDirectConnectReadOnlyAccess",
            "VersionId": "v4"
        },
        "AWSDirectoryServiceFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ds:*",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:DescribeSecurityGroups",
                            "sns:GetTopicAttributes",
                            "sns:ListSubscriptions",
                            "sns:ListSubscriptionsByTopic",
                            "sns:ListTopics",
                            "iam:ListRoles",
                            "organizations:ListAccountsForParent",
                            "organizations:ListRoots",
                            "organizations:ListAccounts",
                            "organizations:DescribeOrganization",
                            "organizations:DescribeAccount",
                            "organizations:ListOrganizationalUnitsForParent",
                            "organizations:ListAWSServiceAccessForOrganization"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sns:CreateTopic",
                            "sns:DeleteTopic",
                            "sns:SetTopicAttributes",
                            "sns:Subscribe",
                            "sns:Unsubscribe"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:DirectoryMonitoring*"
                    },
                    {
                        "Action": [
                            "organizations:EnableAWSServiceAccess",
                            "organizations:DisableAWSServiceAccess"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "organizations:ServicePrincipal": "ds.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:network-interface/*",
                            "arn:aws:ec2:*:*:security-group/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAINAW5ANUWTH3R4ANI",
            "PolicyName": "AWSDirectoryServiceFullAccess",
            "VersionId": "v5"
        },
        "AWSDirectoryServiceReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ds:Check*",
                            "ds:Describe*",
                            "ds:Get*",
                            "ds:List*",
                            "ds:Verify*",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "sns:ListTopics",
                            "sns:GetTopicAttributes",
                            "sns:ListSubscriptions",
                            "sns:ListSubscriptionsByTopic",
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "organizations:ListAWSServiceAccessForOrganization"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIHWYO6WSDNCG64M2W",
            "PolicyName": "AWSDirectoryServiceReadOnlyAccess",
            "VersionId": "v4"
        },
        "AWSDiscoveryContinuousExportFirehosePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "glue:GetTableVersions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:AbortMultipartUpload",
                            "s3:GetBucketLocation",
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:ListBucketMultipartUploads",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-application-discovery-service-*",
                            "arn:aws:s3:::aws-application-discovery-service-*/*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/application-discovery-service/firehose:log-stream:*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIX6FHUTEUNXYDFZ7C",
            "PolicyName": "AWSDiscoveryContinuousExportFirehosePolicy",
            "VersionId": "v1"
        },
        "AWSEC2FleetServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeImages",
                            "ec2:DescribeSubnets",
                            "ec2:RequestSpotInstances",
                            "ec2:DescribeInstanceStatus",
                            "ec2:RunInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "spot.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "EC2SpotManagement"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com",
                                    "ec2.amazonaws.com.cn"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*",
                            "arn:aws:ec2:*:*:spot-instances-request/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "ec2:CreateAction": "RunInstances"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:volume/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:ec2:fleet-id": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJCL355O4TC27CPKVC",
            "PolicyName": "AWSEC2FleetServiceRolePolicy",
            "VersionId": "v3"
        },
        "AWSEC2SpotFleetServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeImages",
                            "ec2:DescribeSubnets",
                            "ec2:RequestSpotInstances",
                            "ec2:DescribeInstanceStatus",
                            "ec2:RunInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com",
                                    "ec2.amazonaws.com.cn"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*",
                            "arn:aws:ec2:*:*:spot-instances-request/*",
                            "arn:aws:ec2:*:*:spot-fleet-request/*",
                            "arn:aws:ec2:*:*:volume/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:ec2spot:fleet-request-id": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:elasticloadbalancing:*:*:loadbalancer/*"
                        ]
                    },
                    {
                        "Action": [
                            "elasticloadbalancing:RegisterTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:elasticloadbalancing:*:*:*/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAILWCVTZD57EMYWMBO",
            "PolicyName": "AWSEC2SpotFleetServiceRolePolicy",
            "VersionId": "v4"
        },
        "AWSEC2SpotServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeInstances",
                            "ec2:StartInstances",
                            "ec2:StopInstances",
                            "ec2:RunInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:RunInstances"
                        ],
                        "Condition": {
                            "StringNotEquals": {
                                "ec2:InstanceMarketType": "spot"
                            }
                        },
                        "Effect": "Deny",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com",
                                    "ec2.amazonaws.com.cn"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "ec2:CreateAction": "RunInstances"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIZJJBQNXQYVKTEXGM",
            "PolicyName": "AWSEC2SpotServiceRolePolicy",
            "VersionId": "v4"
        },
        "AWSElasticBeanstalkCustomPlatformforEC2Role": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AttachVolume",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CopyImage",
                            "ec2:CreateImage",
                            "ec2:CreateKeypair",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSnapshot",
                            "ec2:CreateTags",
                            "ec2:CreateVolume",
                            "ec2:DeleteKeypair",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DeleteSnapshot",
                            "ec2:DeleteVolume",
                            "ec2:DeregisterImage",
                            "ec2:DescribeImageAttribute",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstances",
                            "ec2:DescribeRegions",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeTags",
                            "ec2:DescribeVolumes",
                            "ec2:DetachVolume",
                            "ec2:GetPasswordData",
                            "ec2:ModifyImageAttribute",
                            "ec2:ModifyInstanceAttribute",
                            "ec2:ModifySnapshotAttribute",
                            "ec2:RegisterImage",
                            "ec2:RunInstances",
                            "ec2:StopInstances",
                            "ec2:TerminateInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "EC2Access"
                    },
                    {
                        "Action": [
                            "s3:Get*",
                            "s3:List*",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::elasticbeanstalk-*",
                            "arn:aws:s3:::elasticbeanstalk-*/*"
                        ],
                        "Sid": "BucketAccess"
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk/platform/*",
                        "Sid": "CloudWatchLogsAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJRVFXSS6LEIQGBKDY",
            "PolicyName": "AWSElasticBeanstalkCustomPlatformforEC2Role",
            "VersionId": "v1"
        },
        "AWSElasticBeanstalkEnhancedHealth": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elasticloadbalancing:DescribeInstanceHealth",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeTargetHealth",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInstanceStatus",
                            "ec2:GetConsoleOutput",
                            "ec2:AssociateAddress",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeSecurityGroups",
                            "sqs:GetQueueAttributes",
                            "sqs:GetQueueUrl",
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribeAutoScalingInstances",
                            "autoscaling:DescribeScalingActivities",
                            "autoscaling:DescribeNotificationConfigurations",
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:DescribeLogStreams",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk/*:log-stream:*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIH5EFJNMOGUUTKLFE",
            "PolicyName": "AWSElasticBeanstalkEnhancedHealth",
            "VersionId": "v4"
        },
        "AWSElasticBeanstalkFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elasticbeanstalk:*",
                            "ec2:*",
                            "ecs:*",
                            "ecr:*",
                            "elasticloadbalancing:*",
                            "autoscaling:*",
                            "cloudwatch:*",
                            "s3:*",
                            "sns:*",
                            "cloudformation:*",
                            "dynamodb:*",
                            "rds:*",
                            "sqs:*",
                            "logs:*",
                            "iam:GetPolicyVersion",
                            "iam:GetRole",
                            "iam:PassRole",
                            "iam:ListRolePolicies",
                            "iam:ListAttachedRolePolicies",
                            "iam:ListInstanceProfiles",
                            "iam:ListRoles",
                            "iam:ListServerCertificates",
                            "acm:DescribeCertificate",
                            "acm:ListCertificates",
                            "codebuild:CreateProject",
                            "codebuild:DeleteProject",
                            "codebuild:BatchGetBuilds",
                            "codebuild:StartBuild"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:AddRoleToInstanceProfile",
                            "iam:CreateInstanceProfile",
                            "iam:CreateRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-elasticbeanstalk*",
                            "arn:aws:iam::*:instance-profile/aws-elasticbeanstalk*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "autoscaling.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "elasticbeanstalk.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/elasticbeanstalk.amazonaws.com/AWSServiceRoleForElasticBeanstalk*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:AttachRolePolicy"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PolicyArn": [
                                    "arn:aws:iam::aws:policy/AWSElasticBeanstalk*",
                                    "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalk*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-elasticbeanstalk*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIZYX2YLLBW2LJVUFW",
            "PolicyName": "AWSElasticBeanstalkFullAccess",
            "VersionId": "v8"
        },
        "AWSElasticBeanstalkMaintenance": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:CreateChangeSet",
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:ExecuteChangeSet",
                            "cloudformation:DeleteChangeSet",
                            "cloudformation:ListChangeSets",
                            "cloudformation:DescribeStacks"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/awseb-*",
                            "arn:aws:cloudformation:*:*:stack/eb-*"
                        ],
                        "Sid": "AllowCloudformationChangeSetOperationsOnElasticBeanstalkStacks"
                    },
                    {
                        "Action": "elasticloadbalancing:DescribeLoadBalancers",
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowElasticBeanstalkStacksUpdateExecuteSuccessfully"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQPH22XGBH2VV2LSW",
            "PolicyName": "AWSElasticBeanstalkMaintenance",
            "VersionId": "v2"
        },
        "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringLikeIfExists": {
                                "iam:PassedToService": [
                                    "elasticbeanstalk.amazonaws.com",
                                    "ec2.amazonaws.com",
                                    "autoscaling.amazonaws.com",
                                    "elasticloadbalancing.amazonaws.com",
                                    "ecs.amazonaws.com",
                                    "cloudformation.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowPassRoleToElasticBeanstalkAndDownstreamServices"
                    },
                    {
                        "Action": [
                            "ec2:releaseAddress",
                            "ec2:allocateAddress",
                            "ec2:DisassociateAddress",
                            "ec2:AssociateAddress"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SingleInstanceAPIs"
                    },
                    {
                        "Action": [
                            "ecs:RegisterTaskDefinition",
                            "ecs:DeRegisterTaskDefinition",
                            "ecs:List*",
                            "ecs:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ECS"
                    },
                    {
                        "Action": [
                            "elasticbeanstalk:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ElasticBeanstalkAPIs"
                    },
                    {
                        "Action": [
                            "cloudformation:Describe*",
                            "cloudformation:List*",
                            "ec2:Describe*",
                            "autoscaling:Describe*",
                            "elasticloadbalancing:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ReadOnlyAPIs"
                    },
                    {
                        "Action": [
                            "autoscaling:AttachInstances",
                            "autoscaling:CreateAutoScalingGroup",
                            "autoscaling:CreateLaunchConfiguration",
                            "autoscaling:DeleteAutoScalingGroup",
                            "autoscaling:DeleteLaunchConfiguration",
                            "autoscaling:DeleteScheduledAction",
                            "autoscaling:DetachInstances",
                            "autoscaling:PutNotificationConfiguration",
                            "autoscaling:PutScalingPolicy",
                            "autoscaling:PutScheduledUpdateGroupAction",
                            "autoscaling:ResumeProcesses",
                            "autoscaling:SuspendProcesses",
                            "autoscaling:TerminateInstanceInAutoScalingGroup",
                            "autoscaling:UpdateAutoScalingGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/awseb-e-*",
                            "arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/awseb-e-*",
                            "arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/eb-*",
                            "arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/eb-*"
                        ],
                        "Sid": "ASG"
                    },
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:CancelUpdateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:GetTemplate",
                            "cloudformation:UpdateStack"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/awseb-e-*",
                            "arn:aws:cloudformation:*:*:stack/eb-*"
                        ],
                        "Sid": "CFN"
                    },
                    {
                        "Action": [
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:cloudformation:stack-id": [
                                    "arn:aws:cloudformation:*:*:stack/awseb-e-*",
                                    "arn:aws:cloudformation:*:*:stack/eb-*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*",
                        "Sid": "EC2"
                    },
                    {
                        "Action": [
                            "s3:DeleteObject",
                            "s3:GetObject",
                            "s3:GetObjectAcl",
                            "s3:GetObjectVersion",
                            "s3:GetObjectVersionAcl",
                            "s3:PutObject",
                            "s3:PutObjectAcl",
                            "s3:PutObjectVersionAcl"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::elasticbeanstalk-*/*",
                        "Sid": "S3Obj"
                    },
                    {
                        "Action": [
                            "s3:GetBucketLocation",
                            "s3:GetBucketPolicy",
                            "s3:ListBucket",
                            "s3:PutBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::elasticbeanstalk-*",
                        "Sid": "S3Bucket"
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:DeleteLogGroup",
                            "logs:DescribeLogGroups",
                            "logs:PutRetentionPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk/*",
                        "Sid": "CWL"
                    },
                    {
                        "Action": [
                            "elasticloadbalancing:RegisterTargets",
                            "elasticloadbalancing:DeRegisterTargets",
                            "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                            "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:elasticloadbalancing:*:*:targetgroup/awseb-*",
                            "arn:aws:elasticloadbalancing:*:*:loadbalancer/awseb-e-*",
                            "arn:aws:elasticloadbalancing:*:*:targetgroup/eb-*",
                            "arn:aws:elasticloadbalancing:*:*:loadbalancer/eb-*"
                        ],
                        "Sid": "ELB"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4HVFNJB4NR",
            "PolicyName": "AWSElasticBeanstalkManagedUpdatesServiceRolePolicy",
            "VersionId": "v4"
        },
        "AWSElasticBeanstalkMulticontainerDocker": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecs:Poll",
                            "ecs:StartTask",
                            "ecs:StopTask",
                            "ecs:DiscoverPollEndpoint",
                            "ecs:StartTelemetrySession",
                            "ecs:RegisterContainerInstance",
                            "ecs:DeregisterContainerInstance",
                            "ecs:DescribeContainerInstances",
                            "ecs:Submit*",
                            "ecs:DescribeTasks"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ECSAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ45SBYG72SD6SHJEY",
            "PolicyName": "AWSElasticBeanstalkMulticontainerDocker",
            "VersionId": "v2"
        },
        "AWSElasticBeanstalkReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elasticbeanstalk:Check*",
                            "elasticbeanstalk:Describe*",
                            "elasticbeanstalk:List*",
                            "elasticbeanstalk:RequestEnvironmentInfo",
                            "elasticbeanstalk:RetrieveEnvironmentInfo",
                            "ec2:Describe*",
                            "elasticloadbalancing:Describe*",
                            "autoscaling:Describe*",
                            "cloudwatch:Describe*",
                            "cloudwatch:List*",
                            "cloudwatch:Get*",
                            "s3:Get*",
                            "s3:List*",
                            "sns:Get*",
                            "sns:List*",
                            "cloudformation:Describe*",
                            "cloudformation:Get*",
                            "cloudformation:List*",
                            "cloudformation:Validate*",
                            "cloudformation:Estimate*",
                            "rds:Describe*",
                            "sqs:Get*",
                            "sqs:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI47KNGXDAXFD4SDHG",
            "PolicyName": "AWSElasticBeanstalkReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSElasticBeanstalkRoleCWL": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:DeleteLogGroup",
                            "logs:PutRetentionPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk/*",
                        "Sid": "AllowCWL"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4G4S2QMTW3",
            "PolicyName": "AWSElasticBeanstalkRoleCWL",
            "VersionId": "v1"
        },
        "AWSElasticBeanstalkRoleCore": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:cloudformation:stack-id": "arn:aws:cloudformation:*:*:stack/awseb-e-*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*",
                        "Sid": "TerminateInstances"
                    },
                    {
                        "Action": [
                            "ec2:ReleaseAddress",
                            "ec2:AllocateAddress",
                            "ec2:DisassociateAddress",
                            "ec2:AssociateAddress",
                            "ec2:CreateTags",
                            "ec2:DeleteTags",
                            "ec2:CreateSecurityGroup",
                            "ec2:DeleteSecurityGroup",
                            "ec2:AuthorizeSecurityGroup*",
                            "ec2:RevokeSecurityGroup*",
                            "ec2:CreateLaunchTemplate*",
                            "ec2:DeleteLaunchTemplate*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "EC2"
                    },
                    {
                        "Action": "ec2:RunInstances",
                        "Condition": {
                            "ArnLike": {
                                "ec2:LaunchTemplate": "arn:aws:ec2:*:*:launch-template/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "LTRunInstances"
                    },
                    {
                        "Action": [
                            "autoscaling:AttachInstances",
                            "autoscaling:*LoadBalancer*",
                            "autoscaling:*AutoScalingGroup",
                            "autoscaling:*LaunchConfiguration",
                            "autoscaling:DeleteScheduledAction",
                            "autoscaling:DetachInstances",
                            "autoscaling:PutNotificationConfiguration",
                            "autoscaling:PutScalingPolicy",
                            "autoscaling:PutScheduledUpdateGroupAction",
                            "autoscaling:ResumeProcesses",
                            "autoscaling:SuspendProcesses",
                            "autoscaling:*Tags"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/awseb-e-*",
                            "arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/awseb-e-*"
                        ],
                        "Sid": "ASG"
                    },
                    {
                        "Action": [
                            "autoscaling:DeletePolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "ASGPolicy"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "elasticbeanstalk.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/elasticbeanstalk.amazonaws.com/AWSServiceRoleForElasticBeanstalk*"
                        ],
                        "Sid": "EBSLR"
                    },
                    {
                        "Action": [
                            "s3:Delete*",
                            "s3:Get*",
                            "s3:Put*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::elasticbeanstalk-*/*",
                            "arn:aws:s3:::elasticbeanstalk-env-resources-*/*"
                        ],
                        "Sid": "S3Obj"
                    },
                    {
                        "Action": [
                            "s3:GetBucket*",
                            "s3:ListBucket",
                            "s3:PutBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::elasticbeanstalk-*",
                        "Sid": "S3Bucket"
                    },
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:GetTemplate",
                            "cloudformation:ListStackResources",
                            "cloudformation:UpdateStack",
                            "cloudformation:ContinueUpdateRollback",
                            "cloudformation:CancelUpdateStack"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/awseb-e-*",
                        "Sid": "CFN"
                    },
                    {
                        "Action": [
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudwatch:*:*:alarm:awseb-*",
                        "Sid": "CloudWatch"
                    },
                    {
                        "Action": [
                            "elasticloadbalancing:Create*",
                            "elasticloadbalancing:Delete*",
                            "elasticloadbalancing:Modify*",
                            "elasticloadbalancing:RegisterTargets",
                            "elasticloadbalancing:DeRegisterTargets",
                            "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                            "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                            "elasticloadbalancing:*Tags",
                            "elasticloadbalancing:ConfigureHealthCheck",
                            "elasticloadbalancing:SetRulePriorities",
                            "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:elasticloadbalancing:*:*:targetgroup/awseb-*",
                            "arn:aws:elasticloadbalancing:*:*:loadbalancer/awseb-*",
                            "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/awseb-*/*",
                            "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/awseb-*/*",
                            "arn:aws:elasticloadbalancing:*:*:listener/awseb-*",
                            "arn:aws:elasticloadbalancing:*:*:listener/app/awseb-*",
                            "arn:aws:elasticloadbalancing:*:*:listener/net/awseb-*",
                            "arn:aws:elasticloadbalancing:*:*:listener-rule/app/awseb-*/*/*/*"
                        ],
                        "Sid": "ELB"
                    },
                    {
                        "Action": [
                            "autoscaling:Describe*",
                            "cloudformation:Describe*",
                            "logs:Describe*",
                            "ec2:Describe*",
                            "ecs:Describe*",
                            "ecs:List*",
                            "elasticloadbalancing:Describe*",
                            "rds:Describe*",
                            "sns:List*",
                            "iam:List*",
                            "acm:Describe*",
                            "acm:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ListAPIs"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "elasticbeanstalk.amazonaws.com",
                                    "ec2.amazonaws.com",
                                    "autoscaling.amazonaws.com",
                                    "elasticloadbalancing.amazonaws.com",
                                    "ecs.amazonaws.com",
                                    "cloudformation.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-elasticbeanstalk-*",
                        "Sid": "AllowPassRole"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4OXQ5DMW6K",
            "PolicyName": "AWSElasticBeanstalkRoleCore",
            "VersionId": "v2"
        },
        "AWSElasticBeanstalkRoleECS": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecs:CreateCluster",
                            "ecs:DeleteCluster",
                            "ecs:RegisterTaskDefinition",
                            "ecs:DeRegisterTaskDefinition"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AllowECS"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ORP4E3ZEZ",
            "PolicyName": "AWSElasticBeanstalkRoleECS",
            "VersionId": "v1"
        },
        "AWSElasticBeanstalkRoleRDS": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rds:CreateDBSecurityGroup",
                            "rds:DeleteDBSecurityGroup",
                            "rds:AuthorizeDBSecurityGroupIngress",
                            "rds:CreateDBInstance",
                            "rds:ModifyDBInstance",
                            "rds:DeleteDBInstance"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:rds:*:*:secgrp:awseb-e-*",
                            "arn:aws:rds:*:*:db:*"
                        ],
                        "Sid": "AllowRDS"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4G5JWEESE4",
            "PolicyName": "AWSElasticBeanstalkRoleRDS",
            "VersionId": "v1"
        },
        "AWSElasticBeanstalkRoleSNS": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sns:CreateTopic",
                            "sns:SetTopicAttributes",
                            "sns:DeleteTopic"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sns:*:*:ElasticBeanstalkNotifications-*"
                        ],
                        "Sid": "AllowBeanstalkManageSNS"
                    },
                    {
                        "Action": [
                            "sns:GetTopicAttributes",
                            "sns:Subscribe",
                            "sns:Unsubscribe",
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowSNSPublish"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4PARPZJ2UZ",
            "PolicyName": "AWSElasticBeanstalkRoleSNS",
            "VersionId": "v1"
        },
        "AWSElasticBeanstalkRoleWorkerTier": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sqs:TagQueue",
                            "sqs:DeleteQueue",
                            "sqs:GetQueueAttributes",
                            "sqs:CreateQueue"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sqs:*:*:awseb-e-*",
                        "Sid": "AllowSQS"
                    },
                    {
                        "Action": [
                            "dynamodb:CreateTable",
                            "dynamodb:TagResource",
                            "dynamodb:DescribeTable",
                            "dynamodb:DeleteTable"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:dynamodb:*:*:table/awseb-e-*",
                        "Sid": "AllowDDB"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LTO4NS2Z5",
            "PolicyName": "AWSElasticBeanstalkRoleWorkerTier",
            "VersionId": "v1"
        },
        "AWSElasticBeanstalkService": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/awseb-*",
                            "arn:aws:cloudformation:*:*:stack/eb-*"
                        ],
                        "Sid": "AllowCloudformationOperationsOnElasticBeanstalkStacks"
                    },
                    {
                        "Action": [
                            "logs:DeleteLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk*"
                        ],
                        "Sid": "AllowDeleteCloudwatchLogGroups"
                    },
                    {
                        "Action": [
                            "s3:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::elasticbeanstalk-*",
                            "arn:aws:s3:::elasticbeanstalk-*/*"
                        ],
                        "Sid": "AllowS3OperationsOnElasticBeanstalkBuckets"
                    },
                    {
                        "Action": "ec2:RunInstances",
                        "Condition": {
                            "ArnLike": {
                                "ec2:LaunchTemplate": "arn:aws:ec2:*:*:launch-template/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowLaunchTemplateRunInstances"
                    },
                    {
                        "Action": [
                            "autoscaling:AttachInstances",
                            "autoscaling:CreateAutoScalingGroup",
                            "autoscaling:CreateLaunchConfiguration",
                            "autoscaling:DeleteLaunchConfiguration",
                            "autoscaling:DeleteAutoScalingGroup",
                            "autoscaling:DeleteScheduledAction",
                            "autoscaling:DescribeAccountLimits",
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribeAutoScalingInstances",
                            "autoscaling:DescribeLaunchConfigurations",
                            "autoscaling:DescribeLoadBalancers",
                            "autoscaling:DescribeNotificationConfigurations",
                            "autoscaling:DescribeScalingActivities",
                            "autoscaling:DescribeScheduledActions",
                            "autoscaling:DetachInstances",
                            "autoscaling:DeletePolicy",
                            "autoscaling:PutScalingPolicy",
                            "autoscaling:PutScheduledUpdateGroupAction",
                            "autoscaling:PutNotificationConfiguration",
                            "autoscaling:ResumeProcesses",
                            "autoscaling:SetDesiredCapacity",
                            "autoscaling:SuspendProcesses",
                            "autoscaling:TerminateInstanceInAutoScalingGroup",
                            "autoscaling:UpdateAutoScalingGroup",
                            "cloudwatch:PutMetricAlarm",
                            "ec2:AssociateAddress",
                            "ec2:AllocateAddress",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateLaunchTemplate",
                            "ec2:CreateLaunchTemplateVersion",
                            "ec2:DescribeLaunchTemplates",
                            "ec2:DescribeLaunchTemplateVersions",
                            "ec2:DeleteLaunchTemplate",
                            "ec2:DeleteLaunchTemplateVersions",
                            "ec2:CreateSecurityGroup",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstances",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeInstanceAttribute",
                            "ec2:DescribeSpotInstanceRequests",
                            "ec2:DescribeVpcClassicLink",
                            "ec2:DisassociateAddress",
                            "ec2:ReleaseAddress",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:TerminateInstances",
                            "ecs:CreateCluster",
                            "ecs:DeleteCluster",
                            "ecs:DescribeClusters",
                            "ecs:RegisterTaskDefinition",
                            "elasticbeanstalk:*",
                            "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
                            "elasticloadbalancing:ConfigureHealthCheck",
                            "elasticloadbalancing:CreateLoadBalancer",
                            "elasticloadbalancing:DeleteLoadBalancer",
                            "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                            "elasticloadbalancing:DescribeInstanceHealth",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeTargetHealth",
                            "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                            "elasticloadbalancing:DescribeTargetGroups",
                            "elasticloadbalancing:RegisterTargets",
                            "elasticloadbalancing:DeregisterTargets",
                            "iam:ListRoles",
                            "iam:PassRole",
                            "logs:CreateLogGroup",
                            "logs:PutRetentionPolicy",
                            "logs:DescribeLogGroups",
                            "rds:DescribeDBEngineVersions",
                            "rds:DescribeDBInstances",
                            "rds:DescribeOrderableDBInstanceOptions",
                            "s3:GetObject",
                            "s3:GetObjectAcl",
                            "s3:ListBucket",
                            "sns:CreateTopic",
                            "sns:GetTopicAttributes",
                            "sns:ListSubscriptionsByTopic",
                            "sns:Subscribe",
                            "sns:SetTopicAttributes",
                            "sqs:GetQueueAttributes",
                            "sqs:GetQueueUrl",
                            "codebuild:CreateProject",
                            "codebuild:DeleteProject",
                            "codebuild:BatchGetBuilds",
                            "codebuild:StartBuild"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AllowOperations"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJKQ5SN74ZQ4WASXBM",
            "PolicyName": "AWSElasticBeanstalkService",
            "VersionId": "v16"
        },
        "AWSElasticBeanstalkServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:DescribeStackResource",
                            "cloudformation:DescribeStackResources",
                            "cloudformation:DescribeStacks"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/awseb-*",
                            "arn:aws:cloudformation:*:*:stack/eb-*"
                        ],
                        "Sid": "AllowCloudformationReadOperationsOnElasticBeanstalkStacks"
                    },
                    {
                        "Action": [
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribeAutoScalingInstances",
                            "autoscaling:DescribeNotificationConfigurations",
                            "autoscaling:DescribeScalingActivities",
                            "autoscaling:PutNotificationConfiguration",
                            "ec2:DescribeInstanceStatus",
                            "ec2:AssociateAddress",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeInstances",
                            "ec2:DescribeSecurityGroups",
                            "elasticloadbalancing:DescribeInstanceHealth",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeTargetHealth",
                            "elasticloadbalancing:DescribeTargetGroups",
                            "lambda:GetFunction",
                            "sqs:GetQueueAttributes",
                            "sqs:GetQueueUrl",
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AllowOperations"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:DeleteLogGroup",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk/*",
                        "Sid": "AllowOperationsOnHealthStreamingLogs"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIID62QSI3OSIPQXTM",
            "PolicyName": "AWSElasticBeanstalkServiceRolePolicy",
            "VersionId": "v6"
        },
        "AWSElasticBeanstalkWebTier": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:Get*",
                            "s3:List*",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::elasticbeanstalk-*",
                            "arn:aws:s3:::elasticbeanstalk-*/*"
                        ],
                        "Sid": "BucketAccess"
                    },
                    {
                        "Action": [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords",
                            "xray:GetSamplingRules",
                            "xray:GetSamplingTargets",
                            "xray:GetSamplingStatisticSummaries"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "XRayAccess"
                    },
                    {
                        "Action": [
                            "logs:PutLogEvents",
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams",
                            "logs:DescribeLogGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk*"
                        ],
                        "Sid": "CloudWatchLogsAccess"
                    },
                    {
                        "Action": [
                            "elasticbeanstalk:PutInstanceStatistics"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:elasticbeanstalk:*:*:application/*",
                            "arn:aws:elasticbeanstalk:*:*:environment/*"
                        ],
                        "Sid": "ElasticBeanstalkHealthAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIUF4325SJYOREKW3A",
            "PolicyName": "AWSElasticBeanstalkWebTier",
            "VersionId": "v7"
        },
        "AWSElasticBeanstalkWorkerTier": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:PutMetricData"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "MetricsAccess"
                    },
                    {
                        "Action": [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords",
                            "xray:GetSamplingRules",
                            "xray:GetSamplingTargets",
                            "xray:GetSamplingStatisticSummaries"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "XRayAccess"
                    },
                    {
                        "Action": [
                            "sqs:ChangeMessageVisibility",
                            "sqs:DeleteMessage",
                            "sqs:ReceiveMessage",
                            "sqs:SendMessage"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "QueueAccess"
                    },
                    {
                        "Action": [
                            "s3:Get*",
                            "s3:List*",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::elasticbeanstalk-*",
                            "arn:aws:s3:::elasticbeanstalk-*/*"
                        ],
                        "Sid": "BucketAccess"
                    },
                    {
                        "Action": [
                            "dynamodb:BatchGetItem",
                            "dynamodb:BatchWriteItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:GetItem",
                            "dynamodb:PutItem",
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "dynamodb:UpdateItem"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:dynamodb:*:*:table/*-stack-AWSEBWorkerCronLeaderRegistry*"
                        ],
                        "Sid": "DynamoPeriodicTasks"
                    },
                    {
                        "Action": [
                            "logs:PutLogEvents",
                            "logs:CreateLogStream"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk*"
                        ],
                        "Sid": "CloudWatchLogsAccess"
                    },
                    {
                        "Action": [
                            "elasticbeanstalk:PutInstanceStatistics"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:elasticbeanstalk:*:*:application/*",
                            "arn:aws:elasticbeanstalk:*:*:environment/*"
                        ],
                        "Sid": "ElasticBeanstalkHealthAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQDLBRSJVKVF4JMSK",
            "PolicyName": "AWSElasticBeanstalkWorkerTier",
            "VersionId": "v6"
        },
        "AWSElasticLoadBalancingClassicServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeAddresses",
                            "ec2:DescribeInstances",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeClassicLinkInstances",
                            "ec2:DescribeVpcClassicLink",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:AssociateAddress",
                            "ec2:DisassociateAddress",
                            "ec2:AttachNetworkInterface",
                            "ec2:DetachNetworkInterface",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:AssignIpv6Addresses",
                            "ec2:UnassignIpv6Addresses"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIUMWW3QP7DPZPNVU4",
            "PolicyName": "AWSElasticLoadBalancingClassicServiceRolePolicy",
            "VersionId": "v2"
        },
        "AWSElasticLoadBalancingServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeAddresses",
                            "ec2:DescribeCoipPools",
                            "ec2:DescribeInstances",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeClassicLinkInstances",
                            "ec2:DescribeVpcClassicLink",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:GetCoipPoolUsage",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:AllocateAddress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:AssociateAddress",
                            "ec2:DisassociateAddress",
                            "ec2:AttachNetworkInterface",
                            "ec2:DetachNetworkInterface",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:AssignIpv6Addresses",
                            "ec2:ReleaseAddress",
                            "ec2:UnassignIpv6Addresses",
                            "logs:CreateLogDelivery",
                            "logs:GetLogDelivery",
                            "logs:UpdateLogDelivery",
                            "logs:DeleteLogDelivery",
                            "logs:ListLogDeliveries",
                            "outposts:GetOutpostInstanceTypes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIMHWGGSRHLOQUICJQ",
            "PolicyName": "AWSElasticLoadBalancingServiceRolePolicy",
            "VersionId": "v6"
        },
        "AWSElementalMediaConvertFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mediaconvert:*",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "mediaconvert.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIXDREOCL6LV7RBJWC",
            "PolicyName": "AWSElementalMediaConvertFullAccess",
            "VersionId": "v2"
        },
        "AWSElementalMediaConvertReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mediaconvert:Get*",
                            "mediaconvert:List*",
                            "mediaconvert:DescribeEndpoints",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJSXYOBSLJN3JEDO42",
            "PolicyName": "AWSElementalMediaConvertReadOnly",
            "VersionId": "v2"
        },
        "AWSElementalMediaLiveFullAccess": {
            "Document": {
                "Statement": {
                    "Action": "medialive:*",
                    "Effect": "Allow",
                    "Resource": "*"
                },
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4K5KSJBKUE",
            "PolicyName": "AWSElementalMediaLiveFullAccess",
            "VersionId": "v1"
        },
        "AWSElementalMediaLiveReadOnly": {
            "Document": {
                "Statement": {
                    "Action": [
                        "medialive:List*",
                        "medialive:Describe*"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                },
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4L7DTGZPRO",
            "PolicyName": "AWSElementalMediaLiveReadOnly",
            "VersionId": "v1"
        },
        "AWSElementalMediaPackageFullAccess": {
            "Document": {
                "Statement": {
                    "Action": "mediapackage:*",
                    "Effect": "Allow",
                    "Resource": "*"
                },
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIYI6IYR3JRFAVNQHC",
            "PolicyName": "AWSElementalMediaPackageFullAccess",
            "VersionId": "v1"
        },
        "AWSElementalMediaPackageReadOnly": {
            "Document": {
                "Statement": {
                    "Action": [
                        "mediapackage:List*",
                        "mediapackage:Describe*"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                },
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ42DVTPUHKXNYZQCO",
            "PolicyName": "AWSElementalMediaPackageReadOnly",
            "VersionId": "v1"
        },
        "AWSElementalMediaStoreFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mediastore:*"
                        ],
                        "Condition": {
                            "Bool": {
                                "aws:SecureTransport": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJZFYFW2QXSNK7OH6Y",
            "PolicyName": "AWSElementalMediaStoreFullAccess",
            "VersionId": "v1"
        },
        "AWSElementalMediaStoreReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mediastore:Get*",
                            "mediastore:List*",
                            "mediastore:Describe*"
                        ],
                        "Condition": {
                            "Bool": {
                                "aws:SecureTransport": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI4EFXRATQYOFTAEFM",
            "PolicyName": "AWSElementalMediaStoreReadOnly",
            "VersionId": "v1"
        },
        "AWSEnhancedClassicNetworkingMangementPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeInstances",
                            "ec2:DescribeSecurityGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI7T4V2HZTS72QVO52",
            "PolicyName": "AWSEnhancedClassicNetworkingMangementPolicy",
            "VersionId": "v1"
        },
        "AWSFMAdminFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "fms:*",
                            "waf:*",
                            "waf-regional:*",
                            "elasticloadbalancing:SetWebACL",
                            "organizations:DescribeOrganization"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJLAGM5X6WSNPF4EAQ",
            "PolicyName": "AWSFMAdminFullAccess",
            "VersionId": "v1"
        },
        "AWSFMAdminReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "fms:Get*",
                            "fms:List*",
                            "waf:Get*",
                            "waf:List*",
                            "waf-regional:Get*",
                            "waf-regional:List*",
                            "organizations:DescribeOrganization"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJA3UKVVBN62QFIKLW",
            "PolicyName": "AWSFMAdminReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSFMMemberReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "fms:GetAdminAccount",
                            "waf:Get*",
                            "waf:List*",
                            "waf-regional:Get*",
                            "waf-regional:List*",
                            "organizations:DescribeOrganization"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIB2IVAQ4XXNHHA3DW",
            "PolicyName": "AWSFMMemberReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSForWordPressPluginPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "polly:SynthesizeSpeech",
                            "polly:DescribeVoices",
                            "translate:TranslateText"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "Permissions1"
                    },
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:GetBucketAcl",
                            "s3:GetBucketPolicy",
                            "s3:PutObject",
                            "s3:DeleteObject",
                            "s3:CreateBucket",
                            "s3:PutObjectAcl"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::audio_for_wordpress*",
                            "arn:aws:s3:::audio-for-wordpress*"
                        ],
                        "Sid": "Permissions2"
                    },
                    {
                        "Action": [
                            "acm:AddTagsToCertificate",
                            "acm:DescribeCertificate",
                            "acm:RequestCertificate",
                            "cloudformation:CreateStack",
                            "cloudfront:ListDistributions"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:RequestedRegion": "us-east-1"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "Permissions3"
                    },
                    {
                        "Action": [
                            "acm:DeleteCertificate",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStackResources",
                            "cloudformation:UpdateStack",
                            "cloudfront:CreateDistribution",
                            "cloudfront:CreateInvalidation",
                            "cloudfront:DeleteDistribution",
                            "cloudfront:GetDistribution",
                            "cloudfront:GetInvalidation",
                            "cloudfront:TagResource",
                            "cloudfront:UpdateDistribution"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/createdBy": "AWSForWordPressPlugin"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "Permissions4"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KEKYXDWNJ",
            "PolicyName": "AWSForWordPressPluginPolicy",
            "VersionId": "v2"
        },
        "AWSGlobalAcceleratorSLRPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeSubnets",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DeleteNetworkInterface"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:DeleteSecurityGroup",
                        "Condition": {
                            "StringEquals": {
                                "ec2:ResourceTag/AWSServiceName": "GlobalAccelerator"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateSecurityGroup",
                            "ec2:DescribeSecurityGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "elasticloadbalancing:DescribeLoadBalancers",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:security-group/*",
                            "arn:aws:ec2:*:*:network-interface/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4EJ5ZEQR2C",
            "PolicyName": "AWSGlobalAcceleratorSLRPolicy",
            "VersionId": "v4"
        },
        "AWSGlueConsoleFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "glue:*",
                            "redshift:DescribeClusters",
                            "redshift:DescribeClusterSubnetGroups",
                            "iam:ListRoles",
                            "iam:ListUsers",
                            "iam:ListGroups",
                            "iam:ListRolePolicies",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:ListAttachedRolePolicies",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeInstances",
                            "ec2:DescribeImages",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBSubnetGroups",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "s3:GetBucketAcl",
                            "s3:GetBucketLocation",
                            "cloudformation:DescribeStacks",
                            "cloudformation:GetTemplateSummary",
                            "dynamodb:ListTables",
                            "kms:ListAliases",
                            "kms:DescribeKey",
                            "cloudwatch:GetMetricData",
                            "cloudwatch:ListDashboards"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-glue-*/*",
                            "arn:aws:s3:::*/*aws-glue-*/*",
                            "arn:aws:s3:::aws-glue-*"
                        ]
                    },
                    {
                        "Action": [
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:CreateBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-glue-*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:GetLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:/aws-glue/*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/aws-glue*/*"
                    },
                    {
                        "Action": [
                            "ec2:RunInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*",
                            "arn:aws:ec2:*:*:key-pair/*",
                            "arn:aws:ec2:*:*:image/*",
                            "arn:aws:ec2:*:*:security-group/*",
                            "arn:aws:ec2:*:*:network-interface/*",
                            "arn:aws:ec2:*:*:subnet/*",
                            "arn:aws:ec2:*:*:volume/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:TerminateInstances",
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "ec2:ResourceTag/aws:cloudformation:logical-id": "ZeppelinInstance"
                            },
                            "StringLike": {
                                "ec2:ResourceTag/aws:cloudformation:stack-id": "arn:aws:cloudformation:*:*:stack/aws-glue-*/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "glue.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/AWSGlueServiceRole*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/AWSGlueServiceNotebookRole*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "glue.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AWSGlueServiceRole*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJNZGDEOD7MISOVSVI",
            "PolicyName": "AWSGlueConsoleFullAccess",
            "VersionId": "v12"
        },
        "AWSGlueConsoleSageMakerNotebookFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "glue:*",
                            "redshift:DescribeClusters",
                            "redshift:DescribeClusterSubnetGroups",
                            "iam:ListRoles",
                            "iam:ListRolePolicies",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:ListAttachedRolePolicies",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeInstances",
                            "ec2:DescribeImages",
                            "ec2:CreateNetworkInterface",
                            "ec2:AttachNetworkInterface",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeNetworkInterfaces",
                            "rds:DescribeDBInstances",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "s3:GetBucketAcl",
                            "s3:GetBucketLocation",
                            "cloudformation:DescribeStacks",
                            "cloudformation:GetTemplateSummary",
                            "dynamodb:ListTables",
                            "kms:ListAliases",
                            "kms:DescribeKey",
                            "sagemaker:ListNotebookInstances",
                            "cloudformation:ListStacks",
                            "cloudwatch:GetMetricData",
                            "cloudwatch:ListDashboards"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-glue-*/*",
                            "arn:aws:s3:::*/*aws-glue-*/*",
                            "arn:aws:s3:::aws-glue-*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:CreateBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-glue-*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:GetLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:/aws-glue/*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/aws-glue*/*"
                    },
                    {
                        "Action": [
                            "sagemaker:CreatePresignedNotebookInstanceUrl",
                            "sagemaker:CreateNotebookInstance",
                            "sagemaker:DeleteNotebookInstance",
                            "sagemaker:DescribeNotebookInstance",
                            "sagemaker:StartNotebookInstance",
                            "sagemaker:StopNotebookInstance",
                            "sagemaker:UpdateNotebookInstance",
                            "sagemaker:ListTags"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sagemaker:*:*:notebook-instance/aws-glue-*"
                    },
                    {
                        "Action": [
                            "sagemaker:DescribeNotebookInstanceLifecycleConfig",
                            "sagemaker:CreateNotebookInstanceLifecycleConfig",
                            "sagemaker:DeleteNotebookInstanceLifecycleConfig",
                            "sagemaker:ListNotebookInstanceLifecycleConfigs"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sagemaker:*:*:notebook-instance-lifecycle-config/aws-glue-*"
                    },
                    {
                        "Action": [
                            "ec2:RunInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*",
                            "arn:aws:ec2:*:*:key-pair/*",
                            "arn:aws:ec2:*:*:image/*",
                            "arn:aws:ec2:*:*:security-group/*",
                            "arn:aws:ec2:*:*:network-interface/*",
                            "arn:aws:ec2:*:*:subnet/*",
                            "arn:aws:ec2:*:*:volume/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:TerminateInstances",
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "ec2:ResourceTag/aws:cloudformation:logical-id": "ZeppelinInstance"
                            },
                            "StringLike": {
                                "ec2:ResourceTag/aws:cloudformation:stack-id": "arn:aws:cloudformation:*:*:stack/aws-glue-*/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": [
                            "tag:GetResources"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:TagKeys": "aws-glue-*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "glue.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/AWSGlueServiceRole*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/AWSGlueServiceNotebookRole*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "sagemaker.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/AWSGlueServiceSageMakerNotebookRole*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "glue.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AWSGlueServiceRole*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJELFOHJC42QS3ZSYY",
            "PolicyName": "AWSGlueConsoleSageMakerNotebookFullAccess",
            "VersionId": "v2"
        },
        "AWSGlueDataBrewServiceRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "glue:GetDatabases",
                            "glue:GetPartitions",
                            "glue:GetTable",
                            "glue:GetTables",
                            "glue:GetConnection"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::databrew-public-datasets-*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:CreateNetworkInterface"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "ec2:DeleteNetworkInterface",
                        "Condition": {
                            "StringLike": {
                                "aws:ResourceTag/aws-glue-service-resource": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "aws-glue-service-resource"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:network-interface/*",
                            "arn:aws:ec2:*:*:security-group/*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws-glue-databrew/*"
                        ]
                    },
                    {
                        "Action": [
                            "lakeformation:GetDataAccess"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4HSXDEANHC",
            "PolicyName": "AWSGlueDataBrewServiceRole",
            "VersionId": "v1"
        },
        "AWSGlueSchemaRegistryFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "glue:CreateRegistry",
                            "glue:UpdateRegistry",
                            "glue:DeleteRegistry",
                            "glue:GetRegistry",
                            "glue:ListRegistries",
                            "glue:CreateSchema",
                            "glue:UpdateSchema",
                            "glue:DeleteSchema",
                            "glue:GetSchema",
                            "glue:ListSchemas",
                            "glue:RegisterSchemaVersion",
                            "glue:DeleteSchemaVersions",
                            "glue:GetSchemaByDefinition",
                            "glue:GetSchemaVersion",
                            "glue:GetSchemaVersionsDiff",
                            "glue:ListSchemaVersions",
                            "glue:CheckSchemaVersionValidity",
                            "glue:PutSchemaVersionMetadata",
                            "glue:RemoveSchemaVersionMetadata",
                            "glue:QuerySchemaVersionMetadata"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AWSGlueSchemaRegistryFullAccess"
                    },
                    {
                        "Action": [
                            "glue:GetTags",
                            "glue:TagResource",
                            "glue:UnTagResource"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:glue:*:*:schema/*",
                            "arn:aws:glue:*:*:registry/*"
                        ],
                        "Sid": "AWSGlueSchemaRegistryTagsFullAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4H2OHGXA4A",
            "PolicyName": "AWSGlueSchemaRegistryFullAccess",
            "VersionId": "v1"
        },
        "AWSGlueSchemaRegistryReadonlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "glue:GetRegistry",
                            "glue:ListRegistries",
                            "glue:GetSchema",
                            "glue:ListSchemas",
                            "glue:GetSchemaByDefinition",
                            "glue:GetSchemaVersion",
                            "glue:ListSchemaVersions",
                            "glue:GetSchemaVersionsDiff",
                            "glue:CheckSchemaVersionValidity",
                            "glue:QuerySchemaVersionMetadata",
                            "glue:GetTags"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AWSGlueSchemaRegistryReadonlyAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4B2SFYL4LZ",
            "PolicyName": "AWSGlueSchemaRegistryReadonlyAccess",
            "VersionId": "v1"
        },
        "AWSGlueServiceNotebookRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "glue:CreateDatabase",
                            "glue:CreatePartition",
                            "glue:CreateTable",
                            "glue:DeleteDatabase",
                            "glue:DeletePartition",
                            "glue:DeleteTable",
                            "glue:GetDatabase",
                            "glue:GetDatabases",
                            "glue:GetPartition",
                            "glue:GetPartitions",
                            "glue:GetTable",
                            "glue:GetTableVersions",
                            "glue:GetTables",
                            "glue:UpdateDatabase",
                            "glue:UpdatePartition",
                            "glue:UpdateTable",
                            "glue:CreateConnection",
                            "glue:CreateJob",
                            "glue:DeleteConnection",
                            "glue:DeleteJob",
                            "glue:GetConnection",
                            "glue:GetConnections",
                            "glue:GetDevEndpoint",
                            "glue:GetDevEndpoints",
                            "glue:GetJob",
                            "glue:GetJobs",
                            "glue:UpdateJob",
                            "glue:BatchDeleteConnection",
                            "glue:UpdateConnection",
                            "glue:GetUserDefinedFunction",
                            "glue:UpdateUserDefinedFunction",
                            "glue:GetUserDefinedFunctions",
                            "glue:DeleteUserDefinedFunction",
                            "glue:CreateUserDefinedFunction",
                            "glue:BatchGetPartition",
                            "glue:BatchDeletePartition",
                            "glue:BatchCreatePartition",
                            "glue:BatchDeleteTable",
                            "glue:UpdateDevEndpoint",
                            "s3:GetBucketLocation",
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketAcl"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::crawler-public*",
                            "arn:aws:s3:::aws-glue*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:PutObject",
                            "s3:DeleteObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-glue*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "aws-glue-service-resource"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:network-interface/*",
                            "arn:aws:ec2:*:*:security-group/*",
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIMRC6VZUHJYCTKWFI",
            "PolicyName": "AWSGlueServiceNotebookRole",
            "VersionId": "v3"
        },
        "AWSGlueServiceRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "glue:*",
                            "s3:GetBucketLocation",
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketAcl",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeRouteTables",
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "iam:ListRolePolicies",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "cloudwatch:PutMetricData"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:CreateBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-glue-*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:DeleteObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-glue-*/*",
                            "arn:aws:s3:::*/*aws-glue-*/*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::crawler-public*",
                            "arn:aws:s3:::aws-glue-*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:/aws-glue/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "aws-glue-service-resource"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:network-interface/*",
                            "arn:aws:ec2:*:*:security-group/*",
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIRUJCPEBPMEZFAS32",
            "PolicyName": "AWSGlueServiceRole",
            "VersionId": "v4"
        },
        "AWSGreengrassFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "greengrass:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJWPV6OBK4QONH4J3O",
            "PolicyName": "AWSGreengrassFullAccess",
            "VersionId": "v1"
        },
        "AWSGreengrassReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "greengrass:List*",
                            "greengrass:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJLSKLXFVTQTZ5GY3I",
            "PolicyName": "AWSGreengrassReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSGreengrassResourceAccessRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:DeleteThingShadow",
                            "iot:GetThingShadow",
                            "iot:UpdateThingShadow"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:thing/GG_*",
                            "arn:aws:iot:*:*:thing/*-gcm",
                            "arn:aws:iot:*:*:thing/*-gda",
                            "arn:aws:iot:*:*:thing/*-gci"
                        ],
                        "Sid": "AllowGreengrassAccessToShadows"
                    },
                    {
                        "Action": [
                            "iot:DescribeThing"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iot:*:*:thing/*",
                        "Sid": "AllowGreengrassToDescribeThings"
                    },
                    {
                        "Action": [
                            "iot:DescribeCertificate"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iot:*:*:cert/*",
                        "Sid": "AllowGreengrassToDescribeCertificates"
                    },
                    {
                        "Action": [
                            "greengrass:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowGreengrassToCallGreengrassServices"
                    },
                    {
                        "Action": [
                            "lambda:GetFunction",
                            "lambda:GetFunctionConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowGreengrassToGetLambdaFunctions"
                    },
                    {
                        "Action": [
                            "secretsmanager:GetSecretValue"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:secretsmanager:*:*:secret:greengrass-*",
                        "Sid": "AllowGreengrassToGetGreengrassSecrets"
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*Greengrass*",
                            "arn:aws:s3:::*GreenGrass*",
                            "arn:aws:s3:::*greengrass*",
                            "arn:aws:s3:::*Sagemaker*",
                            "arn:aws:s3:::*SageMaker*",
                            "arn:aws:s3:::*sagemaker*"
                        ],
                        "Sid": "AllowGreengrassAccessToS3Objects"
                    },
                    {
                        "Action": [
                            "s3:GetBucketLocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowGreengrassAccessToS3BucketLocation"
                    },
                    {
                        "Action": [
                            "sagemaker:DescribeTrainingJob"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sagemaker:*:*:training-job/*"
                        ],
                        "Sid": "AllowGreengrassAccessToSageMakerTrainingJobs"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJPKEIMB6YMXDEVRTM",
            "PolicyName": "AWSGreengrassResourceAccessRolePolicy",
            "VersionId": "v5"
        },
        "AWSHealthFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "organizations:EnableAWSServiceAccess",
                            "organizations:DisableAWSServiceAccess"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "organizations:ServicePrincipal": "health.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "health:*",
                            "organizations:ListAccounts",
                            "organizations:ListParents",
                            "organizations:DescribeAccount",
                            "organizations:ListDelegatedAdministrators"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "health.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI3CUMPCPEUPCSXC4Y",
            "PolicyName": "AWSHealthFullAccess",
            "VersionId": "v3"
        },
        "AWSIQContractServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace:Subscribe"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4E26ATDUIP",
            "PolicyName": "AWSIQContractServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSIQFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iq:*",
                            "iq-permission:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "permission.iq.amazonaws.com",
                                    "contract.iq.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4P4TAHETXT",
            "PolicyName": "AWSIQFullAccess",
            "VersionId": "v2"
        },
        "AWSIQPermissionServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:DeleteRole",
                            "iam:ListAttachedRolePolicies"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/AWSIQPermission-*"
                    },
                    {
                        "Action": [
                            "iam:AttachRolePolicy"
                        ],
                        "Condition": {
                            "ArnEquals": {
                                "iam:PolicyARN": "arn:aws:iam::aws:policy/AWSDenyAll"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/AWSIQPermission-*"
                    },
                    {
                        "Action": [
                            "iam:DetachRolePolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/AWSIQPermission-*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4J77DMGFZ5",
            "PolicyName": "AWSIQPermissionServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSImageBuilderFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "imagebuilder:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:*imagebuilder*"
                    },
                    {
                        "Action": [
                            "license-manager:ListLicenseConfigurations",
                            "license-manager:ListLicenseSpecificationsForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/imagebuilder.amazonaws.com/AWSServiceRoleForImageBuilder"
                    },
                    {
                        "Action": [
                            "iam:GetInstanceProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:instance-profile/*imagebuilder*"
                    },
                    {
                        "Action": [
                            "iam:ListInstanceProfiles",
                            "iam:ListRoles"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "ec2.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:instance-profile/*imagebuilder*",
                            "arn:aws:iam::*:role/*imagebuilder*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketLocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3::*:*imagebuilder*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "imagebuilder.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/imagebuilder.amazonaws.com/AWSServiceRoleForImageBuilder"
                    },
                    {
                        "Action": [
                            "ec2:DescribeImages",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeRegions",
                            "ec2:DescribeVolumes",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeSecurityGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4EO4HCSNZH",
            "PolicyName": "AWSImageBuilderFullAccess",
            "VersionId": "v1"
        },
        "AWSImageBuilderReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "imagebuilder:Get*",
                            "imagebuilder:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/imagebuilder.amazonaws.com/AWSServiceRoleForImageBuilder"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4OD5TC5BXP",
            "PolicyName": "AWSImageBuilderReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSImportExportFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "importexport:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJCQCT4JGTLC6722MQ",
            "PolicyName": "AWSImportExportFullAccess",
            "VersionId": "v1"
        },
        "AWSImportExportReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "importexport:ListJobs",
                            "importexport:GetStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJNTV4OG52ESYZHCNK",
            "PolicyName": "AWSImportExportReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSIoT1ClickFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot1click:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJPQNJPDUDESCCAMIA",
            "PolicyName": "AWSIoT1ClickFullAccess",
            "VersionId": "v1"
        },
        "AWSIoT1ClickReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot1click:Describe*",
                            "iot1click:Get*",
                            "iot1click:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI35VTLD3EBNY2JGXS",
            "PolicyName": "AWSIoT1ClickReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSIoTAnalyticsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iotanalytics:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ7FB5ZEKQN445QGKY",
            "PolicyName": "AWSIoTAnalyticsFullAccess",
            "VersionId": "v1"
        },
        "AWSIoTAnalyticsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iotanalytics:Describe*",
                            "iotanalytics:List*",
                            "iotanalytics:Get*",
                            "iotanalytics:SampleChannelData"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ3Z4LYBELMXGFLGMI",
            "PolicyName": "AWSIoTAnalyticsReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSIoTConfigAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:AcceptCertificateTransfer",
                            "iot:AddThingToThingGroup",
                            "iot:AssociateTargetsWithJob",
                            "iot:AttachPolicy",
                            "iot:AttachPrincipalPolicy",
                            "iot:AttachThingPrincipal",
                            "iot:CancelCertificateTransfer",
                            "iot:CancelJob",
                            "iot:CancelJobExecution",
                            "iot:ClearDefaultAuthorizer",
                            "iot:CreateAuthorizer",
                            "iot:CreateCertificateFromCsr",
                            "iot:CreateJob",
                            "iot:CreateKeysAndCertificate",
                            "iot:CreateOTAUpdate",
                            "iot:CreatePolicy",
                            "iot:CreatePolicyVersion",
                            "iot:CreateRoleAlias",
                            "iot:CreateStream",
                            "iot:CreateThing",
                            "iot:CreateThingGroup",
                            "iot:CreateThingType",
                            "iot:CreateTopicRule",
                            "iot:DeleteAuthorizer",
                            "iot:DeleteCACertificate",
                            "iot:DeleteCertificate",
                            "iot:DeleteJob",
                            "iot:DeleteJobExecution",
                            "iot:DeleteOTAUpdate",
                            "iot:DeletePolicy",
                            "iot:DeletePolicyVersion",
                            "iot:DeleteRegistrationCode",
                            "iot:DeleteRoleAlias",
                            "iot:DeleteStream",
                            "iot:DeleteThing",
                            "iot:DeleteThingGroup",
                            "iot:DeleteThingType",
                            "iot:DeleteTopicRule",
                            "iot:DeleteV2LoggingLevel",
                            "iot:DeprecateThingType",
                            "iot:DescribeAuthorizer",
                            "iot:DescribeCACertificate",
                            "iot:DescribeCertificate",
                            "iot:DescribeDefaultAuthorizer",
                            "iot:DescribeEndpoint",
                            "iot:DescribeEventConfigurations",
                            "iot:DescribeIndex",
                            "iot:DescribeJob",
                            "iot:DescribeJobExecution",
                            "iot:DescribeRoleAlias",
                            "iot:DescribeStream",
                            "iot:DescribeThing",
                            "iot:DescribeThingGroup",
                            "iot:DescribeThingRegistrationTask",
                            "iot:DescribeThingType",
                            "iot:DetachPolicy",
                            "iot:DetachPrincipalPolicy",
                            "iot:DetachThingPrincipal",
                            "iot:DisableTopicRule",
                            "iot:EnableTopicRule",
                            "iot:GetEffectivePolicies",
                            "iot:GetIndexingConfiguration",
                            "iot:GetJobDocument",
                            "iot:GetLoggingOptions",
                            "iot:GetOTAUpdate",
                            "iot:GetPolicy",
                            "iot:GetPolicyVersion",
                            "iot:GetRegistrationCode",
                            "iot:GetTopicRule",
                            "iot:GetV2LoggingOptions",
                            "iot:ListAttachedPolicies",
                            "iot:ListAuthorizers",
                            "iot:ListCACertificates",
                            "iot:ListCertificates",
                            "iot:ListCertificatesByCA",
                            "iot:ListIndices",
                            "iot:ListJobExecutionsForJob",
                            "iot:ListJobExecutionsForThing",
                            "iot:ListJobs",
                            "iot:ListOTAUpdates",
                            "iot:ListOutgoingCertificates",
                            "iot:ListPolicies",
                            "iot:ListPolicyPrincipals",
                            "iot:ListPolicyVersions",
                            "iot:ListPrincipalPolicies",
                            "iot:ListPrincipalThings",
                            "iot:ListRoleAliases",
                            "iot:ListStreams",
                            "iot:ListTargetsForPolicy",
                            "iot:ListThingGroups",
                            "iot:ListThingGroupsForThing",
                            "iot:ListThingPrincipals",
                            "iot:ListThingRegistrationTaskReports",
                            "iot:ListThingRegistrationTasks",
                            "iot:ListThings",
                            "iot:ListThingsInThingGroup",
                            "iot:ListThingTypes",
                            "iot:ListTopicRules",
                            "iot:ListV2LoggingLevels",
                            "iot:RegisterCACertificate",
                            "iot:RegisterCertificate",
                            "iot:RegisterThing",
                            "iot:RejectCertificateTransfer",
                            "iot:RemoveThingFromThingGroup",
                            "iot:ReplaceTopicRule",
                            "iot:SearchIndex",
                            "iot:SetDefaultAuthorizer",
                            "iot:SetDefaultPolicyVersion",
                            "iot:SetLoggingOptions",
                            "iot:SetV2LoggingLevel",
                            "iot:SetV2LoggingOptions",
                            "iot:StartThingRegistrationTask",
                            "iot:StopThingRegistrationTask",
                            "iot:TestAuthorization",
                            "iot:TestInvokeAuthorizer",
                            "iot:TransferCertificate",
                            "iot:UpdateAuthorizer",
                            "iot:UpdateCACertificate",
                            "iot:UpdateCertificate",
                            "iot:UpdateEventConfigurations",
                            "iot:UpdateIndexingConfiguration",
                            "iot:UpdateRoleAlias",
                            "iot:UpdateStream",
                            "iot:UpdateThing",
                            "iot:UpdateThingGroup",
                            "iot:UpdateThingGroupsForThing",
                            "iot:UpdateAccountAuditConfiguration",
                            "iot:DescribeAccountAuditConfiguration",
                            "iot:DeleteAccountAuditConfiguration",
                            "iot:StartOnDemandAuditTask",
                            "iot:CancelAuditTask",
                            "iot:DescribeAuditTask",
                            "iot:ListAuditTasks",
                            "iot:CreateScheduledAudit",
                            "iot:UpdateScheduledAudit",
                            "iot:DeleteScheduledAudit",
                            "iot:DescribeScheduledAudit",
                            "iot:ListScheduledAudits",
                            "iot:ListAuditFindings",
                            "iot:CreateSecurityProfile",
                            "iot:DescribeSecurityProfile",
                            "iot:UpdateSecurityProfile",
                            "iot:DeleteSecurityProfile",
                            "iot:AttachSecurityProfile",
                            "iot:DetachSecurityProfile",
                            "iot:ListSecurityProfiles",
                            "iot:ListSecurityProfilesForTarget",
                            "iot:ListTargetsForSecurityProfile",
                            "iot:ListActiveViolations",
                            "iot:ListViolationEvents",
                            "iot:ValidateSecurityProfileBehaviors"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIWWGD4LM4EMXNRL7I",
            "PolicyName": "AWSIoTConfigAccess",
            "VersionId": "v9"
        },
        "AWSIoTConfigReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:DescribeAuthorizer",
                            "iot:DescribeCACertificate",
                            "iot:DescribeCertificate",
                            "iot:DescribeDefaultAuthorizer",
                            "iot:DescribeEndpoint",
                            "iot:DescribeEventConfigurations",
                            "iot:DescribeIndex",
                            "iot:DescribeJob",
                            "iot:DescribeJobExecution",
                            "iot:DescribeRoleAlias",
                            "iot:DescribeStream",
                            "iot:DescribeThing",
                            "iot:DescribeThingGroup",
                            "iot:DescribeThingRegistrationTask",
                            "iot:DescribeThingType",
                            "iot:GetEffectivePolicies",
                            "iot:GetIndexingConfiguration",
                            "iot:GetJobDocument",
                            "iot:GetLoggingOptions",
                            "iot:GetOTAUpdate",
                            "iot:GetPolicy",
                            "iot:GetPolicyVersion",
                            "iot:GetRegistrationCode",
                            "iot:GetTopicRule",
                            "iot:GetV2LoggingOptions",
                            "iot:ListAttachedPolicies",
                            "iot:ListAuthorizers",
                            "iot:ListCACertificates",
                            "iot:ListCertificates",
                            "iot:ListCertificatesByCA",
                            "iot:ListIndices",
                            "iot:ListJobExecutionsForJob",
                            "iot:ListJobExecutionsForThing",
                            "iot:ListJobs",
                            "iot:ListOTAUpdates",
                            "iot:ListOutgoingCertificates",
                            "iot:ListPolicies",
                            "iot:ListPolicyPrincipals",
                            "iot:ListPolicyVersions",
                            "iot:ListPrincipalPolicies",
                            "iot:ListPrincipalThings",
                            "iot:ListRoleAliases",
                            "iot:ListStreams",
                            "iot:ListTargetsForPolicy",
                            "iot:ListThingGroups",
                            "iot:ListThingGroupsForThing",
                            "iot:ListThingPrincipals",
                            "iot:ListThingRegistrationTaskReports",
                            "iot:ListThingRegistrationTasks",
                            "iot:ListThings",
                            "iot:ListThingsInThingGroup",
                            "iot:ListThingTypes",
                            "iot:ListTopicRules",
                            "iot:ListV2LoggingLevels",
                            "iot:SearchIndex",
                            "iot:TestAuthorization",
                            "iot:TestInvokeAuthorizer",
                            "iot:DescribeAccountAuditConfiguration",
                            "iot:DescribeAuditTask",
                            "iot:ListAuditTasks",
                            "iot:DescribeScheduledAudit",
                            "iot:ListScheduledAudits",
                            "iot:ListAuditFindings",
                            "iot:DescribeSecurityProfile",
                            "iot:ListSecurityProfiles",
                            "iot:ListSecurityProfilesForTarget",
                            "iot:ListTargetsForSecurityProfile",
                            "iot:ListActiveViolations",
                            "iot:ListViolationEvents",
                            "iot:ValidateSecurityProfileBehaviors"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJHENEMXGX4XMFOIOI",
            "PolicyName": "AWSIoTConfigReadOnlyAccess",
            "VersionId": "v8"
        },
        "AWSIoTDataAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:Connect",
                            "iot:Publish",
                            "iot:Subscribe",
                            "iot:Receive",
                            "iot:GetThingShadow",
                            "iot:UpdateThingShadow",
                            "iot:DeleteThingShadow"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJM2KI2UJDR24XPS2K",
            "PolicyName": "AWSIoTDataAccess",
            "VersionId": "v2"
        },
        "AWSIoTDeviceDefenderAddThingsToThingGroupMitigationAction": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:ListPrincipalThings",
                            "iot:AddThingToThingGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4HEHG3RV6B",
            "PolicyName": "AWSIoTDeviceDefenderAddThingsToThingGroupMitigationAction",
            "VersionId": "v1"
        },
        "AWSIoTDeviceDefenderAudit": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:GetLoggingOptions",
                            "iot:GetV2LoggingOptions",
                            "iot:ListCACertificates",
                            "iot:ListCertificates",
                            "iot:DescribeCACertificate",
                            "iot:DescribeCertificate",
                            "iot:ListPolicies",
                            "iot:GetPolicy",
                            "iot:GetEffectivePolicies",
                            "iot:ListRoleAliases",
                            "iot:DescribeRoleAlias",
                            "cognito-identity:GetIdentityPoolRoles",
                            "iam:ListRolePolicies",
                            "iam:ListAttachedRolePolicies",
                            "iam:GetRole",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:GetRolePolicy",
                            "iam:GenerateServiceLastAccessedDetails",
                            "iam:GetServiceLastAccessedDetails"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJKUN6OAGIHZ66TRKO",
            "PolicyName": "AWSIoTDeviceDefenderAudit",
            "VersionId": "v3"
        },
        "AWSIoTDeviceDefenderEnableIoTLoggingMitigationAction": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:SetV2LoggingOptions"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "iot.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4G34KP2NLZ",
            "PolicyName": "AWSIoTDeviceDefenderEnableIoTLoggingMitigationAction",
            "VersionId": "v1"
        },
        "AWSIoTDeviceDefenderPublishFindingsToSNSMitigationAction": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4GZL2FL6JV",
            "PolicyName": "AWSIoTDeviceDefenderPublishFindingsToSNSMitigationAction",
            "VersionId": "v1"
        },
        "AWSIoTDeviceDefenderReplaceDefaultPolicyMitigationAction": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:CreatePolicyVersion"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4HN4VCIBCR",
            "PolicyName": "AWSIoTDeviceDefenderReplaceDefaultPolicyMitigationAction",
            "VersionId": "v1"
        },
        "AWSIoTDeviceDefenderUpdateCACertMitigationAction": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:UpdateCACertificate"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KLBGET6KX",
            "PolicyName": "AWSIoTDeviceDefenderUpdateCACertMitigationAction",
            "VersionId": "v1"
        },
        "AWSIoTDeviceDefenderUpdateDeviceCertMitigationAction": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:UpdateCertificate"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KB4AHFGEB",
            "PolicyName": "AWSIoTDeviceDefenderUpdateDeviceCertMitigationAction",
            "VersionId": "v1"
        },
        "AWSIoTDeviceTesterForFreeRTOSFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "iot.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/idt-*",
                        "Sid": "VisualEditor0"
                    },
                    {
                        "Action": [
                            "iot:DeleteThing",
                            "iot:AttachThingPrincipal",
                            "iot:DeleteCertificate",
                            "iot:GetRegistrationCode",
                            "iot:CreatePolicy",
                            "iot:UpdateCACertificate",
                            "s3:ListBucket",
                            "iot:DescribeEndpoint",
                            "iot:CreateOTAUpdate",
                            "iot:CreateStream",
                            "signer:ListSigningJobs",
                            "acm:ListCertificates",
                            "iot:CreateKeysAndCertificate",
                            "iot:UpdateCertificate",
                            "iot:CreateCertificateFromCsr",
                            "iot:DetachThingPrincipal",
                            "iot:RegisterCACertificate",
                            "iot:CreateThing",
                            "freertos:ListHardwarePlatforms",
                            "iam:ListRoles",
                            "iot:RegisterCertificate",
                            "iot:DeleteCACertificate",
                            "signer:PutSigningProfile",
                            "s3:ListAllMyBuckets",
                            "signer:ListSigningPlatforms",
                            "iot-device-tester:SendMetrics",
                            "iot-device-tester:SupportedVersion",
                            "iot-device-tester:LatestIdt",
                            "iot-device-tester:CheckVersion",
                            "iot-device-tester:DownloadTestSuite"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "VisualEditor1"
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "signer:StartSigningJob",
                            "acm:GetCertificate",
                            "signer:DescribeSigningJob",
                            "s3:CreateBucket",
                            "execute-api:Invoke",
                            "s3:DeleteBucket",
                            "s3:PutBucketVersioning",
                            "signer:CancelSigningProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:execute-api:us-east-1:098862408343:9xpmnvs5h4/prod/POST/metrics",
                            "arn:aws:signer:*:*:/signing-profiles/*",
                            "arn:aws:signer:*:*:/signing-jobs/*",
                            "arn:aws:iam::*:role/idt-*",
                            "arn:aws:acm:*:*:certificate/*",
                            "arn:aws:s3:::idt-*",
                            "arn:aws:s3:::afr-ota*"
                        ],
                        "Sid": "VisualEditor2"
                    },
                    {
                        "Action": [
                            "iot:DeleteStream",
                            "iot:DeleteCertificate",
                            "iot:AttachPolicy",
                            "iot:DetachPolicy",
                            "iot:DeletePolicy",
                            "s3:ListBucketVersions",
                            "iot:UpdateCertificate",
                            "iot:GetOTAUpdate",
                            "iot:DeleteOTAUpdate",
                            "iot:DescribeJobExecution"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::afr-ota*",
                            "arn:aws:iot:*:*:thinggroup/idt*",
                            "arn:aws:iam::*:role/idt-*"
                        ],
                        "Sid": "VisualEditor3"
                    },
                    {
                        "Action": [
                            "iot:DeleteCertificate",
                            "iot:AttachPolicy",
                            "iot:DetachPolicy",
                            "s3:DeleteObjectVersion",
                            "iot:DeleteOTAUpdate",
                            "s3:PutObject",
                            "s3:GetObject",
                            "iot:DeleteStream",
                            "iot:DeletePolicy",
                            "s3:DeleteObject",
                            "iot:UpdateCertificate",
                            "iot:GetOTAUpdate",
                            "s3:GetObjectVersion",
                            "iot:DescribeJobExecution"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::afr-ota*/*",
                            "arn:aws:s3:::idt-*/*",
                            "arn:aws:iot:*:*:policy/idt*",
                            "arn:aws:iam::*:role/idt-*",
                            "arn:aws:iot:*:*:otaupdate/idt*",
                            "arn:aws:iot:*:*:thing/idt*",
                            "arn:aws:iot:*:*:cert/*",
                            "arn:aws:iot:*:*:job/*",
                            "arn:aws:iot:*:*:stream/*"
                        ],
                        "Sid": "VisualEditor4"
                    },
                    {
                        "Action": [
                            "s3:PutObject",
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::afr-ota*/*",
                            "arn:aws:s3:::idt-*/*"
                        ],
                        "Sid": "VisualEditor5"
                    },
                    {
                        "Action": [
                            "iot:CancelJobExecution"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:job/*",
                            "arn:aws:iot:*:*:thing/idt*"
                        ],
                        "Sid": "VisualEditor6"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ADNJ2YUUH",
            "PolicyName": "AWSIoTDeviceTesterForFreeRTOSFullAccess",
            "VersionId": "v4"
        },
        "AWSIoTDeviceTesterForGreengrassFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "iot.amazonaws.com",
                                    "lambda.amazonaws.com",
                                    "greengrass.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/idt-*",
                        "Sid": "VisualEditor1"
                    },
                    {
                        "Action": [
                            "lambda:CreateFunction",
                            "iot:DeleteCertificate",
                            "lambda:DeleteFunction",
                            "execute-api:Invoke",
                            "iot:UpdateCertificate"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:execute-api:us-east-1:098862408343:9xpmnvs5h4/prod/POST/metrics",
                            "arn:aws:lambda:*:*:function:idt-*",
                            "arn:aws:iot:*:*:cert/*"
                        ],
                        "Sid": "VisualEditor2"
                    },
                    {
                        "Action": [
                            "iot:CreateThing",
                            "iot:DeleteThing"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:thing/idt-*",
                            "arn:aws:iot:*:*:cert/*"
                        ],
                        "Sid": "VisualEditor3"
                    },
                    {
                        "Action": [
                            "iot:AttachPolicy",
                            "iot:DetachPolicy",
                            "iot:DeletePolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:policy/idt-*",
                            "arn:aws:iot:*:*:cert/*"
                        ],
                        "Sid": "VisualEditor4"
                    },
                    {
                        "Action": [
                            "iot:CreateJob",
                            "iot:DescribeJob",
                            "iot:DescribeJobExecution",
                            "iot:DeleteJob"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:thing/idt-*",
                            "arn:aws:iot:*:*:job/*"
                        ],
                        "Sid": "VisualEditor5"
                    },
                    {
                        "Action": [
                            "iot:DescribeEndpoint",
                            "greengrass:*",
                            "iam:ListAttachedRolePolicies",
                            "iot:CreatePolicy",
                            "iot:GetThingShadow",
                            "iot:CreateKeysAndCertificate",
                            "iot:ListThings",
                            "iot:UpdateThingShadow",
                            "iot:CreateCertificateFromCsr",
                            "iot-device-tester:SendMetrics",
                            "iot-device-tester:SupportedVersion",
                            "iot-device-tester:LatestIdt",
                            "iot-device-tester:CheckVersion",
                            "iot-device-tester:DownloadTestSuite"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "VisualEditor6"
                    },
                    {
                        "Action": [
                            "iot:DetachThingPrincipal",
                            "iot:AttachThingPrincipal"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:thing/idt-*",
                            "arn:aws:iot:*:*:cert/*"
                        ],
                        "Sid": "VisualEditor7"
                    },
                    {
                        "Action": [
                            "s3:PutObject",
                            "s3:DeleteObjectVersion",
                            "s3:ListBucketVersions",
                            "s3:CreateBucket",
                            "s3:DeleteObject",
                            "s3:DeleteBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::idt*",
                        "Sid": "VisualEditor8"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ORKVZSPY7",
            "PolicyName": "AWSIoTDeviceTesterForGreengrassFullAccess",
            "VersionId": "v4"
        },
        "AWSIoTEventsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iotevents:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJGA726P7LVUWJZ2LM",
            "PolicyName": "AWSIoTEventsFullAccess",
            "VersionId": "v1"
        },
        "AWSIoTEventsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iotevents:Describe*",
                            "iotevents:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJYJFNAR7CN5JW52PG",
            "PolicyName": "AWSIoTEventsReadOnlyAccess",
            "VersionId": "v2"
        },
        "AWSIoTFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJU2FPGG6PQWN72V2G",
            "PolicyName": "AWSIoTFullAccess",
            "VersionId": "v1"
        },
        "AWSIoTLogging": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:PutMetricFilter",
                            "logs:PutRetentionPolicy",
                            "logs:GetLogEvents",
                            "logs:DeleteLogStream"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI6R6Z2FHHGS454W7W",
            "PolicyName": "AWSIoTLogging",
            "VersionId": "v1"
        },
        "AWSIoTOTAUpdate": {
            "Document": {
                "Statement": {
                    "Action": [
                        "iot:CreateJob",
                        "signer:DescribeSigningJob"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                },
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJLJYWX53STBZFPUEY",
            "PolicyName": "AWSIoTOTAUpdate",
            "VersionId": "v1"
        },
        "AWSIoTRuleActions": {
            "Document": {
                "Statement": {
                    "Action": [
                        "dynamodb:PutItem",
                        "kinesis:PutRecord",
                        "iot:Publish",
                        "s3:PutObject",
                        "sns:Publish",
                        "sqs:SendMessage*",
                        "cloudwatch:SetAlarmState",
                        "cloudwatch:PutMetricData",
                        "es:ESHttpPut",
                        "firehose:PutRecord"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                },
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJEZ6FS7BUZVUHMOKY",
            "PolicyName": "AWSIoTRuleActions",
            "VersionId": "v2"
        },
        "AWSIoTSiteWiseConsoleFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "iotsitewise:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iotanalytics:List*",
                            "iotanalytics:Describe*",
                            "iotanalytics:Create*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iot:DescribeEndpoint",
                            "iot:GetThingShadow"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "greengrass:GetGroup",
                            "greengrass:GetGroupVersion",
                            "greengrass:GetCoreDefinitionVersion",
                            "greengrass:ListGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "secretsmanager:ListSecrets",
                            "secretsmanager:CreateSecret"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "secretsmanager:UpdateSecret"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:secretsmanager:*:*:secret:greengrass-*"
                    },
                    {
                        "Action": [
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "iotsitewise.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/iotsitewise.amazonaws.com/AWSServiceRoleForIoTSiteWise*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "iotsitewise.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/iotsitewise.amazonaws.com/AWSServiceRoleForIoTSiteWise*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4K7KP5VA7F",
            "PolicyName": "AWSIoTSiteWiseConsoleFullAccess",
            "VersionId": "v1"
        },
        "AWSIoTSiteWiseFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iotsitewise:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAILUK3XBM6TZ5Q3PX2",
            "PolicyName": "AWSIoTSiteWiseFullAccess",
            "VersionId": "v1"
        },
        "AWSIoTSiteWiseMonitorPortalAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iotsitewise:CreateProject",
                            "iotsitewise:DescribeProject",
                            "iotsitewise:UpdateProject",
                            "iotsitewise:DeleteProject",
                            "iotsitewise:ListProjects",
                            "iotsitewise:BatchAssociateProjectAssets",
                            "iotsitewise:BatchDisassociateProjectAssets",
                            "iotsitewise:ListProjectAssets",
                            "iotsitewise:CreateDashboard",
                            "iotsitewise:DescribeDashboard",
                            "iotsitewise:UpdateDashboard",
                            "iotsitewise:DeleteDashboard",
                            "iotsitewise:ListDashboards",
                            "iotsitewise:CreateAccessPolicy",
                            "iotsitewise:DescribeAccessPolicy",
                            "iotsitewise:UpdateAccessPolicy",
                            "iotsitewise:DeleteAccessPolicy",
                            "iotsitewise:ListAccessPolicies",
                            "iotsitewise:DescribeAsset",
                            "iotsitewise:ListAssets",
                            "iotsitewise:ListAssociatedAssets",
                            "iotsitewise:DescribeAssetProperty",
                            "iotsitewise:GetAssetPropertyValue",
                            "iotsitewise:GetAssetPropertyValueHistory",
                            "iotsitewise:GetAssetPropertyAggregates",
                            "sso-directory:DescribeUsers"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4E6CZDALWJ",
            "PolicyName": "AWSIoTSiteWiseMonitorPortalAccess",
            "VersionId": "v1"
        },
        "AWSIoTSiteWiseMonitorServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iotsitewise:CreateProject",
                            "iotsitewise:DescribeProject",
                            "iotsitewise:UpdateProject",
                            "iotsitewise:DeleteProject",
                            "iotsitewise:ListProjects",
                            "iotsitewise:BatchAssociateProjectAssets",
                            "iotsitewise:BatchDisassociateProjectAssets",
                            "iotsitewise:ListProjectAssets",
                            "iotsitewise:CreateDashboard",
                            "iotsitewise:DescribeDashboard",
                            "iotsitewise:UpdateDashboard",
                            "iotsitewise:DeleteDashboard",
                            "iotsitewise:ListDashboards",
                            "iotsitewise:CreateAccessPolicy",
                            "iotsitewise:DescribeAccessPolicy",
                            "iotsitewise:UpdateAccessPolicy",
                            "iotsitewise:DeleteAccessPolicy",
                            "iotsitewise:ListAccessPolicies",
                            "iotsitewise:DescribeAsset",
                            "iotsitewise:ListAssets",
                            "iotsitewise:ListAssociatedAssets",
                            "iotsitewise:DescribeAssetProperty",
                            "iotsitewise:GetAssetPropertyValue",
                            "iotsitewise:GetAssetPropertyValueHistory",
                            "iotsitewise:GetAssetPropertyAggregates",
                            "sso-directory:DescribeUsers"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CR556M6Y5",
            "PolicyName": "AWSIoTSiteWiseMonitorServiceRolePolicy",
            "VersionId": "v2"
        },
        "AWSIoTSiteWiseReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iotsitewise:Describe*",
                            "iotsitewise:List*",
                            "iotsitewise:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJLHEAFKME2QL64WKK",
            "PolicyName": "AWSIoTSiteWiseReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSIoTThingsRegistration": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:AddThingToThingGroup",
                            "iot:AttachPolicy",
                            "iot:AttachPrincipalPolicy",
                            "iot:AttachThingPrincipal",
                            "iot:CreateCertificateFromCsr",
                            "iot:CreatePolicy",
                            "iot:CreateThing",
                            "iot:DescribeCertificate",
                            "iot:DescribeThing",
                            "iot:DescribeThingGroup",
                            "iot:DescribeThingType",
                            "iot:DetachPolicy",
                            "iot:DetachThingPrincipal",
                            "iot:GetPolicy",
                            "iot:ListAttachedPolicies",
                            "iot:ListPolicyPrincipals",
                            "iot:ListPrincipalPolicies",
                            "iot:ListPrincipalThings",
                            "iot:ListTargetsForPolicy",
                            "iot:ListThingGroupsForThing",
                            "iot:ListThingPrincipals",
                            "iot:RegisterCertificate",
                            "iot:RegisterThing",
                            "iot:RemoveThingFromThingGroup",
                            "iot:UpdateCertificate",
                            "iot:UpdateThing",
                            "iot:UpdateThingGroupsForThing",
                            "iot:AddThingToBillingGroup",
                            "iot:DescribeBillingGroup",
                            "iot:RemoveThingFromBillingGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI3YQXTC5XAEVTJNEU",
            "PolicyName": "AWSIoTThingsRegistration",
            "VersionId": "v3"
        },
        "AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudhsm:Describe*",
                            "ec2:CreateNetworkInterface",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateSecurityGroup",
                            "ec2:DescribeSecurityGroups",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:DeleteSecurityGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIADMJEHVVYK5AUQOO",
            "PolicyName": "AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSKeyManagementServicePowerUser": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "kms:CreateAlias",
                            "kms:CreateKey",
                            "kms:DeleteAlias",
                            "kms:Describe*",
                            "kms:GenerateRandom",
                            "kms:Get*",
                            "kms:List*",
                            "kms:TagResource",
                            "kms:UntagResource",
                            "iam:ListGroups",
                            "iam:ListRoles",
                            "iam:ListUsers"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJNPP7PPPPMJRV2SA4",
            "PolicyName": "AWSKeyManagementServicePowerUser",
            "VersionId": "v2"
        },
        "AWSLakeFormationCrossAccountManager": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ram:CreateResourceShare"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "ram:RequestedResourceType": [
                                    "glue:Table",
                                    "glue:Database",
                                    "glue:Catalog"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ram:UpdateResourceShare",
                            "ram:DeleteResourceShare"
                        ],
                        "Condition": {
                            "ForAllValues:StringLike": {
                                "ram:ResourceShareName": [
                                    "LakeFormation*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "glue:PutResourcePolicy",
                            "organizations:DescribeOrganization",
                            "organizations:DescribeAccount",
                            "ram:Get*",
                            "ram:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "organizations:ListRoots",
                            "organizations:ListAccountsForParent",
                            "organizations:ListOrganizationalUnitsForParent"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4HPT7Y7QL3",
            "PolicyName": "AWSLakeFormationCrossAccountManager",
            "VersionId": "v1"
        },
        "AWSLakeFormationDataAdmin": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "lakeformation:*",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:LookupEvents",
                            "glue:GetDatabase",
                            "glue:GetDatabases",
                            "glue:CreateDatabase",
                            "glue:UpdateDatabase",
                            "glue:DeleteDatabase",
                            "glue:GetConnections",
                            "glue:SearchTables",
                            "glue:GetTable",
                            "glue:CreateTable",
                            "glue:UpdateTable",
                            "glue:DeleteTable",
                            "glue:GetTableVersions",
                            "glue:GetPartitions",
                            "glue:GetTables",
                            "glue:GetWorkflow",
                            "glue:ListWorkflows",
                            "glue:BatchGetWorkflows",
                            "glue:DeleteWorkflow",
                            "glue:GetWorkflowRuns",
                            "glue:StartWorkflowRun",
                            "glue:GetWorkflow",
                            "s3:ListBucket",
                            "s3:GetBucketLocation",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketAcl",
                            "iam:ListUsers",
                            "iam:ListRoles",
                            "iam:GetRole",
                            "iam:GetRolePolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "lakeformation:PutDataLakeSettings"
                        ],
                        "Effect": "Deny",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4OWCH3ENIA",
            "PolicyName": "AWSLakeFormationDataAdmin",
            "VersionId": "v2"
        },
        "AWSLambdaBasicExecutionRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJNCQGXC42545SKXIK",
            "PolicyName": "AWSLambdaBasicExecutionRole",
            "VersionId": "v1"
        },
        "AWSLambdaDynamoDBExecutionRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "dynamodb:DescribeStream",
                            "dynamodb:GetRecords",
                            "dynamodb:GetShardIterator",
                            "dynamodb:ListStreams",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIP7WNAGMIPYNW4WQG",
            "PolicyName": "AWSLambdaDynamoDBExecutionRole",
            "VersionId": "v1"
        },
        "AWSLambdaENIManagementAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DeleteNetworkInterface",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:UnassignPrivateIpAddresses"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJXAW2Q3KPTURUT2QC",
            "PolicyName": "AWSLambdaENIManagementAccess",
            "VersionId": "v2"
        },
        "AWSLambdaExecute": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJE5FX7FQZSU5XAKGO",
            "PolicyName": "AWSLambdaExecute",
            "VersionId": "v1"
        },
        "AWSLambdaFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:DescribeStackResources",
                            "cloudformation:DescribeStacks",
                            "cloudformation:GetTemplate",
                            "cloudformation:ListStackResources",
                            "cloudwatch:*",
                            "cognito-identity:ListIdentityPools",
                            "cognito-sync:GetCognitoEvents",
                            "cognito-sync:SetCognitoEvents",
                            "dynamodb:*",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "events:*",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:ListAttachedRolePolicies",
                            "iam:ListRolePolicies",
                            "iam:ListRoles",
                            "iam:PassRole",
                            "iot:AttachPrincipalPolicy",
                            "iot:AttachThingPrincipal",
                            "iot:CreateKeysAndCertificate",
                            "iot:CreatePolicy",
                            "iot:CreateThing",
                            "iot:CreateTopicRule",
                            "iot:DescribeEndpoint",
                            "iot:GetTopicRule",
                            "iot:ListPolicies",
                            "iot:ListThings",
                            "iot:ListTopicRules",
                            "iot:ReplaceTopicRule",
                            "kinesis:DescribeStream",
                            "kinesis:ListStreams",
                            "kinesis:PutRecord",
                            "kms:ListAliases",
                            "lambda:*",
                            "logs:*",
                            "s3:*",
                            "sns:ListSubscriptions",
                            "sns:ListSubscriptionsByTopic",
                            "sns:ListTopics",
                            "sns:Publish",
                            "sns:Subscribe",
                            "sns:Unsubscribe",
                            "sqs:ListQueues",
                            "sqs:SendMessage",
                            "tag:GetResources",
                            "xray:PutTelemetryRecords",
                            "xray:PutTraceSegments"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI6E2CYYMI4XI7AA5K",
            "PolicyName": "AWSLambdaFullAccess",
            "VersionId": "v8"
        },
        "AWSLambdaInvocation-DynamoDB": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "dynamodb:DescribeStream",
                            "dynamodb:GetRecords",
                            "dynamodb:GetShardIterator",
                            "dynamodb:ListStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJTHQ3EKCQALQDYG5G",
            "PolicyName": "AWSLambdaInvocation-DynamoDB",
            "VersionId": "v1"
        },
        "AWSLambdaKinesisExecutionRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "kinesis:DescribeStream",
                            "kinesis:DescribeStreamSummary",
                            "kinesis:GetRecords",
                            "kinesis:GetShardIterator",
                            "kinesis:ListShards",
                            "kinesis:ListStreams",
                            "kinesis:SubscribeToShard",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJHOLKJPXV4GBRMJUQ",
            "PolicyName": "AWSLambdaKinesisExecutionRole",
            "VersionId": "v2"
        },
        "AWSLambdaMSKExecutionRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "kafka:DescribeCluster",
                            "kafka:GetBootstrapBrokers",
                            "ec2:CreateNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeVpcs",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FHMXOHIS5",
            "PolicyName": "AWSLambdaMSKExecutionRole",
            "VersionId": "v1"
        },
        "AWSLambdaReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:DescribeStackResources",
                            "cloudformation:DescribeStacks",
                            "cloudformation:GetTemplate",
                            "cloudformation:ListStackResources",
                            "cloudwatch:Describe*",
                            "cloudwatch:Get*",
                            "cloudwatch:List*",
                            "cognito-identity:ListIdentityPools",
                            "cognito-sync:GetCognitoEvents",
                            "dynamodb:BatchGetItem",
                            "dynamodb:DescribeStream",
                            "dynamodb:DescribeTable",
                            "dynamodb:GetItem",
                            "dynamodb:ListStreams",
                            "dynamodb:ListTables",
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "events:Describe*",
                            "events:List*",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:ListAttachedRolePolicies",
                            "iam:ListRolePolicies",
                            "iam:ListRoles",
                            "iot:DescribeEndpoint",
                            "iot:GetTopicRule",
                            "iot:ListPolicies",
                            "iot:ListThings",
                            "iot:ListTopicRules",
                            "kinesis:DescribeStream",
                            "kinesis:ListStreams",
                            "kms:ListAliases",
                            "lambda:Get*",
                            "lambda:List*",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:DescribeMetricFilters",
                            "logs:GetLogEvents",
                            "s3:Get*",
                            "s3:List*",
                            "sns:ListSubscriptions",
                            "sns:ListSubscriptionsByTopic",
                            "sns:ListTopics",
                            "sqs:ListQueues",
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJLDG7J3CGUHFN4YN6",
            "PolicyName": "AWSLambdaReadOnlyAccess",
            "VersionId": "v8"
        },
        "AWSLambdaReplicator": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "lambda:CreateFunction",
                            "lambda:DeleteFunction",
                            "lambda:DisableReplication"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:*"
                        ],
                        "Sid": "LambdaCreateDeletePermission"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLikeIfExists": {
                                "iam:PassedToService": "lambda.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "IamPassRolePermission"
                    },
                    {
                        "Action": [
                            "cloudfront:ListDistributionsByLambdaFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "CloudFrontListDistributions"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIIQFXZNNLL3E2HKTG",
            "PolicyName": "AWSLambdaReplicator",
            "VersionId": "v3"
        },
        "AWSLambdaRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJX4DPCRGTC4NFDUXI",
            "PolicyName": "AWSLambdaRole",
            "VersionId": "v1"
        },
        "AWSLambdaSQSQueueExecutionRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sqs:ReceiveMessage",
                            "sqs:DeleteMessage",
                            "sqs:GetQueueAttributes",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJFWJZI6JNND4TSELK",
            "PolicyName": "AWSLambdaSQSQueueExecutionRole",
            "VersionId": "v1"
        },
        "AWSLambdaVPCAccessExecutionRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "ec2:CreateNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DeleteNetworkInterface",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:UnassignPrivateIpAddresses"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJVTME3YLVNL72YR2K",
            "PolicyName": "AWSLambdaVPCAccessExecutionRole",
            "VersionId": "v2"
        },
        "AWSLambda_FullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListStackResources",
                            "cloudwatch:ListMetrics",
                            "cloudwatch:GetMetricData",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "kms:ListAliases",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:ListAttachedRolePolicies",
                            "iam:ListRolePolicies",
                            "iam:ListRoles",
                            "lambda:*",
                            "logs:DescribeLogGroups",
                            "states:DescribeStateMachine",
                            "states:ListStateMachines",
                            "tag:GetResources",
                            "xray:GetTraceSummaries",
                            "xray:BatchGetTraces"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "lambda.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "logs:FilterLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4OXQPYWZ5D",
            "PolicyName": "AWSLambda_FullAccess",
            "VersionId": "v1"
        },
        "AWSLambda_ReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListStackResources",
                            "cloudwatch:GetMetricData",
                            "cloudwatch:ListMetrics",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "kms:ListAliases",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:ListAttachedRolePolicies",
                            "iam:ListRolePolicies",
                            "iam:ListRoles",
                            "logs:DescribeLogGroups",
                            "lambda:Get*",
                            "lambda:List*",
                            "states:DescribeStateMachine",
                            "states:ListStateMachines",
                            "tag:GetResources",
                            "xray:GetTraceSummaries",
                            "xray:BatchGetTraces"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "logs:FilterLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IERNVMNPE",
            "PolicyName": "AWSLambda_ReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSLicenseManagerMasterAccountRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:GetBucketLocation",
                            "s3:ListBucket",
                            "s3:GetLifecycleConfiguration",
                            "s3:PutLifecycleConfiguration",
                            "s3:GetBucketPolicy",
                            "s3:PutBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-license-manager-service-*"
                        ],
                        "Sid": "S3BucketPermissions"
                    },
                    {
                        "Action": [
                            "s3:AbortMultipartUpload",
                            "s3:PutObject",
                            "s3:GetObject",
                            "s3:ListBucketMultipartUploads",
                            "s3:ListMultipartUploadParts"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-license-manager-service-*"
                        ],
                        "Sid": "S3ObjectPermissions1"
                    },
                    {
                        "Action": [
                            "s3:DeleteObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-license-manager-service-*/resource_sync/*"
                        ],
                        "Sid": "S3ObjectPermissions2"
                    },
                    {
                        "Action": [
                            "athena:GetQueryExecution",
                            "athena:GetQueryResults",
                            "athena:StartQueryExecution"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AthenaPermissions"
                    },
                    {
                        "Action": [
                            "glue:GetTable",
                            "glue:GetPartition",
                            "glue:GetPartitions"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "GluePermissions"
                    },
                    {
                        "Action": [
                            "organizations:DescribeOrganization",
                            "organizations:ListAccounts",
                            "organizations:DescribeAccount",
                            "organizations:ListChildren",
                            "organizations:ListParents",
                            "organizations:ListAccountsForParent",
                            "organizations:ListRoots",
                            "organizations:ListAWSServiceAccessForOrganization"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "OrganizationPermissions"
                    },
                    {
                        "Action": [
                            "ram:GetResourceShares",
                            "ram:GetResourceShareAssociations",
                            "ram:TagResource"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "RAMPermissions1"
                    },
                    {
                        "Action": [
                            "ram:CreateResourceShare"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:RequestTag/Service": "LicenseManager"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "RAMPermissions2"
                    },
                    {
                        "Action": [
                            "ram:AssociateResourceShare",
                            "ram:DisassociateResourceShare",
                            "ram:UpdateResourceShare",
                            "ram:DeleteResourceShare"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "ram:ResourceTag/Service": "LicenseManager"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "RAMPermissions3"
                    },
                    {
                        "Action": [
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "IAMGetRoles"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "cloudformation.amazonaws.com",
                                    "glue.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/LicenseManagerServiceResourceDataSyncRole*"
                        ],
                        "Sid": "IAMPassRoles"
                    },
                    {
                        "Action": [
                            "cloudformation:UpdateStack",
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeStacks"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/LicenseManagerCrossAccountCloudDiscoveryStack/*"
                        ],
                        "Sid": "CloudformationPermission"
                    },
                    {
                        "Action": [
                            "glue:CreateTable",
                            "glue:UpdateTable",
                            "glue:DeleteTable",
                            "glue:UpdateJob",
                            "glue:UpdateCrawler"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:crawler/LicenseManagerResourceSynDataCrawler",
                            "arn:aws:glue:*:*:job/LicenseManagerResourceSynDataProcessJob",
                            "arn:aws:glue:*:*:table/license_manager_resource_inventory_db/*",
                            "arn:aws:glue:*:*:table/license_manager_resource_sync/*",
                            "arn:aws:glue:*:*:database/license_manager_resource_inventory_db",
                            "arn:aws:glue:*:*:database/license_manager_resource_sync"
                        ],
                        "Sid": "GlueUpdatePermissions"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIJE2NOZW2BDEHYUH2",
            "PolicyName": "AWSLicenseManagerMasterAccountRolePolicy",
            "VersionId": "v3"
        },
        "AWSLicenseManagerMemberAccountRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "license-manager:UpdateLicenseSpecificationsForResource",
                            "license-manager:GetLicenseConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "LicenseManagerPermissions"
                    },
                    {
                        "Action": [
                            "ssm:ListInventoryEntries",
                            "ssm:GetInventory",
                            "ssm:CreateAssociation",
                            "ssm:CreateResourceDataSync",
                            "ssm:DeleteResourceDataSync",
                            "ssm:ListResourceDataSync",
                            "ssm:ListAssociations"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "SSMPermissions"
                    },
                    {
                        "Action": [
                            "ram:AcceptResourceShareInvitation",
                            "ram:GetResourceShareInvitations"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "RAMPermissions"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJZTYEY2LEGBYAVUY4",
            "PolicyName": "AWSLicenseManagerMemberAccountRolePolicy",
            "VersionId": "v2"
        },
        "AWSLicenseManagerServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:GetBucketLocation",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-license-manager-service-*"
                        ],
                        "Sid": "S3BucketPermissions1"
                    },
                    {
                        "Action": [
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "S3BucketPermissions2"
                    },
                    {
                        "Action": [
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-license-manager-service-*"
                        ],
                        "Sid": "S3ObjectPermissions"
                    },
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sns:*:*:aws-license-manager-service-*"
                        ],
                        "Sid": "SNSAccountPermissions"
                    },
                    {
                        "Action": [
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "SNSTopicPermissions"
                    },
                    {
                        "Action": [
                            "ec2:DescribeInstances",
                            "ec2:DescribeImages",
                            "ec2:DescribeHosts"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "EC2Permissions"
                    },
                    {
                        "Action": [
                            "ssm:ListInventoryEntries",
                            "ssm:GetInventory",
                            "ssm:CreateAssociation"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "SSMPermissions"
                    },
                    {
                        "Action": [
                            "organizations:ListAWSServiceAccessForOrganization",
                            "organizations:DescribeOrganization"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "OrganizationPermissions"
                    },
                    {
                        "Action": [
                            "license-manager:GetServiceSettings",
                            "license-manager:GetLicense*",
                            "license-manager:UpdateLicenseSpecificationsForResource",
                            "license-manager:ListUsageForLicenseConfiguration",
                            "license-manager:ListDistributedGrants"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "LicenseManagerPermissions"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIM7JPETWHTYNBQSZE",
            "PolicyName": "AWSLicenseManagerServiceRolePolicy",
            "VersionId": "v3"
        },
        "AWSMarketplaceAmiIngestion": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:ModifySnapshotAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:us-east-1::snapshot/snap-*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeImageAttribute",
                            "ec2:DescribeImages",
                            "ec2:DescribeSnapshotAttribute",
                            "ec2:ModifyImageAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4AV3OZYWEM",
            "PolicyName": "AWSMarketplaceAmiIngestion",
            "VersionId": "v1"
        },
        "AWSMarketplaceFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace:*",
                            "cloudformation:CreateStack",
                            "cloudformation:DescribeStackResource",
                            "cloudformation:DescribeStackResources",
                            "cloudformation:DescribeStacks",
                            "cloudformation:List*",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateTags",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstances",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeTags",
                            "ec2:DescribeVpcs",
                            "ec2:RunInstances",
                            "ec2:StartInstances",
                            "ec2:StopInstances",
                            "ec2:TerminateInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CopyImage",
                            "ec2:DeregisterImage",
                            "ec2:DescribeSnapshots",
                            "ec2:DeleteSnapshot",
                            "ec2:CreateImage",
                            "ec2:DescribeInstanceStatus",
                            "ssm:GetAutomationExecution",
                            "ssm:UpdateDocumentDefaultVersion",
                            "ssm:CreateDocument",
                            "ssm:StartAutomationExecution",
                            "ssm:ListDocuments",
                            "ssm:UpdateDocument",
                            "ssm:DescribeDocument",
                            "sns:ListTopics",
                            "sns:GetTopicAttributes",
                            "sns:CreateTopic",
                            "iam:GetRole",
                            "iam:GetInstanceProfile",
                            "iam:ListRoles",
                            "iam:ListInstanceProfiles"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*image-build*"
                        ]
                    },
                    {
                        "Action": [
                            "sns:Publish",
                            "sns:setTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:*image-build*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com",
                                    "ssm.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI2DV5ULJSO2FYVPYG",
            "PolicyName": "AWSMarketplaceFullAccess",
            "VersionId": "v3"
        },
        "AWSMarketplaceGetEntitlements": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace:GetEntitlements"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJLPIMQE4WMHDC2K7C",
            "PolicyName": "AWSMarketplaceGetEntitlements",
            "VersionId": "v1"
        },
        "AWSMarketplaceImageBuildFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace:ListBuilds",
                            "aws-marketplace:StartBuild",
                            "aws-marketplace:DescribeBuilds"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:TerminateInstances",
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/marketplace-image-build:build-id": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com",
                                    "ssm.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/*Automation*",
                            "arn:aws:iam::*:role/*Instance*"
                        ]
                    },
                    {
                        "Action": [
                            "ssm:GetAutomationExecution",
                            "ssm:CreateDocument",
                            "ssm:StartAutomationExecution",
                            "ssm:ListDocuments",
                            "ssm:UpdateDocument",
                            "ssm:UpdateDocumentDefaultVersion",
                            "ssm:DescribeDocument",
                            "ec2:DeregisterImage",
                            "ec2:CopyImage",
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeImages",
                            "ec2:DescribeSubnets",
                            "ec2:DeleteSnapshot",
                            "ec2:CreateImage",
                            "ec2:RunInstances",
                            "ec2:DescribeInstanceStatus",
                            "sns:GetTopicAttributes",
                            "iam:GetRole",
                            "iam:GetInstanceProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*image-build*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*::image/*",
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sns:*:*:*image-build*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI4QBMJWC3BNHBHN6I",
            "PolicyName": "AWSMarketplaceImageBuildFullAccess",
            "VersionId": "v2"
        },
        "AWSMarketplaceLicenseManagementServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "organizations:DescribeOrganization",
                            "license-manager:ListReceivedGrants",
                            "license-manager:ListDistributedGrants",
                            "license-manager:GetGrant",
                            "license-manager:CreateGrant",
                            "license-manager:CreateGrantVersion",
                            "license-manager:DeleteGrant",
                            "license-manager:AcceptGrant"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AllowLicenseManagerActions"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4DTCV6FSO7",
            "PolicyName": "AWSMarketplaceLicenseManagementServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSMarketplaceManageSubscriptions": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace:ViewSubscriptions",
                            "aws-marketplace:Subscribe",
                            "aws-marketplace:Unsubscribe"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "aws-marketplace:CreatePrivateMarketplaceRequests",
                            "aws-marketplace:ListPrivateMarketplaceRequests",
                            "aws-marketplace:DescribePrivateMarketplaceRequests"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJRDW2WIFN7QLUAKBQ",
            "PolicyName": "AWSMarketplaceManageSubscriptions",
            "VersionId": "v2"
        },
        "AWSMarketplaceMeteringFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace:MeterUsage"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ65YJPG7CC7LDXNA6",
            "PolicyName": "AWSMarketplaceMeteringFullAccess",
            "VersionId": "v1"
        },
        "AWSMarketplaceMeteringRegisterUsage": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace:RegisterUsage"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4OIHJX73MZ",
            "PolicyName": "AWSMarketplaceMeteringRegisterUsage",
            "VersionId": "v1"
        },
        "AWSMarketplaceProcurementSystemAdminFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace:PutProcurementSystemConfiguration",
                            "aws-marketplace:DescribeProcurementSystemConfiguration",
                            "organizations:Describe*",
                            "organizations:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FIYNR3TC4",
            "PolicyName": "AWSMarketplaceProcurementSystemAdminFullAccess",
            "VersionId": "v1"
        },
        "AWSMarketplaceRead-only": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace:ViewSubscriptions",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstances",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "aws-marketplace:ListBuilds",
                            "aws-marketplace:DescribeBuilds",
                            "iam:ListRoles",
                            "iam:ListInstanceProfiles",
                            "sns:GetTopicAttributes",
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "aws-marketplace:ListPrivateMarketplaceRequests",
                            "aws-marketplace:DescribePrivateMarketplaceRequests"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJOOM6LETKURTJ3XZ2",
            "PolicyName": "AWSMarketplaceRead-only",
            "VersionId": "v3"
        },
        "AWSMarketplaceSellerFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace-management:uploadFiles",
                            "aws-marketplace-management:viewMarketing",
                            "aws-marketplace-management:viewReports",
                            "aws-marketplace-management:viewSupport",
                            "aws-marketplace-management:viewSettings",
                            "aws-marketplace:ListChangeSets",
                            "aws-marketplace:DescribeChangeSet",
                            "aws-marketplace:StartChangeSet",
                            "aws-marketplace:CancelChangeSet",
                            "aws-marketplace:ListEntities",
                            "aws-marketplace:DescribeEntity",
                            "aws-marketplace:ListTasks",
                            "aws-marketplace:DescribeTask",
                            "aws-marketplace:UpdateTask",
                            "aws-marketplace:CompleteTask",
                            "ec2:DescribeImages",
                            "ec2:DescribeSnapshots",
                            "ec2:ModifyImageAttribute",
                            "ec2:ModifySnapshotAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "aws-marketplace:SearchAgreements",
                            "aws-marketplace:DescribeAgreement",
                            "aws-marketplace:GetAgreementTerms"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws-marketplace:AgreementType": [
                                    "PurchaseAgreement"
                                ]
                            },
                            "StringEquals": {
                                "aws-marketplace:PartyType": "Proposer"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "assets.marketplace.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JF7OFUANW",
            "PolicyName": "AWSMarketplaceSellerFullAccess",
            "VersionId": "v4"
        },
        "AWSMarketplaceSellerProductsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace:ListChangeSets",
                            "aws-marketplace:DescribeChangeSet",
                            "aws-marketplace:StartChangeSet",
                            "aws-marketplace:CancelChangeSet",
                            "aws-marketplace:ListEntities",
                            "aws-marketplace:DescribeEntity",
                            "aws-marketplace:ListTasks",
                            "aws-marketplace:DescribeTask",
                            "aws-marketplace:UpdateTask",
                            "aws-marketplace:CompleteTask",
                            "ec2:DescribeImages",
                            "ec2:DescribeSnapshots",
                            "ec2:ModifyImageAttribute",
                            "ec2:ModifySnapshotAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "assets.marketplace.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4DS2YFEG4N",
            "PolicyName": "AWSMarketplaceSellerProductsFullAccess",
            "VersionId": "v3"
        },
        "AWSMarketplaceSellerProductsReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace:ListChangeSets",
                            "aws-marketplace:DescribeChangeSet",
                            "aws-marketplace:ListEntities",
                            "aws-marketplace:DescribeEntity",
                            "aws-marketplace:ListTasks",
                            "aws-marketplace:DescribeTask",
                            "ec2:DescribeImages",
                            "ec2:DescribeSnapshots"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4K5Y2Q5F7D",
            "PolicyName": "AWSMarketplaceSellerProductsReadOnly",
            "VersionId": "v2"
        },
        "AWSMigrationHubDMSAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mgh:CreateProgressUpdateStream"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:mgh:*:*:progressUpdateStream/DMS"
                    },
                    {
                        "Action": [
                            "mgh:AssociateCreatedArtifact",
                            "mgh:DescribeMigrationTask",
                            "mgh:DisassociateCreatedArtifact",
                            "mgh:ImportMigrationTask",
                            "mgh:ListCreatedArtifacts",
                            "mgh:NotifyMigrationTaskState",
                            "mgh:PutResourceAttributes",
                            "mgh:NotifyApplicationState",
                            "mgh:DescribeApplicationState",
                            "mgh:AssociateDiscoveredResource",
                            "mgh:DisassociateDiscoveredResource",
                            "mgh:ListDiscoveredResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:mgh:*:*:progressUpdateStream/DMS/*"
                    },
                    {
                        "Action": [
                            "mgh:ListMigrationTasks",
                            "mgh:GetHomeRegion"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIUQB56VA4JHLN7G2W",
            "PolicyName": "AWSMigrationHubDMSAccess",
            "VersionId": "v2"
        },
        "AWSMigrationHubDiscoveryAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "discovery:ListConfigurations",
                            "discovery:DescribeConfigurations"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": "aws:migrationhub:source-id"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*",
                            "arn:aws:ec2:*:*:image/*",
                            "arn:aws:ec2:*:*:volume/*"
                        ]
                    },
                    {
                        "Action": "dms:AddTagsToResource",
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": "aws:migrationhub:source-id"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:dms:*:*:endpoint:*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:DescribeInstanceAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAITRMRLSV7JAL6YIGG",
            "PolicyName": "AWSMigrationHubDiscoveryAccess",
            "VersionId": "v3"
        },
        "AWSMigrationHubFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mgh:*",
                            "discovery:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "continuousexport.discovery.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/continuousexport.discovery.amazonaws.com/AWSServiceRoleForApplicationDiscoveryServiceContinuousExport*"
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/continuousexport.discovery.amazonaws.com/AWSServiceRoleForApplicationDiscoveryServiceContinuousExport*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "migrationhub.amazonaws.com",
                                    "dmsintegration.migrationhub.amazonaws.com",
                                    "smsintegration.migrationhub.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ4A2SZKHUYHDYIGOK",
            "PolicyName": "AWSMigrationHubFullAccess",
            "VersionId": "v4"
        },
        "AWSMigrationHubSMSAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mgh:CreateProgressUpdateStream"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:mgh:*:*:progressUpdateStream/SMS"
                    },
                    {
                        "Action": [
                            "mgh:AssociateCreatedArtifact",
                            "mgh:DescribeMigrationTask",
                            "mgh:DisassociateCreatedArtifact",
                            "mgh:ImportMigrationTask",
                            "mgh:ListCreatedArtifacts",
                            "mgh:NotifyMigrationTaskState",
                            "mgh:PutResourceAttributes",
                            "mgh:NotifyApplicationState",
                            "mgh:DescribeApplicationState",
                            "mgh:AssociateDiscoveredResource",
                            "mgh:DisassociateDiscoveredResource",
                            "mgh:ListDiscoveredResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:mgh:*:*:progressUpdateStream/SMS/*"
                    },
                    {
                        "Action": [
                            "mgh:ListMigrationTasks",
                            "mgh:GetHomeRegion"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIWQYYT6TSVIRJO4TY",
            "PolicyName": "AWSMigrationHubSMSAccess",
            "VersionId": "v2"
        },
        "AWSMobileHub_FullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "apigateway:GET",
                            "apigateway:POST",
                            "cloudfront:GetDistribution",
                            "devicefarm:CreateProject",
                            "devicefarm:ListJobs",
                            "devicefarm:ListRuns",
                            "devicefarm:GetProject",
                            "devicefarm:GetRun",
                            "devicefarm:ListArtifacts",
                            "devicefarm:ListProjects",
                            "devicefarm:ScheduleRun",
                            "dynamodb:DescribeTable",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "iam:ListSAMLProviders",
                            "lambda:ListFunctions",
                            "sns:ListTopics",
                            "lex:GetIntent",
                            "lex:GetIntents",
                            "lex:GetSlotType",
                            "lex:GetSlotTypes",
                            "lex:GetBot",
                            "lex:GetBots",
                            "lex:GetBotAlias",
                            "lex:GetBotAliases",
                            "mobilehub:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*/aws-my-sample-app*.zip"
                    },
                    {
                        "Action": [
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*-mobilehub-*/*"
                    },
                    {
                        "Action": [
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*-mobilehub-*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIJLU43R6AGRBK76DM",
            "PolicyName": "AWSMobileHub_FullAccess",
            "VersionId": "v14"
        },
        "AWSMobileHub_ReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "dynamodb:DescribeTable",
                            "iam:ListSAMLProviders",
                            "lambda:ListFunctions",
                            "sns:ListTopics",
                            "lex:GetIntent",
                            "lex:GetIntents",
                            "lex:GetSlotType",
                            "lex:GetSlotTypes",
                            "lex:GetBot",
                            "lex:GetBots",
                            "lex:GetBotAlias",
                            "lex:GetBotAliases",
                            "mobilehub:ExportProject",
                            "mobilehub:GenerateProjectParameters",
                            "mobilehub:GetProject",
                            "mobilehub:SynchronizeProject",
                            "mobilehub:GetProjectSnapshot",
                            "mobilehub:ListProjectSnapshots",
                            "mobilehub:ListAvailableConnectors",
                            "mobilehub:ListAvailableFeatures",
                            "mobilehub:ListAvailableRegions",
                            "mobilehub:ListProjects",
                            "mobilehub:ValidateProject",
                            "mobilehub:VerifyServiceRole",
                            "mobilehub:DescribeBundle",
                            "mobilehub:ExportBundle",
                            "mobilehub:ListBundles"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*/aws-my-sample-app*.zip"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIBXVYVL3PWQFBZFGW",
            "PolicyName": "AWSMobileHub_ReadOnly",
            "VersionId": "v10"
        },
        "AWSNetworkFirewallServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:CreateVpcEndpoint",
                            "ec2:DescribeVpcEndpoints"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:RequestTag/AWSNetworkFirewallManaged": "true",
                                "ec2:CreateAction": "CreateVpcEndpoint"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*"
                    },
                    {
                        "Action": [
                            "ec2:DeleteVpcEndpoints"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/AWSNetworkFirewallManaged": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4DF6QQZAL3",
            "PolicyName": "AWSNetworkFirewallServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSNetworkManagerFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "networkmanager:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "networkmanager.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ARXJ4NU7I",
            "PolicyName": "AWSNetworkManagerFullAccess",
            "VersionId": "v1"
        },
        "AWSNetworkManagerReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "networkmanager:Describe*",
                            "networkmanager:Get*",
                            "networkmanager:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LZFJOS62Z",
            "PolicyName": "AWSNetworkManagerReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSNetworkManagerServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "directconnect:DescribeConnections",
                            "directconnect:DescribeDirectConnectGatewayAttachments",
                            "directconnect:DescribeLocations",
                            "directconnect:DescribeVirtualInterfaces",
                            "ec2:DescribeCustomerGateways",
                            "ec2:DescribeTransitGatewayAttachments",
                            "ec2:DescribeTransitGatewayRouteTables",
                            "ec2:DescribeTransitGateways",
                            "ec2:DescribeVpnConnections",
                            "ec2:GetTransitGatewayRouteTableAssociations",
                            "ec2:SearchTransitGatewayRoutes",
                            "ec2:DescribeTransitGatewayPeeringAttachments"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4B346KOB7I",
            "PolicyName": "AWSNetworkManagerServiceRolePolicy",
            "VersionId": "v2"
        },
        "AWSOpsWorksCMInstanceProfileRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:DescribeStackResource",
                            "cloudformation:SignalResource"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:AbortMultipartUpload",
                            "s3:DeleteObject",
                            "s3:GetObject",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "s3:ListMultipartUploadParts",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::aws-opsworks-cm-*"
                    },
                    {
                        "Action": "acm:GetCertificate",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAICSU3OSHCURP2WIZW",
            "PolicyName": "AWSOpsWorksCMInstanceProfileRole",
            "VersionId": "v3"
        },
        "AWSOpsWorksCMServiceRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:DeleteObject",
                            "s3:DeleteBucket",
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:PutBucketPolicy",
                            "s3:PutObject",
                            "s3:GetBucketTagging",
                            "s3:PutBucketTagging"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-opsworks-cm-*"
                        ]
                    },
                    {
                        "Action": [
                            "tag:UntagResources",
                            "tag:TagResources"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ssm:DescribeInstanceInformation",
                            "ssm:GetCommandInvocation",
                            "ssm:ListCommandInvocations",
                            "ssm:ListCommands"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ssm:SendCommand"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ssm:resourceTag/aws:cloudformation:stack-name": "aws-opsworks-cm-*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ssm:SendCommand"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ssm:*::document/*",
                            "arn:aws:s3:::aws-opsworks-cm-*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:AllocateAddress",
                            "ec2:AssociateAddress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateImage",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSnapshot",
                            "ec2:CreateTags",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DeleteSnapshot",
                            "ec2:DeregisterImage",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstanceStatus",
                            "ec2:DescribeInstances",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeSubnets",
                            "ec2:DisassociateAddress",
                            "ec2:ReleaseAddress",
                            "ec2:RunInstances",
                            "ec2:StopInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:TerminateInstances",
                            "ec2:RebootInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:cloudformation:stack-name": "aws-opsworks-cm-*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "opsworks-cm:DeleteServer",
                            "opsworks-cm:StartMaintenance"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:opsworks-cm:*:*:server/*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStackResources",
                            "cloudformation:DescribeStacks",
                            "cloudformation:UpdateStack"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/aws-opsworks-cm-*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-opsworks-cm-*",
                            "arn:aws:iam::*:role/service-role/aws-opsworks-cm-*"
                        ]
                    },
                    {
                        "Action": [
                            "acm:DeleteCertificate",
                            "acm:ImportCertificate"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:DeleteTags",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*",
                            "arn:aws:ec2:*:*:elastic-ip/*",
                            "arn:aws:ec2:*:*:security-group/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ6I6MPGJE62URSHCO",
            "PolicyName": "AWSOpsWorksCMServiceRole",
            "VersionId": "v12"
        },
        "AWSOpsWorksCloudWatchLogs": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJXFIK7WABAY5CPXM4",
            "PolicyName": "AWSOpsWorksCloudWatchLogs",
            "VersionId": "v1"
        },
        "AWSOpsWorksFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "opsworks:*",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "elasticloadbalancing:DescribeInstanceHealth",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "iam:GetRolePolicy",
                            "iam:ListInstanceProfiles",
                            "iam:ListRoles",
                            "iam:ListUsers",
                            "iam:PassRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAICN26VXMXASXKOQCG",
            "PolicyName": "AWSOpsWorksFullAccess",
            "VersionId": "v1"
        },
        "AWSOpsWorksInstanceRegistration": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "opsworks:DescribeStackProvisioningParameters",
                            "opsworks:DescribeStacks",
                            "opsworks:RegisterInstance"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJG3LCPVNI4WDZCIMU",
            "PolicyName": "AWSOpsWorksInstanceRegistration",
            "VersionId": "v1"
        },
        "AWSOpsWorksRegisterCLI_EC2": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "opsworks:AssignInstance",
                            "opsworks:CreateLayer",
                            "opsworks:DeregisterInstance",
                            "opsworks:DescribeInstances",
                            "opsworks:DescribeStackProvisioningParameters",
                            "opsworks:DescribeStacks",
                            "opsworks:UnassignInstance"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:DescribeInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NCE3CMCRC",
            "PolicyName": "AWSOpsWorksRegisterCLI_EC2",
            "VersionId": "v1"
        },
        "AWSOpsWorksRegisterCLI_OnPremises": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "opsworks:AssignInstance",
                            "opsworks:CreateLayer",
                            "opsworks:DeregisterInstance",
                            "opsworks:DescribeInstances",
                            "opsworks:DescribeStackProvisioningParameters",
                            "opsworks:DescribeStacks",
                            "opsworks:UnassignInstance"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:DescribeInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:CreateGroup",
                            "iam:AddUserToGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:group/AWS/OpsWorks/OpsWorks-*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:CreateUser",
                            "iam:CreateAccessKey"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:user/AWS/OpsWorks/OpsWorks-*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:AttachUserPolicy"
                        ],
                        "Condition": {
                            "ArnEquals": {
                                "iam:PolicyARN": "arn:aws:iam::aws:policy/AWSOpsWorksInstanceRegistration"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:user/AWS/OpsWorks/OpsWorks-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4EZJ5DYEPG",
            "PolicyName": "AWSOpsWorksRegisterCLI_OnPremises",
            "VersionId": "v1"
        },
        "AWSOpsWorksRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:GetMetricStatistics",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeInstances",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "elasticloadbalancing:DescribeInstanceHealth",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "iam:GetRolePolicy",
                            "iam:ListInstanceProfiles",
                            "iam:ListRoles",
                            "iam:ListUsers",
                            "iam:PassRole",
                            "opsworks:*",
                            "rds:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIDUTMOKHJFAPJV45W",
            "PolicyName": "AWSOpsWorksRole",
            "VersionId": "v1"
        },
        "AWSOrganizationsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "organizations:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJZXBNRCJKNLQHSB5M",
            "PolicyName": "AWSOrganizationsFullAccess",
            "VersionId": "v1"
        },
        "AWSOrganizationsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "organizations:Describe*",
                            "organizations:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJY5RQATUV77PEPVOM",
            "PolicyName": "AWSOrganizationsReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSOrganizationsServiceTrustPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:DeleteRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/organizations.amazonaws.com/*"
                        ],
                        "Sid": "AllowDeletionOfServiceLinkedRoleForOrganizations"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowCreationOfServiceLinkedRoles"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIQH6ROMVVECFVRJPK",
            "PolicyName": "AWSOrganizationsServiceTrustPolicy",
            "VersionId": "v2"
        },
        "AWSOutpostsServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NM7FW2RO7",
            "PolicyName": "AWSOutpostsServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSPanoramaApplianceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/panorama_device*:log-stream:*",
                        "Sid": "PanoramaDeviceCreateLogStream"
                    },
                    {
                        "Action": "logs:CreateLogGroup",
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/panorama_device*",
                        "Sid": "PanoramaDeviceCreateLogGroup"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CWIHTBB4Y",
            "PolicyName": "AWSPanoramaApplianceRolePolicy",
            "VersionId": "v1"
        },
        "AWSPanoramaFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "panorama:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IAPULBSWQ",
            "PolicyName": "AWSPanoramaFullAccess",
            "VersionId": "v1"
        },
        "AWSPanoramaGreengrassGroupRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:GetBucket*",
                            "s3:HeadBucket",
                            "s3:GetObject",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*aws-panorama*"
                        ],
                        "Sid": "PanoramaS3Access"
                    },
                    {
                        "Action": "cloudwatch:PutDashboard",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudwatch::*:dashboard/panorama*"
                        ],
                        "Sid": "PanoramaCLoudWatchPutDashboard"
                    },
                    {
                        "Action": "cloudwatch:PutMetricData",
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "PanoramaCloudWatchPutMetricData"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams",
                            "logs:PutLogEvents",
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/greengrass/*",
                        "Sid": "PanoramaGreenGrassCloudWatchAccess"
                    },
                    {
                        "Action": [
                            "panorama:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "PanoramaAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IRCPXKCEG",
            "PolicyName": "AWSPanoramaGreengrassGroupRolePolicy",
            "VersionId": "v1"
        },
        "AWSPanoramaSageMakerRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:GetBucket*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*aws-panorama*"
                        ],
                        "Sid": "PanoramaSageMakerS3Access"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4O23KYQMI2",
            "PolicyName": "AWSPanoramaSageMakerRolePolicy",
            "VersionId": "v1"
        },
        "AWSPanoramaServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iot:CreateThing",
                            "iot:DeleteThing",
                            "iot:DeleteThingShadow",
                            "iot:DescribeThing",
                            "iot:GetThingShadow",
                            "iot:UpdateThing",
                            "iot:UpdateThingShadow"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:thing/panorama*"
                        ],
                        "Sid": "PanoramaIoTThingAccess"
                    },
                    {
                        "Action": [
                            "iot:AttachThingPrincipal",
                            "iot:DetachThingPrincipal",
                            "iot:UpdateCertificate",
                            "iot:DeleteCertificate",
                            "iot:AttachPrincipalPolicy",
                            "iot:DetachPrincipalPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:thing/panorama*",
                            "arn:aws:iot:*:*:cert/*"
                        ],
                        "Sid": "PanoramaIoTCertificateAccess"
                    },
                    {
                        "Action": [
                            "iot:CreateKeysAndCertificate",
                            "iot:CreatePolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "PanoramaIoTCreateCertificateAndPolicyAccess"
                    },
                    {
                        "Action": [
                            "iot:CreatePolicyVersion"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:policy/panorama*"
                        ],
                        "Sid": "PanoramaIoTCreatePolicyVersionAccess"
                    },
                    {
                        "Action": [
                            "iot:DescribeJobExecution",
                            "iot:CreateJob",
                            "iot:DeleteJob"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:job/panorama*",
                            "arn:aws:iot:*:*:thing/panorama*"
                        ],
                        "Sid": "PanoramaIoTJobAccess"
                    },
                    {
                        "Action": [
                            "iot:DescribeEndpoint"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "PanoramaIoTEndpointAccess"
                    },
                    {
                        "Action": [
                            "panorama:Describe*",
                            "panorama:List*",
                            "panorama:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "PanoramaAccess"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:DeleteObject",
                            "s3:DeleteBucket",
                            "s3:ListBucket",
                            "s3:GetBucket*",
                            "s3:CreateBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*aws-panorama*"
                        ],
                        "Sid": "PanoramaS3Access"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "sagemaker.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/AWSPanoramaSageMakerRole",
                            "arn:aws:iam::*:role/service-role/AWSPanoramaSageMakerRole"
                        ],
                        "Sid": "PanoramaIAMPassSageMakerRoleAccess"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "greengrass.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/AWSPanoramaGreengrassGroupRole",
                            "arn:aws:iam::*:role/service-role/AWSPanoramaGreengrassGroupRole",
                            "arn:aws:iam::*:role/AWSPanoramaGreengrassRole",
                            "arn:aws:iam::*:role/service-role/AWSPanoramaGreengrassRole"
                        ],
                        "Sid": "PanoramaIAMPassGreengrassRoleAccess"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEqualsIfExists": {
                                "iam:PassedToService": "iot.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/AWSPanoramaApplianceRole",
                            "arn:aws:iam::*:role/service-role/AWSPanoramaApplianceRole"
                        ],
                        "Sid": "PanoramaIAMPassIoTRoleAccess"
                    },
                    {
                        "Action": [
                            "greengrass:AssociateRoleToGroup",
                            "greengrass:AssociateServiceRoleToAccount",
                            "greengrass:CreateResourceDefinition",
                            "greengrass:CreateResourceDefinitionVersion",
                            "greengrass:CreateCoreDefinition",
                            "greengrass:CreateCoreDefinitionVersion",
                            "greengrass:CreateDeployment",
                            "greengrass:CreateFunctionDefinition",
                            "greengrass:CreateFunctionDefinitionVersion",
                            "greengrass:CreateGroup",
                            "greengrass:CreateGroupCertificateAuthority",
                            "greengrass:CreateGroupVersion",
                            "greengrass:CreateLoggerDefinition",
                            "greengrass:CreateLoggerDefinitionVersion",
                            "greengrass:CreateSubscriptionDefinition",
                            "greengrass:CreateSubscriptionDefinitionVersion",
                            "greengrass:DeleteCoreDefinition",
                            "greengrass:DeleteFunctionDefinition",
                            "greengrass:DeleteResourceDefinition",
                            "greengrass:DeleteGroup",
                            "greengrass:DeleteLoggerDefinition",
                            "greengrass:DeleteSubscriptionDefinition",
                            "greengrass:DisassociateRoleFromGroup",
                            "greengrass:DisassociateServiceRoleFromAccount",
                            "greengrass:GetAssociatedRole",
                            "greengrass:GetConnectivityInfo",
                            "greengrass:GetCoreDefinition",
                            "greengrass:GetCoreDefinitionVersion",
                            "greengrass:GetDeploymentStatus",
                            "greengrass:GetDeviceDefinition",
                            "greengrass:GetDeviceDefinitionVersion",
                            "greengrass:GetFunctionDefinition",
                            "greengrass:GetFunctionDefinitionVersion",
                            "greengrass:GetGroup",
                            "greengrass:GetGroupCertificateAuthority",
                            "greengrass:GetGroupCertificateConfiguration",
                            "greengrass:GetGroupVersion",
                            "greengrass:GetLoggerDefinition",
                            "greengrass:GetLoggerDefinitionVersion",
                            "greengrass:GetResourceDefinition",
                            "greengrass:GetServiceRoleForAccount",
                            "greengrass:GetSubscriptionDefinition",
                            "greengrass:GetSubscriptionDefinitionVersion",
                            "greengrass:ListCoreDefinitionVersions",
                            "greengrass:ListCoreDefinitions",
                            "greengrass:ListDeployments",
                            "greengrass:ListDeviceDefinitionVersions",
                            "greengrass:ListDeviceDefinitions",
                            "greengrass:ListFunctionDefinitionVersions",
                            "greengrass:ListFunctionDefinitions",
                            "greengrass:ListGroupCertificateAuthorities",
                            "greengrass:ListGroupVersions",
                            "greengrass:ListGroups",
                            "greengrass:ListLoggerDefinitionVersions",
                            "greengrass:ListLoggerDefinitions",
                            "greengrass:ListSubscriptionDefinitionVersions",
                            "greengrass:ListSubscriptionDefinitions",
                            "greengrass:ResetDeployments",
                            "greengrass:UpdateConnectivityInfo",
                            "greengrass:UpdateCoreDefinition",
                            "greengrass:UpdateDeviceDefinition",
                            "greengrass:UpdateFunctionDefinition",
                            "greengrass:UpdateGroup",
                            "greengrass:UpdateGroupCertificateConfiguration",
                            "greengrass:UpdateLoggerDefinition",
                            "greengrass:UpdateSubscriptionDefinition",
                            "greengrass:UpdateResourceDefinition"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "PanoramaGreenGrassAccess"
                    },
                    {
                        "Action": [
                            "lambda:GetFunction",
                            "lambda:GetFunctionConfiguration",
                            "lambda:ListFunctions",
                            "lambda:ListVersionsByFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:*"
                        ],
                        "Sid": "PanoramaLambdaUsersFunctionAccess"
                    },
                    {
                        "Action": [
                            "sagemaker:CreateTrainingJob",
                            "sagemaker:StopTrainingJob",
                            "sagemaker:CreateCompilationJob",
                            "sagemaker:DescribeCompilationJob",
                            "sagemaker:StopCompilationJob"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sagemaker:*:*:training-job/panorama*",
                            "arn:aws:sagemaker:*:*:compilation-job/panorama*"
                        ],
                        "Sid": "PanoramaSageMakerWriteAccess"
                    },
                    {
                        "Action": [
                            "sagemaker:ListCompilationJobs"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "PanoramaSageMakerListAccess"
                    },
                    {
                        "Action": [
                            "sagemaker:DescribeTrainingJob"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sagemaker:*:*:training-job/*"
                        ],
                        "Sid": "PanoramaSageMakerReadAccess"
                    },
                    {
                        "Action": [
                            "iot:AttachPolicy",
                            "iot:CreateRoleAlias"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iot:*:*:policy/panorama*",
                            "arn:aws:iot:*:*:rolealias/panorama*"
                        ],
                        "Sid": "PanoramaCWLogsAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4G7G35B6C5",
            "PolicyName": "AWSPanoramaServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSPriceListServiceFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "pricing:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIADJ4GBYNHKABML3Q",
            "PolicyName": "AWSPriceListServiceFullAccess",
            "VersionId": "v1"
        },
        "AWSPrivateMarketplaceAdminFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace:CreatePrivateMarketplace",
                            "aws-marketplace:StartPrivateMarketplace",
                            "aws-marketplace:StopPrivateMarketplace",
                            "aws-marketplace:DescribePrivateMarketplaceStatus",
                            "aws-marketplace:AssociateProductsWithPrivateMarketplace",
                            "aws-marketplace:DisassociateProductsFromPrivateMarketplace",
                            "aws-marketplace:ListPrivateMarketplaceProducts",
                            "aws-marketplace:DescribePrivateMarketplaceProducts",
                            "aws-marketplace:ListPrivateMarketplaceRequests",
                            "aws-marketplace:DescribePrivateMarketplaceRequests",
                            "aws-marketplace:UpdatePrivateMarketplaceSettings",
                            "aws-marketplace:DescribePrivateMarketplaceSettings",
                            "aws-marketplace:CreatePrivateMarketplaceProfile",
                            "aws-marketplace:UpdatePrivateMarketplaceProfile",
                            "aws-marketplace:DescribePrivateMarketplaceProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "aws-marketplace:ListEntities",
                            "aws-marketplace:DescribeEntity",
                            "aws-marketplace:StartChangeSet",
                            "aws-marketplace:ListChangeSets",
                            "aws-marketplace:DescribeChangeSet",
                            "aws-marketplace:CancelChangeSet"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ6VRZDDCYDOVCOCEI",
            "PolicyName": "AWSPrivateMarketplaceAdminFullAccess",
            "VersionId": "v3"
        },
        "AWSPrivateMarketplaceRequests": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-marketplace:CreatePrivateMarketplaceRequests",
                            "aws-marketplace:ListPrivateMarketplaceRequests",
                            "aws-marketplace:DescribePrivateMarketplaceRequests"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4AV6W3DAIW",
            "PolicyName": "AWSPrivateMarketplaceRequests",
            "VersionId": "v1"
        },
        "AWSPurchaseOrdersServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-portal:*Billing",
                            "awsbillingconsole:*Billing",
                            "purchase-orders:*PurchaseOrders"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KQXTYO5FP",
            "PolicyName": "AWSPurchaseOrdersServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSQuickSightDescribeRDS": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rds:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJU5J6OAMCJD3OO76O",
            "PolicyName": "AWSQuickSightDescribeRDS",
            "VersionId": "v1"
        },
        "AWSQuickSightDescribeRedshift": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "redshift:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJFEM6MLSLTW4ZNBW2",
            "PolicyName": "AWSQuickSightDescribeRedshift",
            "VersionId": "v1"
        },
        "AWSQuickSightElasticsearchPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "es:ESHttpGet"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:es:*:*:domain/*/",
                            "arn:aws:es:*:*:domain/*/_cluster/settings",
                            "arn:aws:es:*:*:domain/*/_cat/indices"
                        ]
                    },
                    {
                        "Action": "es:ListDomainNames",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "es:DescribeElasticsearchDomain"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:es:*:*:domain/*"
                        ]
                    },
                    {
                        "Action": [
                            "es:ESHttpPost",
                            "es:ESHttpGet"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:es:*:*:domain/*/_opendistro/_sql"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4BLUM3JVIN",
            "PolicyName": "AWSQuickSightElasticsearchPolicy",
            "VersionId": "v2"
        },
        "AWSQuickSightIoTAnalyticsAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iotanalytics:ListDatasets",
                            "iotanalytics:DescribeDataset",
                            "iotanalytics:GetDatasetContent"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJIZNDRUTKCN5HLZOE",
            "PolicyName": "AWSQuickSightIoTAnalyticsAccess",
            "VersionId": "v1"
        },
        "AWSQuickSightListIAM": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI3CH5UUWZN4EKGILO",
            "PolicyName": "AWSQuickSightListIAM",
            "VersionId": "v1"
        },
        "AWSQuickSightSageMakerPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sagemaker:DescribeTransformJob",
                            "sagemaker:StopTransformJob",
                            "sagemaker:CreateTransformJob"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sagemaker:*:*:transform-job/quicksight-auto-generated-*"
                    },
                    {
                        "Action": "sagemaker:ListModels",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "s3:GetObject",
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::quicksight-ml.*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MCLBVDT2I",
            "PolicyName": "AWSQuickSightSageMakerPolicy",
            "VersionId": "v1"
        },
        "AWSQuickSightTimestreamPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "timestream:Select",
                            "timestream:CancelQuery",
                            "timestream:ListTables",
                            "timestream:ListDatabases",
                            "timestream:ListMeasures",
                            "timestream:DescribeTable",
                            "timestream:DescribeDatabase",
                            "timestream:SelectValues",
                            "timestream:DescribeEndpoints"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CFKVDHQJH",
            "PolicyName": "AWSQuickSightTimestreamPolicy",
            "VersionId": "v1"
        },
        "AWSQuicksightAthenaAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "athena:BatchGetQueryExecution",
                            "athena:CancelQueryExecution",
                            "athena:GetCatalogs",
                            "athena:GetExecutionEngine",
                            "athena:GetExecutionEngines",
                            "athena:GetNamespace",
                            "athena:GetNamespaces",
                            "athena:GetQueryExecution",
                            "athena:GetQueryExecutions",
                            "athena:GetQueryResults",
                            "athena:GetQueryResultsStream",
                            "athena:GetTable",
                            "athena:GetTables",
                            "athena:ListQueryExecutions",
                            "athena:RunQuery",
                            "athena:StartQueryExecution",
                            "athena:StopQueryExecution",
                            "athena:ListWorkGroups",
                            "athena:GetWorkGroup",
                            "athena:GetDataCatalog",
                            "athena:GetDatabase",
                            "athena:GetTableMetadata",
                            "athena:ListDataCatalogs",
                            "athena:ListDatabases",
                            "athena:ListTableMetadata"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "glue:CreateDatabase",
                            "glue:DeleteDatabase",
                            "glue:GetDatabase",
                            "glue:GetDatabases",
                            "glue:UpdateDatabase",
                            "glue:CreateTable",
                            "glue:DeleteTable",
                            "glue:BatchDeleteTable",
                            "glue:UpdateTable",
                            "glue:GetTable",
                            "glue:GetTables",
                            "glue:BatchCreatePartition",
                            "glue:CreatePartition",
                            "glue:DeletePartition",
                            "glue:BatchDeletePartition",
                            "glue:UpdatePartition",
                            "glue:GetPartition",
                            "glue:GetPartitions",
                            "glue:BatchGetPartition"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetBucketLocation",
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:ListBucketMultipartUploads",
                            "s3:ListMultipartUploadParts",
                            "s3:AbortMultipartUpload",
                            "s3:CreateBucket",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-athena-query-results-*"
                        ]
                    },
                    {
                        "Action": [
                            "lakeformation:GetDataAccess"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI4JB77JXFQXDWNRPM",
            "PolicyName": "AWSQuicksightAthenaAccess",
            "VersionId": "v8"
        },
        "AWSResourceAccessManagerFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ram:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FYRGF63DP",
            "PolicyName": "AWSResourceAccessManagerFullAccess",
            "VersionId": "v1"
        },
        "AWSResourceAccessManagerReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ram:Get*",
                            "ram:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4BQV2LHYJY",
            "PolicyName": "AWSResourceAccessManagerReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSResourceAccessManagerResourceShareParticipantAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ram:AcceptResourceShareInvitation",
                            "ram:GetResourcePolicies",
                            "ram:GetResourceShareInvitations",
                            "ram:GetResourceShares",
                            "ram:ListPendingInvitationResources",
                            "ram:ListPrincipals",
                            "ram:ListResources",
                            "ram:RejectResourceShareInvitation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LIFEGGUIU",
            "PolicyName": "AWSResourceAccessManagerResourceShareParticipantAccess",
            "VersionId": "v1"
        },
        "AWSResourceAccessManagerServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "organizations:DescribeOrganizationalUnit",
                            "organizations:ListAccounts",
                            "organizations:ListAccountsForParent",
                            "organizations:ListChildren",
                            "organizations:ListOrganizationalUnitsForParent",
                            "organizations:ListParents",
                            "organizations:ListRoots"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:DeleteRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/ram.amazonaws.com/*"
                        ],
                        "Sid": "AllowDeletionOfServiceLinkedRoleForResourceAccessManager"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJU667A3V5UAXC4YNE",
            "PolicyName": "AWSResourceAccessManagerServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSResourceGroupsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "resource-groups:Get*",
                            "resource-groups:List*",
                            "resource-groups:Search*",
                            "tag:Get*",
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListStackResources",
                            "ec2:DescribeInstances",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeVolumes",
                            "ec2:DescribeVpcs",
                            "elasticache:DescribeCacheClusters",
                            "elasticache:DescribeSnapshots",
                            "elasticache:ListTagsForResource",
                            "elasticbeanstalk:DescribeEnvironments",
                            "elasticmapreduce:DescribeCluster",
                            "elasticmapreduce:ListClusters",
                            "glacier:ListVaults",
                            "glacier:DescribeVault",
                            "glacier:ListTagsForVault",
                            "kinesis:ListStreams",
                            "kinesis:DescribeStream",
                            "kinesis:ListTagsForStream",
                            "opsworks:DescribeStacks",
                            "opsworks:ListTags",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBSnapshots",
                            "rds:ListTagsForResource",
                            "redshift:DescribeClusters",
                            "redshift:DescribeTags",
                            "route53domains:ListDomains",
                            "route53:ListHealthChecks",
                            "route53:GetHealthCheck",
                            "route53:ListHostedZones",
                            "route53:GetHostedZone",
                            "route53:ListTagsForResource",
                            "storagegateway:ListGateways",
                            "storagegateway:DescribeGatewayInformation",
                            "storagegateway:ListTagsForResource",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketTagging",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeTags",
                            "ssm:ListDocuments"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIXFKM2WGBJAEWMFEG",
            "PolicyName": "AWSResourceGroupsReadOnlyAccess",
            "VersionId": "v2"
        },
        "AWSRoboMakerReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "robomaker:List*",
                            "robomaker:BatchDescribe*",
                            "robomaker:Describe*",
                            "robomaker:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "VisualEditor0"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIXFHP2ALXXGGECYJI",
            "PolicyName": "AWSRoboMakerReadOnlyAccess",
            "VersionId": "v2"
        },
        "AWSRoboMakerServicePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSecurityGroups",
                            "greengrass:CreateDeployment",
                            "greengrass:CreateGroupVersion",
                            "greengrass:CreateFunctionDefinition",
                            "greengrass:CreateFunctionDefinitionVersion",
                            "greengrass:GetDeploymentStatus",
                            "greengrass:GetGroup",
                            "greengrass:GetGroupVersion",
                            "greengrass:GetCoreDefinitionVersion",
                            "greengrass:GetFunctionDefinitionVersion",
                            "greengrass:GetAssociatedRole",
                            "lambda:CreateFunction",
                            "robomaker:CreateSimulationJob",
                            "robomaker:CancelSimulationJob"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "robomaker:TagResource"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:robomaker:*:*:/createsimulationjob",
                            "arn:aws:robomaker:*:*:simulation-job/*"
                        ]
                    },
                    {
                        "Action": [
                            "lambda:UpdateFunctionCode",
                            "lambda:GetFunction",
                            "lambda:UpdateFunctionConfiguration",
                            "lambda:DeleteFunction",
                            "lambda:ListVersionsByFunction",
                            "lambda:GetAlias",
                            "lambda:UpdateAlias",
                            "lambda:CreateAlias",
                            "lambda:DeleteAlias"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:lambda:*:*:function:aws-robomaker-*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "lambda.amazonaws.com",
                                    "robomaker.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJYLVVUUQMAEEZ3ZNY",
            "PolicyName": "AWSRoboMakerServicePolicy",
            "VersionId": "v5"
        },
        "AWSRoboMakerServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSecurityGroups",
                            "greengrass:CreateDeployment",
                            "greengrass:CreateGroupVersion",
                            "greengrass:CreateFunctionDefinition",
                            "greengrass:CreateFunctionDefinitionVersion",
                            "greengrass:GetDeploymentStatus",
                            "greengrass:GetGroup",
                            "greengrass:GetGroupVersion",
                            "greengrass:GetCoreDefinitionVersion",
                            "greengrass:GetFunctionDefinitionVersion",
                            "greengrass:GetAssociatedRole",
                            "lambda:CreateFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "lambda:UpdateFunctionCode",
                            "lambda:GetFunction",
                            "lambda:UpdateFunctionConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:lambda:*:*:function:aws-robomaker-*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEqualsIfExists": {
                                "iam:PassedToService": "lambda.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIOSFFLBBLCTKS3ATC",
            "PolicyName": "AWSRoboMakerServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSRoboMaker_FullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "robomaker:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "s3:GetObject",
                        "Condition": {
                            "StringEquals": {
                                "aws:CalledViaFirst": "robomaker.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "robomaker.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FACURHLCA",
            "PolicyName": "AWSRoboMaker_FullAccess",
            "VersionId": "v1"
        },
        "AWSSSODirectoryAdministrator": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sso-directory:*",
                            "sso:ListDirectoryAssociations"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AWSSSODirectoryAdministrator"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI2TCZRD7WRD5D2E2Q",
            "PolicyName": "AWSSSODirectoryAdministrator",
            "VersionId": "v2"
        },
        "AWSSSODirectoryReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sso-directory:Search*",
                            "sso-directory:Describe*",
                            "sso-directory:List*",
                            "sso-directory:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AWSSSODirectoryReadOnly"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJDPMQELJXZD2NC6JG",
            "PolicyName": "AWSSSODirectoryReadOnly",
            "VersionId": "v2"
        },
        "AWSSSOMasterAccountAdministrator": {
            "Document": {
                "Statement": [
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "sso.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO",
                        "Sid": "AWSSSOMasterAccountAdministrator"
                    },
                    {
                        "Action": [
                            "ds:DescribeTrusts",
                            "ds:UnauthorizeApplication",
                            "ds:DescribeDirectories",
                            "ds:AuthorizeApplication",
                            "iam:ListPolicies",
                            "organizations:EnableAWSServiceAccess",
                            "organizations:ListRoots",
                            "organizations:ListAccounts",
                            "organizations:ListOrganizationalUnitsForParent",
                            "organizations:ListAccountsForParent",
                            "organizations:DescribeOrganization",
                            "organizations:ListChildren",
                            "organizations:DescribeAccount",
                            "organizations:ListParents",
                            "sso:*",
                            "sso-directory:DescribeDirectory",
                            "ds:CreateAlias"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AWSSSOMemberAccountAdministrator"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIHXAQZIS3GOYIETUC",
            "PolicyName": "AWSSSOMasterAccountAdministrator",
            "VersionId": "v3"
        },
        "AWSSSOMemberAccountAdministrator": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ds:DescribeDirectories",
                            "ds:AuthorizeApplication",
                            "ds:UnauthorizeApplication",
                            "ds:DescribeTrusts",
                            "iam:ListPolicies",
                            "organizations:EnableAWSServiceAccess",
                            "organizations:DescribeOrganization",
                            "organizations:DescribeAccount",
                            "organizations:ListRoots",
                            "organizations:ListAccounts",
                            "organizations:ListAccountsForParent",
                            "organizations:ListParents",
                            "organizations:ListChildren",
                            "organizations:ListOrganizationalUnitsForParent",
                            "sso:*",
                            "sso-directory:DescribeDirectory",
                            "ds:CreateAlias"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AWSSSOMemberAccountAdministrator"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIQYHEY7KJWXZFNDPY",
            "PolicyName": "AWSSSOMemberAccountAdministrator",
            "VersionId": "v2"
        },
        "AWSSSOReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ds:DescribeDirectories",
                            "ds:DescribeTrusts",
                            "iam:ListPolicies",
                            "organizations:DescribeOrganization",
                            "organizations:DescribeAccount",
                            "organizations:ListParents",
                            "organizations:ListChildren",
                            "organizations:ListAccounts",
                            "organizations:ListRoots",
                            "organizations:ListAccountsForParent",
                            "organizations:ListOrganizationalUnitsForParent",
                            "sso:Describe*",
                            "sso:Get*",
                            "sso:List*",
                            "sso:Search*",
                            "sso-directory:DescribeDirectory"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AWSSSOReadOnly"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJBSMEEZXFDMKMY43I",
            "PolicyName": "AWSSSOReadOnly",
            "VersionId": "v6"
        },
        "AWSSSOServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:AttachRolePolicy",
                            "iam:CreateRole",
                            "iam:PutRolePolicy",
                            "iam:UpdateRole",
                            "iam:UpdateRoleDescription",
                            "iam:UpdateAssumeRolePolicy"
                        ],
                        "Condition": {
                            "StringNotEquals": {
                                "aws:PrincipalOrgMasterAccountId": "${aws:PrincipalAccount}"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
                        ],
                        "Sid": "IAMRoleProvisioningActions"
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "iam:ListRoles"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "IAMRoleReadActions"
                    },
                    {
                        "Action": [
                            "iam:DeleteRole",
                            "iam:DeleteRolePolicy",
                            "iam:DetachRolePolicy",
                            "iam:ListRolePolicies",
                            "iam:ListAttachedRolePolicies"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
                        ],
                        "Sid": "IAMRoleCleanupActions"
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus",
                            "iam:DeleteRole",
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
                        ],
                        "Sid": "IAMSLRCleanupActions"
                    },
                    {
                        "Action": [
                            "iam:CreateSAMLProvider",
                            "iam:UpdateSAMLProvider"
                        ],
                        "Condition": {
                            "StringNotEquals": {
                                "aws:PrincipalOrgMasterAccountId": "${aws:PrincipalAccount}"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:saml-provider/AWSSSO_*"
                        ],
                        "Sid": "IAMSAMLProviderProvisioningActions"
                    },
                    {
                        "Action": [
                            "iam:DeleteSAMLProvider",
                            "iam:GetSAMLProvider"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:saml-provider/AWSSSO_*"
                        ],
                        "Sid": "IAMSAMLProviderCleanupActions"
                    },
                    {
                        "Action": [
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "organizations:ListAccounts"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ds:UnauthorizeApplication"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AllowUnauthAppForDirectory"
                    },
                    {
                        "Action": [
                            "ds:DescribeDirectories",
                            "ds:DescribeTrusts"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AllowDescribeForDirectory"
                    },
                    {
                        "Action": [
                            "identitystore:DescribeUser",
                            "identitystore:DescribeGroup",
                            "identitystore:ListGroups",
                            "identitystore:ListUsers"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AllowDescribeAndListOperationsOnIdentitySource"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIJ52KSWOD4GI54XP2",
            "PolicyName": "AWSSSOServiceRolePolicy",
            "VersionId": "v13"
        },
        "AWSSavingsPlansFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "savingsplans:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NDDOS76AO",
            "PolicyName": "AWSSavingsPlansFullAccess",
            "VersionId": "v1"
        },
        "AWSSavingsPlansReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "savingsplans:Describe*",
                            "savingsplans:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4OQ26WIHJ5",
            "PolicyName": "AWSSavingsPlansReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSSecurityHubFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "securityhub:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "securityhub.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ4262VZCA4HPBZSO6",
            "PolicyName": "AWSSecurityHubFullAccess",
            "VersionId": "v1"
        },
        "AWSSecurityHubReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "securityhub:Get*",
                            "securityhub:List*",
                            "securityhub:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIEBAQNOFUCLFJ3UHG",
            "PolicyName": "AWSSecurityHubReadOnlyAccess",
            "VersionId": "v2"
        },
        "AWSSecurityHubServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:GetEventSelectors",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DescribeAlarmsForMetric",
                            "logs:DescribeMetricFilters",
                            "sns:ListSubscriptionsByTopic",
                            "config:DescribeConfigurationRecorders",
                            "config:DescribeConfigurationRecorderStatus",
                            "config:DescribeConfigRules",
                            "config:BatchGetResourceConfig",
                            "config:SelectResourceConfig",
                            "iam:GenerateCredentialReport",
                            "iam:GetCredentialReport",
                            "organizations:ListAccounts",
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "config:PutConfigRule",
                            "config:DeleteConfigRule",
                            "config:GetComplianceDetailsByConfigRule",
                            "config:DescribeConfigRuleEvaluationStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/*securityhub*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQPCESDDYDLLSOGYO",
            "PolicyName": "AWSSecurityHubServiceRolePolicy",
            "VersionId": "v7"
        },
        "AWSServiceCatalogAdminFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStacks",
                            "cloudformation:SetStackPolicy",
                            "cloudformation:UpdateStack",
                            "cloudformation:CreateChangeSet",
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:ExecuteChangeSet",
                            "cloudformation:ListChangeSets",
                            "cloudformation:DeleteChangeSet",
                            "cloudformation:ListStackResources",
                            "cloudformation:TagResource",
                            "cloudformation:CreateStackSet",
                            "cloudformation:CreateStackInstances",
                            "cloudformation:UpdateStackSet",
                            "cloudformation:UpdateStackInstances",
                            "cloudformation:DeleteStackSet",
                            "cloudformation:DeleteStackInstances",
                            "cloudformation:DescribeStackSet",
                            "cloudformation:DescribeStackInstance",
                            "cloudformation:DescribeStackSetOperation",
                            "cloudformation:ListStackInstances",
                            "cloudformation:ListStackSetOperations",
                            "cloudformation:ListStackSetOperationResults"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/SC-*",
                            "arn:aws:cloudformation:*:*:stack/StackSet-SC-*",
                            "arn:aws:cloudformation:*:*:changeSet/SC-*",
                            "arn:aws:cloudformation:*:*:stackset/SC-*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:CreateUploadBucket",
                            "cloudformation:GetTemplateSummary",
                            "cloudformation:ValidateTemplate",
                            "iam:GetGroup",
                            "iam:GetRole",
                            "iam:GetUser",
                            "iam:ListGroups",
                            "iam:ListRoles",
                            "iam:ListUsers",
                            "servicecatalog:*",
                            "ssm:DescribeDocument",
                            "ssm:GetAutomationExecution",
                            "ssm:ListDocuments",
                            "ssm:ListDocumentVersions",
                            "config:DescribeConfigurationRecorders",
                            "config:DescribeConfigurationRecorderStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "servicecatalog.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJWLJU4BZ7AQUJSBVM",
            "PolicyName": "AWSServiceCatalogAdminFullAccess",
            "VersionId": "v5"
        },
        "AWSServiceCatalogAdminReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStacks",
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:ListChangeSets",
                            "cloudformation:ListStackResources",
                            "cloudformation:DescribeStackSet",
                            "cloudformation:DescribeStackInstance",
                            "cloudformation:DescribeStackSetOperation",
                            "cloudformation:ListStackInstances",
                            "cloudformation:ListStackSetOperations",
                            "cloudformation:ListStackSetOperationResults"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/SC-*",
                            "arn:aws:cloudformation:*:*:stack/StackSet-SC-*",
                            "arn:aws:cloudformation:*:*:changeSet/SC-*",
                            "arn:aws:cloudformation:*:*:stackset/SC-*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:GetTemplateSummary",
                            "iam:GetGroup",
                            "iam:GetRole",
                            "iam:GetUser",
                            "iam:ListGroups",
                            "iam:ListRoles",
                            "iam:ListUsers",
                            "servicecatalog:Get*",
                            "servicecatalog:List*",
                            "servicecatalog:Describe*",
                            "servicecatalog:ScanProvisionedProducts",
                            "servicecatalog:Search*",
                            "ssm:DescribeDocument",
                            "ssm:GetAutomationExecution",
                            "ssm:ListDocuments",
                            "ssm:ListDocumentVersions",
                            "config:DescribeConfigurationRecorders",
                            "config:DescribeConfigurationRecorderStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MC6ZR7YFX",
            "PolicyName": "AWSServiceCatalogAdminReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSServiceCatalogAppRegistryFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:DescribeStacks",
                            "servicecatalog:CreateApplication",
                            "servicecatalog:GetApplication",
                            "servicecatalog:UpdateApplication",
                            "servicecatalog:DeleteApplication",
                            "servicecatalog:ListApplications",
                            "servicecatalog:AssociateResource",
                            "servicecatalog:DisassociateResource",
                            "servicecatalog:ListAssociatedResources",
                            "servicecatalog:AssociateAttributeGroup",
                            "servicecatalog:DisassociateAttributeGroup",
                            "servicecatalog:ListAssociatedAttributeGroups",
                            "servicecatalog:CreateAttributeGroup",
                            "servicecatalog:UpdateAttributeGroup",
                            "servicecatalog:DeleteAttributeGroup",
                            "servicecatalog:GetAttributeGroup",
                            "servicecatalog:ListAttributeGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4N2G3EPAYN",
            "PolicyName": "AWSServiceCatalogAppRegistryFullAccess",
            "VersionId": "v1"
        },
        "AWSServiceCatalogAppRegistryReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "servicecatalog:GetApplication",
                            "servicecatalog:ListApplications",
                            "servicecatalog:ListAssociatedResources",
                            "servicecatalog:ListAssociatedAttributeGroups",
                            "servicecatalog:GetAttributeGroup",
                            "servicecatalog:ListAttributeGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4M3SSCJCST",
            "PolicyName": "AWSServiceCatalogAppRegistryReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSServiceCatalogEndUserFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStacks",
                            "cloudformation:SetStackPolicy",
                            "cloudformation:ValidateTemplate",
                            "cloudformation:UpdateStack",
                            "cloudformation:CreateChangeSet",
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:ExecuteChangeSet",
                            "cloudformation:ListChangeSets",
                            "cloudformation:DeleteChangeSet",
                            "cloudformation:TagResource",
                            "cloudformation:CreateStackSet",
                            "cloudformation:CreateStackInstances",
                            "cloudformation:UpdateStackSet",
                            "cloudformation:UpdateStackInstances",
                            "cloudformation:DeleteStackSet",
                            "cloudformation:DeleteStackInstances",
                            "cloudformation:DescribeStackSet",
                            "cloudformation:DescribeStackInstance",
                            "cloudformation:DescribeStackSetOperation",
                            "cloudformation:ListStackInstances",
                            "cloudformation:ListStackResources",
                            "cloudformation:ListStackSetOperations",
                            "cloudformation:ListStackSetOperationResults"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/SC-*",
                            "arn:aws:cloudformation:*:*:stack/StackSet-SC-*",
                            "arn:aws:cloudformation:*:*:changeSet/SC-*",
                            "arn:aws:cloudformation:*:*:stackset/SC-*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:GetTemplateSummary",
                            "servicecatalog:DescribeProduct",
                            "servicecatalog:DescribeProductView",
                            "servicecatalog:DescribeProvisioningParameters",
                            "servicecatalog:ListLaunchPaths",
                            "servicecatalog:ProvisionProduct",
                            "servicecatalog:SearchProducts",
                            "ssm:DescribeDocument",
                            "ssm:GetAutomationExecution",
                            "config:DescribeConfigurationRecorders",
                            "config:DescribeConfigurationRecorderStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "servicecatalog:DescribeProvisionedProduct",
                            "servicecatalog:DescribeRecord",
                            "servicecatalog:ListRecordHistory",
                            "servicecatalog:ListStackInstancesForProvisionedProduct",
                            "servicecatalog:ScanProvisionedProducts",
                            "servicecatalog:TerminateProvisionedProduct",
                            "servicecatalog:UpdateProvisionedProduct",
                            "servicecatalog:SearchProvisionedProducts",
                            "servicecatalog:CreateProvisionedProductPlan",
                            "servicecatalog:DescribeProvisionedProductPlan",
                            "servicecatalog:ExecuteProvisionedProductPlan",
                            "servicecatalog:DeleteProvisionedProductPlan",
                            "servicecatalog:ListProvisionedProductPlans",
                            "servicecatalog:ListServiceActionsForProvisioningArtifact",
                            "servicecatalog:ExecuteProvisionedProductServiceAction",
                            "servicecatalog:DescribeServiceActionExecutionParameters"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "servicecatalog:userLevel": "self"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJTLLC4DGDMTZB54M4",
            "PolicyName": "AWSServiceCatalogEndUserFullAccess",
            "VersionId": "v7"
        },
        "AWSServiceCatalogEndUserReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStacks",
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:ListChangeSets",
                            "cloudformation:DescribeStackSet",
                            "cloudformation:DescribeStackInstance",
                            "cloudformation:DescribeStackSetOperation",
                            "cloudformation:ListStackInstances",
                            "cloudformation:ListStackResources",
                            "cloudformation:ListStackSetOperations",
                            "cloudformation:ListStackSetOperationResults"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/SC-*",
                            "arn:aws:cloudformation:*:*:stack/StackSet-SC-*",
                            "arn:aws:cloudformation:*:*:changeSet/SC-*",
                            "arn:aws:cloudformation:*:*:stackset/SC-*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:GetTemplateSummary",
                            "servicecatalog:DescribeProduct",
                            "servicecatalog:DescribeProductView",
                            "servicecatalog:DescribeProvisioningParameters",
                            "servicecatalog:ListLaunchPaths",
                            "servicecatalog:SearchProducts",
                            "ssm:DescribeDocument",
                            "ssm:GetAutomationExecution",
                            "config:DescribeConfigurationRecorders",
                            "config:DescribeConfigurationRecorderStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "servicecatalog:DescribeProvisionedProduct",
                            "servicecatalog:DescribeRecord",
                            "servicecatalog:ListRecordHistory",
                            "servicecatalog:ListStackInstancesForProvisionedProduct",
                            "servicecatalog:ScanProvisionedProducts",
                            "servicecatalog:SearchProvisionedProducts",
                            "servicecatalog:DescribeProvisionedProductPlan",
                            "servicecatalog:ListProvisionedProductPlans",
                            "servicecatalog:ListServiceActionsForProvisioningArtifact",
                            "servicecatalog:DescribeServiceActionExecutionParameters"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "servicecatalog:userLevel": "self"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IWYKXJJED",
            "PolicyName": "AWSServiceCatalogEndUserReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSServiceRoleForAmazonEKSNodegroup": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:DescribeInstances",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:DeleteSecurityGroup"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/eks": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SharedSecurityGroupRelatedPermissions"
                    },
                    {
                        "Action": [
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:DescribeInstances",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:DeleteSecurityGroup"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/eks:nodegroup-name": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "EKSCreatedSecurityGroupRelatedPermissions"
                    },
                    {
                        "Action": [
                            "ec2:DeleteLaunchTemplate",
                            "ec2:CreateLaunchTemplateVersion"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/eks:nodegroup-name": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "LaunchTemplateRelatedPermissions"
                    },
                    {
                        "Action": [
                            "autoscaling:UpdateAutoScalingGroup",
                            "autoscaling:DeleteAutoScalingGroup",
                            "autoscaling:TerminateInstanceInAutoScalingGroup",
                            "autoscaling:CompleteLifecycleAction",
                            "autoscaling:PutLifecycleHook",
                            "autoscaling:PutNotificationConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:autoscaling:*:*:*:autoScalingGroupName/eks-*",
                        "Sid": "AutoscalingRelatedPermissions"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "autoscaling.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowAutoscalingToCreateSLR"
                    },
                    {
                        "Action": [
                            "autoscaling:CreateOrUpdateTags",
                            "autoscaling:CreateAutoScalingGroup"
                        ],
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:TagKeys": [
                                    "eks",
                                    "eks:cluster-name",
                                    "eks:nodegroup-name"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowASGCreationByEKS"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "autoscaling.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowPassRoleToAutoscaling"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEqualsIfExists": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com",
                                    "ec2.amazonaws.com.cn"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowPassRoleToEC2"
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "ec2:CreateLaunchTemplate",
                            "ec2:DescribeInstances",
                            "iam:GetInstanceProfile",
                            "ec2:DescribeLaunchTemplates",
                            "autoscaling:DescribeAutoScalingGroups",
                            "ec2:CreateSecurityGroup",
                            "ec2:DescribeLaunchTemplateVersions",
                            "ec2:RunInstances",
                            "ec2:DescribeSecurityGroups",
                            "ec2:GetConsoleOutput",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSubnets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "PermissionsToManageResourcesForNodegroups"
                    },
                    {
                        "Action": [
                            "iam:CreateInstanceProfile",
                            "iam:DeleteInstanceProfile",
                            "iam:RemoveRoleFromInstanceProfile",
                            "iam:AddRoleToInstanceProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:instance-profile/eks-*",
                        "Sid": "PermissionsToCreateAndManageInstanceProfiles"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                        ],
                        "Condition": {
                            "ForAnyValue:StringLike": {
                                "aws:TagKeys": [
                                    "eks",
                                    "eks:cluster-name",
                                    "eks:nodegroup-name",
                                    "kubernetes.io/cluster/*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "PermissionsToManageEKSAndKubernetesTags"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KH2AAMJJG",
            "PolicyName": "AWSServiceRoleForAmazonEKSNodegroup",
            "VersionId": "v5"
        },
        "AWSServiceRoleForCloudWatchAlarmsActionSSMServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ssm:CreateOpsItem"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4M4BX2KX5V",
            "PolicyName": "AWSServiceRoleForCloudWatchAlarmsActionSSMServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSServiceRoleForCodeGuru-Profiler": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowSNSPublishToSendNotifications"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4GNVXVLNQT",
            "PolicyName": "AWSServiceRoleForCodeGuru-Profiler",
            "VersionId": "v1"
        },
        "AWSServiceRoleForEC2ScheduledInstances": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "aws:ec2sri:scheduledInstanceId"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:ec2sri:scheduledInstanceId": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ7Y4TT63D6QBKCY4O",
            "PolicyName": "AWSServiceRoleForEC2ScheduledInstances",
            "VersionId": "v1"
        },
        "AWSServiceRoleForImageBuilder": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:RunInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*::image/*",
                            "arn:aws:ec2:*::snapshot/*",
                            "arn:aws:ec2:*:*:subnet/*",
                            "arn:aws:ec2:*:*:network-interface/*",
                            "arn:aws:ec2:*:*:security-group/*",
                            "arn:aws:ec2:*:*:key-pair/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:RunInstances"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:RequestTag/CreatedBy": "EC2 Image Builder"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:volume/*",
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com",
                                    "ec2.amazonaws.com.cn"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:StopInstances",
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CopyImage",
                            "ec2:CreateImage",
                            "ec2:CreateLaunchTemplate",
                            "ec2:DeregisterImage",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstanceAttribute",
                            "ec2:DescribeInstanceStatus",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInstanceTypeOfferings",
                            "ec2:DescribeInstanceTypes",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeTags",
                            "ec2:ModifyImageAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:ModifySnapshotAttribute"
                        ],
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "ec2:ResourceTag/CreatedBy": "EC2 Image Builder"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*::snapshot/*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*::image/*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:RequestTag/CreatedBy": "EC2 Image Builder"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "license-manager:UpdateLicenseSpecificationsForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ssm:ListCommands",
                            "ssm:ListCommandInvocations",
                            "ssm:AddTagsToResource",
                            "ssm:DescribeInstanceInformation",
                            "ssm:GetAutomationExecution",
                            "ssm:StopAutomationExecution",
                            "ssm:ListInventoryEntries",
                            "ssm:SendAutomationSignal",
                            "ssm:DescribeInstanceAssociationsStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ssm:SendCommand",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ssm:*:*:document/AWS-RunPowerShellScript",
                            "arn:aws:ssm:*:*:document/AWS-RunShellScript",
                            "arn:aws:ssm:*:*:document/AWSEC2-RunSysprep",
                            "arn:aws:s3:::*"
                        ]
                    },
                    {
                        "Action": [
                            "ssm:SendCommand"
                        ],
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "ssm:resourceTag/CreatedBy": [
                                    "EC2 Image Builder"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": "ssm:StartAutomationExecution",
                        "Effect": "Allow",
                        "Resource": "arn:aws:ssm:*:*:automation-definition/ImageBuilder*"
                    },
                    {
                        "Action": [
                            "ssm:CreateAssociation",
                            "ssm:DeleteAssociation"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ssm:*:*:document/AWS-GatherSoftwareInventory",
                            "arn:aws:ssm:*:*:association/*",
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": [
                            "kms:Encrypt",
                            "kms:Decrypt",
                            "kms:ReEncryptFrom",
                            "kms:ReEncryptTo",
                            "kms:GenerateDataKeyWithoutPlaintext",
                            "kms:DescribeKey"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "kms:EncryptionContextKeys": [
                                    "aws:ebs:id"
                                ]
                            },
                            "StringLike": {
                                "kms:ViaService": [
                                    "ec2.*.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "kms:CreateGrant",
                        "Condition": {
                            "Bool": {
                                "kms:GrantIsForAWSResource": true
                            },
                            "StringLike": {
                                "kms:ViaService": [
                                    "ec2.*.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/EC2ImageBuilderDistributionCrossAccountRole"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"
                    },
                    {
                        "Action": [
                            "ec2:CreateLaunchTemplateVersion",
                            "ec2:DescribeLaunchTemplates",
                            "ec2:ModifyLaunchTemplate"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "ssm.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NE22WISEW",
            "PolicyName": "AWSServiceRoleForImageBuilder",
            "VersionId": "v12"
        },
        "AWSServiceRoleForIoTSiteWise": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "greengrass:GetAssociatedRole",
                            "greengrass:GetCoreDefinition",
                            "greengrass:GetCoreDefinitionVersion",
                            "greengrass:GetGroup",
                            "greengrass:GetGroupVersion"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:DescribeLogGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/iotsitewise*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/iotsitewise*:log-stream:*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJGQU4DZIQP6HLYQPE",
            "PolicyName": "AWSServiceRoleForIoTSiteWise",
            "VersionId": "v7"
        },
        "AWSServiceRoleForLogDeliveryPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "firehose:PutRecord",
                            "firehose:PutRecordBatch",
                            "firehose:ListTagsForDeliveryStream"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "firehose:ResourceTag/LogDeliveryEnabled": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4EMA7ANTDG",
            "PolicyName": "AWSServiceRoleForLogDeliveryPolicy",
            "VersionId": "v2"
        },
        "AWSServiceRoleForMonitronPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sso:GetManagedApplicationInstance",
                            "sso:GetProfile",
                            "sso:ListProfiles",
                            "sso:AssociateProfile",
                            "sso:ListDirectoryAssociations",
                            "sso-directory:DescribeUsers",
                            "sso-directory:SearchUsers"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NYRIH2RCH",
            "PolicyName": "AWSServiceRoleForMonitronPolicy",
            "VersionId": "v1"
        },
        "AWSServiceRoleForSMS": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:CreateChangeSet",
                            "cloudformation:CreateStack"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "cloudformation:ResourceTypes": [
                                    "AWS::EC2::Instance",
                                    "AWS::ApplicationInsights::Application",
                                    "AWS::ResourceGroups::Group"
                                ]
                            },
                            "Null": {
                                "cloudformation:ResourceTypes": "false"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/sms-app-*/*"
                    },
                    {
                        "Action": [
                            "cloudformation:DeleteStack",
                            "cloudformation:ExecuteChangeSet",
                            "cloudformation:DeleteChangeSet",
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:DescribeStacks",
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStackResource",
                            "cloudformation:DescribeStackResources",
                            "cloudformation:GetTemplate"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/sms-app-*/*"
                    },
                    {
                        "Action": [
                            "cloudformation:ValidateTemplate",
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:DeleteBucket",
                            "s3:DeleteObject",
                            "s3:GetBucketAcl",
                            "s3:GetBucketLocation",
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:PutObject",
                            "s3:PutObjectAcl",
                            "s3:PutLifecycleConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::sms-app-*"
                    },
                    {
                        "Action": [
                            "sms:CreateReplicationJob",
                            "sms:DeleteReplicationJob",
                            "sms:GetReplicationJobs",
                            "sms:GetReplicationRuns",
                            "sms:GetServers",
                            "sms:ImportServerCatalog",
                            "sms:StartOnDemandReplicationRun",
                            "sms:UpdateReplicationJob"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ssm:SendCommand",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ssm:*::document/AWS-RunRemoteScript",
                            "arn:aws:s3:::sms-app-*"
                        ]
                    },
                    {
                        "Action": "ssm:SendCommand",
                        "Condition": {
                            "StringEquals": {
                                "ssm:resourceTag/UseForSMSApplicationValidation": [
                                    "true"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": [
                            "ssm:CancelCommand",
                            "ssm:GetCommandInvocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Condition": {
                            "StringEquals": {
                                "ec2:CreateAction": "CopySnapshot"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:snapshot/*"
                    },
                    {
                        "Action": "ec2:CopySnapshot",
                        "Condition": {
                            "StringLike": {
                                "aws:RequestTag/SMSJobId": [
                                    "sms-*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:snapshot/*"
                    },
                    {
                        "Action": [
                            "ec2:ModifySnapshotAttribute",
                            "ec2:DeleteSnapshot"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/SMSJobId": [
                                    "sms-*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:snapshot/*"
                    },
                    {
                        "Action": [
                            "ec2:CopyImage",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstances",
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeSnapshotAttribute",
                            "ec2:DeregisterImage",
                            "ec2:ImportImage",
                            "ec2:DescribeImportImageTasks",
                            "ec2:GetEbsEncryptionByDefault"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "iam:GetInstanceProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DisassociateIamInstanceProfile",
                            "ec2:AssociateIamInstanceProfile",
                            "ec2:ReplaceIamInstanceProfileAssociation"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:cloudformation:stack-id": "arn:aws:cloudformation:*:*:stack/sms-app-*/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "ec2.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEqualsIfExists": {
                                "iam:PassedToService": "cloudformation.amazonaws.com"
                            },
                            "StringLike": {
                                "iam:AssociatedResourceArn": "arn:aws:cloudformation:*:*:stack/sms-app-*/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:RunInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": [
                            "ec2:ModifyInstanceAttribute",
                            "ec2:StopInstances",
                            "ec2:StartInstances",
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:cloudformation:stack-id": "arn:aws:cloudformation:*:*:stack/sms-app-*/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "applicationinsights:Describe*",
                            "applicationinsights:List*",
                            "cloudformation:ListStackResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "applicationinsights:CreateApplication",
                            "applicationinsights:CreateComponent",
                            "applicationinsights:UpdateApplication",
                            "applicationinsights:DeleteApplication",
                            "applicationinsights:UpdateComponentConfiguration",
                            "applicationinsights:DeleteComponent"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:applicationinsights:*:*:application/resource-group/sms-app-*"
                    },
                    {
                        "Action": [
                            "resource-groups:CreateGroup",
                            "resource-groups:GetGroup",
                            "resource-groups:UpdateGroup",
                            "resource-groups:DeleteGroup"
                        ],
                        "Condition": {
                            "StringLike": {
                                "aws:ResourceTag/aws:cloudformation:stack-id": "arn:aws:cloudformation:*:*:stack/sms-app-*/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:resource-groups:*:*:group/sms-app-*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "application-insights.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/application-insights.amazonaws.com/AWSServiceRoleForApplicationInsights"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4OSYRD2VJZ",
            "PolicyName": "AWSServiceRoleForSMS",
            "VersionId": "v10"
        },
        "AWSShieldDRTAccessPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudfront:List*",
                            "elasticloadbalancing:List*",
                            "route53:List*",
                            "cloudfront:Describe*",
                            "elasticloadbalancing:Describe*",
                            "route53:Describe*",
                            "cloudwatch:Describe*",
                            "cloudwatch:Get*",
                            "cloudwatch:List*",
                            "cloudfront:GetDistribution*",
                            "globalaccelerator:ListAccelerators",
                            "globalaccelerator:DescribeAccelerator"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:elasticloadbalancing:*:*:*",
                            "arn:aws:cloudfront::*:*",
                            "arn:aws:route53:::hostedzone/*",
                            "arn:aws:cloudwatch:*:*:*:*",
                            "arn:aws:globalaccelerator::*:*"
                        ],
                        "Sid": "DRTAccessProtectedResources"
                    },
                    {
                        "Action": [
                            "waf:*",
                            "wafv2:*",
                            "waf-regional:*",
                            "elasticloadbalancing:SetWebACL",
                            "apigateway:SetWebACL",
                            "cloudfront:UpdateDistribution"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "DRTManageMitigations"
                    },
                    {
                        "Action": [
                            "shield:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "DRTManageProtections"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJWNCSZ4PARLO37VVY",
            "PolicyName": "AWSShieldDRTAccessPolicy",
            "VersionId": "v5"
        },
        "AWSStepFunctionsConsoleFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "states:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:ListRoles",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/service-role/StatesExecutionRole*"
                    },
                    {
                        "Action": "lambda:ListFunctions",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJIYC52YWRX6OSMJWK",
            "PolicyName": "AWSStepFunctionsConsoleFullAccess",
            "VersionId": "v2"
        },
        "AWSStepFunctionsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "states:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJXKA6VP3UFBVHDPPA",
            "PolicyName": "AWSStepFunctionsFullAccess",
            "VersionId": "v1"
        },
        "AWSStepFunctionsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "states:ListStateMachines",
                            "states:ListActivities",
                            "states:DescribeStateMachine",
                            "states:DescribeStateMachineForExecution",
                            "states:ListExecutions",
                            "states:DescribeExecution",
                            "states:GetExecutionHistory",
                            "states:DescribeActivity"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJONHB2TJQDJPFW5TM",
            "PolicyName": "AWSStepFunctionsReadOnlyAccess",
            "VersionId": "v2"
        },
        "AWSStorageGatewayFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "storagegateway:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeSnapshots",
                            "ec2:DeleteSnapshot"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJG5SSPAVOGK3SIDGU",
            "PolicyName": "AWSStorageGatewayFullAccess",
            "VersionId": "v1"
        },
        "AWSStorageGatewayReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "storagegateway:List*",
                            "storagegateway:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeSnapshots"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIFKCTUVOPD5NICXJK",
            "PolicyName": "AWSStorageGatewayReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSSupportAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "support:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJSNKQX2OW67GF4S7E",
            "PolicyName": "AWSSupportAccess",
            "VersionId": "v1"
        },
        "AWSSupportServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "apigateway:GET"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:apigateway:*::/account",
                            "arn:aws:apigateway:*::/apis",
                            "arn:aws:apigateway:*::/apis/*",
                            "arn:aws:apigateway:*::/apis/*/authorizers",
                            "arn:aws:apigateway:*::/apis/*/authorizers/*",
                            "arn:aws:apigateway:*::/apis/*/deployments",
                            "arn:aws:apigateway:*::/apis/*/deployments/*",
                            "arn:aws:apigateway:*::/apis/*/integrations",
                            "arn:aws:apigateway:*::/apis/*/integrations/*",
                            "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
                            "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
                            "arn:aws:apigateway:*::/apis/*/models",
                            "arn:aws:apigateway:*::/apis/*/models/*",
                            "arn:aws:apigateway:*::/apis/*/routes",
                            "arn:aws:apigateway:*::/apis/*/routes/*",
                            "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
                            "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
                            "arn:aws:apigateway:*::/apis/*/stages",
                            "arn:aws:apigateway:*::/apis/*/stages/*",
                            "arn:aws:apigateway:*::/clientcertificates",
                            "arn:aws:apigateway:*::/clientcertificates/*",
                            "arn:aws:apigateway:*::/domainnames",
                            "arn:aws:apigateway:*::/domainnames/*",
                            "arn:aws:apigateway:*::/domainnames/*/apimappings",
                            "arn:aws:apigateway:*::/domainnames/*/apimappings/*",
                            "arn:aws:apigateway:*::/domainnames/*/basepathmappings",
                            "arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
                            "arn:aws:apigateway:*::/restapis",
                            "arn:aws:apigateway:*::/restapis/*",
                            "arn:aws:apigateway:*::/restapis/*/authorizers",
                            "arn:aws:apigateway:*::/restapis/*/authorizers/*",
                            "arn:aws:apigateway:*::/restapis/*/deployments",
                            "arn:aws:apigateway:*::/restapis/*/deployments/*",
                            "arn:aws:apigateway:*::/restapis/*/models",
                            "arn:aws:apigateway:*::/restapis/*/models/*",
                            "arn:aws:apigateway:*::/restapis/*/models/*/default_template",
                            "arn:aws:apigateway:*::/restapis/*/resources",
                            "arn:aws:apigateway:*::/restapis/*/resources/*",
                            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
                            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
                            "arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
                            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
                            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
                            "arn:aws:apigateway:*::/restapis/*/stages",
                            "arn:aws:apigateway:*::/restapis/*/stages/*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:DeleteRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
                        ]
                    },
                    {
                        "Action": [
                            "a4b:getDevice",
                            "a4b:getProfile",
                            "a4b:getRoom",
                            "a4b:getRoomSkillParameter",
                            "a4b:getSkillGroup",
                            "a4b:searchDevices",
                            "a4b:searchProfiles",
                            "a4b:searchRooms",
                            "a4b:searchSkillGroups",
                            "access-analyzer:getFinding",
                            "access-analyzer:listAnalyzers",
                            "access-analyzer:listArchiveRules",
                            "access-analyzer:listFindings",
                            "acm-pca:describeCertificateAuthority",
                            "acm-pca:describeCertificateAuthorityAuditReport",
                            "acm-pca:getCertificate",
                            "acm-pca:getCertificateAuthorityCertificate",
                            "acm-pca:getCertificateAuthorityCsr",
                            "acm-pca:listCertificateAuthorities",
                            "acm-pca:listTags",
                            "acm:describeCertificate",
                            "acm:getCertificate",
                            "acm:listCertificates",
                            "acm:listTagsForCertificate",
                            "amplify:getApp",
                            "amplify:getBranch",
                            "amplify:getDomainAssociation",
                            "amplify:getJob",
                            "amplify:getWebhook",
                            "amplify:listApps",
                            "amplify:listWebhooks",
                            "application-autoscaling:describeScalableTargets",
                            "application-autoscaling:describeScalingActivities",
                            "application-autoscaling:describeScalingPolicies",
                            "application-autoscaling:describeScheduledActions",
                            "appmesh:describeMesh",
                            "appmesh:describeRoute",
                            "appmesh:describeVirtualNode",
                            "appmesh:describeVirtualRouter",
                            "appmesh:describeVirtualService",
                            "appmesh:listMeshes",
                            "appmesh:listRoutes",
                            "appmesh:listVirtualNodes",
                            "appmesh:listVirtualRouters",
                            "appmesh:listVirtualServices",
                            "appstream:describeDirectoryConfigs",
                            "appstream:describeFleets",
                            "appstream:describeImageBuilders",
                            "appstream:describeImages",
                            "appstream:describeSessions",
                            "appstream:describeStacks",
                            "appstream:listAssociatedFleets",
                            "appstream:listAssociatedStacks",
                            "appstream:listTagsForResource",
                            "appsync:getFunction",
                            "appsync:getGraphqlApi",
                            "appsync:getIntrospectionSchema",
                            "appsync:getResolver",
                            "appsync:getSchemaCreationStatus",
                            "appsync:getType",
                            "appsync:listDataSources",
                            "appsync:listFunctions",
                            "appsync:listGraphqlApis",
                            "appsync:listResolvers",
                            "appsync:listTypes",
                            "athena:batchGetNamedQuery",
                            "athena:batchGetQueryExecution",
                            "athena:getNamedQuery",
                            "athena:getQueryExecution",
                            "athena:getWorkGroup",
                            "athena:listNamedQueries",
                            "athena:listQueryExecutions",
                            "athena:listTagsForResource",
                            "athena:listWorkGroups",
                            "autoscaling-plans:describeScalingPlanResources",
                            "autoscaling-plans:describeScalingPlans",
                            "autoscaling-plans:getScalingPlanResourceForecastData",
                            "autoscaling:describeAccountLimits",
                            "autoscaling:describeAdjustmentTypes",
                            "autoscaling:describeAutoScalingGroups",
                            "autoscaling:describeAutoScalingInstances",
                            "autoscaling:describeAutoScalingNotificationTypes",
                            "autoscaling:describeLaunchConfigurations",
                            "autoscaling:describeLifecycleHookTypes",
                            "autoscaling:describeLifecycleHooks",
                            "autoscaling:describeLoadBalancerTargetGroups",
                            "autoscaling:describeLoadBalancers",
                            "autoscaling:describeMetricCollectionTypes",
                            "autoscaling:describeNotificationConfigurations",
                            "autoscaling:describePolicies",
                            "autoscaling:describeScalingActivities",
                            "autoscaling:describeScalingProcessTypes",
                            "autoscaling:describeScheduledActions",
                            "autoscaling:describeTags",
                            "autoscaling:describeTerminationPolicyTypes",
                            "backup:describeBackupJob",
                            "backup:describeBackupVault",
                            "backup:describeProtectedResource",
                            "backup:describeRecoveryPoint",
                            "backup:describeRestoreJob",
                            "backup:getBackupPlan",
                            "backup:getBackupPlanFromJSON",
                            "backup:getBackupPlanFromTemplate",
                            "backup:getBackupSelection",
                            "backup:getBackupVaultAccessPolicy",
                            "backup:getBackupVaultNotifications",
                            "backup:getRecoveryPointRestoreMetadata",
                            "backup:getSupportedResourceTypes",
                            "backup:listBackupJobs",
                            "backup:listBackupPlanTemplates",
                            "backup:listBackupPlanVersions",
                            "backup:listBackupPlans",
                            "backup:listBackupSelections",
                            "backup:listBackupVaults",
                            "backup:listProtectedResources",
                            "backup:listRecoveryPointsByBackupVault",
                            "backup:listRecoveryPointsByResource",
                            "backup:listRestoreJobs",
                            "backup:listTags",
                            "batch:describeComputeEnvironments",
                            "batch:describeJobDefinitions",
                            "batch:describeJobQueues",
                            "batch:describeJobs",
                            "batch:listJobs",
                            "braket:getDevice",
                            "braket:getQuantumTask",
                            "braket:searchDevices",
                            "braket:searchQuantumTasks",
                            "budgets:viewBudget",
                            "ce:getCostAndUsage",
                            "ce:getDimensionValues",
                            "ce:getReservationCoverage",
                            "ce:getReservationUtilization",
                            "ce:getTags",
                            "cloud9:describeEnvironmentMemberships",
                            "cloud9:describeEnvironments",
                            "cloud9:listEnvironments",
                            "clouddirectory:getDirectory",
                            "clouddirectory:listDirectories",
                            "cloudformation:describeAccountLimits",
                            "cloudformation:describeChangeSet",
                            "cloudformation:describeStackEvents",
                            "cloudformation:describeStackInstance",
                            "cloudformation:describeStackResource",
                            "cloudformation:describeStackResources",
                            "cloudformation:describeStackSet",
                            "cloudformation:describeStackSetOperation",
                            "cloudformation:describeStacks",
                            "cloudformation:estimateTemplateCost",
                            "cloudformation:getStackPolicy",
                            "cloudformation:getTemplate",
                            "cloudformation:getTemplateSummary",
                            "cloudformation:listChangeSets",
                            "cloudformation:listExports",
                            "cloudformation:listImports",
                            "cloudformation:listStackInstances",
                            "cloudformation:listStackResources",
                            "cloudformation:listStackSetOperationResults",
                            "cloudformation:listStackSetOperations",
                            "cloudformation:listStackSets",
                            "cloudformation:listStacks",
                            "cloudfront:getCloudFrontOriginAccessIdentity",
                            "cloudfront:getCloudFrontOriginAccessIdentityConfig",
                            "cloudfront:getDistribution",
                            "cloudfront:getDistributionConfig",
                            "cloudfront:getInvalidation",
                            "cloudfront:getStreamingDistribution",
                            "cloudfront:getStreamingDistributionConfig",
                            "cloudfront:listCloudFrontOriginAccessIdentities",
                            "cloudfront:listDistributions",
                            "cloudfront:listDistributionsByWebACLId",
                            "cloudfront:listInvalidations",
                            "cloudfront:listStreamingDistributions",
                            "cloudhsm:describeBackups",
                            "cloudhsm:describeClusters",
                            "cloudsearch:describeAnalysisSchemes",
                            "cloudsearch:describeAvailabilityOptions",
                            "cloudsearch:describeDomains",
                            "cloudsearch:describeExpressions",
                            "cloudsearch:describeIndexFields",
                            "cloudsearch:describeScalingParameters",
                            "cloudsearch:describeServiceAccessPolicies",
                            "cloudsearch:describeSuggesters",
                            "cloudsearch:listDomainNames",
                            "cloudtrail:describeTrails",
                            "cloudtrail:getEventSelectors",
                            "cloudtrail:getInsightSelectors",
                            "cloudtrail:getTrail",
                            "cloudtrail:getTrailStatus",
                            "cloudtrail:listPublicKeys",
                            "cloudtrail:listTags",
                            "cloudtrail:listTrails",
                            "cloudtrail:lookupEvents",
                            "cloudwatch:describeAlarmHistory",
                            "cloudwatch:describeAlarms",
                            "cloudwatch:describeAlarmsForMetric",
                            "cloudwatch:getDashboard",
                            "cloudwatch:getMetricData",
                            "cloudwatch:getMetricStatistics",
                            "cloudwatch:listDashboards",
                            "cloudwatch:listMetrics",
                            "codebuild:batchGetBuilds",
                            "codebuild:batchGetProjects",
                            "codebuild:listBuilds",
                            "codebuild:listBuildsForProject",
                            "codebuild:listCuratedEnvironmentImages",
                            "codebuild:listProjects",
                            "codebuild:listSourceCredentials",
                            "codecommit:batchGetRepositories",
                            "codecommit:getBranch",
                            "codecommit:getRepository",
                            "codecommit:getRepositoryTriggers",
                            "codecommit:listBranches",
                            "codecommit:listRepositories",
                            "codedeploy:batchGetApplicationRevisions",
                            "codedeploy:batchGetApplications",
                            "codedeploy:batchGetDeploymentGroups",
                            "codedeploy:batchGetDeploymentInstances",
                            "codedeploy:batchGetDeployments",
                            "codedeploy:batchGetOnPremisesInstances",
                            "codedeploy:getApplication",
                            "codedeploy:getApplicationRevision",
                            "codedeploy:getDeployment",
                            "codedeploy:getDeploymentConfig",
                            "codedeploy:getDeploymentGroup",
                            "codedeploy:getDeploymentInstance",
                            "codedeploy:getOnPremisesInstance",
                            "codedeploy:listApplicationRevisions",
                            "codedeploy:listApplications",
                            "codedeploy:listDeploymentConfigs",
                            "codedeploy:listDeploymentGroups",
                            "codedeploy:listDeploymentInstances",
                            "codedeploy:listDeployments",
                            "codedeploy:listOnPremisesInstances",
                            "codepipeline:getJobDetails",
                            "codepipeline:getPipeline",
                            "codepipeline:getPipelineExecution",
                            "codepipeline:getPipelineState",
                            "codepipeline:listActionExecutions",
                            "codepipeline:listActionTypes",
                            "codepipeline:listPipelineExecutions",
                            "codepipeline:listPipelines",
                            "codepipeline:listWebhooks",
                            "codestar:describeProject",
                            "codestar:listProjects",
                            "codestar:listResources",
                            "codestar:listTeamMembers",
                            "codestar:listUserProfiles",
                            "cognito-identity:describeIdentityPool",
                            "cognito-identity:getIdentityPoolRoles",
                            "cognito-identity:listIdentities",
                            "cognito-identity:listIdentityPools",
                            "cognito-idp:adminGetUser",
                            "cognito-idp:describeIdentityProvider",
                            "cognito-idp:describeResourceServer",
                            "cognito-idp:describeRiskConfiguration",
                            "cognito-idp:describeUserImportJob",
                            "cognito-idp:describeUserPool",
                            "cognito-idp:describeUserPoolClient",
                            "cognito-idp:describeUserPoolDomain",
                            "cognito-idp:getGroup",
                            "cognito-idp:getUICustomization",
                            "cognito-idp:getUser",
                            "cognito-idp:getUserPoolMfaConfig",
                            "cognito-idp:listGroups",
                            "cognito-idp:listIdentityProviders",
                            "cognito-idp:listResourceServers",
                            "cognito-idp:listUserImportJobs",
                            "cognito-idp:listUserPoolClients",
                            "cognito-idp:listUserPools",
                            "cognito-sync:describeDataset",
                            "cognito-sync:describeIdentityPoolUsage",
                            "cognito-sync:describeIdentityUsage",
                            "cognito-sync:getCognitoEvents",
                            "cognito-sync:getIdentityPoolConfiguration",
                            "cognito-sync:listDatasets",
                            "cognito-sync:listIdentityPoolUsage",
                            "compute-optimizer:getAutoScalingGroupRecommendations",
                            "compute-optimizer:getEC2InstanceRecommendations",
                            "compute-optimizer:getEC2RecommendationProjectedMetrics",
                            "compute-optimizer:getEnrollmentStatus",
                            "compute-optimizer:getRecommendationSummaries",
                            "config:describeConfigRuleEvaluationStatus",
                            "config:describeConfigRules",
                            "config:describeConfigurationRecorderStatus",
                            "config:describeConfigurationRecorders",
                            "config:describeDeliveryChannelStatus",
                            "config:describeDeliveryChannels",
                            "config:getResourceConfigHistory",
                            "config:listDiscoveredResources",
                            "connect:describeUser",
                            "connect:getCurrentMetricData",
                            "connect:getMetricData",
                            "connect:listRoutingProfiles",
                            "connect:listSecurityProfiles",
                            "connect:listUsers",
                            "controltower:describeAccountFactoryConfig",
                            "controltower:describeCoreService",
                            "controltower:describeGuardrail",
                            "controltower:describeGuardrailForTarget",
                            "controltower:describeManagedAccount",
                            "controltower:describeSingleSignOn",
                            "controltower:getAvailableUpdates",
                            "controltower:getHomeRegion",
                            "controltower:getLandingZoneStatus",
                            "controltower:listDirectoryGroups",
                            "controltower:listGuardrailForTarget",
                            "controltower:listGuardrailViolations",
                            "controltower:listManagedAccounts",
                            "controltower:listManagedAccountsForGuardrail",
                            "controltower:listManagedAccountsForParent",
                            "controltower:listManagedOrganizationalUnits",
                            "controltower:listManagedOrganizationalUnitsForGuardrail",
                            "datapipeline:describeObjects",
                            "datapipeline:describePipelines",
                            "datapipeline:getPipelineDefinition",
                            "datapipeline:listPipelines",
                            "datapipeline:queryObjects",
                            "datasync:describeAgent",
                            "datasync:describeLocationEfs",
                            "datasync:describeLocationFsxWindows",
                            "datasync:describeLocationNfs",
                            "datasync:describeLocationS3",
                            "datasync:describeLocationSmb",
                            "datasync:describeTask",
                            "datasync:describeTaskExecution",
                            "datasync:listAgents",
                            "datasync:listLocations",
                            "datasync:listTaskExecutions",
                            "datasync:listTasks",
                            "dax:describeClusters",
                            "dax:describeDefaultParameters",
                            "dax:describeEvents",
                            "dax:describeParameterGroups",
                            "dax:describeParameters",
                            "dax:describeSubnetGroups",
                            "detective:getMembers",
                            "detective:listGraphs",
                            "detective:listInvitations",
                            "detective:listMembers",
                            "devicefarm:getAccountSettings",
                            "devicefarm:getDevice",
                            "devicefarm:getDevicePool",
                            "devicefarm:getDevicePoolCompatibility",
                            "devicefarm:getJob",
                            "devicefarm:getProject",
                            "devicefarm:getRemoteAccessSession",
                            "devicefarm:getRun",
                            "devicefarm:getSuite",
                            "devicefarm:getTest",
                            "devicefarm:getTestGridProject",
                            "devicefarm:getTestGridSession",
                            "devicefarm:getUpload",
                            "devicefarm:listArtifacts",
                            "devicefarm:listDevicePools",
                            "devicefarm:listDevices",
                            "devicefarm:listJobs",
                            "devicefarm:listProjects",
                            "devicefarm:listRemoteAccessSessions",
                            "devicefarm:listRuns",
                            "devicefarm:listSamples",
                            "devicefarm:listSuites",
                            "devicefarm:listTestGridProjects",
                            "devicefarm:listTestGridSessionActions",
                            "devicefarm:listTestGridSessionArtifacts",
                            "devicefarm:listTestGridSessions",
                            "devicefarm:listTests",
                            "devicefarm:listUniqueProblems",
                            "devicefarm:listUploads",
                            "directconnect:describeConnections",
                            "directconnect:describeConnectionsOnInterconnect",
                            "directconnect:describeInterconnects",
                            "directconnect:describeLocations",
                            "directconnect:describeVirtualGateways",
                            "directconnect:describeVirtualInterfaces",
                            "dlm:getLifecyclePolicies",
                            "dlm:getLifecyclePolicy",
                            "dms:describeAccountAttributes",
                            "dms:describeConnections",
                            "dms:describeEndpointTypes",
                            "dms:describeEndpoints",
                            "dms:describeOrderableReplicationInstances",
                            "dms:describeRefreshSchemasStatus",
                            "dms:describeReplicationInstances",
                            "dms:describeReplicationSubnetGroups",
                            "ds:describeConditionalForwarders",
                            "ds:describeDirectories",
                            "ds:describeEventTopics",
                            "ds:describeSnapshots",
                            "ds:describeTrusts",
                            "ds:getDirectoryLimits",
                            "ds:getSnapshotLimits",
                            "ds:listIpRoutes",
                            "ds:listSchemaExtensions",
                            "ds:listTagsForResource",
                            "dynamodb:describeBackup",
                            "dynamodb:describeContinuousBackups",
                            "dynamodb:describeGlobalTable",
                            "dynamodb:describeLimits",
                            "dynamodb:describeStream",
                            "dynamodb:describeTable",
                            "dynamodb:describeTimeToLive",
                            "dynamodb:listBackups",
                            "dynamodb:listGlobalTables",
                            "dynamodb:listStreams",
                            "dynamodb:listTables",
                            "dynamodb:listTagsOfResource",
                            "ec2:acceptReservedInstancesExchangeQuote",
                            "ec2:cancelReservedInstancesListing",
                            "ec2:createReservedInstancesListing",
                            "ec2:describeAccountAttributes",
                            "ec2:describeAddresses",
                            "ec2:describeAvailabilityZones",
                            "ec2:describeBundleTasks",
                            "ec2:describeByoipCidrs",
                            "ec2:describeCapacityReservations",
                            "ec2:describeClassicLinkInstances",
                            "ec2:describeClientVpnAuthorizationRules",
                            "ec2:describeClientVpnConnections",
                            "ec2:describeClientVpnEndpoints",
                            "ec2:describeClientVpnRoutes",
                            "ec2:describeClientVpnTargetNetworks",
                            "ec2:describeConversionTasks",
                            "ec2:describeCustomerGateways",
                            "ec2:describeDhcpOptions",
                            "ec2:describeElasticGpus",
                            "ec2:describeExportImageTasks",
                            "ec2:describeExportTasks",
                            "ec2:describeFastSnapshotRestores",
                            "ec2:describeFleetHistory",
                            "ec2:describeFleetInstances",
                            "ec2:describeFleets",
                            "ec2:describeFlowLogs",
                            "ec2:describeHostReservationOfferings",
                            "ec2:describeHostReservations",
                            "ec2:describeHosts",
                            "ec2:describeIdFormat",
                            "ec2:describeIdentityIdFormat",
                            "ec2:describeImageAttribute",
                            "ec2:describeImages",
                            "ec2:describeImportImageTasks",
                            "ec2:describeImportSnapshotTasks",
                            "ec2:describeInstanceAttribute",
                            "ec2:describeInstanceStatus",
                            "ec2:describeInstances",
                            "ec2:describeInternetGateways",
                            "ec2:describeKeyPairs",
                            "ec2:describeLaunchTemplateVersions",
                            "ec2:describeLaunchTemplates",
                            "ec2:describeMovingAddresses",
                            "ec2:describeNatGateways",
                            "ec2:describeNetworkAcls",
                            "ec2:describeNetworkInterfaceAttribute",
                            "ec2:describeNetworkInterfaces",
                            "ec2:describePlacementGroups",
                            "ec2:describePrefixLists",
                            "ec2:describePublicIpv4Pools",
                            "ec2:describeRegions",
                            "ec2:describeReservedInstances",
                            "ec2:describeReservedInstancesListings",
                            "ec2:describeReservedInstancesModifications",
                            "ec2:describeReservedInstancesOfferings",
                            "ec2:describeRouteTables",
                            "ec2:describeScheduledInstances",
                            "ec2:describeSecurityGroups",
                            "ec2:describeSnapshotAttribute",
                            "ec2:describeSnapshots",
                            "ec2:describeSpotDatafeedSubscription",
                            "ec2:describeSpotFleetInstances",
                            "ec2:describeSpotFleetRequestHistory",
                            "ec2:describeSpotFleetRequests",
                            "ec2:describeSpotInstanceRequests",
                            "ec2:describeSpotPriceHistory",
                            "ec2:describeSubnets",
                            "ec2:describeTags",
                            "ec2:describeTrafficMirrorFilters",
                            "ec2:describeTrafficMirrorSessions",
                            "ec2:describeTrafficMirrorTargets",
                            "ec2:describeTransitGatewayAttachments",
                            "ec2:describeTransitGatewayRouteTables",
                            "ec2:describeTransitGatewayVpcAttachments",
                            "ec2:describeTransitGateways",
                            "ec2:describeVolumeAttribute",
                            "ec2:describeVolumeStatus",
                            "ec2:describeVolumes",
                            "ec2:describeVolumesModifications",
                            "ec2:describeVpcAttribute",
                            "ec2:describeVpcClassicLink",
                            "ec2:describeVpcClassicLinkDnsSupport",
                            "ec2:describeVpcEndpointConnectionNotifications",
                            "ec2:describeVpcEndpointConnections",
                            "ec2:describeVpcEndpointServiceConfigurations",
                            "ec2:describeVpcEndpointServicePermissions",
                            "ec2:describeVpcEndpointServices",
                            "ec2:describeVpcEndpoints",
                            "ec2:describeVpcPeeringConnections",
                            "ec2:describeVpcs",
                            "ec2:describeVpnConnections",
                            "ec2:describeVpnGateways",
                            "ec2:getConsoleScreenshot",
                            "ec2:getReservedInstancesExchangeQuote",
                            "ec2:getTransitGatewayAttachmentPropagations",
                            "ec2:getTransitGatewayRouteTableAssociations",
                            "ec2:getTransitGatewayRouteTablePropagations",
                            "ec2:modifyReservedInstances",
                            "ec2:purchaseReservedInstancesOffering",
                            "ecr:batchCheckLayerAvailability",
                            "ecr:describeImages",
                            "ecr:describeRepositories",
                            "ecr:getRepositoryPolicy",
                            "ecr:listImages",
                            "ecs:describeClusters",
                            "ecs:describeContainerInstances",
                            "ecs:describeServices",
                            "ecs:describeTaskDefinition",
                            "ecs:describeTasks",
                            "ecs:listClusters",
                            "ecs:listContainerInstances",
                            "ecs:listServices",
                            "ecs:listTaskDefinitions",
                            "ecs:listTasks",
                            "eks:describeCluster",
                            "eks:describeFargateProfile",
                            "eks:describeNodegroup",
                            "eks:describeUpdate",
                            "eks:listClusters",
                            "eks:listFargateProfiles",
                            "eks:listNodegroups",
                            "eks:listUpdates",
                            "elasticache:describeCacheClusters",
                            "elasticache:describeCacheEngineVersions",
                            "elasticache:describeCacheParameterGroups",
                            "elasticache:describeCacheParameters",
                            "elasticache:describeCacheSecurityGroups",
                            "elasticache:describeCacheSubnetGroups",
                            "elasticache:describeEngineDefaultParameters",
                            "elasticache:describeEvents",
                            "elasticache:describeReplicationGroups",
                            "elasticache:describeReservedCacheNodes",
                            "elasticache:describeReservedCacheNodesOfferings",
                            "elasticache:describeSnapshots",
                            "elasticache:listAllowedNodeTypeModifications",
                            "elasticache:listTagsForResource",
                            "elasticbeanstalk:checkDNSAvailability",
                            "elasticbeanstalk:describeApplicationVersions",
                            "elasticbeanstalk:describeApplications",
                            "elasticbeanstalk:describeConfigurationOptions",
                            "elasticbeanstalk:describeConfigurationSettings",
                            "elasticbeanstalk:describeEnvironmentHealth",
                            "elasticbeanstalk:describeEnvironmentManagedActionHistory",
                            "elasticbeanstalk:describeEnvironmentManagedActions",
                            "elasticbeanstalk:describeEnvironmentResources",
                            "elasticbeanstalk:describeEnvironments",
                            "elasticbeanstalk:describeEvents",
                            "elasticbeanstalk:describeInstancesHealth",
                            "elasticbeanstalk:describePlatformVersion",
                            "elasticbeanstalk:listAvailableSolutionStacks",
                            "elasticbeanstalk:listPlatformVersions",
                            "elasticbeanstalk:validateConfigurationSettings",
                            "elasticfilesystem:describeAccessPoints",
                            "elasticfilesystem:describeFileSystemPolicy",
                            "elasticfilesystem:describeFileSystems",
                            "elasticfilesystem:describeLifecycleConfiguration",
                            "elasticfilesystem:describeMountTargetSecurityGroups",
                            "elasticfilesystem:describeMountTargets",
                            "elasticfilesystem:describeTags",
                            "elasticfilesystem:listTagsForResource",
                            "elasticloadbalancing:describeInstanceHealth",
                            "elasticloadbalancing:describeListenerCertificates",
                            "elasticloadbalancing:describeListeners",
                            "elasticloadbalancing:describeLoadBalancerAttributes",
                            "elasticloadbalancing:describeLoadBalancerPolicies",
                            "elasticloadbalancing:describeLoadBalancerPolicyTypes",
                            "elasticloadbalancing:describeLoadBalancers",
                            "elasticloadbalancing:describeRules",
                            "elasticloadbalancing:describeSSLPolicies",
                            "elasticloadbalancing:describeTags",
                            "elasticloadbalancing:describeTargetGroupAttributes",
                            "elasticloadbalancing:describeTargetGroups",
                            "elasticloadbalancing:describeTargetHealth",
                            "elasticmapreduce:describeCluster",
                            "elasticmapreduce:describeSecurityConfiguration",
                            "elasticmapreduce:describeStep",
                            "elasticmapreduce:listBootstrapActions",
                            "elasticmapreduce:listClusters",
                            "elasticmapreduce:listInstanceGroups",
                            "elasticmapreduce:listInstances",
                            "elasticmapreduce:listSecurityConfigurations",
                            "elasticmapreduce:listSteps",
                            "elastictranscoder:listJobsByPipeline",
                            "elastictranscoder:listJobsByStatus",
                            "elastictranscoder:listPipelines",
                            "elastictranscoder:listPresets",
                            "elastictranscoder:readPipeline",
                            "elastictranscoder:readPreset",
                            "es:describeElasticsearchDomain",
                            "es:describeElasticsearchDomainConfig",
                            "es:describeElasticsearchDomains",
                            "es:listDomainNames",
                            "es:listTags",
                            "events:describeEventBus",
                            "events:describeRule",
                            "events:listRuleNamesByTarget",
                            "events:listRules",
                            "events:listTargetsByRule",
                            "events:testEventPattern",
                            "firehose:describeDeliveryStream",
                            "firehose:listDeliveryStreams",
                            "fms:getAdminAccount",
                            "fms:getComplianceDetail",
                            "fms:getNotificationChannel",
                            "fms:getPolicy",
                            "fms:getProtectionStatus",
                            "fms:listComplianceStatus",
                            "fms:listMemberAccounts",
                            "fms:listPolicies",
                            "forecast:describeDataset",
                            "forecast:describeDatasetGroup",
                            "forecast:describeDatasetImportJob",
                            "forecast:describeForecast",
                            "forecast:describeForecastExportJob",
                            "forecast:describePredictor",
                            "forecast:getAccuracyMetrics",
                            "forecast:listDatasetGroups",
                            "forecast:listDatasetImportJobs",
                            "forecast:listDatasets",
                            "forecast:listForecastExportJobs",
                            "forecast:listForecasts",
                            "forecast:listPredictors",
                            "fsx:describeBackups",
                            "fsx:describeFileSystems",
                            "fsx:listTagsForResource",
                            "glacier:describeJob",
                            "glacier:describeVault",
                            "glacier:getDataRetrievalPolicy",
                            "glacier:getVaultAccessPolicy",
                            "glacier:getVaultLock",
                            "glacier:getVaultNotifications",
                            "glacier:listJobs",
                            "glacier:listTagsForVault",
                            "glacier:listVaults",
                            "globalaccelerator:describeAccelerator",
                            "globalaccelerator:describeAcceleratorAttributes",
                            "globalaccelerator:describeEndpointGroup",
                            "globalaccelerator:describeListener",
                            "globalaccelerator:listAccelerators",
                            "globalaccelerator:listEndpointGroups",
                            "globalaccelerator:listListeners",
                            "glue:batchGetPartition",
                            "glue:getCatalogImportStatus",
                            "glue:getClassifier",
                            "glue:getClassifiers",
                            "glue:getCrawler",
                            "glue:getCrawlerMetrics",
                            "glue:getCrawlers",
                            "glue:getDatabase",
                            "glue:getDatabases",
                            "glue:getDataflowGraph",
                            "glue:getDevEndpoint",
                            "glue:getDevEndpoints",
                            "glue:getJob",
                            "glue:getJobRun",
                            "glue:getJobRuns",
                            "glue:getJobs",
                            "glue:getMapping",
                            "glue:getPartition",
                            "glue:getPartitions",
                            "glue:getTable",
                            "glue:getTableVersions",
                            "glue:getTables",
                            "glue:getTrigger",
                            "glue:getTriggers",
                            "glue:getUserDefinedFunction",
                            "glue:getUserDefinedFunctions",
                            "greengrass:getConnectivityInfo",
                            "greengrass:getCoreDefinition",
                            "greengrass:getCoreDefinitionVersion",
                            "greengrass:getDeploymentStatus",
                            "greengrass:getDeviceDefinition",
                            "greengrass:getDeviceDefinitionVersion",
                            "greengrass:getFunctionDefinition",
                            "greengrass:getFunctionDefinitionVersion",
                            "greengrass:getGroup",
                            "greengrass:getGroupCertificateAuthority",
                            "greengrass:getGroupVersion",
                            "greengrass:getLoggerDefinition",
                            "greengrass:getLoggerDefinitionVersion",
                            "greengrass:getResourceDefinitionVersion",
                            "greengrass:getServiceRoleForAccount",
                            "greengrass:getSubscriptionDefinition",
                            "greengrass:getSubscriptionDefinitionVersion",
                            "greengrass:listCoreDefinitionVersions",
                            "greengrass:listCoreDefinitions",
                            "greengrass:listDeployments",
                            "greengrass:listDeviceDefinitionVersions",
                            "greengrass:listDeviceDefinitions",
                            "greengrass:listFunctionDefinitionVersions",
                            "greengrass:listFunctionDefinitions",
                            "greengrass:listGroupVersions",
                            "greengrass:listGroups",
                            "greengrass:listLoggerDefinitionVersions",
                            "greengrass:listLoggerDefinitions",
                            "greengrass:listResourceDefinitionVersions",
                            "greengrass:listResourceDefinitions",
                            "greengrass:listSubscriptionDefinitionVersions",
                            "greengrass:listSubscriptionDefinitions",
                            "guardduty:getDetector",
                            "guardduty:getFindings",
                            "guardduty:getFindingsStatistics",
                            "guardduty:getIPSet",
                            "guardduty:getInvitationsCount",
                            "guardduty:getMasterAccount",
                            "guardduty:getMembers",
                            "guardduty:getThreatIntelSet",
                            "guardduty:listDetectors",
                            "guardduty:listFindings",
                            "guardduty:listIPSets",
                            "guardduty:listInvitations",
                            "guardduty:listMembers",
                            "guardduty:listThreatIntelSets",
                            "health:describeAffectedEntities",
                            "health:describeEntityAggregates",
                            "health:describeEventAggregates",
                            "health:describeEventDetails",
                            "health:describeEventTypes",
                            "health:describeEvents",
                            "iam:getAccessKeyLastUsed",
                            "iam:getAccountAuthorizationDetails",
                            "iam:getAccountPasswordPolicy",
                            "iam:getAccountSummary",
                            "iam:getContextKeysForCustomPolicy",
                            "iam:getContextKeysForPrincipalPolicy",
                            "iam:getCredentialReport",
                            "iam:getGroup",
                            "iam:getGroupPolicy",
                            "iam:getInstanceProfile",
                            "iam:getLoginProfile",
                            "iam:getOpenIDConnectProvider",
                            "iam:getPolicy",
                            "iam:getPolicyVersion",
                            "iam:getRole",
                            "iam:getRolePolicy",
                            "iam:getSAMLProvider",
                            "iam:getSSHPublicKey",
                            "iam:getServerCertificate",
                            "iam:getUser",
                            "iam:getUserPolicy",
                            "iam:listAccessKeys",
                            "iam:listAccountAliases",
                            "iam:listAttachedGroupPolicies",
                            "iam:listAttachedRolePolicies",
                            "iam:listAttachedUserPolicies",
                            "iam:listEntitiesForPolicy",
                            "iam:listGroupPolicies",
                            "iam:listGroups",
                            "iam:listGroupsForUser",
                            "iam:listInstanceProfiles",
                            "iam:listInstanceProfilesForRole",
                            "iam:listMFADevices",
                            "iam:listOpenIDConnectProviders",
                            "iam:listPolicies",
                            "iam:listPolicyVersions",
                            "iam:listRolePolicies",
                            "iam:listRoles",
                            "iam:listSAMLProviders",
                            "iam:listSSHPublicKeys",
                            "iam:listServerCertificates",
                            "iam:listSigningCertificates",
                            "iam:listUserPolicies",
                            "iam:listUsers",
                            "iam:listVirtualMFADevices",
                            "iam:simulateCustomPolicy",
                            "iam:simulatePrincipalPolicy",
                            "imagebuilder:getComponent",
                            "imagebuilder:getComponentPolicy",
                            "imagebuilder:getDistributionConfiguration",
                            "imagebuilder:getImage",
                            "imagebuilder:getImagePipeline",
                            "imagebuilder:getImagePolicy",
                            "imagebuilder:getImageRecipe",
                            "imagebuilder:getImageRecipePolicy",
                            "imagebuilder:getInfrastructureConfiguration",
                            "imagebuilder:listComponentBuildVersions",
                            "imagebuilder:listComponents",
                            "imagebuilder:listDistributionConfigurations",
                            "imagebuilder:listImageBuildVersions",
                            "imagebuilder:listImagePipelineImages",
                            "imagebuilder:listImagePipelines",
                            "imagebuilder:listImageRecipes",
                            "imagebuilder:listImages",
                            "imagebuilder:listInfrastructureConfigurations",
                            "imagebuilder:listTagsForResource",
                            "importexport:getStatus",
                            "importexport:listJobs",
                            "inspector:describeAssessmentRuns",
                            "inspector:describeAssessmentTargets",
                            "inspector:describeAssessmentTemplates",
                            "inspector:describeCrossAccountAccessRole",
                            "inspector:describeResourceGroups",
                            "inspector:describeRulesPackages",
                            "inspector:getTelemetryMetadata",
                            "inspector:listAssessmentRunAgents",
                            "inspector:listAssessmentRuns",
                            "inspector:listAssessmentTargets",
                            "inspector:listAssessmentTemplates",
                            "inspector:listEventSubscriptions",
                            "inspector:listRulesPackages",
                            "inspector:listTagsForResource",
                            "iot:describeAuthorizer",
                            "iot:describeCACertificate",
                            "iot:describeCertificate",
                            "iot:describeDefaultAuthorizer",
                            "iot:describeEndpoint",
                            "iot:describeIndex",
                            "iot:describeJobExecution",
                            "iot:describeThing",
                            "iot:describeThingGroup",
                            "iot:describeTunnel",
                            "iot:getEffectivePolicies",
                            "iot:getIndexingConfiguration",
                            "iot:getLoggingOptions",
                            "iot:getPolicy",
                            "iot:getPolicyVersion",
                            "iot:getTopicRule",
                            "iot:getV2LoggingOptions",
                            "iot:listAttachedPolicies",
                            "iot:listAuthorizers",
                            "iot:listCACertificates",
                            "iot:listCertificates",
                            "iot:listCertificatesByCA",
                            "iot:listJobExecutionsForJob",
                            "iot:listJobExecutionsForThing",
                            "iot:listJobs",
                            "iot:listOutgoingCertificates",
                            "iot:listPolicies",
                            "iot:listPolicyPrincipals",
                            "iot:listPolicyVersions",
                            "iot:listPrincipalPolicies",
                            "iot:listPrincipalThings",
                            "iot:listRoleAliases",
                            "iot:listTargetsForPolicy",
                            "iot:listThingGroups",
                            "iot:listThingGroupsForThing",
                            "iot:listThingPrincipals",
                            "iot:listThingRegistrationTasks",
                            "iot:listThingTypes",
                            "iot:listThings",
                            "iot:listTopicRules",
                            "iot:listTunnels",
                            "iot:listV2LoggingLevels",
                            "iotevents:describeDetector",
                            "iotevents:describeDetectorModel",
                            "iotevents:describeInput",
                            "iotevents:describeLoggingOptions",
                            "iotevents:listDetectorModelVersions",
                            "iotevents:listDetectorModels",
                            "iotevents:listDetectors",
                            "iotevents:listInputs",
                            "iotsitewise:describeAccessPolicy",
                            "iotsitewise:describeAsset",
                            "iotsitewise:describeAssetModel",
                            "iotsitewise:describeAssetProperty",
                            "iotsitewise:describeDashboard",
                            "iotsitewise:describeGateway",
                            "iotsitewise:describeGatewayCapabilityConfiguration",
                            "iotsitewise:describeLoggingOptions",
                            "iotsitewise:describePortal",
                            "iotsitewise:describeProject",
                            "iotsitewise:listAccessPolicies",
                            "iotsitewise:listAssetModels",
                            "iotsitewise:listAssociatedAssets",
                            "iotsitewise:listDashboards",
                            "iotsitewise:listGateways",
                            "iotsitewise:listPortals",
                            "iotsitewise:listProjectAssets",
                            "iotsitewise:listProjects",
                            "kafka:describeCluster",
                            "kafka:getBootstrapBrokers",
                            "kafka:listClusters",
                            "kafka:listNodes",
                            "kendra:describeDataSource",
                            "kendra:describeFaq",
                            "kendra:describeIndex",
                            "kendra:getDataSourceSyncJobHistory",
                            "kendra:listDataSources",
                            "kendra:listFaqs",
                            "kendra:listIndices",
                            "kinesis:describeStream",
                            "kinesis:listStreams",
                            "kinesis:listTagsForStream",
                            "kinesisanalytics:describeApplication",
                            "kinesisanalytics:listApplications",
                            "kms:describeKey",
                            "kms:getKeyPolicy",
                            "kms:getKeyRotationStatus",
                            "kms:listAliases",
                            "kms:listGrants",
                            "kms:listKeyPolicies",
                            "kms:listKeys",
                            "kms:listResourceTags",
                            "kms:listRetirableGrants",
                            "lambda:getAccountSettings",
                            "lambda:getAlias",
                            "lambda:getEventSourceMapping",
                            "lambda:getFunction",
                            "lambda:getFunctionConcurrency",
                            "lambda:getFunctionConfiguration",
                            "lambda:getFunctionEventInvokeConfig",
                            "lambda:getLayerVersion",
                            "lambda:getLayerVersionPolicy",
                            "lambda:getPolicy",
                            "lambda:getProvisionedConcurrencyConfig",
                            "lambda:listAliases",
                            "lambda:listEventSourceMappings",
                            "lambda:listFunctionEventInvokeConfigs",
                            "lambda:listFunctions",
                            "lambda:listLayerVersions",
                            "lambda:listLayers",
                            "lambda:listProvisionedConcurrencyConfigs",
                            "lambda:listVersionsByFunction",
                            "launchwizard:describeProvisionedApp",
                            "launchwizard:describeProvisioningEvents",
                            "launchwizard:listProvisionedApps",
                            "lex:getBot",
                            "lex:getBotAlias",
                            "lex:getBotAliases",
                            "lex:getBotChannelAssociation",
                            "lex:getBotChannelAssociations",
                            "lex:getBotVersions",
                            "lex:getBots",
                            "lex:getBuiltinIntent",
                            "lex:getBuiltinIntents",
                            "lex:getBuiltinSlotTypes",
                            "lex:getIntent",
                            "lex:getIntentVersions",
                            "lex:getIntents",
                            "lex:getSlotType",
                            "lex:getSlotTypeVersions",
                            "lex:getSlotTypes",
                            "license-manager:getLicenseConfiguration",
                            "license-manager:getServiceSettings",
                            "license-manager:listAssociationsForLicenseConfiguration",
                            "license-manager:listFailuresForLicenseConfigurationOperations",
                            "license-manager:listLicenseConfigurations",
                            "license-manager:listLicenseSpecificationsForResource",
                            "license-manager:listResourceInventory",
                            "license-manager:listUsageForLicenseConfiguration",
                            "lightsail:getActiveNames",
                            "lightsail:getBlueprints",
                            "lightsail:getBundles",
                            "lightsail:getDomain",
                            "lightsail:getDomains",
                            "lightsail:getInstance",
                            "lightsail:getInstanceMetricData",
                            "lightsail:getInstancePortStates",
                            "lightsail:getInstanceSnapshot",
                            "lightsail:getInstanceSnapshots",
                            "lightsail:getInstanceState",
                            "lightsail:getInstances",
                            "lightsail:getKeyPair",
                            "lightsail:getKeyPairs",
                            "lightsail:getOperation",
                            "lightsail:getOperations",
                            "lightsail:getOperationsForResource",
                            "lightsail:getRegions",
                            "lightsail:getStaticIp",
                            "lightsail:getStaticIps",
                            "logs:describeDestinations",
                            "logs:describeExportTasks",
                            "logs:describeLogGroups",
                            "logs:describeLogStreams",
                            "logs:describeMetricFilters",
                            "logs:describeQueries",
                            "logs:describeSubscriptionFilters",
                            "logs:testMetricFilter",
                            "machinelearning:describeBatchPredictions",
                            "machinelearning:describeDataSources",
                            "machinelearning:describeEvaluations",
                            "machinelearning:describeMLModels",
                            "machinelearning:getBatchPrediction",
                            "machinelearning:getDataSource",
                            "machinelearning:getEvaluation",
                            "machinelearning:getMLModel",
                            "managedblockchain:getMember",
                            "managedblockchain:getNetwork",
                            "managedblockchain:getNode",
                            "managedblockchain:listMembers",
                            "managedblockchain:listNetworks",
                            "managedblockchain:listNodes",
                            "mediaconvert:describeEndpoints",
                            "mediaconvert:getJob",
                            "mediaconvert:getJobTemplate",
                            "mediaconvert:getPreset",
                            "mediaconvert:getQueue",
                            "mediaconvert:listJobTemplates",
                            "mediaconvert:listJobs",
                            "medialive:describeChannel",
                            "medialive:describeInput",
                            "medialive:describeInputSecurityGroup",
                            "medialive:describeOffering",
                            "medialive:describeReservation",
                            "medialive:describeSchedule",
                            "medialive:listChannels",
                            "medialive:listInputSecurityGroups",
                            "medialive:listInputs",
                            "medialive:listOfferings",
                            "medialive:listReservations",
                            "mediapackage:describeChannel",
                            "mediapackage:describeOriginEndpoint",
                            "mediapackage:listChannels",
                            "mediapackage:listOriginEndpoints",
                            "mediastore:describeContainer",
                            "mediastore:describeObject",
                            "mediastore:getContainerPolicy",
                            "mediastore:getCorsPolicy",
                            "mediastore:listContainers",
                            "mediastore:listItems",
                            "mediatailor:getPlaybackConfiguration",
                            "mediatailor:listPlaybackConfigurations",
                            "mobiletargeting:getAdmChannel",
                            "mobiletargeting:getApnsChannel",
                            "mobiletargeting:getApnsSandboxChannel",
                            "mobiletargeting:getApnsVoipChannel",
                            "mobiletargeting:getApnsVoipSandboxChannel",
                            "mobiletargeting:getApp",
                            "mobiletargeting:getApplicationSettings",
                            "mobiletargeting:getApps",
                            "mobiletargeting:getBaiduChannel",
                            "mobiletargeting:getCampaign",
                            "mobiletargeting:getCampaignActivities",
                            "mobiletargeting:getCampaignVersion",
                            "mobiletargeting:getCampaignVersions",
                            "mobiletargeting:getCampaigns",
                            "mobiletargeting:getEmailChannel",
                            "mobiletargeting:getEndpoint",
                            "mobiletargeting:getEventStream",
                            "mobiletargeting:getExportJob",
                            "mobiletargeting:getExportJobs",
                            "mobiletargeting:getGcmChannel",
                            "mobiletargeting:getImportJob",
                            "mobiletargeting:getImportJobs",
                            "mobiletargeting:getSegment",
                            "mobiletargeting:getSegmentImportJobs",
                            "mobiletargeting:getSegmentVersion",
                            "mobiletargeting:getSegmentVersions",
                            "mobiletargeting:getSegments",
                            "mobiletargeting:getSmsChannel",
                            "mq:describeBroker",
                            "mq:describeConfiguration",
                            "mq:describeConfigurationRevision",
                            "mq:describeUser",
                            "mq:listBrokers",
                            "mq:listConfigurationRevisions",
                            "mq:listConfigurations",
                            "mq:listUsers",
                            "networkmanager:describeGlobalNetworks",
                            "networkmanager:getCustomerGatewayAssociations",
                            "networkmanager:getDevices",
                            "networkmanager:getLinkAssociations",
                            "networkmanager:getLinks",
                            "networkmanager:getSites",
                            "networkmanager:getTransitGatewayRegistrations",
                            "opsworks-cm:describeAccountAttributes",
                            "opsworks-cm:describeBackups",
                            "opsworks-cm:describeEvents",
                            "opsworks-cm:describeNodeAssociationStatus",
                            "opsworks-cm:describeServers",
                            "opsworks:describeAgentVersions",
                            "opsworks:describeApps",
                            "opsworks:describeCommands",
                            "opsworks:describeDeployments",
                            "opsworks:describeEcsClusters",
                            "opsworks:describeElasticIps",
                            "opsworks:describeElasticLoadBalancers",
                            "opsworks:describeInstances",
                            "opsworks:describeLayers",
                            "opsworks:describeLoadBasedAutoScaling",
                            "opsworks:describeMyUserProfile",
                            "opsworks:describePermissions",
                            "opsworks:describeRaidArrays",
                            "opsworks:describeRdsDbInstances",
                            "opsworks:describeServiceErrors",
                            "opsworks:describeStackProvisioningParameters",
                            "opsworks:describeStackSummary",
                            "opsworks:describeStacks",
                            "opsworks:describeTimeBasedAutoScaling",
                            "opsworks:describeUserProfiles",
                            "opsworks:describeVolumes",
                            "opsworks:getHostnameSuggestion",
                            "personalize:describeAlgorithm",
                            "personalize:describeCampaign",
                            "personalize:describeDataset",
                            "personalize:describeDatasetGroup",
                            "personalize:describeDatasetImportJob",
                            "personalize:describeEventTracker",
                            "personalize:describeFeatureTransformation",
                            "personalize:describeRecipe",
                            "personalize:describeSchema",
                            "personalize:describeSolution",
                            "personalize:describeSolutionVersion",
                            "personalize:listCampaigns",
                            "personalize:listDatasetGroups",
                            "personalize:listDatasetImportJobs",
                            "personalize:listDatasets",
                            "personalize:listEventTrackers",
                            "personalize:listRecipes",
                            "personalize:listSchemas",
                            "personalize:listSolutionVersions",
                            "personalize:listSolutions",
                            "polly:describeVoices",
                            "polly:getLexicon",
                            "polly:listLexicons",
                            "pricing:describeServices",
                            "pricing:getAttributeValues",
                            "pricing:getProducts",
                            "rds:describeAccountAttributes",
                            "rds:describeCertificates",
                            "rds:describeDBClusterParameterGroups",
                            "rds:describeDBClusterParameters",
                            "rds:describeDBClusterSnapshots",
                            "rds:describeDBClusters",
                            "rds:describeDBEngineVersions",
                            "rds:describeDBInstances",
                            "rds:describeDBParameterGroups",
                            "rds:describeDBParameters",
                            "rds:describeDBSecurityGroups",
                            "rds:describeDBSnapshotAttributes",
                            "rds:describeDBSnapshots",
                            "rds:describeDBSubnetGroups",
                            "rds:describeEngineDefaultClusterParameters",
                            "rds:describeEngineDefaultParameters",
                            "rds:describeEventCategories",
                            "rds:describeEventSubscriptions",
                            "rds:describeEvents",
                            "rds:describeOptionGroupOptions",
                            "rds:describeOptionGroups",
                            "rds:describeOrderableDBInstanceOptions",
                            "rds:describePendingMaintenanceActions",
                            "rds:describeReservedDBInstances",
                            "rds:describeReservedDBInstancesOfferings",
                            "rds:listTagsForResource",
                            "redshift:describeClusterParameterGroups",
                            "redshift:describeClusterParameters",
                            "redshift:describeClusterSecurityGroups",
                            "redshift:describeClusterSnapshots",
                            "redshift:describeClusterSubnetGroups",
                            "redshift:describeClusterVersions",
                            "redshift:describeClusters",
                            "redshift:describeDefaultClusterParameters",
                            "redshift:describeEventCategories",
                            "redshift:describeEventSubscriptions",
                            "redshift:describeEvents",
                            "redshift:describeHsmClientCertificates",
                            "redshift:describeHsmConfigurations",
                            "redshift:describeLoggingStatus",
                            "redshift:describeOrderableClusterOptions",
                            "redshift:describeReservedNodeOfferings",
                            "redshift:describeReservedNodes",
                            "redshift:describeResize",
                            "redshift:describeSnapshotCopyGrants",
                            "redshift:describeStorage",
                            "redshift:describeTableRestoreStatus",
                            "redshift:describeTags",
                            "rekognition:listCollections",
                            "rekognition:listFaces",
                            "robomaker:batchDescribeSimulationJob",
                            "robomaker:describeDeploymentJob",
                            "robomaker:describeFleet",
                            "robomaker:describeRobot",
                            "robomaker:describeRobotApplication",
                            "robomaker:describeSimulationApplication",
                            "robomaker:describeSimulationJob",
                            "robomaker:listDeploymentJobs",
                            "robomaker:listFleets",
                            "robomaker:listRobotApplications",
                            "robomaker:listRobots",
                            "robomaker:listSimulationApplications",
                            "robomaker:listSimulationJobs",
                            "route53:getChange",
                            "route53:getCheckerIpRanges",
                            "route53:getGeoLocation",
                            "route53:getHealthCheck",
                            "route53:getHealthCheckCount",
                            "route53:getHealthCheckLastFailureReason",
                            "route53:getHealthCheckStatus",
                            "route53:getHostedZone",
                            "route53:getHostedZoneCount",
                            "route53:getReusableDelegationSet",
                            "route53:getTrafficPolicy",
                            "route53:getTrafficPolicyInstance",
                            "route53:getTrafficPolicyInstanceCount",
                            "route53:listGeoLocations",
                            "route53:listHealthChecks",
                            "route53:listHostedZones",
                            "route53:listHostedZonesByName",
                            "route53:listResourceRecordSets",
                            "route53:listReusableDelegationSets",
                            "route53:listTagsForResource",
                            "route53:listTagsForResources",
                            "route53:listTrafficPolicies",
                            "route53:listTrafficPolicyInstances",
                            "route53:listTrafficPolicyInstancesByHostedZone",
                            "route53:listTrafficPolicyInstancesByPolicy",
                            "route53:listTrafficPolicyVersions",
                            "route53domains:checkDomainAvailability",
                            "route53domains:getContactReachabilityStatus",
                            "route53domains:getDomainDetail",
                            "route53domains:getOperationDetail",
                            "route53domains:listDomains",
                            "route53domains:listOperations",
                            "route53domains:listTagsForDomain",
                            "route53domains:viewBilling",
                            "route53resolver:getResolverRulePolicy",
                            "route53resolver:listResolverEndpointIpAddresses",
                            "route53resolver:listResolverEndpoints",
                            "route53resolver:listResolverRuleAssociations",
                            "route53resolver:listResolverRules",
                            "route53resolver:listTagsForResource",
                            "s3:getAccelerateConfiguration",
                            "s3:getAnalyticsConfiguration",
                            "s3:getBucketAcl",
                            "s3:getBucketCORS",
                            "s3:getBucketLocation",
                            "s3:getBucketLogging",
                            "s3:getBucketNotification",
                            "s3:getBucketPolicy",
                            "s3:getBucketRequestPayment",
                            "s3:getBucketTagging",
                            "s3:getBucketVersioning",
                            "s3:getBucketWebsite",
                            "s3:getEncryptionConfiguration",
                            "s3:getInventoryConfiguration",
                            "s3:getLifecycleConfiguration",
                            "s3:getMetricsConfiguration",
                            "s3:getReplicationConfiguration",
                            "s3:listAllMyBuckets",
                            "s3:listBucket",
                            "s3:listBucketMultipartUploads",
                            "sagemaker:describeAlgorithm",
                            "sagemaker:describeApp",
                            "sagemaker:describeAutoMLJob",
                            "sagemaker:describeCompilationJob",
                            "sagemaker:describeDomain",
                            "sagemaker:describeEndpoint",
                            "sagemaker:describeEndpointConfig",
                            "sagemaker:describeExperiment",
                            "sagemaker:describeHumanTaskUi",
                            "sagemaker:describeHyperParameterTuningJob",
                            "sagemaker:describeLabelingJob",
                            "sagemaker:describeModel",
                            "sagemaker:describeModelPackage",
                            "sagemaker:describeMonitoringSchedule",
                            "sagemaker:describeNotebookInstance",
                            "sagemaker:describeNotebookInstanceLifecycleConfig",
                            "sagemaker:describeProcessingJob",
                            "sagemaker:describeSubscribedWorkteam",
                            "sagemaker:describeTrainingJob",
                            "sagemaker:describeTransformJob",
                            "sagemaker:describeTrial",
                            "sagemaker:describeTrialComponent",
                            "sagemaker:describeUserProfile",
                            "sagemaker:describeWorkteam",
                            "sagemaker:listAlgorithms",
                            "sagemaker:listApps",
                            "sagemaker:listAutoMLJobs",
                            "sagemaker:listCandidatesForAutoMLJob",
                            "sagemaker:listCodeRepositories",
                            "sagemaker:listCompilationJobs",
                            "sagemaker:listDomains",
                            "sagemaker:listEndpointConfigs",
                            "sagemaker:listEndpoints",
                            "sagemaker:listExperiments",
                            "sagemaker:listFlowDefinitions",
                            "sagemaker:listHumanTaskUis",
                            "sagemaker:listHyperParameterTuningJobs",
                            "sagemaker:listLabelingJobs",
                            "sagemaker:listLabelingJobsForWorkteam",
                            "sagemaker:listModelPackages",
                            "sagemaker:listModels",
                            "sagemaker:listMonitoringExecutions",
                            "sagemaker:listMonitoringSchedules",
                            "sagemaker:listNotebookInstanceLifecycleConfigs",
                            "sagemaker:listNotebookInstances",
                            "sagemaker:listProcessingJobs",
                            "sagemaker:listSubscribedWorkteams",
                            "sagemaker:listTags",
                            "sagemaker:listTrainingJobs",
                            "sagemaker:listTrainingJobsForHyperParameterTuningJob",
                            "sagemaker:listTransformJobs",
                            "sagemaker:listTrialComponents",
                            "sagemaker:listTrials",
                            "sagemaker:listUserProfiles",
                            "sagemaker:listWorkteams",
                            "sdb:domainMetadata",
                            "sdb:listDomains",
                            "secretsmanager:describeSecret",
                            "secretsmanager:getResourcePolicy",
                            "secretsmanager:listSecretVersionIds",
                            "secretsmanager:listSecrets",
                            "securityhub:getEnabledStandards",
                            "securityhub:getFindings",
                            "securityhub:getInsightResults",
                            "securityhub:getInsights",
                            "securityhub:getMasterAccount",
                            "securityhub:getMembers",
                            "securityhub:listEnabledProductsForImport",
                            "securityhub:listInvitations",
                            "securityhub:listMembers",
                            "servicecatalog:describeConstraint",
                            "servicecatalog:describePortfolio",
                            "servicecatalog:describeProduct",
                            "servicecatalog:describeProductAsAdmin",
                            "servicecatalog:describeProductView",
                            "servicecatalog:describeProvisioningArtifact",
                            "servicecatalog:describeProvisioningParameters",
                            "servicecatalog:describeRecord",
                            "servicecatalog:listAcceptedPortfolioShares",
                            "servicecatalog:listConstraintsForPortfolio",
                            "servicecatalog:listLaunchPaths",
                            "servicecatalog:listPortfolioAccess",
                            "servicecatalog:listPortfolios",
                            "servicecatalog:listPortfoliosForProduct",
                            "servicecatalog:listPrincipalsForPortfolio",
                            "servicecatalog:listProvisioningArtifacts",
                            "servicecatalog:listRecordHistory",
                            "servicecatalog:scanProvisionedProducts",
                            "servicecatalog:searchProducts",
                            "servicequotas:getAWSDefaultServiceQuota",
                            "servicequotas:getAssociationForServiceQuotaTemplate",
                            "servicequotas:getRequestedServiceQuotaChange",
                            "servicequotas:getServiceQuota",
                            "servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
                            "servicequotas:listAWSDefaultServiceQuotas",
                            "servicequotas:listRequestedServiceQuotaChangeHistory",
                            "servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
                            "servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
                            "servicequotas:listServiceQuotas",
                            "servicequotas:listServices",
                            "ses:describeActiveReceiptRuleSet",
                            "ses:describeReceiptRule",
                            "ses:describeReceiptRuleSet",
                            "ses:getAccount",
                            "ses:getBlacklistReports",
                            "ses:getConfigurationSet",
                            "ses:getDedicatedIp",
                            "ses:getDedicatedIps",
                            "ses:getDeliverabilityDashboardOptions",
                            "ses:getDeliverabilityTestReport",
                            "ses:getDomainDeliverabilityCampaign",
                            "ses:getDomainStatisticsReport",
                            "ses:getEmailIdentity",
                            "ses:getIdentityDkimAttributes",
                            "ses:getIdentityMailFromDomainAttributes",
                            "ses:getIdentityNotificationAttributes",
                            "ses:getIdentityPolicies",
                            "ses:getIdentityVerificationAttributes",
                            "ses:getSendQuota",
                            "ses:getSendStatistics",
                            "ses:listConfigurationSets",
                            "ses:listDedicatedIpPools",
                            "ses:listDeliverabilityTestReports",
                            "ses:listDomainDeliverabilityCampaigns",
                            "ses:listEmailIdentities",
                            "ses:listIdentities",
                            "ses:listIdentityPolicies",
                            "ses:listReceiptFilters",
                            "ses:listReceiptRuleSets",
                            "ses:listTagsForResource",
                            "ses:listVerifiedEmailAddresses",
                            "shield:describeAttack",
                            "shield:describeProtection",
                            "shield:describeSubscription",
                            "shield:listAttacks",
                            "shield:listProtections",
                            "sms-voice:getConfigurationSetEventDestinations",
                            "sms:getConnectors",
                            "sms:getReplicationJobs",
                            "sms:getReplicationRuns",
                            "sms:getServers",
                            "snowball:describeAddress",
                            "snowball:describeAddresses",
                            "snowball:describeJob",
                            "snowball:getSnowballUsage",
                            "snowball:listJobs",
                            "sns:checkIfPhoneNumberIsOptedOut",
                            "sns:getEndpointAttributes",
                            "sns:getPlatformApplicationAttributes",
                            "sns:getSMSAttributes",
                            "sns:getSubscriptionAttributes",
                            "sns:getTopicAttributes",
                            "sns:listEndpointsByPlatformApplication",
                            "sns:listPhoneNumbersOptedOut",
                            "sns:listPlatformApplications",
                            "sns:listSubscriptions",
                            "sns:listSubscriptionsByTopic",
                            "sns:listTopics",
                            "sqs:getQueueAttributes",
                            "sqs:getQueueUrl",
                            "sqs:listDeadLetterSourceQueues",
                            "sqs:listQueues",
                            "ssm:describeActivations",
                            "ssm:describeAssociation",
                            "ssm:describeAssociationExecutionTargets",
                            "ssm:describeAssociationExecutions",
                            "ssm:describeAutomationExecutions",
                            "ssm:describeAutomationStepExecutions",
                            "ssm:describeAvailablePatches",
                            "ssm:describeDocument",
                            "ssm:describeDocumentPermission",
                            "ssm:describeEffectiveInstanceAssociations",
                            "ssm:describeEffectivePatchesForPatchBaseline",
                            "ssm:describeInstanceAssociationsStatus",
                            "ssm:describeInstanceInformation",
                            "ssm:describeInstancePatchStates",
                            "ssm:describeInstancePatchStatesForPatchGroup",
                            "ssm:describeInstancePatches",
                            "ssm:describeInventoryDeletions",
                            "ssm:describeMaintenanceWindowExecutionTaskInvocations",
                            "ssm:describeMaintenanceWindowExecutionTasks",
                            "ssm:describeMaintenanceWindowExecutions",
                            "ssm:describeMaintenanceWindowSchedule",
                            "ssm:describeMaintenanceWindowTargets",
                            "ssm:describeMaintenanceWindowTasks",
                            "ssm:describeMaintenanceWindows",
                            "ssm:describeMaintenanceWindowsForTarget",
                            "ssm:describeParameters",
                            "ssm:describePatchBaselines",
                            "ssm:describePatchGroupState",
                            "ssm:describePatchGroups",
                            "ssm:describePatchProperties",
                            "ssm:describeSessions",
                            "ssm:getAutomationExecution",
                            "ssm:getCommandInvocation",
                            "ssm:getConnectionStatus",
                            "ssm:getDefaultPatchBaseline",
                            "ssm:getDeployablePatchSnapshotForInstance",
                            "ssm:getInventorySchema",
                            "ssm:getMaintenanceWindow",
                            "ssm:getMaintenanceWindowExecution",
                            "ssm:getMaintenanceWindowExecutionTask",
                            "ssm:getMaintenanceWindowExecutionTaskInvocation",
                            "ssm:getMaintenanceWindowTask",
                            "ssm:getPatchBaseline",
                            "ssm:getPatchBaselineForPatchGroup",
                            "ssm:getServiceSetting",
                            "ssm:labelParameterVersion",
                            "ssm:listAssociationVersions",
                            "ssm:listAssociations",
                            "ssm:listCommandInvocations",
                            "ssm:listCommands",
                            "ssm:listComplianceItems",
                            "ssm:listComplianceSummaries",
                            "ssm:listDocumentVersions",
                            "ssm:listDocuments",
                            "ssm:listResourceComplianceSummaries",
                            "ssm:listResourceDataSync",
                            "ssm:listTagsForResource",
                            "states:describeActivity",
                            "states:describeExecution",
                            "states:describeStateMachine",
                            "states:getExecutionHistory",
                            "states:listActivities",
                            "states:listExecutions",
                            "states:listStateMachines",
                            "storagegateway:describeBandwidthRateLimit",
                            "storagegateway:describeCache",
                            "storagegateway:describeCachediSCSIVolumes",
                            "storagegateway:describeGatewayInformation",
                            "storagegateway:describeMaintenanceStartTime",
                            "storagegateway:describeNFSFileShares",
                            "storagegateway:describeSMBFileShares",
                            "storagegateway:describeSMBSettings",
                            "storagegateway:describeSnapshotSchedule",
                            "storagegateway:describeStorediSCSIVolumes",
                            "storagegateway:describeTapeArchives",
                            "storagegateway:describeTapeRecoveryPoints",
                            "storagegateway:describeTapes",
                            "storagegateway:describeUploadBuffer",
                            "storagegateway:describeVTLDevices",
                            "storagegateway:describeWorkingStorage",
                            "storagegateway:listFileShares",
                            "storagegateway:listGateways",
                            "storagegateway:listLocalDisks",
                            "storagegateway:listTagsForResource",
                            "storagegateway:listTapes",
                            "storagegateway:listVolumeInitiators",
                            "storagegateway:listVolumeRecoveryPoints",
                            "storagegateway:listVolumes",
                            "swf:countClosedWorkflowExecutions",
                            "swf:countOpenWorkflowExecutions",
                            "swf:countPendingActivityTasks",
                            "swf:countPendingDecisionTasks",
                            "swf:describeActivityType",
                            "swf:describeDomain",
                            "swf:describeWorkflowExecution",
                            "swf:describeWorkflowType",
                            "swf:getWorkflowExecutionHistory",
                            "swf:listActivityTypes",
                            "swf:listClosedWorkflowExecutions",
                            "swf:listDomains",
                            "swf:listOpenWorkflowExecutions",
                            "swf:listWorkflowTypes",
                            "transfer:describeServer",
                            "transfer:describeUser",
                            "transfer:listServers",
                            "transfer:listTagsForResource",
                            "transfer:listUsers",
                            "waf-regional:getByteMatchSet",
                            "waf-regional:getChangeTokenStatus",
                            "waf-regional:getIPSet",
                            "waf-regional:getRule",
                            "waf-regional:getSqlInjectionMatchSet",
                            "waf-regional:getWebACL",
                            "waf-regional:getWebACLForResource",
                            "waf-regional:listByteMatchSets",
                            "waf-regional:listIPSets",
                            "waf-regional:listResourcesForWebACL",
                            "waf-regional:listRules",
                            "waf-regional:listSqlInjectionMatchSets",
                            "waf-regional:listWebACLs",
                            "waf:getByteMatchSet",
                            "waf:getChangeTokenStatus",
                            "waf:getIPSet",
                            "waf:getRule",
                            "waf:getSampledRequests",
                            "waf:getSizeConstraintSet",
                            "waf:getSqlInjectionMatchSet",
                            "waf:getWebACL",
                            "waf:getXssMatchSet",
                            "waf:listByteMatchSets",
                            "waf:listIPSets",
                            "waf:listRules",
                            "waf:listSizeConstraintSets",
                            "waf:listSqlInjectionMatchSets",
                            "waf:listWebACLs",
                            "waf:listXssMatchSets",
                            "wafv2:checkCapacity",
                            "wafv2:describeManagedRuleGroup",
                            "wafv2:getIPSet",
                            "wafv2:getLoggingConfiguration",
                            "wafv2:getPermissionPolicy",
                            "wafv2:getRateBasedStatementManagedKeys",
                            "wafv2:getRegexPatternSet",
                            "wafv2:getRuleGroup",
                            "wafv2:getSampledRequests",
                            "wafv2:getWebACL",
                            "wafv2:getWebACLForResource",
                            "wafv2:listAvailableManagedRuleGroups",
                            "wafv2:listIPSets",
                            "wafv2:listLoggingConfigurations",
                            "wafv2:listRegexPatternSets",
                            "wafv2:listResourcesForWebACL",
                            "wafv2:listRuleGroups",
                            "wafv2:listTagsForResource",
                            "wafv2:listWebACLs",
                            "workdocs:checkAlias",
                            "workdocs:describeAvailableDirectories",
                            "workdocs:describeInstances",
                            "worklink:describeAuditStreamConfiguration",
                            "worklink:describeCompanyNetworkConfiguration",
                            "worklink:describeDevice",
                            "worklink:describeDevicePolicyConfiguration",
                            "worklink:describeDomain",
                            "worklink:describeFleetMetadata",
                            "worklink:describeIdentityProviderConfiguration",
                            "worklink:describeWebsiteCertificateAuthority",
                            "worklink:listDevices",
                            "worklink:listDomains",
                            "worklink:listFleets",
                            "worklink:listWebsiteAuthorizationProviders",
                            "worklink:listWebsiteCertificateAuthorities",
                            "workmail:describeGroup",
                            "workmail:describeOrganization",
                            "workmail:describeResource",
                            "workmail:describeUser",
                            "workmail:listAliases",
                            "workmail:listGroupMembers",
                            "workmail:listGroups",
                            "workmail:listMailboxPermissions",
                            "workmail:listOrganizations",
                            "workmail:listResourceDelegates",
                            "workmail:listResources",
                            "workmail:listUsers",
                            "workspaces:describeAccount",
                            "workspaces:describeAccountModifications",
                            "workspaces:describeIpGroups",
                            "workspaces:describeTags",
                            "workspaces:describeWorkspaceBundles",
                            "workspaces:describeWorkspaceDirectories",
                            "workspaces:describeWorkspaceImages",
                            "workspaces:describeWorkspaces",
                            "workspaces:describeWorkspacesConnectionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ7W6266ELXF5MISDS",
            "PolicyName": "AWSSupportServiceRolePolicy",
            "VersionId": "v13"
        },
        "AWSSystemsManagerAccountDiscoveryServicePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "organizations:ListAccounts",
                            "organizations:ListAWSServiceAccessForOrganization",
                            "organizations:ListChildren",
                            "organizations:ListParents",
                            "organizations:ListDelegatedServicesForAccount",
                            "organizations:ListDelegatedAdministrators"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4BPDSHIWK5",
            "PolicyName": "AWSSystemsManagerAccountDiscoveryServicePolicy",
            "VersionId": "v2"
        },
        "AWSThinkboxAWSPortalAdminPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AttachInternetGateway",
                            "ec2:AssociateAddress",
                            "ec2:AssociateRouteTable",
                            "ec2:AllocateAddress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateFleet",
                            "ec2:CreateLaunchTemplate",
                            "ec2:CreateInternetGateway",
                            "ec2:CreateNatGateway",
                            "ec2:CreatePlacementGroup",
                            "ec2:CreateRoute",
                            "ec2:CreateRouteTable",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSubnet",
                            "ec2:CreateVpc",
                            "ec2:CreateVpcEndpoint",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeFleets",
                            "ec2:DescribeFleetHistory",
                            "ec2:DescribeFleetInstances",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeLaunchTemplates",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeNatGateways",
                            "ec2:DescribeTags",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribePlacementGroups",
                            "ec2:DescribeInstanceTypeOfferings",
                            "ec2:DescribeRegions",
                            "ec2:DescribeSpotFleetRequestHistory",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSpotFleetInstances",
                            "ec2:DescribeSpotFleetRequests",
                            "ec2:DescribeSpotPriceHistory",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:GetConsoleOutput",
                            "ec2:ImportKeyPair",
                            "ec2:ReleaseAddress",
                            "ec2:RequestSpotFleet",
                            "ec2:CancelSpotFleetRequests",
                            "ec2:DisassociateAddress",
                            "ec2:DeleteFleets",
                            "ec2:DeleteLaunchTemplate",
                            "ec2:DeleteVpc",
                            "ec2:DeletePlacementGroup",
                            "ec2:DeleteVpcEndpoints",
                            "ec2:DeleteInternetGateway",
                            "ec2:DeleteSecurityGroup",
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:DeleteRoute",
                            "ec2:DeleteRouteTable",
                            "ec2:DisassociateRouteTable",
                            "ec2:DeleteSubnet",
                            "ec2:DeleteNatGateway",
                            "ec2:DetachInternetGateway",
                            "ec2:ModifyInstanceAttribute",
                            "ec2:ModifyFleet",
                            "ec2:ModifySpotFleetRequest",
                            "ec2:ModifyVpcAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:RunInstances",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:subnet/*",
                            "arn:aws:ec2:*:*:key-pair/*",
                            "arn:aws:ec2:*::snapshot/*",
                            "arn:aws:ec2:*:*:launch-template/*",
                            "arn:aws:ec2:*:*:volume/*",
                            "arn:aws:ec2:*:*:security-group/*",
                            "arn:aws:ec2:*:*:placement-group/*",
                            "arn:aws:ec2:*:*:network-interface/*",
                            "arn:aws:ec2:*::image/*"
                        ]
                    },
                    {
                        "Action": "ec2:RunInstances",
                        "Condition": {
                            "StringLike": {
                                "ec2:InstanceProfile": "arn:aws:iam::*:instance-profile/AWSPortal*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": "ec2:TerminateInstances",
                        "Condition": {
                            "StringEquals": {
                                "ec2:ResourceTag/aws:cloudformation:logical-id": "ReverseForwarder"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:TerminateInstances",
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:ec2spot:fleet-request-id": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:TerminateInstances",
                        "Condition": {
                            "StringLike": {
                                "ec2:PlacementGroup": "*DeadlinePlacementGroup*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:PlacementGroup": "*DeadlinePlacementGroup*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:CreateAction": "RunInstances"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:subnet/*",
                            "arn:aws:ec2:*:*:security-group/*",
                            "arn:aws:ec2:*:*:internet-gateway/*",
                            "arn:aws:ec2:*:*:route-table/*",
                            "arn:aws:ec2:*:*:volume/*",
                            "arn:aws:ec2:*:*:vpc/*",
                            "arn:aws:ec2:*:*:natgateway/*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetUser"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:GetInstanceProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:instance-profile/AWSPortal*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetPolicy",
                            "iam:ListEntitiesForPolicy",
                            "iam:ListPolicyVersions"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:policy/AWSPortal*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "iam:GetRolePolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/AWSPortal*",
                            "arn:aws:iam::*:role/DeadlineSpot*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com",
                                    "ec2fleet.amazonaws.com",
                                    "spot.amazonaws.com",
                                    "spotfleet.amazonaws.com",
                                    "cloudformation.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/AWSPortal*",
                            "arn:aws:iam::*:role/DeadlineSpot*"
                        ]
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "ec2fleet.amazonaws.com",
                                    "spot.amazonaws.com",
                                    "spotfleet.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/*"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:GetBucketLocation",
                            "s3:GetBucketLogging",
                            "s3:GetBucketVersioning",
                            "s3:PutBucketAcl",
                            "s3:PutBucketCORS",
                            "s3:PutBucketVersioning",
                            "s3:GetBucketAcl",
                            "s3:GetObject",
                            "s3:PutBucketLogging",
                            "s3:PutBucketTagging",
                            "s3:PutObject",
                            "s3:ListBucket",
                            "s3:ListBucketVersions",
                            "s3:PutEncryptionConfiguration",
                            "s3:PutLifecycleConfiguration",
                            "s3:DeleteBucket",
                            "s3:DeleteObject",
                            "s3:DeleteBucketPolicy",
                            "s3:DeleteObjectVersion"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3::*:awsportal*",
                            "arn:aws:s3::*:stack*",
                            "arn:aws:s3::*:aws-portal-cache*",
                            "arn:aws:s3::*:logs-for-aws-portal-cache*",
                            "arn:aws:s3::*:logs-for-stack*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "dynamodb:Scan"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:dynamodb:*:*:table/DeadlineFleetHealth*"
                    },
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStackResources",
                            "cloudformation:DeleteStack",
                            "cloudformation:DeleteChangeSet",
                            "cloudformation:ListStackResources",
                            "cloudformation:CreateChangeSet",
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:ExecuteChangeSet",
                            "cloudformation:UpdateTerminationProtection"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/stack*/*",
                            "arn:aws:cloudformation:*:*:stack/Deadline*/*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:EstimateTemplateCost",
                            "cloudformation:DescribeStacks"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "logs:PutRetentionPolicy",
                            "logs:DeleteRetentionPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/thinkbox*"
                    },
                    {
                        "Action": [
                            "logs:DescribeLogGroups",
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:Encrypt",
                            "kms:GenerateDataKey"
                        ],
                        "Condition": {
                            "StringLike": {
                                "kms:ViaService": [
                                    "s3.*.amazonaws.com",
                                    "secretsmanager.*.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "secretsmanager:CreateSecret"
                        ],
                        "Condition": {
                            "StringLike": {
                                "secretsmanager:Name": [
                                    "rcs-tls-pw*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "secretsmanager:DeleteSecret",
                            "secretsmanager:UpdateSecret",
                            "secretsmanager:DescribeSecret",
                            "secretsmanager:TagResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:secretsmanager:*:*:secret:rcs-tls-pw*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4BVM3T5TP2",
            "PolicyName": "AWSThinkboxAWSPortalAdminPolicy",
            "VersionId": "v4"
        },
        "AWSThinkboxAWSPortalGatewayPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams",
                            "logs:DescribeLogGroups",
                            "logs:CreateLogStream"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/thinkbox*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-portal-cache*"
                        ]
                    },
                    {
                        "Action": "dynamodb:Scan",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:dynamodb:*:*:table/DeadlineFleetHealth*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::stack*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::stack*/gateway_certs/*"
                        ]
                    },
                    {
                        "Action": [
                            "secretsmanager:GetSecretValue"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:secretsmanager:*:*:secret:rcs-tls-pw-stack*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FP27FM4BH",
            "PolicyName": "AWSThinkboxAWSPortalGatewayPolicy",
            "VersionId": "v2"
        },
        "AWSThinkboxAWSPortalWorkerPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeTags"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ARN": "${ec2:SourceInstanceARN}"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-portal-cache*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::stack*/gateway_certs/*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams",
                            "logs:DescribeLogGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/thinkbox*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "sqs:SendMessage",
                            "sqs:GetQueueUrl"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sqs:*:*:DeadlineAWS*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4PI3G53MMS",
            "PolicyName": "AWSThinkboxAWSPortalWorkerPolicy",
            "VersionId": "v3"
        },
        "AWSThinkboxAssetServerPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/thinkbox*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-portal-cache*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KDWZE3HCT",
            "PolicyName": "AWSThinkboxAssetServerPolicy",
            "VersionId": "v1"
        },
        "AWSThinkboxDeadlineResourceTrackerAccessPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "dynamodb:ListStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "dynamodb:BatchWriteItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:DescribeStream",
                            "dynamodb:DescribeTable",
                            "dynamodb:GetItem",
                            "dynamodb:GetRecords",
                            "dynamodb:GetShardIterator",
                            "dynamodb:PutItem",
                            "dynamodb:Scan",
                            "dynamodb:UpdateItem",
                            "dynamodb:UpdateTable"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:dynamodb:*:*:table/DeadlineEC2ComputeNodeHealth*",
                            "arn:aws:dynamodb:*:*:table/DeadlineEC2ComputeNodeInfo*",
                            "arn:aws:dynamodb:*:*:table/DeadlineFleetHealth*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CancelSpotFleetRequests",
                            "ec2:DeleteFleets",
                            "ec2:DescribeFleetInstances",
                            "ec2:DescribeFleets",
                            "ec2:DescribeInstances",
                            "ec2:DescribeSpotFleetInstances",
                            "ec2:DescribeSpotFleetRequests"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:RebootInstances",
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/DeadlineTrackedAWSResource": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": [
                            "events:PutEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:events:*:*:event-bus/default"
                        ]
                    },
                    {
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:DeadlineResourceTracker*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/lambda/DeadlineResourceTracker*"
                        ]
                    },
                    {
                        "Action": [
                            "sqs:DeleteMessage",
                            "sqs:GetQueueAttributes",
                            "sqs:ReceiveMessage"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sqs:*:*:DeadlineAWSComputeNodeStateMessageQueue*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4OUKJ73IOS",
            "PolicyName": "AWSThinkboxDeadlineResourceTrackerAccessPolicy",
            "VersionId": "v1"
        },
        "AWSThinkboxDeadlineResourceTrackerAdminPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "application-autoscaling:DeleteScalingPolicy",
                            "application-autoscaling:DeregisterScalableTarget",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingPolicies",
                            "application-autoscaling:PutScalingPolicy",
                            "application-autoscaling:RegisterScalableTarget"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:ListStacks"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:UpdateStack",
                            "cloudformation:DescribeStacks",
                            "cloudformation:UpdateTerminationProtection"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/DeadlineResourceTracker*"
                        ]
                    },
                    {
                        "Action": [
                            "dynamodb:CreateTable",
                            "dynamodb:DeleteTable",
                            "dynamodb:DescribeTable",
                            "dynamodb:ListTagsOfResource",
                            "dynamodb:TagResource",
                            "dynamodb:UntagResource"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:dynamodb:*:*:table/DeadlineEC2ComputeNodeHealth*",
                            "arn:aws:dynamodb:*:*:table/DeadlineEC2ComputeNodeInfo*",
                            "arn:aws:dynamodb:*:*:table/DeadlineFleetHealth*"
                        ]
                    },
                    {
                        "Action": [
                            "dynamodb:BatchWriteItem",
                            "dynamodb:Scan"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:dynamodb:*:*:table/DeadlineFleetHealth*"
                        ]
                    },
                    {
                        "Action": [
                            "events:DeleteRule",
                            "events:DescribeRule",
                            "events:PutRule",
                            "events:PutTargets",
                            "events:RemoveTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:events:*:*:rule/DeadlineResourceTracker*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "iam:ListAttachedRolePolicies"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/DeadlineResourceTracker*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetUser"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "dynamodb.application-autoscaling.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/DeadlineResourceTrackerAccess*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "application-autoscaling.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
                        ]
                    },
                    {
                        "Action": [
                            "lambda:GetEventSourceMapping"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "lambda:CreateEventSourceMapping",
                            "lambda:DeleteEventSourceMapping"
                        ],
                        "Condition": {
                            "StringLike": {
                                "lambda:FunctionArn": [
                                    "arn:aws:lambda:*:*:function:DeadlineResourceTracker*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "lambda:AddPermission",
                            "lambda:RemovePermission"
                        ],
                        "Condition": {
                            "StringLike": {
                                "lambda:Principal": "events.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:DeadlineResourceTracker*"
                        ]
                    },
                    {
                        "Action": [
                            "lambda:CreateFunction",
                            "lambda:DeleteFunction",
                            "lambda:GetFunction",
                            "lambda:GetFunctionConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:DeadlineResourceTracker*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*/deadline_aws_resource_tracker-*.zip",
                            "arn:aws:s3:::*/DeadlineAWSResourceTrackerTemplate-*.yaml"
                        ]
                    },
                    {
                        "Action": [
                            "sqs:CreateQueue",
                            "sqs:DeleteQueue",
                            "sqs:GetQueueAttributes",
                            "sqs:ListQueueTags",
                            "sqs:TagQueue",
                            "sqs:UntagQueue"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sqs:*:*:DeadlineAWSComputeNodeState*",
                            "arn:aws:sqs:*:*:DeadlineResourceTracker*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FKWWNUOP2",
            "PolicyName": "AWSThinkboxDeadlineResourceTrackerAdminPolicy",
            "VersionId": "v2"
        },
        "AWSThinkboxDeadlineSpotEventPluginAdminPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CancelSpotFleetRequests",
                            "ec2:DescribeSpotFleetInstances",
                            "ec2:DescribeSpotFleetRequests",
                            "ec2:ModifySpotFleetRequest",
                            "ec2:RequestSpotFleet"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "ec2:CreateAction": "RunInstances"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:RunInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:ec2spot:fleet-request-id": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "spot.amazonaws.com",
                                    "spotfleet.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetInstanceProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:instance-profile/*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-ec2-spot-fleet-tagging-role",
                            "arn:aws:iam::*:role/DeadlineSpot*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetUser"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "ec2.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-ec2-spot-fleet-tagging-role",
                            "arn:aws:iam::*:role/DeadlineSpot*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MNSGMZZZZ",
            "PolicyName": "AWSThinkboxDeadlineSpotEventPluginAdminPolicy",
            "VersionId": "v1"
        },
        "AWSThinkboxDeadlineSpotEventPluginWorkerPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeInstances",
                            "ec2:DescribeTags"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ARN": "${ec2:SourceInstanceARN}"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": [
                            "sqs:GetQueueUrl",
                            "sqs:SendMessage"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sqs:*:*:DeadlineAWSComputeNodeState*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JS2KSV4B2",
            "PolicyName": "AWSThinkboxDeadlineSpotEventPluginWorkerPolicy",
            "VersionId": "v1"
        },
        "AWSTransferLoggingAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams",
                            "logs:CreateLogGroup",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAISIP5WGJX7VKXRQZO",
            "PolicyName": "AWSTransferLoggingAccess",
            "VersionId": "v1"
        },
        "AWSTransferReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "transfer:DescribeUser",
                            "transfer:DescribeServer",
                            "transfer:ListUsers",
                            "transfer:ListServers",
                            "transfer:TestIdentityProvider",
                            "transfer:ListTagsForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ITRAALBSI",
            "PolicyName": "AWSTransferReadOnlyAccess",
            "VersionId": "v1"
        },
        "AWSTrustedAdvisorReportingServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "organizations:DescribeOrganization",
                            "organizations:ListAWSServiceAccessForOrganization",
                            "organizations:ListAccounts",
                            "organizations:ListAccountsForParent",
                            "organizations:ListOrganizationalUnitsForParent",
                            "organizations:ListChildren",
                            "organizations:ListParents",
                            "organizations:DescribeOrganizationalUnit",
                            "organizations:DescribeAccount"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NCBYW5OGK",
            "PolicyName": "AWSTrustedAdvisorReportingServiceRolePolicy",
            "VersionId": "v2"
        },
        "AWSTrustedAdvisorServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "autoscaling:DescribeAccountLimits",
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribeLaunchConfigurations",
                            "cloudformation:DescribeAccountLimits",
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListStacks",
                            "cloudfront:ListDistributions",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetTrailStatus",
                            "dynamodb:DescribeLimits",
                            "dynamodb:DescribeTable",
                            "dynamodb:ListTables",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeReservedInstances",
                            "ec2:DescribeInstances",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeImages",
                            "ec2:DescribeVolumes",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeReservedInstancesOfferings",
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeVpnConnections",
                            "ec2:DescribeVpnGateways",
                            "ec2:DescribeLaunchTemplateVersions",
                            "elasticloadbalancing:DescribeAccountLimits",
                            "elasticloadbalancing:DescribeInstanceHealth",
                            "elasticloadbalancing:DescribeLoadBalancerAttributes",
                            "elasticloadbalancing:DescribeLoadBalancerPolicies",
                            "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "iam:GenerateCredentialReport",
                            "iam:GetAccountPasswordPolicy",
                            "iam:GetAccountSummary",
                            "iam:GetCredentialReport",
                            "iam:GetServerCertificate",
                            "iam:ListServerCertificates",
                            "kinesis:DescribeLimits",
                            "rds:DescribeAccountAttributes",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBEngineVersions",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBParameterGroups",
                            "rds:DescribeDBParameters",
                            "rds:DescribeDBSecurityGroups",
                            "rds:DescribeDBSnapshots",
                            "rds:DescribeDBSubnetGroups",
                            "rds:DescribeEngineDefaultParameters",
                            "rds:DescribeEvents",
                            "rds:DescribeOptionGroupOptions",
                            "rds:DescribeOptionGroups",
                            "rds:DescribeOrderableDBInstanceOptions",
                            "rds:DescribeReservedDBInstances",
                            "rds:DescribeReservedDBInstancesOfferings",
                            "rds:ListTagsForResource",
                            "redshift:DescribeClusters",
                            "redshift:DescribeReservedNodeOfferings",
                            "redshift:DescribeReservedNodes",
                            "route53:GetAccountLimit",
                            "route53:GetHealthCheck",
                            "route53:GetHostedZone",
                            "route53:ListHealthChecks",
                            "route53:ListHostedZones",
                            "route53:ListHostedZonesByName",
                            "route53:ListResourceRecordSets",
                            "s3:GetBucketAcl",
                            "s3:GetBucketPolicy",
                            "s3:GetBucketPolicyStatus",
                            "s3:GetBucketLocation",
                            "s3:GetBucketLogging",
                            "s3:GetBucketVersioning",
                            "s3:GetBucketPublicAccessBlock",
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets",
                            "ses:GetSendQuota",
                            "sqs:ListQueues",
                            "cloudwatch:GetMetricStatistics",
                            "ce:GetReservationPurchaseRecommendation",
                            "ce:GetSavingsPlansPurchaseRecommendation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJH4QJ2WMHBOB47BUE",
            "PolicyName": "AWSTrustedAdvisorServiceRolePolicy",
            "VersionId": "v8"
        },
        "AWSVPCS2SVpnServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm:ExportCertificate",
                            "acm:DescribeCertificate",
                            "acm:ListCertificates",
                            "acm-pca:DescribeCertificateAuthority"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "0"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ENV7ZVNT6",
            "PolicyName": "AWSVPCS2SVpnServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSVPCTransitGatewayServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DeleteNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "0"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJS2PBJSYV2EZW3MIQ",
            "PolicyName": "AWSVPCTransitGatewayServiceRolePolicy",
            "VersionId": "v1"
        },
        "AWSWAFConsoleFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "apigateway:GET",
                            "apigateway:SetWebACL",
                            "cloudfront:ListDistributions",
                            "cloudfront:ListDistributionsByWebACLId",
                            "cloudfront:UpdateDistribution",
                            "cloudwatch:GetMetricData",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "ec2:DescribeRegions",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:SetWebACL",
                            "appsync:ListGraphqlApis",
                            "appsync:SetWebACL",
                            "waf-regional:*",
                            "waf:*",
                            "wafv2:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4AZOTQ7KAT",
            "PolicyName": "AWSWAFConsoleFullAccess",
            "VersionId": "v2"
        },
        "AWSWAFConsoleReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "apigateway:GET",
                            "cloudfront:ListDistributions",
                            "cloudfront:ListDistributionsByWebACLId",
                            "cloudwatch:GetMetricData",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "ec2:DescribeRegions",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "appsync:ListGraphqlApis",
                            "waf-regional:Get*",
                            "waf-regional:List*",
                            "waf:Get*",
                            "waf:List*",
                            "wafv2:Describe*",
                            "wafv2:Get*",
                            "wafv2:List*",
                            "wafv2:CheckCapacity"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NCJLTIT64",
            "PolicyName": "AWSWAFConsoleReadOnlyAccess",
            "VersionId": "v3"
        },
        "AWSWAFFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "waf:*",
                            "waf-regional:*",
                            "wafv2:*",
                            "elasticloadbalancing:SetWebACL",
                            "apigateway:SetWebACL",
                            "appsync:SetWebACL"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJMIKIAFXZEGOLRH7C",
            "PolicyName": "AWSWAFFullAccess",
            "VersionId": "v5"
        },
        "AWSWAFReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "waf:Get*",
                            "waf:List*",
                            "waf-regional:Get*",
                            "waf-regional:List*",
                            "wafv2:Get*",
                            "wafv2:List*",
                            "wafv2:Describe*",
                            "wafv2:CheckCapacity"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAINZVDMX2SBF7EU2OC",
            "PolicyName": "AWSWAFReadOnlyAccess",
            "VersionId": "v4"
        },
        "AWSXRayDaemonWriteAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords",
                            "xray:GetSamplingRules",
                            "xray:GetSamplingTargets",
                            "xray:GetSamplingStatisticSummaries"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIOE47HSUE5AVBNEDM",
            "PolicyName": "AWSXRayDaemonWriteAccess",
            "VersionId": "v1"
        },
        "AWSXrayFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "xray:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQBYG45NSJMVQDB2K",
            "PolicyName": "AWSXrayFullAccess",
            "VersionId": "v1"
        },
        "AWSXrayReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "xray:GetSamplingRules",
                            "xray:GetSamplingTargets",
                            "xray:GetSamplingStatisticSummaries",
                            "xray:BatchGetTraces",
                            "xray:GetServiceGraph",
                            "xray:GetTraceGraph",
                            "xray:GetTraceSummaries",
                            "xray:GetGroups",
                            "xray:GetGroup",
                            "xray:ListTagsForResource",
                            "xray:GetTimeSeriesServiceStatistics",
                            "xray:GetInsightSummaries",
                            "xray:GetInsight",
                            "xray:GetInsightEvents",
                            "xray:GetInsightImpactGraph"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIH4OFXWPS6ZX6OPGQ",
            "PolicyName": "AWSXrayReadOnlyAccess",
            "VersionId": "v5"
        },
        "AWSXrayWriteOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords",
                            "xray:GetSamplingRules",
                            "xray:GetSamplingTargets",
                            "xray:GetSamplingStatisticSummaries"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIAACM4LMYSRGBCTM6",
            "PolicyName": "AWSXrayWriteOnlyAccess",
            "VersionId": "v2"
        },
        "AWS_ConfigRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm:DescribeCertificate",
                            "acm:ListCertificates",
                            "acm:ListTagsForCertificate",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingPolicies",
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribeLaunchConfigurations",
                            "autoscaling:DescribeLifecycleHooks",
                            "autoscaling:DescribePolicies",
                            "autoscaling:DescribeScheduledActions",
                            "autoscaling:DescribeTags",
                            "backup:ListBackupPlans",
                            "backup:ListBackupSelections",
                            "backup:GetBackupSelection",
                            "cloudfront:ListTagsForResource",
                            "cloudformation:DescribeType",
                            "cloudformation:ListTypes",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetEventSelectors",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:ListTags",
                            "cloudwatch:DescribeAlarms",
                            "codepipeline:GetPipeline",
                            "codepipeline:GetPipelineState",
                            "codepipeline:ListPipelines",
                            "config:BatchGet*",
                            "config:Describe*",
                            "config:Get*",
                            "config:List*",
                            "config:Put*",
                            "config:Select*",
                            "dax:DescribeClusters",
                            "dms:DescribeReplicationInstances",
                            "dynamodb:DescribeContinuousBackups",
                            "dynamodb:DescribeLimits",
                            "dynamodb:DescribeTable",
                            "dynamodb:ListTables",
                            "dynamodb:ListTagsOfResource",
                            "ec2:Describe*",
                            "ec2:GetEbsEncryptionByDefault",
                            "eks:DescribeCluster",
                            "eks:ListClusters",
                            "elasticache:DescribeCacheClusters",
                            "elasticache:DescribeReplicationGroups",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticloadbalancing:DescribeListeners",
                            "elasticloadbalancing:DescribeLoadBalancerAttributes",
                            "elasticloadbalancing:DescribeLoadBalancerPolicies",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeRules",
                            "elasticloadbalancing:DescribeTags",
                            "elasticmapreduce:DescribeCluster",
                            "elasticmapreduce:DescribeSecurityConfiguration",
                            "elasticmapreduce:GetBlockPublicAccessConfiguration",
                            "elasticmapreduce:ListClusters",
                            "elasticmapreduce:ListInstances",
                            "es:DescribeElasticsearchDomain",
                            "es:DescribeElasticsearchDomains",
                            "es:ListDomainNames",
                            "es:ListTags",
                            "guardduty:GetDetector",
                            "guardduty:GetFindings",
                            "guardduty:GetMasterAccount",
                            "guardduty:ListDetectors",
                            "guardduty:ListFindings",
                            "iam:GenerateCredentialReport",
                            "iam:GetAccountAuthorizationDetails",
                            "iam:GetAccountPasswordPolicy",
                            "iam:GetAccountSummary",
                            "iam:GetCredentialReport",
                            "iam:GetGroup",
                            "iam:GetGroupPolicy",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:GetUser",
                            "iam:GetUserPolicy",
                            "iam:ListAttachedGroupPolicies",
                            "iam:ListAttachedRolePolicies",
                            "iam:ListAttachedUserPolicies",
                            "iam:ListEntitiesForPolicy",
                            "iam:ListGroupPolicies",
                            "iam:ListGroupsForUser",
                            "iam:ListInstanceProfilesForRole",
                            "iam:ListPolicyVersions",
                            "iam:ListRolePolicies",
                            "iam:ListUserPolicies",
                            "iam:ListVirtualMFADevices",
                            "kms:DescribeKey",
                            "kms:GetKeyPolicy",
                            "kms:GetKeyRotationStatus",
                            "kms:ListKeys",
                            "kms:ListResourceTags",
                            "lambda:GetAlias",
                            "lambda:GetFunction",
                            "lambda:GetPolicy",
                            "lambda:ListAliases",
                            "lambda:ListFunctions",
                            "logs:DescribeLogGroups",
                            "organizations:DescribeOrganization",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBClusterSnapshotAttributes",
                            "rds:DescribeDBClusterSnapshots",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBSecurityGroups",
                            "rds:DescribeDBSnapshotAttributes",
                            "rds:DescribeDBSnapshots",
                            "rds:DescribeDBSubnetGroups",
                            "rds:DescribeEventSubscriptions",
                            "rds:ListTagsForResource",
                            "redshift:DescribeClusterParameterGroups",
                            "redshift:DescribeClusterParameters",
                            "redshift:DescribeClusterSecurityGroups",
                            "redshift:DescribeClusterSnapshots",
                            "redshift:DescribeClusterSubnetGroups",
                            "redshift:DescribeClusters",
                            "redshift:DescribeEventSubscriptions",
                            "redshift:DescribeLoggingStatus",
                            "s3:GetAccelerateConfiguration",
                            "s3:GetAccountPublicAccessBlock",
                            "s3:GetBucketAcl",
                            "s3:GetBucketCORS",
                            "s3:GetBucketLocation",
                            "s3:GetBucketLogging",
                            "s3:GetBucketNotification",
                            "s3:GetBucketObjectLockConfiguration",
                            "s3:GetBucketPolicy",
                            "s3:GetBucketPublicAccessBlock",
                            "s3:GetBucketRequestPayment",
                            "s3:GetBucketTagging",
                            "s3:GetBucketVersioning",
                            "s3:GetBucketWebsite",
                            "s3:GetEncryptionConfiguration",
                            "s3:GetLifecycleConfiguration",
                            "s3:GetReplicationConfiguration",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "sagemaker:DescribeEndpointConfig",
                            "sagemaker:DescribeNotebookInstance",
                            "sagemaker:ListEndpointConfigs",
                            "sagemaker:ListNotebookInstances",
                            "secretsmanager:ListSecrets",
                            "secretsmanager:ListSecretVersionIds",
                            "securityhub:describeHub",
                            "shield:DescribeDRTAccess",
                            "shield:DescribeProtection",
                            "shield:DescribeSubscription",
                            "sns:GetTopicAttributes",
                            "sns:ListSubscriptions",
                            "sns:ListTagsForResource",
                            "sns:ListTopics",
                            "sqs:GetQueueAttributes",
                            "sqs:ListQueues",
                            "sqs:ListQueueTags",
                            "ssm:DescribeAutomationExecutions",
                            "ssm:DescribeDocument",
                            "ssm:GetAutomationExecution",
                            "ssm:GetDocument",
                            "storagegateway:ListGateways",
                            "storagegateway:ListVolumes",
                            "support:DescribeCases",
                            "waf:GetLoggingConfiguration",
                            "waf:GetWebACL",
                            "wafv2:GetLoggingConfiguration",
                            "waf-regional:GetLoggingConfiguration",
                            "waf-regional:GetWebACL",
                            "waf-regional:GetWebACLForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4PP7QZ4FBG",
            "PolicyName": "AWS_ConfigRole",
            "VersionId": "v1"
        },
        "AWS_Config_Role": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm:DescribeCertificate",
                            "acm:ListCertificates",
                            "acm:ListTagsForCertificate",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingPolicies",
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribeLaunchConfigurations",
                            "autoscaling:DescribeLifecycleHooks",
                            "autoscaling:DescribePolicies",
                            "autoscaling:DescribeScheduledActions",
                            "autoscaling:DescribeTags",
                            "backup:ListBackupPlans",
                            "backup:ListBackupSelections",
                            "backup:GetBackupSelection",
                            "cloudfront:ListTagsForResource",
                            "cloudformation:describeType",
                            "cloudformation:listTypes",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetEventSelectors",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:ListTags",
                            "cloudwatch:DescribeAlarms",
                            "codepipeline:GetPipeline",
                            "codepipeline:GetPipelineState",
                            "codepipeline:ListPipelines",
                            "config:BatchGet*",
                            "config:Describe*",
                            "config:Get*",
                            "config:List*",
                            "config:Put*",
                            "config:Select*",
                            "dax:DescribeClusters",
                            "dms:DescribeReplicationInstances",
                            "dynamodb:DescribeContinuousBackups",
                            "dynamodb:DescribeLimits",
                            "dynamodb:DescribeTable",
                            "dynamodb:ListTables",
                            "dynamodb:ListTagsOfResource",
                            "ec2:Describe*",
                            "ec2:GetEbsEncryptionByDefault",
                            "eks:DescribeCluster",
                            "eks:ListClusters",
                            "elasticache:DescribeCacheClusters",
                            "elasticache:DescribeReplicationGroups",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticloadbalancing:DescribeListeners",
                            "elasticloadbalancing:DescribeLoadBalancerAttributes",
                            "elasticloadbalancing:DescribeLoadBalancerPolicies",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeRules",
                            "elasticloadbalancing:DescribeTags",
                            "elasticmapreduce:DescribeCluster",
                            "elasticmapreduce:DescribeSecurityConfiguration",
                            "elasticmapreduce:GetBlockPublicAccessConfiguration",
                            "elasticmapreduce:ListClusters",
                            "elasticmapreduce:ListInstances",
                            "es:DescribeElasticsearchDomain",
                            "es:DescribeElasticsearchDomains",
                            "es:ListDomainNames",
                            "es:ListTags",
                            "guardduty:GetDetector",
                            "guardduty:GetFindings",
                            "guardduty:GetMasterAccount",
                            "guardduty:ListDetectors",
                            "guardduty:ListFindings",
                            "iam:GenerateCredentialReport",
                            "iam:GetAccountAuthorizationDetails",
                            "iam:GetAccountPasswordPolicy",
                            "iam:GetAccountSummary",
                            "iam:GetCredentialReport",
                            "iam:GetGroup",
                            "iam:GetGroupPolicy",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:GetUser",
                            "iam:GetUserPolicy",
                            "iam:ListAttachedGroupPolicies",
                            "iam:ListAttachedRolePolicies",
                            "iam:ListAttachedUserPolicies",
                            "iam:ListEntitiesForPolicy",
                            "iam:ListGroupPolicies",
                            "iam:ListGroupsForUser",
                            "iam:ListInstanceProfilesForRole",
                            "iam:ListPolicyVersions",
                            "iam:ListRolePolicies",
                            "iam:ListUserPolicies",
                            "iam:ListVirtualMFADevices",
                            "kms:DescribeKey",
                            "kms:GetKeyPolicy",
                            "kms:GetKeyRotationStatus",
                            "kms:ListKeys",
                            "kms:ListResourceTags",
                            "lambda:GetAlias",
                            "lambda:GetFunction",
                            "lambda:GetPolicy",
                            "lambda:ListAliases",
                            "lambda:ListFunctions",
                            "logs:DescribeLogGroups",
                            "organizations:DescribeOrganization",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBClusterSnapshotAttributes",
                            "rds:DescribeDBClusterSnapshots",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBSecurityGroups",
                            "rds:DescribeDBSnapshotAttributes",
                            "rds:DescribeDBSnapshots",
                            "rds:DescribeDBSubnetGroups",
                            "rds:DescribeEventSubscriptions",
                            "rds:ListTagsForResource",
                            "redshift:DescribeClusterParameterGroups",
                            "redshift:DescribeClusterParameters",
                            "redshift:DescribeClusterSecurityGroups",
                            "redshift:DescribeClusterSnapshots",
                            "redshift:DescribeClusterSubnetGroups",
                            "redshift:DescribeClusters",
                            "redshift:DescribeEventSubscriptions",
                            "redshift:DescribeLoggingStatus",
                            "s3:GetAccelerateConfiguration",
                            "s3:GetAccountPublicAccessBlock",
                            "s3:GetBucketAcl",
                            "s3:GetBucketCORS",
                            "s3:GetBucketLocation",
                            "s3:GetBucketLogging",
                            "s3:GetBucketNotification",
                            "s3:GetBucketObjectLockConfiguration",
                            "s3:GetBucketPolicy",
                            "s3:GetBucketPublicAccessBlock",
                            "s3:GetBucketRequestPayment",
                            "s3:GetBucketTagging",
                            "s3:GetBucketVersioning",
                            "s3:GetBucketWebsite",
                            "s3:GetEncryptionConfiguration",
                            "s3:GetLifecycleConfiguration",
                            "s3:GetReplicationConfiguration",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "sagemaker:DescribeEndpointConfig",
                            "sagemaker:DescribeNotebookInstance",
                            "sagemaker:ListEndpointConfigs",
                            "sagemaker:ListNotebookInstances",
                            "secretsmanager:ListSecrets",
                            "secretsmanager:ListSecretVersionIds",
                            "securityhub:describeHub",
                            "shield:DescribeDRTAccess",
                            "shield:DescribeProtection",
                            "shield:DescribeSubscription",
                            "sns:GetTopicAttributes",
                            "sns:ListSubscriptions",
                            "sns:ListTagsForResource",
                            "sns:ListTopics",
                            "sqs:GetQueueAttributes",
                            "sqs:ListQueues",
                            "sqs:ListQueueTags",
                            "ssm:DescribeAutomationExecutions",
                            "ssm:DescribeDocument",
                            "ssm:GetAutomationExecution",
                            "ssm:GetDocument",
                            "storagegateway:ListGateways",
                            "storagegateway:ListVolumes",
                            "support:DescribeCases",
                            "waf:GetLoggingConfiguration",
                            "waf:GetWebACL",
                            "wafv2:GetLoggingConfiguration",
                            "waf-regional:GetLoggingConfiguration",
                            "waf-regional:GetWebACL",
                            "waf-regional:GetWebACLForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4L4CLM3T52",
            "PolicyName": "AWS_Config_Role",
            "VersionId": "v1"
        },
        "AccessAnalyzerServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeAddresses",
                            "ec2:DescribeByoipCidrs",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcs",
                            "iam:GetRole",
                            "iam:ListRoles",
                            "kms:DescribeKey",
                            "kms:GetKeyPolicy",
                            "kms:ListGrants",
                            "kms:ListKeyPolicies",
                            "kms:ListKeys",
                            "lambda:GetLayerVersionPolicy",
                            "lambda:GetPolicy",
                            "lambda:ListAliases",
                            "lambda:ListFunctions",
                            "lambda:ListLayers",
                            "lambda:ListLayerVersions",
                            "lambda:ListVersionsByFunction",
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "organizations:DescribeOrganizationalUnit",
                            "organizations:ListAccounts",
                            "organizations:ListAccountsForParent",
                            "organizations:ListAWSServiceAccessForOrganization",
                            "organizations:ListChildren",
                            "organizations:ListDelegatedAdministrators",
                            "organizations:ListOrganizationalUnitsForParent",
                            "organizations:ListParents",
                            "organizations:ListRoots",
                            "s3:GetAccessPoint",
                            "s3:GetAccessPointPolicy",
                            "s3:GetAccessPointPolicyStatus",
                            "s3:GetAccountPublicAccessBlock",
                            "s3:GetBucketAcl",
                            "s3:GetBucketLocation",
                            "s3:GetBucketPolicyStatus",
                            "s3:GetBucketPolicy",
                            "s3:GetBucketPublicAccessBlock",
                            "s3:ListAccessPoints",
                            "s3:ListAllMyBuckets",
                            "sns:GetTopicAttributes",
                            "sns:ListTopics",
                            "secretsmanager:DescribeSecret",
                            "secretsmanager:GetResourcePolicy",
                            "secretsmanager:ListSecrets",
                            "sqs:GetQueueAttributes",
                            "sqs:ListQueues"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CAIXDDRI2",
            "PolicyName": "AccessAnalyzerServiceRolePolicy",
            "VersionId": "v5"
        },
        "AdministratorAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "*",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIWMBCKSKIEE64ZLYK",
            "PolicyName": "AdministratorAccess",
            "VersionId": "v1"
        },
        "AdministratorAccess-Amplify": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:CreateChangeSet",
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStackResource",
                            "cloudformation:DescribeStackResources",
                            "cloudformation:DescribeStacks",
                            "cloudformation:ExecuteChangeSet",
                            "cloudformation:GetTemplate",
                            "cloudformation:UpdateStack"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/amplify-*"
                        ],
                        "Sid": "CLICloudformationPolicy"
                    },
                    {
                        "Action": [
                            "iam:CreateRole",
                            "iam:ListRoleTags",
                            "iam:TagRole",
                            "iam:AttachRolePolicy",
                            "iam:CreatePolicy",
                            "iam:DeletePolicy",
                            "iam:DeleteRole",
                            "iam:DeleteRolePolicy",
                            "iam:DetachRolePolicy",
                            "iam:PutRolePolicy",
                            "iam:UpdateRole",
                            "iam:GetRole",
                            "iam:GetPolicy",
                            "iam:GetRolePolicy",
                            "iam:PassRole",
                            "appsync:CreateApiKey",
                            "appsync:CreateDataSource",
                            "appsync:CreateFunction",
                            "appsync:CreateResolver",
                            "appsync:CreateType",
                            "appsync:DeleteApiKey",
                            "appsync:DeleteDataSource",
                            "appsync:DeleteFunction",
                            "appsync:DeleteResolver",
                            "appsync:DeleteType",
                            "appsync:GetDataSource",
                            "appsync:GetFunction",
                            "appsync:GetIntrospectionSchema",
                            "appsync:GetResolver",
                            "appsync:GetSchemaCreationStatus",
                            "appsync:GetType",
                            "appsync:GraphQL",
                            "appsync:ListApiKeys",
                            "appsync:ListDataSources",
                            "appsync:ListFunctions",
                            "appsync:ListGraphqlApis",
                            "appsync:ListResolvers",
                            "appsync:ListResolversByFunction",
                            "appsync:ListTypes",
                            "appsync:StartSchemaCreation",
                            "appsync:UpdateApiKey",
                            "appsync:UpdateDataSource",
                            "appsync:UpdateFunction",
                            "appsync:UpdateResolver",
                            "appsync:UpdateType",
                            "appsync:TagResource",
                            "appsync:CreateGraphqlApi",
                            "appsync:DeleteGraphqlApi",
                            "appsync:GetGraphqlApi",
                            "appsync:ListTagsForResource",
                            "appsync:UpdateGraphqlApi",
                            "apigateway:DELETE",
                            "apigateway:GET",
                            "apigateway:PATCH",
                            "apigateway:POST",
                            "apigateway:PUT",
                            "cognito-idp:CreateUserPool",
                            "cognito-identity:CreateIdentityPool",
                            "cognito-identity:DeleteIdentityPool",
                            "cognito-identity:DescribeIdentity",
                            "cognito-identity:DescribeIdentityPool",
                            "cognito-identity:SetIdentityPoolRoles",
                            "cognito-identity:GetIdentityPoolRoles",
                            "cognito-identity:UpdateIdentityPool",
                            "cognito-idp:CreateUserPoolClient",
                            "cognito-idp:DeleteGroup",
                            "cognito-idp:DeleteUserPool",
                            "cognito-idp:DeleteUserPoolClient",
                            "cognito-idp:DescribeUserPool",
                            "cognito-idp:DescribeUserPoolClient",
                            "cognito-idp:ListTagsForResource",
                            "cognito-idp:ListUserPoolClients",
                            "cognito-idp:UpdateUserPoolClient",
                            "cognito-idp:CreateGroup",
                            "cognito-idp:DeleteGroup",
                            "cognito-identity:TagResource",
                            "cognito-idp:TagResource",
                            "cognito-idp:UpdateUserPool",
                            "lambda:AddPermission",
                            "lambda:CreateFunction",
                            "lambda:DeleteFunction",
                            "lambda:GetFunction",
                            "lambda:GetFunctionConfiguration",
                            "lambda:InvokeAsync",
                            "lambda:InvokeFunction",
                            "lambda:RemovePermission",
                            "lambda:UpdateFunctionCode",
                            "lambda:UpdateFunctionConfiguration",
                            "lambda:ListTags",
                            "lambda:TagResource",
                            "lambda:UntagResource",
                            "lambda:DeleteFunction",
                            "lambda:AddLayerVersionPermission",
                            "lambda:CreateEventSourceMapping",
                            "lambda:DeleteEventSourceMapping",
                            "lambda:DeleteLayerVersion",
                            "lambda:GetEventSourceMapping",
                            "lambda:GetLayerVersion",
                            "lambda:ListEventSourceMappings",
                            "lambda:ListLayerVersions",
                            "lambda:PublishLayerVersion",
                            "lambda:RemoveLayerVersionPermission",
                            "dynamodb:CreateTable",
                            "dynamodb:DeleteItem",
                            "dynamodb:DeleteTable",
                            "dynamodb:DescribeContinuousBackups",
                            "dynamodb:DescribeTable",
                            "dynamodb:DescribeTimeToLive",
                            "dynamodb:ListStreams",
                            "dynamodb:PutItem",
                            "dynamodb:TagResource",
                            "dynamodb:ListTagsOfResource",
                            "dynamodb:UpdateContinuousBackups",
                            "dynamodb:UpdateItem",
                            "dynamodb:UpdateTable",
                            "dynamodb:UpdateTimeToLive",
                            "s3:CreateBucket",
                            "s3:ListBucket",
                            "s3:PutBucketAcl",
                            "s3:PutBucketCORS",
                            "s3:PutBucketNotification",
                            "s3:PutBucketPolicy",
                            "s3:PutBucketWebsite",
                            "s3:PutObjectAcl",
                            "cloudfront:CreateCloudFrontOriginAccessIdentity",
                            "cloudfront:CreateDistribution",
                            "cloudfront:DeleteCloudFrontOriginAccessIdentity",
                            "cloudfront:DeleteDistribution",
                            "cloudfront:GetCloudFrontOriginAccessIdentity",
                            "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
                            "cloudfront:GetDistribution",
                            "cloudfront:GetDistributionConfig",
                            "cloudfront:TagResource",
                            "cloudfront:UntagResource",
                            "cloudfront:UpdateCloudFrontOriginAccessIdentity",
                            "cloudfront:UpdateDistribution",
                            "events:DeleteRule",
                            "events:DescribeRule",
                            "events:ListRuleNamesByTarget",
                            "events:PutRule",
                            "events:PutTargets",
                            "events:RemoveTargets",
                            "mobiletargeting:GetApp",
                            "kinesis:AddTagsToStream",
                            "kinesis:CreateStream",
                            "kinesis:DeleteStream",
                            "kinesis:DescribeStream",
                            "kinesis:PutRecords"
                        ],
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:CalledVia": [
                                    "cloudformation.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CLIManageviaCFNPolicy"
                    },
                    {
                        "Action": [
                            "appsync:GetIntrospectionSchema",
                            "appsync:GraphQL",
                            "s3:PutObject",
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:DeleteBucket",
                            "s3:DeleteBucketPolicy",
                            "s3:DeleteBucketWebsite",
                            "s3:DeleteObject",
                            "s3:GetBucketLocation",
                            "s3:ListAllMyBuckets",
                            "amplify:CreateApp",
                            "amplify:CreateBackendEnvironment",
                            "amplify:GetApp",
                            "amplify:GetBackendEnvironment",
                            "amplify:ListApps",
                            "amplify:ListBackendEnvironments",
                            "amplify:CreateBranch",
                            "amplify:GetBranch",
                            "amplify:UpdateApp",
                            "amplify:ListBranches",
                            "amplify:ListDomainAssociations",
                            "amplify:DeleteBranch",
                            "amplify:DeleteApp",
                            "amplify:DeleteBackendEnvironment",
                            "amplifybackend: *",
                            "cognito-idp:AdminAddUserToGroup",
                            "cognito-idp:AdminCreateUser",
                            "cognito-idp:CreateGroup",
                            "cognito-idp:DeleteGroup",
                            "cognito-idp:DeleteUser",
                            "cognito-idp:ListUsers",
                            "cognito-idp:AdminGetUser",
                            "cognito-idp:ListUsersInGroup",
                            "cognito-idp:AdminDisableUser",
                            "cognito-idp:AdminRemoveUserFromGroup",
                            "cognito-idp:AdminResetUserPassword",
                            "cognito-idp:AdminListGroupsForUser",
                            "cognito-idp:ListGroups",
                            "cognito-idp:AdminDeleteUser",
                            "cognito-idp:AdminListUserAuthEvents",
                            "cognito-idp:AdminDeleteUser",
                            "cognito-idp:AdminConfirmSignUp",
                            "cognito-idp:AdminEnableUser",
                            "cognito-idp:AdminUpdateUserAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CLISDKCalls"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4AML23RALR",
            "PolicyName": "AdministratorAccess-Amplify",
            "VersionId": "v1"
        },
        "AlexaForBusinessDeviceSetup": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "a4b:RegisterDevice",
                            "a4b:CompleteRegistration",
                            "a4b:SearchDevices",
                            "a4b:SearchNetworkProfiles",
                            "a4b:GetNetworkProfile",
                            "a4b:PutDeviceSetupEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "secretsmanager:GetSecretValue"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:secretsmanager:*:*:secret:A4BNetworkProfile*",
                        "Sid": "A4bDeviceSetupAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIUEFZFUTDTY4HGFU2",
            "PolicyName": "AlexaForBusinessDeviceSetup",
            "VersionId": "v2"
        },
        "AlexaForBusinessFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "a4b:*",
                            "kms:DescribeKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "*a4b.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/*a4b.amazonaws.com/AWSServiceRoleForAlexaForBusiness*"
                    },
                    {
                        "Action": [
                            "secretsmanager:GetSecretValue",
                            "secretsmanager:DeleteSecret",
                            "secretsmanager:UpdateSecret"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:secretsmanager:*:*:secret:A4B*"
                    },
                    {
                        "Action": "secretsmanager:CreateSecret",
                        "Condition": {
                            "StringLike": {
                                "secretsmanager:Name": "A4B*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAILUT3JGG7WRIMVNH2",
            "PolicyName": "AlexaForBusinessFullAccess",
            "VersionId": "v5"
        },
        "AlexaForBusinessGatewayExecution": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "a4b:Send*",
                            "a4b:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:a4b:*:*:gateway/*"
                    },
                    {
                        "Action": [
                            "sqs:ReceiveMessage",
                            "sqs:DeleteMessage"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sqs:*:*:dd-*",
                            "arn:aws:sqs:*:*:sd-*"
                        ]
                    },
                    {
                        "Action": [
                            "a4b:List*",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DescribeLogGroups",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI3LZ7YP7KHLG4DT2Q",
            "PolicyName": "AlexaForBusinessGatewayExecution",
            "VersionId": "v1"
        },
        "AlexaForBusinessLifesizeDelegatedAccessPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "a4b:DisassociateDeviceFromRoom",
                            "a4b:DeleteDevice",
                            "a4b:UpdateDevice",
                            "a4b:GetDevice"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:a4b:us-east-1:*:device/*/*:A2IWO7UEGWV4TL"
                        ]
                    },
                    {
                        "Action": [
                            "a4b:RegisterAVSDevice"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "a4b:amazonId": [
                                    "A2IWO7UEGWV4TL"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "a4b:SearchDevices"
                        ],
                        "Condition": {
                            "ForAllValues:StringLike": {
                                "a4b:filters_deviceType": [
                                    "*A2IWO7UEGWV4TL"
                                ]
                            },
                            "Null": {
                                "a4b:filters_deviceType": "false"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "a4b:AssociateDeviceWithRoom"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:a4b:us-east-1:*:device/*/*:A2IWO7UEGWV4TL",
                            "arn:aws:a4b:us-east-1:*:room/*"
                        ]
                    },
                    {
                        "Action": [
                            "a4b:GetRoom",
                            "a4b:GetAddressBook",
                            "a4b:SearchRooms",
                            "a4b:CreateContact",
                            "a4b:CreateRoom",
                            "a4b:UpdateContact",
                            "a4b:ListConferenceProviders",
                            "a4b:DeleteRoom",
                            "a4b:CreateAddressBook",
                            "a4b:DisassociateContactFromAddressBook",
                            "a4b:CreateConferenceProvider",
                            "a4b:PutConferencePreference",
                            "a4b:DeleteAddressBook",
                            "a4b:AssociateContactWithAddressBook",
                            "a4b:DeleteContact",
                            "a4b:SearchProfiles",
                            "a4b:UpdateProfile",
                            "a4b:GetContact"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:DescribeKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:kms:*:*:key/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4HXQBRRIQV",
            "PolicyName": "AlexaForBusinessLifesizeDelegatedAccessPolicy",
            "VersionId": "v2"
        },
        "AlexaForBusinessNetworkProfileServicePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm-pca:GetCertificate",
                            "acm-pca:IssueCertificate",
                            "acm-pca:RevokeCertificate"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/a4b": "enabled"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "A4bPcaTagAccess"
                    },
                    {
                        "Action": [
                            "secretsmanager:GetSecretValue"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:secretsmanager:*:*:secret:A4BNetworkProfile*",
                        "Sid": "A4bNetworkProfileAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI7GYBNGIZU2EDSMGQ",
            "PolicyName": "AlexaForBusinessNetworkProfileServicePolicy",
            "VersionId": "v2"
        },
        "AlexaForBusinessPolyDelegatedAccessPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "a4b:DisassociateDeviceFromRoom",
                            "a4b:DeleteDevice",
                            "a4b:UpdateDevice",
                            "a4b:GetDevice"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:a4b:us-east-1:*:device/*/*:A238TWV36W3S92",
                            "arn:aws:a4b:us-east-1:*:device/*/*:A1FUZ1SC53VJXD"
                        ]
                    },
                    {
                        "Action": [
                            "a4b:RegisterAVSDevice"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "a4b:amazonId": [
                                    "A238TWV36W3S92",
                                    "A1FUZ1SC53VJXD"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "a4b:SearchDevices"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "a4b:AssociateDeviceWithRoom"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:a4b:us-east-1:*:device/*/*:A238TWV36W3S92",
                            "arn:aws:a4b:us-east-1:*:device/*/*:A1FUZ1SC53VJXD",
                            "arn:aws:a4b:us-east-1:*:room/*"
                        ]
                    },
                    {
                        "Action": [
                            "a4b:GetRoom",
                            "a4b:SearchRooms",
                            "a4b:CreateRoom",
                            "a4b:GetProfile",
                            "a4b:SearchSkillGroups",
                            "a4b:DisassociateSkillGroupFromRoom",
                            "a4b:AssociateSkillGroupWithRoom",
                            "a4b:GetSkillGroup",
                            "a4b:SearchProfiles",
                            "a4b:GetAddressBook",
                            "a4b:UpdateRoom"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FIHC2UP5Z",
            "PolicyName": "AlexaForBusinessPolyDelegatedAccessPolicy",
            "VersionId": "v1"
        },
        "AlexaForBusinessReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "a4b:Get*",
                            "a4b:List*",
                            "a4b:Search*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI6BKSTB4XMLPBFFJ2",
            "PolicyName": "AlexaForBusinessReadOnlyAccess",
            "VersionId": "v3"
        },
        "AmazonAPIGatewayAdministrator": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "apigateway:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:apigateway:*::/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ4PT6VY5NLKTNUYSI",
            "PolicyName": "AmazonAPIGatewayAdministrator",
            "VersionId": "v1"
        },
        "AmazonAPIGatewayInvokeFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "execute-api:Invoke",
                            "execute-api:ManageConnections"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:execute-api:*:*:*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIIWAX2NOOQJ4AIEQ6",
            "PolicyName": "AmazonAPIGatewayInvokeFullAccess",
            "VersionId": "v2"
        },
        "AmazonAPIGatewayPushToCloudWatchLogs": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:PutLogEvents",
                            "logs:GetLogEvents",
                            "logs:FilterLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIK4GFO7HLKYN64ASK",
            "PolicyName": "AmazonAPIGatewayPushToCloudWatchLogs",
            "VersionId": "v1"
        },
        "AmazonAppFlowFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "appflow:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:ListRoles",
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ListRolesForRedshift"
                    },
                    {
                        "Action": [
                            "kms:ListKeys",
                            "kms:DescribeKey",
                            "kms:ListAliases"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "KMSListAccess"
                    },
                    {
                        "Action": [
                            "kms:CreateGrant"
                        ],
                        "Condition": {
                            "Bool": {
                                "kms:GrantIsForAWSResource": "true"
                            },
                            "StringLike": {
                                "kms:ViaService": "appflow.*.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "KMSGrantAccess"
                    },
                    {
                        "Action": [
                            "kms:ListGrants"
                        ],
                        "Condition": {
                            "StringLike": {
                                "kms:ViaService": "appflow.*.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "KMSListGrantAccess"
                    },
                    {
                        "Action": [
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "s3:GetBucketLocation",
                            "s3:GetBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "S3ReadAccess"
                    },
                    {
                        "Action": [
                            "s3:PutBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::appflow-*",
                        "Sid": "S3PutBucketPolicyAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4PGBU2ALC4",
            "PolicyName": "AmazonAppFlowFullAccess",
            "VersionId": "v1"
        },
        "AmazonAppFlowReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "appflow:DescribeConnectors",
                            "appflow:DescribeConnectorProfiles",
                            "appflow:DescribeFlows",
                            "appflow:DescribeFlowExecution",
                            "appflow:DescribeConnectorFields",
                            "appflow:ListConnectorFields",
                            "appflow:ListTagsForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CCGEQPIQI",
            "PolicyName": "AmazonAppFlowReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonAppStreamFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "appstream:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "application-autoscaling:DeleteScalingPolicy",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingPolicies",
                            "application-autoscaling:PutScalingPolicy",
                            "application-autoscaling:RegisterScalableTarget",
                            "application-autoscaling:DescribeScheduledActions",
                            "application-autoscaling:PutScheduledAction",
                            "application-autoscaling:DeleteScheduledAction"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:PutMetricAlarm"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpcEndpoints"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:ListRoles",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "application-autoscaling.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/service-role/ApplicationAutoScalingForAmazonAppStreamAccess"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "appstream.application-autoscaling.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/appstream.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_AppStreamFleet"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJLZZXU2YQVGL4QDNC",
            "PolicyName": "AmazonAppStreamFullAccess",
            "VersionId": "v6"
        },
        "AmazonAppStreamReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "appstream:Get*",
                            "appstream:List*",
                            "appstream:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJXIFDGB4VBX23DX7K",
            "PolicyName": "AmazonAppStreamReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonAppStreamServiceAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:CreateNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeSubnets",
                            "ec2:AssociateAddress",
                            "ec2:DisassociateAddress",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeVpcEndpoints",
                            "s3:ListAllMyBuckets",
                            "ds:DescribeDirectories"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:ListBucket",
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:DeleteObject",
                            "s3:GetObjectVersion",
                            "s3:DeleteObjectVersion",
                            "s3:GetBucketPolicy",
                            "s3:PutBucketPolicy",
                            "s3:PutEncryptionConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::appstream2-36fb080bb8-*",
                            "arn:aws:s3:::appstream-app-settings-*",
                            "arn:aws:s3:::appstream-logs-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAISBRZ7LMMCBYEF3SE",
            "PolicyName": "AmazonAppStreamServiceAccess",
            "VersionId": "v8"
        },
        "AmazonAthenaFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "athena:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "glue:CreateDatabase",
                            "glue:DeleteDatabase",
                            "glue:GetDatabase",
                            "glue:GetDatabases",
                            "glue:UpdateDatabase",
                            "glue:CreateTable",
                            "glue:DeleteTable",
                            "glue:BatchDeleteTable",
                            "glue:UpdateTable",
                            "glue:GetTable",
                            "glue:GetTables",
                            "glue:BatchCreatePartition",
                            "glue:CreatePartition",
                            "glue:DeletePartition",
                            "glue:BatchDeletePartition",
                            "glue:UpdatePartition",
                            "glue:GetPartition",
                            "glue:GetPartitions",
                            "glue:BatchGetPartition"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetBucketLocation",
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:ListBucketMultipartUploads",
                            "s3:ListMultipartUploadParts",
                            "s3:AbortMultipartUpload",
                            "s3:CreateBucket",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::aws-athena-query-results-*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::athena-examples*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:GetBucketLocation",
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "sns:ListTopics",
                            "sns:GetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "lakeformation:GetDataAccess"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIPJMLMD4C7RYZ6XCK",
            "PolicyName": "AmazonAthenaFullAccess",
            "VersionId": "v6"
        },
        "AmazonAugmentedAIFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sagemaker:*HumanLoop",
                            "sagemaker:*HumanLoops",
                            "sagemaker:*FlowDefinition",
                            "sagemaker:*FlowDefinitions",
                            "sagemaker:*HumanTaskUi",
                            "sagemaker:*HumanTaskUis"
                        ],
                        "Condition": {
                            "StringEqualsIfExists": {
                                "sagemaker:WorkteamType": [
                                    "private-crowd",
                                    "vendor-crowd"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "sagemaker.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4HJOEBWQWI",
            "PolicyName": "AmazonAugmentedAIFullAccess",
            "VersionId": "v1"
        },
        "AmazonAugmentedAIHumanLoopFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sagemaker:*HumanLoop",
                            "sagemaker:*HumanLoops"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4DLDNVPZG4",
            "PolicyName": "AmazonAugmentedAIHumanLoopFullAccess",
            "VersionId": "v1"
        },
        "AmazonAugmentedAIIntegratedAPIAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sagemaker:*HumanLoop",
                            "sagemaker:*HumanLoops",
                            "sagemaker:*FlowDefinition",
                            "sagemaker:*FlowDefinitions",
                            "sagemaker:*HumanTaskUi",
                            "sagemaker:*HumanTaskUis"
                        ],
                        "Condition": {
                            "StringEqualsIfExists": {
                                "sagemaker:WorkteamType": [
                                    "private-crowd",
                                    "vendor-crowd"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "textract:AnalyzeDocument"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "rekognition:DetectModerationLabels"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "sagemaker.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4A7KC4RFTV",
            "PolicyName": "AmazonAugmentedAIIntegratedAPIAccess",
            "VersionId": "v1"
        },
        "AmazonBraketFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::amazon-braket-*"
                    },
                    {
                        "Action": [
                            "logs:Describe*",
                            "logs:Get*",
                            "logs:List*",
                            "logs:StartQuery",
                            "logs:StopQuery",
                            "logs:TestMetricFilter",
                            "logs:FilterLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/braket:*"
                    },
                    {
                        "Action": [
                            "iam:ListRoles",
                            "iam:ListRolePolicies",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:ListAttachedRolePolicies"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sagemaker:CreatePresignedNotebookInstanceUrl",
                            "sagemaker:CreateNotebookInstance",
                            "sagemaker:DeleteNotebookInstance",
                            "sagemaker:DescribeNotebookInstance",
                            "sagemaker:StartNotebookInstance",
                            "sagemaker:StopNotebookInstance",
                            "sagemaker:UpdateNotebookInstance",
                            "sagemaker:ListNotebookInstances",
                            "sagemaker:ListTags"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sagemaker:*:*:notebook-instance/aws-braket-*"
                    },
                    {
                        "Action": [
                            "sagemaker:DescribeNotebookInstanceLifecycleConfig",
                            "sagemaker:CreateNotebookInstanceLifecycleConfig",
                            "sagemaker:DeleteNotebookInstanceLifecycleConfig",
                            "sagemaker:ListNotebookInstanceLifecycleConfigs",
                            "sagemaker:UpdateNotebookInstanceLifecycleConfig"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sagemaker:*:*:notebook-instance-lifecycle-config/aws-braket-*"
                    },
                    {
                        "Action": "braket:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "braket.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/braket.amazonaws.com/AWSServiceRoleForAmazonBraket*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "sagemaker.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/AmazonBraketServiceSageMakerNotebookRole*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4HUAKO7NZO",
            "PolicyName": "AmazonBraketFullAccess",
            "VersionId": "v1"
        },
        "AmazonBraketServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:PutObject",
                            "s3:GetObject",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::amazon-braket-*"
                    },
                    {
                        "Action": [
                            "logs:PutLogEvents",
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams",
                            "logs:CreateLogGroup",
                            "logs:DescribeLogGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/braket:*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NIYU42I3S",
            "PolicyName": "AmazonBraketServiceRolePolicy",
            "VersionId": "v2"
        },
        "AmazonChimeFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "chime:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketAcl",
                            "s3:GetBucketLocation",
                            "s3:GetBucketLogging",
                            "s3:GetBucketVersioning",
                            "s3:GetBucketWebsite"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogDelivery",
                            "logs:DeleteLogDelivery",
                            "logs:GetLogDelivery",
                            "logs:ListLogDeliveries",
                            "logs:DescribeResourcePolicies",
                            "logs:PutResourcePolicy",
                            "logs:CreateLogGroup",
                            "logs:DescribeLogGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sns:CreateTopic",
                            "sns:GetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sns:*:*:ChimeVoiceConnector-Streaming*"
                        ]
                    },
                    {
                        "Action": [
                            "sqs:GetQueueAttributes",
                            "sqs:CreateQueue"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sqs:*:*:ChimeVoiceConnector-Streaming*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIUJFSAKUERNORYRWO",
            "PolicyName": "AmazonChimeFullAccess",
            "VersionId": "v2"
        },
        "AmazonChimeReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "chime:List*",
                            "chime:Get*",
                            "chime:SearchAvailablePhoneNumbers"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJLBFZZFABRXVWRTCI",
            "PolicyName": "AmazonChimeReadOnly",
            "VersionId": "v9"
        },
        "AmazonChimeSDK": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "chime:CreateMeeting",
                            "chime:CreateMeetingWithAttendees",
                            "chime:DeleteMeeting",
                            "chime:GetMeeting",
                            "chime:ListMeetings",
                            "chime:CreateAttendee",
                            "chime:BatchCreateAttendee",
                            "chime:DeleteAttendee",
                            "chime:GetAttendee",
                            "chime:ListAttendees",
                            "chime:ListAttendeeTags",
                            "chime:ListMeetingTags",
                            "chime:ListTagsForResource",
                            "chime:TagAttendee",
                            "chime:TagMeeting",
                            "chime:TagResource",
                            "chime:UntagAttendee",
                            "chime:UntagMeeting",
                            "chime:UntagResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ACM6EA4B7",
            "PolicyName": "AmazonChimeSDK",
            "VersionId": "v3"
        },
        "AmazonChimeServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "chime.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/chime.amazonaws.com/AWSServiceRoleForAmazonChime"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NA5XMV3PI",
            "PolicyName": "AmazonChimeServiceRolePolicy",
            "VersionId": "v1"
        },
        "AmazonChimeUserManagement": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "chime:ListAccounts",
                            "chime:GetAccount",
                            "chime:GetAccountSettings",
                            "chime:UpdateAccountSettings",
                            "chime:ListUsers",
                            "chime:GetUser",
                            "chime:GetUserByEmail",
                            "chime:InviteUsers",
                            "chime:InviteUsersFromProvider",
                            "chime:SuspendUsers",
                            "chime:ActivateUsers",
                            "chime:UpdateUserLicenses",
                            "chime:ResetPersonalPIN",
                            "chime:LogoutUser",
                            "chime:ListDomains",
                            "chime:GetDomain",
                            "chime:ListDirectories",
                            "chime:ListGroups",
                            "chime:SubmitSupportRequest",
                            "chime:ListDelegates",
                            "chime:ListAccountUsageReportData",
                            "chime:GetMeetingDetail",
                            "chime:ListMeetingEvents",
                            "chime:ListMeetingsReportData",
                            "chime:GetUserActivityReportData",
                            "chime:UpdateUser",
                            "chime:BatchUpdateUser",
                            "chime:BatchSuspendUser",
                            "chime:BatchUnsuspendUser",
                            "chime:AssociatePhoneNumberWithUser",
                            "chime:DisassociatePhoneNumberFromUser",
                            "chime:GetPhoneNumber",
                            "chime:ListPhoneNumbers",
                            "chime:GetUserSettings",
                            "chime:UpdateUserSettings",
                            "chime:CreateUser",
                            "chime:AssociateSigninDelegateGroupsWithAccount",
                            "chime:DisassociateSigninDelegateGroupsFromAccount"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJGLHVUHNMQPSDGSOO",
            "PolicyName": "AmazonChimeUserManagement",
            "VersionId": "v8"
        },
        "AmazonChimeVoiceConnectorServiceLinkedRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "chime:GetVoiceConnector*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4GP44ZBY4P",
            "PolicyName": "AmazonChimeVoiceConnectorServiceLinkedRolePolicy",
            "VersionId": "v1"
        },
        "AmazonCloudDirectoryFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "clouddirectory:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJG3XQK77ATFLCF2CK",
            "PolicyName": "AmazonCloudDirectoryFullAccess",
            "VersionId": "v1"
        },
        "AmazonCloudDirectoryReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "clouddirectory:List*",
                            "clouddirectory:Get*",
                            "clouddirectory:LookupPolicy",
                            "clouddirectory:BatchRead"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAICMSZQGR3O62KMD6M",
            "PolicyName": "AmazonCloudDirectoryReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonCodeGuruProfilerFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codeguru-profiler:*",
                            "iam:ListRoles",
                            "iam:ListUsers",
                            "sns:ListTopics",
                            "codeguru:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "codeguru-profiler.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/*AWSServiceRoleForCodeGuruProfiler*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FVCBNS424",
            "PolicyName": "AmazonCodeGuruProfilerFullAccess",
            "VersionId": "v4"
        },
        "AmazonCodeGuruProfilerReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codeguru:Get*",
                            "codeguru-profiler:BatchGet*",
                            "codeguru-profiler:Describe*",
                            "codeguru-profiler:Get*",
                            "codeguru-profiler:List*",
                            "iam:ListRoles",
                            "iam:ListUsers"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LUSUINUHE",
            "PolicyName": "AmazonCodeGuruProfilerReadOnlyAccess",
            "VersionId": "v3"
        },
        "AmazonCodeGuruReviewerFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codeguru-reviewer:*",
                            "codeguru:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AmazonCodeGuruReviewerFullAccess"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "codeguru-reviewer.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer",
                        "Sid": "AmazonCodeGuruReviewerSLRCreation"
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer",
                        "Sid": "AmazonCodeGuruReviewerSLRDeletion"
                    },
                    {
                        "Action": [
                            "codecommit:ListRepositories"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeCommitAccess"
                    },
                    {
                        "Action": [
                            "codecommit:TagResource",
                            "codecommit:UntagResource"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": "codeguru-reviewer"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeCommitTagManagement"
                    },
                    {
                        "Action": [
                            "codestar-connections:TagResource",
                            "codestar-connections:UntagResource",
                            "codestar-connections:ListTagsForResource"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": "codeguru-reviewer"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeConnectTagManagement"
                    },
                    {
                        "Action": [
                            "codestar-connections:UseConnection",
                            "codestar-connections:ListConnections",
                            "codestar-connections:PassConnection"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "codestar-connections:ProviderAction": [
                                    "ListRepositories",
                                    "ListOwners"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CodeConnectManagedRules"
                    },
                    {
                        "Action": [
                            "events:PutRule",
                            "events:PutTargets",
                            "events:DeleteRule",
                            "events:RemoveTargets"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "events:ManagedBy": "codeguru-reviewer.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudWatchEventsManagedRules"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ENLFBTHWM",
            "PolicyName": "AmazonCodeGuruReviewerFullAccess",
            "VersionId": "v3"
        },
        "AmazonCodeGuruReviewerReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codeguru:Get*",
                            "codeguru-reviewer:List*",
                            "codeguru-reviewer:Describe*",
                            "codeguru-reviewer:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AmazonCodeGuruReviewerReadOnlyAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FOJ4PYG77",
            "PolicyName": "AmazonCodeGuruReviewerReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonCodeGuruReviewerServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "codecommit:GetRepository",
                            "codecommit:GetBranch",
                            "codecommit:DescribePullRequestEvents",
                            "codecommit:GetCommentsForPullRequest",
                            "codecommit:GetDifferences",
                            "codecommit:GetPullRequest",
                            "codecommit:ListPullRequests",
                            "codecommit:PostCommentForPullRequest",
                            "codecommit:GitPull",
                            "codecommit:UntagResource"
                        ],
                        "Condition": {
                            "StringLike": {
                                "aws:ResourceTag/codeguru-reviewer": "enabled"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AccessCodeGuruReviewerEnabledRepositories"
                    },
                    {
                        "Action": [
                            "codestar-connections:UseConnection"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "codestar-connections:ProviderAction": [
                                    "ListBranches",
                                    "GetBranch",
                                    "ListRepositories",
                                    "ListOwners",
                                    "ListPullRequests",
                                    "GetPullRequest",
                                    "ListPullRequestComments",
                                    "ListPullRequestCommits",
                                    "ListCommitFiles",
                                    "ListBranchCommits",
                                    "CreatePullRequestDiffComment",
                                    "GitPull"
                                ]
                            },
                            "Null": {
                                "aws:ResourceTag/codeguru-reviewer": "false"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AccessCodeGuruReviewerEnabledConnections"
                    },
                    {
                        "Action": [
                            "events:DeleteRule",
                            "events:RemoveTargets"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "events:ManagedBy": "codeguru-reviewer.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudWatchEventsResourceCleanup"
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::codeguru-reviewer-*",
                            "arn:aws:s3:::codeguru-reviewer-*/*"
                        ],
                        "Sid": "AllowGuruS3GetObject"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NJY3GAUD2",
            "PolicyName": "AmazonCodeGuruReviewerServiceRolePolicy",
            "VersionId": "v4"
        },
        "AmazonCognitoDeveloperAuthenticatedIdentities": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
                            "cognito-identity:LookupDeveloperIdentity",
                            "cognito-identity:MergeDeveloperIdentities",
                            "cognito-identity:UnlinkDeveloperIdentity"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIQOKZ5BGKLCMTXH4W",
            "PolicyName": "AmazonCognitoDeveloperAuthenticatedIdentities",
            "VersionId": "v1"
        },
        "AmazonCognitoIdpEmailServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ses:SendEmail",
                            "ses:SendRawEmail"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ses:List*"
                        ],
                        "Effect": "Deny",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIX7PW362PLAQFKBHM",
            "PolicyName": "AmazonCognitoIdpEmailServiceRolePolicy",
            "VersionId": "v1"
        },
        "AmazonCognitoIdpServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cognito-idp:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LEUDXVZDR",
            "PolicyName": "AmazonCognitoIdpServiceRolePolicy",
            "VersionId": "v1"
        },
        "AmazonCognitoPowerUser": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cognito-identity:*",
                            "cognito-idp:*",
                            "cognito-sync:*",
                            "iam:ListRoles",
                            "iam:ListOpenIdConnectProviders",
                            "sns:ListPlatformApplications",
                            "iam:GetRole",
                            "iam:ListOpenIDConnectProviders",
                            "iam:ListRoles",
                            "iam:ListSAMLProviders",
                            "iam:GetSAMLProvider",
                            "kinesis:ListStreams",
                            "lambda:GetPolicy",
                            "lambda:GetPolicy2*",
                            "lambda:ListFunctions",
                            "lambda:ListFunctions2*",
                            "sns:ListPlatformApplications",
                            "ses:ListIdentities",
                            "ses:GetIdentityVerificationAttributes",
                            "mobiletargeting:GetApps",
                            "acm:ListCertificates"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "cognito-idp.amazonaws.com",
                                    "email.cognito-idp.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/cognito-idp.amazonaws.com/AWSServiceRoleForAmazonCognitoIdp*",
                            "arn:aws:iam::*:role/aws-service-role/email.cognito-idp.amazonaws.com/AWSServiceRoleForAmazonCognitoIdpEmail*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJKW5H2HNCPGCYGR6Y",
            "PolicyName": "AmazonCognitoPowerUser",
            "VersionId": "v4"
        },
        "AmazonCognitoReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cognito-identity:Describe*",
                            "cognito-identity:Get*",
                            "cognito-identity:List*",
                            "cognito-idp:Describe*",
                            "cognito-idp:AdminGet*",
                            "cognito-idp:AdminList*",
                            "cognito-idp:List*",
                            "cognito-idp:Get*",
                            "cognito-sync:Describe*",
                            "cognito-sync:Get*",
                            "cognito-sync:List*",
                            "iam:ListOpenIdConnectProviders",
                            "iam:ListRoles",
                            "sns:ListPlatformApplications"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJBFTRZD2GQGJHSVQK",
            "PolicyName": "AmazonCognitoReadOnly",
            "VersionId": "v4"
        },
        "AmazonConnectReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "connect:Get*",
                            "connect:Describe*",
                            "connect:List*",
                            "ds:DescribeDirectories"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "connect:GetFederationTokens",
                        "Effect": "Deny",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIVZMH7VU6YYKRY6ZU",
            "PolicyName": "AmazonConnectReadOnlyAccess",
            "VersionId": "v3"
        },
        "AmazonConnectServiceLinkedRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "connect:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:DeleteRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/connect.amazonaws.com/AWSServiceRoleForAmazonConnect_*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:GetObjectAcl",
                            "s3:PutObject",
                            "s3:PutObjectAcl",
                            "s3:DeleteObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::amazon-connect-*/*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetBucketLocation",
                            "s3:GetBucketAcl"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::amazon-connect-*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/connect/*:*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ6R6FMTSRUJSKI72Y",
            "PolicyName": "AmazonConnectServiceLinkedRolePolicy",
            "VersionId": "v3"
        },
        "AmazonConnect_FullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "connect:*",
                            "ds:CreateAlias",
                            "ds:AuthorizeApplication",
                            "ds:CreateIdentityPoolDirectory",
                            "ds:DeleteDirectory",
                            "ds:DescribeDirectories",
                            "ds:UnauthorizeApplication",
                            "firehose:DescribeDeliveryStream",
                            "firehose:ListDeliveryStreams",
                            "kinesis:DescribeStream",
                            "kinesis:ListStreams",
                            "kms:DescribeKey",
                            "kms:ListAliases",
                            "lex:GetBots",
                            "logs:CreateLogGroup",
                            "s3:GetBucketLocation",
                            "s3:ListAllMyBuckets",
                            "lambda:ListFunctions",
                            "ds:CheckAlias"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:GetBucketAcl"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::amazon-connect-*"
                    },
                    {
                        "Action": [
                            "servicequotas:GetServiceQuota"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:servicequotas:*:*:connect/*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "connect.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:DeleteServiceLinkedRole",
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/connect.amazonaws.com/AWSServiceRoleForAmazonConnect*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JXAE7KLRO",
            "PolicyName": "AmazonConnect_FullAccess",
            "VersionId": "v1"
        },
        "AmazonDMSCloudWatchLogsRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:DescribeLogGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AllowDescribeOnAllLogGroups"
                    },
                    {
                        "Action": [
                            "logs:DescribeLogStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:dms-tasks-*"
                        ],
                        "Sid": "AllowDescribeOfAllLogStreamsOnDmsTasksLogGroup"
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:dms-tasks-*"
                        ],
                        "Sid": "AllowCreationOfDmsTasksLogGroups"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:dms-tasks-*:log-stream:dms-task-*"
                        ],
                        "Sid": "AllowCreationOfDmsTaskLogStream"
                    },
                    {
                        "Action": [
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:dms-tasks-*:log-stream:dms-task-*"
                        ],
                        "Sid": "AllowUploadOfLogEventsToDmsTaskLogStream"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJBG7UXZZXUJD3TDJE",
            "PolicyName": "AmazonDMSCloudWatchLogsRole",
            "VersionId": "v1"
        },
        "AmazonDMSRedshiftS3Role": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:ListBucket",
                            "s3:DeleteBucket",
                            "s3:GetBucketLocation",
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:DeleteObject",
                            "s3:GetObjectVersion",
                            "s3:GetBucketPolicy",
                            "s3:PutBucketPolicy",
                            "s3:GetBucketAcl",
                            "s3:PutBucketVersioning",
                            "s3:GetBucketVersioning",
                            "s3:PutLifecycleConfiguration",
                            "s3:GetLifecycleConfiguration",
                            "s3:DeleteBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::dms-*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI3CCUQ4U5WNC5F6B6",
            "PolicyName": "AmazonDMSRedshiftS3Role",
            "VersionId": "v3"
        },
        "AmazonDMSVPCManagementRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DeleteNetworkInterface",
                            "ec2:ModifyNetworkInterfaceAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJHKIGMBQI4AEFFSYO",
            "PolicyName": "AmazonDMSVPCManagementRole",
            "VersionId": "v3"
        },
        "AmazonDRSVPCManagement": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteSecurityGroup",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:RevokeSecurityGroupIngress"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJPXIBTTZMBEFEX6UA",
            "PolicyName": "AmazonDRSVPCManagement",
            "VersionId": "v1"
        },
        "AmazonDetectiveFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "detective:*",
                            "organizations:DescribeOrganization",
                            "organizations:ListAccounts"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "guardduty:ArchiveFindings"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:guardduty:*:*:detector/*"
                    },
                    {
                        "Action": [
                            "guardduty:ListDetectors"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IRLX3QVOO",
            "PolicyName": "AmazonDetectiveFullAccess",
            "VersionId": "v2"
        },
        "AmazonDevOpsGuruFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "devops-guru:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "DevOpsGuruFullAccess"
                    },
                    {
                        "Action": [
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListStacks"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudFormationListStacksAccess"
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricData"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudWatchGetMetricDataAccess"
                    },
                    {
                        "Action": [
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SnsListTopicsAccess"
                    },
                    {
                        "Action": [
                            "sns:CreateTopic",
                            "sns:GetTopicAttributes",
                            "sns:SetTopicAttributes",
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:DevOps-Guru-*",
                        "Sid": "SnsTopicOperations"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "devops-guru.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/devops-guru.amazonaws.com/AWSServiceRoleForDevOpsGuru",
                        "Sid": "DevOpsGuruSlrCreation"
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/devops-guru.amazonaws.com/AWSServiceRoleForDevOpsGuru",
                        "Sid": "DevOpsGuruSlrDeletion"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4BQEAUGTMM",
            "PolicyName": "AmazonDevOpsGuruFullAccess",
            "VersionId": "v1"
        },
        "AmazonDevOpsGuruReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "devops-guru:DescribeAccountHealth",
                            "devops-guru:DescribeAccountOverview",
                            "devops-guru:DescribeAnomaly",
                            "devops-guru:DescribeInsight",
                            "devops-guru:DescribeResourceCollectionHealth",
                            "devops-guru:DescribeServiceIntegration",
                            "devops-guru:GetResourceCollection",
                            "devops-guru:ListAnomaliesForInsight",
                            "devops-guru:ListEvents",
                            "devops-guru:ListInsights",
                            "devops-guru:ListNotificationChannels",
                            "devops-guru:ListRecommendations",
                            "devops-guru:SearchInsights"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "DevOpsGuruReadOnlyAccess"
                    },
                    {
                        "Action": [
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListStacks"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudFormationListStacksAccess"
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricData"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudWatchGetMetricDataAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JK4QO3QK6",
            "PolicyName": "AmazonDevOpsGuruReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonDevOpsGuruServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudtrail:LookupEvents",
                            "cloudwatch:GetMetricData",
                            "cloudwatch:ListMetrics",
                            "cloudwatch:DescribeAnomalyDetectors",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:ListDashboards",
                            "cloudwatch:GetDashboard",
                            "cloudformation:GetTemplate",
                            "cloudformation:ListStacks",
                            "cloudformation:ListStackResources",
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListImports",
                            "codedeploy:BatchGetDeployments",
                            "codedeploy:GetDeploymentGroup",
                            "codedeploy:ListDeployments",
                            "config:DescribeConfigurationRecorderStatus",
                            "config:GetResourceConfigHistory",
                            "events:ListRuleNamesByTarget",
                            "xray:GetServiceGraph"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "events:PutTargets",
                            "events:PutRule"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:events:*:*:rule/DevOps-Guru-managed-*",
                        "Sid": "AllowPutTargetsOnASpecificRule"
                    },
                    {
                        "Action": [
                            "ssm:CreateOpsItem"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowCreateOpsItem"
                    },
                    {
                        "Action": [
                            "ssm:GetOpsItem",
                            "ssm:UpdateOpsItem"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/DevOps-GuruInsightSsmOpsItemRelated": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowAccessOpsItem"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LOGPH224B",
            "PolicyName": "AmazonDevOpsGuruServiceRolePolicy",
            "VersionId": "v1"
        },
        "AmazonDocDBConsoleFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rds:AddRoleToDBCluster",
                            "rds:AddSourceIdentifierToSubscription",
                            "rds:AddTagsToResource",
                            "rds:ApplyPendingMaintenanceAction",
                            "rds:CopyDBClusterParameterGroup",
                            "rds:CopyDBClusterSnapshot",
                            "rds:CopyDBParameterGroup",
                            "rds:CreateDBCluster",
                            "rds:CreateDBClusterParameterGroup",
                            "rds:CreateDBClusterSnapshot",
                            "rds:CreateDBInstance",
                            "rds:CreateDBParameterGroup",
                            "rds:CreateDBSubnetGroup",
                            "rds:CreateEventSubscription",
                            "rds:DeleteDBCluster",
                            "rds:DeleteDBClusterParameterGroup",
                            "rds:DeleteDBClusterSnapshot",
                            "rds:DeleteDBInstance",
                            "rds:DeleteDBParameterGroup",
                            "rds:DeleteDBSubnetGroup",
                            "rds:DeleteEventSubscription",
                            "rds:DescribeAccountAttributes",
                            "rds:DescribeCertificates",
                            "rds:DescribeDBClusterParameterGroups",
                            "rds:DescribeDBClusterParameters",
                            "rds:DescribeDBClusterSnapshotAttributes",
                            "rds:DescribeDBClusterSnapshots",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBEngineVersions",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBLogFiles",
                            "rds:DescribeDBParameterGroups",
                            "rds:DescribeDBParameters",
                            "rds:DescribeDBSecurityGroups",
                            "rds:DescribeDBSubnetGroups",
                            "rds:DescribeEngineDefaultClusterParameters",
                            "rds:DescribeEngineDefaultParameters",
                            "rds:DescribeEventCategories",
                            "rds:DescribeEventSubscriptions",
                            "rds:DescribeEvents",
                            "rds:DescribeOptionGroups",
                            "rds:DescribeOrderableDBInstanceOptions",
                            "rds:DescribePendingMaintenanceActions",
                            "rds:DescribeValidDBInstanceModifications",
                            "rds:DownloadDBLogFilePortion",
                            "rds:FailoverDBCluster",
                            "rds:ListTagsForResource",
                            "rds:ModifyDBCluster",
                            "rds:ModifyDBClusterParameterGroup",
                            "rds:ModifyDBClusterSnapshotAttribute",
                            "rds:ModifyDBInstance",
                            "rds:ModifyDBParameterGroup",
                            "rds:ModifyDBSubnetGroup",
                            "rds:ModifyEventSubscription",
                            "rds:PromoteReadReplicaDBCluster",
                            "rds:RebootDBInstance",
                            "rds:RemoveRoleFromDBCluster",
                            "rds:RemoveSourceIdentifierFromSubscription",
                            "rds:RemoveTagsFromResource",
                            "rds:ResetDBClusterParameterGroup",
                            "rds:ResetDBParameterGroup",
                            "rds:RestoreDBClusterFromSnapshot",
                            "rds:RestoreDBClusterToPointInTime"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "cloudwatch:GetMetricData",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "ec2:AllocateAddress",
                            "ec2:AssignIpv6Addresses",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:AssociateAddress",
                            "ec2:AssociateRouteTable",
                            "ec2:AssociateSubnetCidrBlock",
                            "ec2:AssociateVpcCidrBlock",
                            "ec2:AttachInternetGateway",
                            "ec2:AttachNetworkInterface",
                            "ec2:CreateCustomerGateway",
                            "ec2:CreateDefaultSubnet",
                            "ec2:CreateDefaultVpc",
                            "ec2:CreateInternetGateway",
                            "ec2:CreateNatGateway",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateRoute",
                            "ec2:CreateRouteTable",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSubnet",
                            "ec2:CreateVpc",
                            "ec2:CreateVpcEndpoint",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeCustomerGateways",
                            "ec2:DescribeInstances",
                            "ec2:DescribeNatGateways",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribePrefixLists",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroupReferences",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcs",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:ModifySubnetAttribute",
                            "ec2:ModifyVpcAttribute",
                            "ec2:ModifyVpcEndpoint",
                            "kms:DescribeKey",
                            "kms:ListAliases",
                            "kms:ListKeyPolicies",
                            "kms:ListKeys",
                            "kms:ListRetirableGrants",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "sns:ListSubscriptions",
                            "sns:ListTopics",
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "rds.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJHV6VMSNDDHJ3ESNI",
            "PolicyName": "AmazonDocDBConsoleFullAccess",
            "VersionId": "v2"
        },
        "AmazonDocDBFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rds:AddRoleToDBCluster",
                            "rds:AddSourceIdentifierToSubscription",
                            "rds:AddTagsToResource",
                            "rds:ApplyPendingMaintenanceAction",
                            "rds:CopyDBClusterParameterGroup",
                            "rds:CopyDBClusterSnapshot",
                            "rds:CopyDBParameterGroup",
                            "rds:CreateDBCluster",
                            "rds:CreateDBClusterParameterGroup",
                            "rds:CreateDBClusterSnapshot",
                            "rds:CreateDBInstance",
                            "rds:CreateDBParameterGroup",
                            "rds:CreateDBSubnetGroup",
                            "rds:CreateEventSubscription",
                            "rds:DeleteDBCluster",
                            "rds:DeleteDBClusterParameterGroup",
                            "rds:DeleteDBClusterSnapshot",
                            "rds:DeleteDBInstance",
                            "rds:DeleteDBParameterGroup",
                            "rds:DeleteDBSubnetGroup",
                            "rds:DeleteEventSubscription",
                            "rds:DescribeAccountAttributes",
                            "rds:DescribeCertificates",
                            "rds:DescribeDBClusterParameterGroups",
                            "rds:DescribeDBClusterParameters",
                            "rds:DescribeDBClusterSnapshotAttributes",
                            "rds:DescribeDBClusterSnapshots",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBEngineVersions",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBLogFiles",
                            "rds:DescribeDBParameterGroups",
                            "rds:DescribeDBParameters",
                            "rds:DescribeDBSecurityGroups",
                            "rds:DescribeDBSubnetGroups",
                            "rds:DescribeEngineDefaultClusterParameters",
                            "rds:DescribeEngineDefaultParameters",
                            "rds:DescribeEventCategories",
                            "rds:DescribeEventSubscriptions",
                            "rds:DescribeEvents",
                            "rds:DescribeOptionGroups",
                            "rds:DescribeOrderableDBInstanceOptions",
                            "rds:DescribePendingMaintenanceActions",
                            "rds:DescribeValidDBInstanceModifications",
                            "rds:DownloadDBLogFilePortion",
                            "rds:FailoverDBCluster",
                            "rds:ListTagsForResource",
                            "rds:ModifyDBCluster",
                            "rds:ModifyDBClusterParameterGroup",
                            "rds:ModifyDBClusterSnapshotAttribute",
                            "rds:ModifyDBInstance",
                            "rds:ModifyDBParameterGroup",
                            "rds:ModifyDBSubnetGroup",
                            "rds:ModifyEventSubscription",
                            "rds:PromoteReadReplicaDBCluster",
                            "rds:RebootDBInstance",
                            "rds:RemoveRoleFromDBCluster",
                            "rds:RemoveSourceIdentifierFromSubscription",
                            "rds:RemoveTagsFromResource",
                            "rds:ResetDBClusterParameterGroup",
                            "rds:ResetDBParameterGroup",
                            "rds:RestoreDBClusterFromSnapshot",
                            "rds:RestoreDBClusterToPointInTime"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs",
                            "kms:ListAliases",
                            "kms:ListKeyPolicies",
                            "kms:ListKeys",
                            "kms:ListRetirableGrants",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "sns:ListSubscriptions",
                            "sns:ListTopics",
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "rds.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIQKACUF6JJHALEG5K",
            "PolicyName": "AmazonDocDBFullAccess",
            "VersionId": "v1"
        },
        "AmazonDocDBReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rds:DescribeAccountAttributes",
                            "rds:DescribeCertificates",
                            "rds:DescribeDBClusterParameterGroups",
                            "rds:DescribeDBClusterParameters",
                            "rds:DescribeDBClusterSnapshotAttributes",
                            "rds:DescribeDBClusterSnapshots",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBEngineVersions",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBLogFiles",
                            "rds:DescribeDBParameterGroups",
                            "rds:DescribeDBParameters",
                            "rds:DescribeDBSubnetGroups",
                            "rds:DescribeEventCategories",
                            "rds:DescribeEventSubscriptions",
                            "rds:DescribeEvents",
                            "rds:DescribeOrderableDBInstanceOptions",
                            "rds:DescribePendingMaintenanceActions",
                            "rds:DownloadDBLogFilePortion",
                            "rds:ListTagsForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:ListKeys",
                            "kms:ListRetirableGrants",
                            "kms:ListAliases",
                            "kms:ListKeyPolicies"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*",
                            "arn:aws:logs:*:*:log-group:/aws/docdb/*:log-stream:*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI477RMVACLTLWY5RQ",
            "PolicyName": "AmazonDocDBReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonDynamoDBFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "dynamodb:*",
                            "dax:*",
                            "application-autoscaling:DeleteScalingPolicy",
                            "application-autoscaling:DeregisterScalableTarget",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingActivities",
                            "application-autoscaling:DescribeScalingPolicies",
                            "application-autoscaling:PutScalingPolicy",
                            "application-autoscaling:RegisterScalableTarget",
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:DescribeAlarmHistory",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DescribeAlarmsForMetric",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "cloudwatch:PutMetricAlarm",
                            "datapipeline:ActivatePipeline",
                            "datapipeline:CreatePipeline",
                            "datapipeline:DeletePipeline",
                            "datapipeline:DescribeObjects",
                            "datapipeline:DescribePipelines",
                            "datapipeline:GetPipelineDefinition",
                            "datapipeline:ListPipelines",
                            "datapipeline:PutPipelineDefinition",
                            "datapipeline:QueryObjects",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups",
                            "iam:GetRole",
                            "iam:ListRoles",
                            "kms:DescribeKey",
                            "kms:ListAliases",
                            "sns:CreateTopic",
                            "sns:DeleteTopic",
                            "sns:ListSubscriptions",
                            "sns:ListSubscriptionsByTopic",
                            "sns:ListTopics",
                            "sns:Subscribe",
                            "sns:Unsubscribe",
                            "sns:SetTopicAttributes",
                            "lambda:CreateFunction",
                            "lambda:ListFunctions",
                            "lambda:ListEventSourceMappings",
                            "lambda:CreateEventSourceMapping",
                            "lambda:DeleteEventSourceMapping",
                            "lambda:GetFunctionConfiguration",
                            "lambda:DeleteFunction",
                            "resource-groups:ListGroups",
                            "resource-groups:ListGroupResources",
                            "resource-groups:GetGroup",
                            "resource-groups:GetGroupQuery",
                            "resource-groups:DeleteGroup",
                            "resource-groups:CreateGroup",
                            "tag:GetResources",
                            "kinesis:ListStreams",
                            "kinesis:DescribeStream",
                            "kinesis:DescribeStreamSummary"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "cloudwatch:GetInsightRuleReport",
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "application-autoscaling.amazonaws.com",
                                    "dax.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "replication.dynamodb.amazonaws.com",
                                    "dax.amazonaws.com",
                                    "dynamodb.application-autoscaling.amazonaws.com",
                                    "contributorinsights.dynamodb.amazonaws.com",
                                    "kinesisreplication.dynamodb.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAINUGF2JSOSUY76KYA",
            "PolicyName": "AmazonDynamoDBFullAccess",
            "VersionId": "v13"
        },
        "AmazonDynamoDBFullAccesswithDataPipeline": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:DescribeAlarmHistory",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DescribeAlarmsForMetric",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "cloudwatch:PutMetricAlarm",
                            "dynamodb:*",
                            "sns:CreateTopic",
                            "sns:DeleteTopic",
                            "sns:ListSubscriptions",
                            "sns:ListSubscriptionsByTopic",
                            "sns:ListTopics",
                            "sns:Subscribe",
                            "sns:Unsubscribe",
                            "sns:SetTopicAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "DDBConsole"
                    },
                    {
                        "Action": [
                            "lambda:*",
                            "iam:ListRoles"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "DDBConsoleTriggers"
                    },
                    {
                        "Action": [
                            "datapipeline:*",
                            "iam:ListRoles"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "DDBConsoleImportExport"
                    },
                    {
                        "Action": [
                            "iam:GetRolePolicy",
                            "iam:PassRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "IAMEDPRoles"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:DescribeInstances",
                            "ec2:RunInstances",
                            "ec2:StartInstances",
                            "ec2:StopInstances",
                            "ec2:TerminateInstances",
                            "elasticmapreduce:*",
                            "datapipeline:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "EMR"
                    },
                    {
                        "Action": [
                            "s3:DeleteObject",
                            "s3:Get*",
                            "s3:List*",
                            "s3:Put*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "S3"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ3ORT7KDISSXGHJXA",
            "PolicyName": "AmazonDynamoDBFullAccesswithDataPipeline",
            "VersionId": "v2"
        },
        "AmazonDynamoDBReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingActivities",
                            "application-autoscaling:DescribeScalingPolicies",
                            "cloudwatch:DescribeAlarmHistory",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DescribeAlarmsForMetric",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "datapipeline:DescribeObjects",
                            "datapipeline:DescribePipelines",
                            "datapipeline:GetPipelineDefinition",
                            "datapipeline:ListPipelines",
                            "datapipeline:QueryObjects",
                            "dynamodb:BatchGetItem",
                            "dynamodb:Describe*",
                            "dynamodb:List*",
                            "dynamodb:GetItem",
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "dax:Describe*",
                            "dax:List*",
                            "dax:GetItem",
                            "dax:BatchGetItem",
                            "dax:Query",
                            "dax:Scan",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups",
                            "iam:GetRole",
                            "iam:ListRoles",
                            "kms:DescribeKey",
                            "kms:ListAliases",
                            "sns:ListSubscriptionsByTopic",
                            "sns:ListTopics",
                            "lambda:ListFunctions",
                            "lambda:ListEventSourceMappings",
                            "lambda:GetFunctionConfiguration",
                            "resource-groups:ListGroups",
                            "resource-groups:ListGroupResources",
                            "resource-groups:GetGroup",
                            "resource-groups:GetGroupQuery",
                            "tag:GetResources",
                            "kinesis:ListStreams",
                            "kinesis:DescribeStream",
                            "kinesis:DescribeStreamSummary"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "cloudwatch:GetInsightRuleReport",
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIY2XFNA232XJ6J7X2",
            "PolicyName": "AmazonDynamoDBReadOnlyAccess",
            "VersionId": "v11"
        },
        "AmazonEC2ContainerRegistryFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecr:*",
                            "cloudtrail:LookupEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "replication.ecr.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIESRL7KD7IIVF6V4W",
            "PolicyName": "AmazonEC2ContainerRegistryFullAccess",
            "VersionId": "v3"
        },
        "AmazonEC2ContainerRegistryPowerUser": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecr:GetAuthorizationToken",
                            "ecr:BatchCheckLayerAvailability",
                            "ecr:GetDownloadUrlForLayer",
                            "ecr:GetRepositoryPolicy",
                            "ecr:DescribeRepositories",
                            "ecr:ListImages",
                            "ecr:DescribeImages",
                            "ecr:BatchGetImage",
                            "ecr:GetLifecyclePolicy",
                            "ecr:GetLifecyclePolicyPreview",
                            "ecr:ListTagsForResource",
                            "ecr:DescribeImageScanFindings",
                            "ecr:InitiateLayerUpload",
                            "ecr:UploadLayerPart",
                            "ecr:CompleteLayerUpload",
                            "ecr:PutImage"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJDNE5PIHROIBGGDDW",
            "PolicyName": "AmazonEC2ContainerRegistryPowerUser",
            "VersionId": "v3"
        },
        "AmazonEC2ContainerRegistryReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecr:GetAuthorizationToken",
                            "ecr:BatchCheckLayerAvailability",
                            "ecr:GetDownloadUrlForLayer",
                            "ecr:GetRepositoryPolicy",
                            "ecr:DescribeRepositories",
                            "ecr:ListImages",
                            "ecr:DescribeImages",
                            "ecr:BatchGetImage",
                            "ecr:GetLifecyclePolicy",
                            "ecr:GetLifecyclePolicyPreview",
                            "ecr:ListTagsForResource",
                            "ecr:DescribeImageScanFindings"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIFYZPA37OOHVIH7KQ",
            "PolicyName": "AmazonEC2ContainerRegistryReadOnly",
            "VersionId": "v3"
        },
        "AmazonEC2ContainerServiceAutoscaleRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecs:DescribeServices",
                            "ecs:UpdateService"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:PutMetricAlarm"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIUAP3EGGGXXCPDQKK",
            "PolicyName": "AmazonEC2ContainerServiceAutoscaleRole",
            "VersionId": "v2"
        },
        "AmazonEC2ContainerServiceEventsRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecs:RunTask"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "ecs-tasks.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAITKFNIUAG27VSYNZ4",
            "PolicyName": "AmazonEC2ContainerServiceEventsRole",
            "VersionId": "v2"
        },
        "AmazonEC2ContainerServiceFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "autoscaling:Describe*",
                            "autoscaling:UpdateAutoScalingGroup",
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeStack*",
                            "cloudformation:UpdateStack",
                            "cloudwatch:GetMetricStatistics",
                            "ec2:Describe*",
                            "elasticloadbalancing:*",
                            "ecs:*",
                            "events:DescribeRule",
                            "events:DeleteRule",
                            "events:ListRuleNamesByTarget",
                            "events:ListTargetsByRule",
                            "events:PutRule",
                            "events:PutTargets",
                            "events:RemoveTargets",
                            "iam:ListInstanceProfiles",
                            "iam:ListRoles",
                            "iam:PassRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJALOYVTPDZEMIACSM",
            "PolicyName": "AmazonEC2ContainerServiceFullAccess",
            "VersionId": "v4"
        },
        "AmazonEC2ContainerServiceRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:Describe*",
                            "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                            "elasticloadbalancing:DeregisterTargets",
                            "elasticloadbalancing:Describe*",
                            "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                            "elasticloadbalancing:RegisterTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJO53W2XHNACG7V77Q",
            "PolicyName": "AmazonEC2ContainerServiceRole",
            "VersionId": "v2"
        },
        "AmazonEC2ContainerServiceforEC2Role": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeTags",
                            "ecs:CreateCluster",
                            "ecs:DeregisterContainerInstance",
                            "ecs:DiscoverPollEndpoint",
                            "ecs:Poll",
                            "ecs:RegisterContainerInstance",
                            "ecs:StartTelemetrySession",
                            "ecs:UpdateContainerInstancesState",
                            "ecs:Submit*",
                            "ecr:GetAuthorizationToken",
                            "ecr:BatchCheckLayerAvailability",
                            "ecr:GetDownloadUrlForLayer",
                            "ecr:BatchGetImage",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJLYJCVHC7TQHCSQDS",
            "PolicyName": "AmazonEC2ContainerServiceforEC2Role",
            "VersionId": "v6"
        },
        "AmazonEC2FullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "ec2:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "elasticloadbalancing:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "cloudwatch:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "autoscaling:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "autoscaling.amazonaws.com",
                                    "ec2scheduled.amazonaws.com",
                                    "elasticloadbalancing.amazonaws.com",
                                    "spot.amazonaws.com",
                                    "spotfleet.amazonaws.com",
                                    "transitgateway.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI3VAJF5ZCRZ7MCQE6",
            "PolicyName": "AmazonEC2FullAccess",
            "VersionId": "v5"
        },
        "AmazonEC2ReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "ec2:Describe*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "elasticloadbalancing:Describe*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:ListMetrics",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "autoscaling:Describe*",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIGDT4SV4GSETWTBZK",
            "PolicyName": "AmazonEC2ReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonEC2RolePolicyForLaunchWizard": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AttachVolume",
                            "ec2:RebootInstances",
                            "ec2:StartInstances",
                            "ec2:StopInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/LaunchWizardResourceGroupID": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:volume/*",
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:ReplaceRoute"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/LaunchWizardApplicationType": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:route-table/*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeAddresses",
                            "ec2:AssociateAddress",
                            "ec2:DescribeInstances",
                            "ec2:DescribeImages",
                            "ec2:DescribeRegions",
                            "ec2:DescribeVolumes",
                            "ec2:DescribeRouteTables",
                            "ec2:ModifyInstanceAttribute",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:PutMetricData",
                            "ssm:GetCommandInvocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:CreateVolume"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "LaunchWizardResourceGroupID",
                                    "LaunchWizardApplicationType"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:PutObject",
                            "s3:PutObjectTagging",
                            "s3:GetBucketLocation",
                            "logs:PutLogEvents",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:*",
                            "arn:aws:s3:::launchwizard*",
                            "arn:aws:s3:::aws-sap-data-provider/config.properties"
                        ]
                    },
                    {
                        "Action": "logs:Create*",
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:*"
                    },
                    {
                        "Action": [
                            "ec2:Describe*",
                            "cloudformation:DescribeStackResources",
                            "cloudformation:SignalResource",
                            "cloudformation:DescribeStackResource",
                            "cloudformation:DescribeStacks"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": "LaunchWizardResourceGroupID"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "dynamodb:BatchGetItem",
                            "dynamodb:PutItem",
                            "sqs:ReceiveMessage",
                            "sqs:SendMessage",
                            "dynamodb:Scan",
                            "s3:ListBucket",
                            "dynamodb:Query",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteTable",
                            "dynamodb:CreateTable",
                            "s3:GetObject",
                            "dynamodb:DescribeTable",
                            "s3:GetBucketLocation",
                            "dynamodb:UpdateTable"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::launchwizard*",
                            "arn:aws:dynamodb:*:*:table/LaunchWizard*",
                            "arn:aws:sqs:*:*:LaunchWizard*"
                        ]
                    },
                    {
                        "Action": "ssm:SendCommand",
                        "Condition": {
                            "StringLike": {
                                "ssm:resourceTag/LaunchWizardApplicationType": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": [
                            "ssm:SendCommand",
                            "ssm:GetDocument"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ssm:*:*:document/AWSSAP-InstallBackint"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CBGI56NFS",
            "PolicyName": "AmazonEC2RolePolicyForLaunchWizard",
            "VersionId": "v7"
        },
        "AmazonEC2RoleforAWSCodeDeploy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:GetObjectVersion",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIAZKXZ27TAJ4PVWGK",
            "PolicyName": "AmazonEC2RoleforAWSCodeDeploy",
            "VersionId": "v2"
        },
        "AmazonEC2RoleforAWSCodeDeployLimited": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:GetObjectVersion",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*/CodeDeploy/*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:GetObjectVersion",
                            "s3:ListBucket"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "s3:ExistingObjectTag/UseWithCodeDeploy": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NN2A7WC6C",
            "PolicyName": "AmazonEC2RoleforAWSCodeDeployLimited",
            "VersionId": "v1"
        },
        "AmazonEC2RoleforDataPipelineRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:*",
                            "datapipeline:*",
                            "dynamodb:*",
                            "ec2:Describe*",
                            "elasticmapreduce:AddJobFlowSteps",
                            "elasticmapreduce:Describe*",
                            "elasticmapreduce:ListInstance*",
                            "elasticmapreduce:ModifyInstanceGroups",
                            "rds:Describe*",
                            "redshift:DescribeClusters",
                            "redshift:DescribeClusterSecurityGroups",
                            "s3:*",
                            "sdb:*",
                            "sns:*",
                            "sqs:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ3Z5I2WAJE5DN2J36",
            "PolicyName": "AmazonEC2RoleforDataPipelineRole",
            "VersionId": "v3"
        },
        "AmazonEC2RoleforSSM": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ssm:DescribeAssociation",
                            "ssm:GetDeployablePatchSnapshotForInstance",
                            "ssm:GetDocument",
                            "ssm:DescribeDocument",
                            "ssm:GetManifest",
                            "ssm:GetParameters",
                            "ssm:ListAssociations",
                            "ssm:ListInstanceAssociations",
                            "ssm:PutInventory",
                            "ssm:PutComplianceItems",
                            "ssm:PutConfigurePackageResult",
                            "ssm:UpdateAssociationStatus",
                            "ssm:UpdateInstanceAssociationStatus",
                            "ssm:UpdateInstanceInformation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ssmmessages:CreateControlChannel",
                            "ssmmessages:CreateDataChannel",
                            "ssmmessages:OpenControlChannel",
                            "ssmmessages:OpenDataChannel"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2messages:AcknowledgeMessage",
                            "ec2messages:DeleteMessage",
                            "ec2messages:FailMessage",
                            "ec2messages:GetEndpoint",
                            "ec2messages:GetMessages",
                            "ec2messages:SendReply"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:PutMetricData"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeInstanceStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ds:CreateComputer",
                            "ds:DescribeDirectories"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetBucketLocation",
                            "s3:PutObject",
                            "s3:GetObject",
                            "s3:GetEncryptionConfiguration",
                            "s3:AbortMultipartUpload",
                            "s3:ListMultipartUploadParts",
                            "s3:ListBucket",
                            "s3:ListBucketMultipartUploads"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI6TL3SMY22S4KMMX6",
            "PolicyName": "AmazonEC2RoleforSSM",
            "VersionId": "v8"
        },
        "AmazonEC2SpotFleetAutoscaleRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeSpotFleetRequests",
                            "ec2:ModifySpotFleetRequest"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "ec2.application-autoscaling.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/ec2.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_EC2SpotFleetRequest"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIMFFRMIOBGDP2TAVE",
            "PolicyName": "AmazonEC2SpotFleetAutoscaleRole",
            "VersionId": "v3"
        },
        "AmazonEC2SpotFleetTaggingRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeImages",
                            "ec2:DescribeSubnets",
                            "ec2:RequestSpotInstances",
                            "ec2:TerminateInstances",
                            "ec2:DescribeInstanceStatus",
                            "ec2:CreateTags",
                            "ec2:RunInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com",
                                    "ec2.amazonaws.com.cn"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:elasticloadbalancing:*:*:loadbalancer/*"
                        ]
                    },
                    {
                        "Action": [
                            "elasticloadbalancing:RegisterTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:elasticloadbalancing:*:*:*/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ5U6UMLCEYLX5OLC4",
            "PolicyName": "AmazonEC2SpotFleetTaggingRole",
            "VersionId": "v5"
        },
        "AmazonECSServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AttachNetworkInterface",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:Describe*",
                            "ec2:DetachNetworkInterface",
                            "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                            "elasticloadbalancing:DeregisterTargets",
                            "elasticloadbalancing:Describe*",
                            "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                            "elasticloadbalancing:RegisterTargets",
                            "route53:ChangeResourceRecordSets",
                            "route53:CreateHealthCheck",
                            "route53:DeleteHealthCheck",
                            "route53:Get*",
                            "route53:List*",
                            "route53:UpdateHealthCheck",
                            "servicediscovery:DeregisterInstance",
                            "servicediscovery:Get*",
                            "servicediscovery:List*",
                            "servicediscovery:RegisterInstance",
                            "servicediscovery:UpdateInstanceCustomHealthStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ECSTaskManagement"
                    },
                    {
                        "Action": [
                            "autoscaling:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AutoScaling"
                    },
                    {
                        "Action": [
                            "autoscaling:DeletePolicy",
                            "autoscaling:PutScalingPolicy",
                            "autoscaling:SetInstanceProtection",
                            "autoscaling:UpdateAutoScalingGroup"
                        ],
                        "Condition": {
                            "Null": {
                                "autoscaling:ResourceTag/AmazonECSManaged": "false"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AutoScalingManagement"
                    },
                    {
                        "Action": [
                            "autoscaling-plans:CreateScalingPlan",
                            "autoscaling-plans:DeleteScalingPlan",
                            "autoscaling-plans:DescribeScalingPlans"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AutoScalingPlanManagement"
                    },
                    {
                        "Action": [
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:PutMetricAlarm"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudwatch:*:*:alarm:*",
                        "Sid": "CWAlarmManagement"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:network-interface/*",
                        "Sid": "ECSTagging"
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:DescribeLogGroups",
                            "logs:PutRetentionPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/ecs/*",
                        "Sid": "CWLogGroupManagement"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/ecs/*:log-stream:*",
                        "Sid": "CWLogStreamManagement"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIVUWKCAI7URU4WUEI",
            "PolicyName": "AmazonECSServiceRolePolicy",
            "VersionId": "v7"
        },
        "AmazonECSTaskExecutionRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecr:GetAuthorizationToken",
                            "ecr:BatchCheckLayerAvailability",
                            "ecr:GetDownloadUrlForLayer",
                            "ecr:BatchGetImage",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJG4T4G4PV56DE72PY",
            "PolicyName": "AmazonECSTaskExecutionRolePolicy",
            "VersionId": "v1"
        },
        "AmazonECS_FullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "application-autoscaling:DeleteScalingPolicy",
                            "application-autoscaling:DeregisterScalableTarget",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingActivities",
                            "application-autoscaling:DescribeScalingPolicies",
                            "application-autoscaling:PutScalingPolicy",
                            "application-autoscaling:RegisterScalableTarget",
                            "appmesh:DescribeVirtualGateway",
                            "appmesh:DescribeVirtualNode",
                            "appmesh:ListMeshes",
                            "appmesh:ListVirtualGateways",
                            "appmesh:ListVirtualNodes",
                            "autoscaling:CreateAutoScalingGroup",
                            "autoscaling:CreateLaunchConfiguration",
                            "autoscaling:DeleteAutoScalingGroup",
                            "autoscaling:DeleteLaunchConfiguration",
                            "autoscaling:Describe*",
                            "autoscaling:UpdateAutoScalingGroup",
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeStack*",
                            "cloudformation:UpdateStack",
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:PutMetricAlarm",
                            "codedeploy:BatchGetApplicationRevisions",
                            "codedeploy:BatchGetApplications",
                            "codedeploy:BatchGetDeploymentGroups",
                            "codedeploy:BatchGetDeployments",
                            "codedeploy:ContinueDeployment",
                            "codedeploy:CreateApplication",
                            "codedeploy:CreateDeployment",
                            "codedeploy:CreateDeploymentGroup",
                            "codedeploy:GetApplication",
                            "codedeploy:GetApplicationRevision",
                            "codedeploy:GetDeployment",
                            "codedeploy:GetDeploymentConfig",
                            "codedeploy:GetDeploymentGroup",
                            "codedeploy:GetDeploymentTarget",
                            "codedeploy:ListApplicationRevisions",
                            "codedeploy:ListApplications",
                            "codedeploy:ListDeploymentConfigs",
                            "codedeploy:ListDeploymentGroups",
                            "codedeploy:ListDeployments",
                            "codedeploy:ListDeploymentTargets",
                            "codedeploy:RegisterApplicationRevision",
                            "codedeploy:StopDeployment",
                            "ec2:AssociateRouteTable",
                            "ec2:AttachInternetGateway",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CancelSpotFleetRequests",
                            "ec2:CreateInternetGateway",
                            "ec2:CreateLaunchTemplate",
                            "ec2:CreateRoute",
                            "ec2:CreateRouteTable",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSubnet",
                            "ec2:CreateVpc",
                            "ec2:DeleteLaunchTemplate",
                            "ec2:DeleteSubnet",
                            "ec2:DeleteVpc",
                            "ec2:Describe*",
                            "ec2:DetachInternetGateway",
                            "ec2:DisassociateRouteTable",
                            "ec2:ModifySubnetAttribute",
                            "ec2:ModifyVpcAttribute",
                            "ec2:RequestSpotFleet",
                            "ec2:RunInstances",
                            "ecs:*",
                            "elasticfilesystem:DescribeAccessPoints",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticloadbalancing:CreateListener",
                            "elasticloadbalancing:CreateLoadBalancer",
                            "elasticloadbalancing:CreateRule",
                            "elasticloadbalancing:CreateTargetGroup",
                            "elasticloadbalancing:DeleteListener",
                            "elasticloadbalancing:DeleteLoadBalancer",
                            "elasticloadbalancing:DeleteRule",
                            "elasticloadbalancing:DeleteTargetGroup",
                            "elasticloadbalancing:DescribeListeners",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeRules",
                            "elasticloadbalancing:DescribeTargetGroups",
                            "events:DeleteRule",
                            "events:DescribeRule",
                            "events:ListRuleNamesByTarget",
                            "events:ListTargetsByRule",
                            "events:PutRule",
                            "events:PutTargets",
                            "events:RemoveTargets",
                            "fsx:DescribeFileSystems",
                            "iam:ListAttachedRolePolicies",
                            "iam:ListInstanceProfiles",
                            "iam:ListRoles",
                            "lambda:ListFunctions",
                            "logs:CreateLogGroup",
                            "logs:DescribeLogGroups",
                            "logs:FilterLogEvents",
                            "route53:CreateHostedZone",
                            "route53:DeleteHostedZone",
                            "route53:GetHealthCheck",
                            "route53:GetHostedZone",
                            "route53:ListHostedZonesByName",
                            "servicediscovery:CreatePrivateDnsNamespace",
                            "servicediscovery:CreateService",
                            "servicediscovery:DeleteService",
                            "servicediscovery:GetNamespace",
                            "servicediscovery:GetOperation",
                            "servicediscovery:GetService",
                            "servicediscovery:ListNamespaces",
                            "servicediscovery:ListServices",
                            "servicediscovery:UpdateService",
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ssm:GetParameter",
                            "ssm:GetParameters",
                            "ssm:GetParametersByPath"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ssm:*:*:parameter/aws/service/ecs*"
                    },
                    {
                        "Action": [
                            "ec2:DeleteInternetGateway",
                            "ec2:DeleteRoute",
                            "ec2:DeleteRouteTable",
                            "ec2:DeleteSecurityGroup"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:cloudformation:stack-name": "EC2ContainerService-*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "ecs-tasks.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com",
                                    "ec2.amazonaws.com.cn"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/ecsInstanceRole*"
                        ]
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "application-autoscaling.amazonaws.com",
                                    "application-autoscaling.amazonaws.com.cn"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/ecsAutoscaleRole*"
                        ]
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "autoscaling.amazonaws.com",
                                    "ecs.amazonaws.com",
                                    "ecs.application-autoscaling.amazonaws.com",
                                    "spot.amazonaws.com",
                                    "spotfleet.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ7S7AN6YQPTJC7IFS",
            "PolicyName": "AmazonECS_FullAccess",
            "VersionId": "v19"
        },
        "AmazonEKSClusterPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:UpdateAutoScalingGroup",
                            "ec2:AttachVolume",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateRoute",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateTags",
                            "ec2:CreateVolume",
                            "ec2:DeleteRoute",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DeleteVolume",
                            "ec2:DescribeInstances",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVolumes",
                            "ec2:DescribeVolumesModifications",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeDhcpOptions",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DetachVolume",
                            "ec2:ModifyInstanceAttribute",
                            "ec2:ModifyVolume",
                            "ec2:RevokeSecurityGroupIngress",
                            "elasticloadbalancing:AddTags",
                            "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
                            "elasticloadbalancing:AttachLoadBalancerToSubnets",
                            "elasticloadbalancing:ConfigureHealthCheck",
                            "elasticloadbalancing:CreateListener",
                            "elasticloadbalancing:CreateLoadBalancer",
                            "elasticloadbalancing:CreateLoadBalancerListeners",
                            "elasticloadbalancing:CreateLoadBalancerPolicy",
                            "elasticloadbalancing:CreateTargetGroup",
                            "elasticloadbalancing:DeleteListener",
                            "elasticloadbalancing:DeleteLoadBalancer",
                            "elasticloadbalancing:DeleteLoadBalancerListeners",
                            "elasticloadbalancing:DeleteTargetGroup",
                            "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                            "elasticloadbalancing:DeregisterTargets",
                            "elasticloadbalancing:DescribeListeners",
                            "elasticloadbalancing:DescribeLoadBalancerAttributes",
                            "elasticloadbalancing:DescribeLoadBalancerPolicies",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeTargetGroupAttributes",
                            "elasticloadbalancing:DescribeTargetGroups",
                            "elasticloadbalancing:DescribeTargetHealth",
                            "elasticloadbalancing:DetachLoadBalancerFromSubnets",
                            "elasticloadbalancing:ModifyListener",
                            "elasticloadbalancing:ModifyLoadBalancerAttributes",
                            "elasticloadbalancing:ModifyTargetGroup",
                            "elasticloadbalancing:ModifyTargetGroupAttributes",
                            "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                            "elasticloadbalancing:RegisterTargets",
                            "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
                            "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
                            "kms:DescribeKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIBTLDQMIC6UOIGFWA",
            "PolicyName": "AmazonEKSClusterPolicy",
            "VersionId": "v4"
        },
        "AmazonEKSFargatePodExecutionRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecr:GetAuthorizationToken",
                            "ecr:BatchCheckLayerAvailability",
                            "ecr:GetDownloadUrlForLayer",
                            "ecr:BatchGetImage"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FJRXZH7YQ",
            "PolicyName": "AmazonEKSFargatePodExecutionRolePolicy",
            "VersionId": "v1"
        },
        "AmazonEKSForFargateServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeDhcpOptions",
                            "ec2:DescribeRouteTables"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JAUTVFICB",
            "PolicyName": "AmazonEKSForFargateServiceRolePolicy",
            "VersionId": "v1"
        },
        "AmazonEKSServicePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeInstances",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DetachNetworkInterface",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "iam:ListAttachedRolePolicies",
                            "eks:UpdateClusterVersion"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:vpc/*",
                            "arn:aws:ec2:*:*:subnet/*"
                        ]
                    },
                    {
                        "Action": "route53:AssociateVPCWithHostedZone",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "logs:CreateLogGroup",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/eks/*:*"
                    },
                    {
                        "Action": "logs:PutLogEvents",
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/eks/*:*:*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "eks.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJFCNXU6HPGCIVXYDI",
            "PolicyName": "AmazonEKSServicePolicy",
            "VersionId": "v6"
        },
        "AmazonEKSServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DetachNetworkInterface",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DescribeInstances",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:CreateNetworkInterfacePermission",
                            "iam:ListAttachedRolePolicies",
                            "ec2:CreateSecurityGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DeleteSecurityGroup",
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:AuthorizeSecurityGroupIngress"
                        ],
                        "Condition": {
                            "ForAnyValue:StringLike": {
                                "ec2:ResourceTag/Name": "eks-cluster-sg*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:security-group/*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                        ],
                        "Condition": {
                            "ForAnyValue:StringLike": {
                                "aws:TagKeys": [
                                    "kubernetes.io/cluster/*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:vpc/*",
                            "arn:aws:ec2:*:*:subnet/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                        ],
                        "Condition": {
                            "ForAnyValue:StringLike": {
                                "aws:RequestTag/Name": "eks-cluster-sg*",
                                "aws:TagKeys": [
                                    "kubernetes.io/cluster/*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:security-group/*"
                        ]
                    },
                    {
                        "Action": "route53:AssociateVPCWithHostedZone",
                        "Effect": "Allow",
                        "Resource": "arn:aws:route53:::hostedzone/*"
                    },
                    {
                        "Action": "logs:CreateLogGroup",
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/eks/*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:DescribeLogStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/eks/*:*"
                    },
                    {
                        "Action": "logs:PutLogEvents",
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/eks/*:*:*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KZBLSP26Y",
            "PolicyName": "AmazonEKSServiceRolePolicy",
            "VersionId": "v2"
        },
        "AmazonEKSVPCResourceController": {
            "Document": {
                "Statement": [
                    {
                        "Action": "ec2:CreateNetworkInterfacePermission",
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "ec2:ResourceTag/eks:eni:owner": "eks-vpc-resource-controller"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:DetachNetworkInterface",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DeleteNetworkInterface",
                            "ec2:AttachNetworkInterface",
                            "ec2:UnassignPrivateIpAddresses",
                            "ec2:AssignPrivateIpAddresses"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4PBOFT2NNA",
            "PolicyName": "AmazonEKSVPCResourceController",
            "VersionId": "v1"
        },
        "AmazonEKSWorkerNodePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeInstances",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVolumes",
                            "ec2:DescribeVolumesModifications",
                            "ec2:DescribeVpcs",
                            "eks:DescribeCluster"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIBVMOY52IPQ6HD3PO",
            "PolicyName": "AmazonEKSWorkerNodePolicy",
            "VersionId": "v1"
        },
        "AmazonEKS_CNI_Policy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:AttachNetworkInterface",
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeInstances",
                            "ec2:DescribeTags",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeInstanceTypes",
                            "ec2:DetachNetworkInterface",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:UnassignPrivateIpAddresses"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:network-interface/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJWLAS474LDBXNNTM4",
            "PolicyName": "AmazonEKS_CNI_Policy",
            "VersionId": "v4"
        },
        "AmazonEMRCleanupPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeInstances",
                            "ec2:DescribeLaunchTemplates",
                            "ec2:DescribeSpotInstanceRequests",
                            "ec2:DeleteLaunchTemplate",
                            "ec2:ModifyInstanceAttribute",
                            "ec2:TerminateInstances",
                            "ec2:CancelSpotInstanceRequests",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeInstanceAttribute",
                            "ec2:DescribeVolumeStatus",
                            "ec2:DescribeVolumes",
                            "ec2:DetachVolume",
                            "ec2:DeleteVolume",
                            "ec2:DescribePlacementGroups",
                            "ec2:DeletePlacementGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI4YEZURRMKACW56EA",
            "PolicyName": "AmazonEMRCleanupPolicy",
            "VersionId": "v3"
        },
        "AmazonESCognitoAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cognito-idp:DescribeUserPool",
                            "cognito-idp:CreateUserPoolClient",
                            "cognito-idp:DeleteUserPoolClient",
                            "cognito-idp:DescribeUserPoolClient",
                            "cognito-idp:AdminInitiateAuth",
                            "cognito-idp:AdminUserGlobalSignOut",
                            "cognito-idp:ListUserPoolClients",
                            "cognito-identity:DescribeIdentityPool",
                            "cognito-identity:UpdateIdentityPool",
                            "cognito-identity:SetIdentityPoolRoles",
                            "cognito-identity:GetIdentityPoolRoles"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "cognito-identity.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJL2FUMODIGNDPTZHO",
            "PolicyName": "AmazonESCognitoAccess",
            "VersionId": "v1"
        },
        "AmazonESFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "es:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJM6ZTCU24QL5PZCGC",
            "PolicyName": "AmazonESFullAccess",
            "VersionId": "v1"
        },
        "AmazonESReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "es:Describe*",
                            "es:List*",
                            "es:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJUDMRLOQ7FPAR46FQ",
            "PolicyName": "AmazonESReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonElastiCacheFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "elasticache:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "elasticache.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/elasticache.amazonaws.com/AWSServiceRoleForElastiCache"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIA2V44CPHAUAAECKG",
            "PolicyName": "AmazonElastiCacheFullAccess",
            "VersionId": "v2"
        },
        "AmazonElastiCacheReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elasticache:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIPDACSNQHSENWAKM2",
            "PolicyName": "AmazonElastiCacheReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonElasticContainerRegistryPublicFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecr-public:*",
                            "sts:GetServiceBearerToken"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4F2SFMTI3G",
            "PolicyName": "AmazonElasticContainerRegistryPublicFullAccess",
            "VersionId": "v1"
        },
        "AmazonElasticContainerRegistryPublicPowerUser": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecr-public:GetAuthorizationToken",
                            "sts:GetServiceBearerToken",
                            "ecr-public:BatchCheckLayerAvailability",
                            "ecr-public:GetRepositoryPolicy",
                            "ecr-public:DescribeRepositories",
                            "ecr-public:DescribeRegistries",
                            "ecr-public:DescribeImages",
                            "ecr-public:DescribeImageTags",
                            "ecr-public:GetRepositoryCatalogData",
                            "ecr-public:GetRegistryCatalogData",
                            "ecr-public:InitiateLayerUpload",
                            "ecr-public:UploadLayerPart",
                            "ecr-public:CompleteLayerUpload",
                            "ecr-public:PutImage"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4P6F7N3OP7",
            "PolicyName": "AmazonElasticContainerRegistryPublicPowerUser",
            "VersionId": "v1"
        },
        "AmazonElasticContainerRegistryPublicReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecr-public:GetAuthorizationToken",
                            "sts:GetServiceBearerToken",
                            "ecr-public:BatchCheckLayerAvailability",
                            "ecr-public:GetRepositoryPolicy",
                            "ecr-public:DescribeRepositories",
                            "ecr-public:DescribeRegistries",
                            "ecr-public:DescribeImages",
                            "ecr-public:DescribeImageTags",
                            "ecr-public:GetRepositoryCatalogData",
                            "ecr-public:GetRegistryCatalogData"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4AD7UYLF25",
            "PolicyName": "AmazonElasticContainerRegistryPublicReadOnly",
            "VersionId": "v1"
        },
        "AmazonElasticFileSystemClientFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elasticfilesystem:ClientMount",
                            "elasticfilesystem:ClientRootAccess",
                            "elasticfilesystem:ClientWrite",
                            "elasticfilesystem:DescribeMountTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KAMR2MLDF",
            "PolicyName": "AmazonElasticFileSystemClientFullAccess",
            "VersionId": "v1"
        },
        "AmazonElasticFileSystemClientReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elasticfilesystem:ClientMount",
                            "elasticfilesystem:DescribeMountTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LBXR6UPYS",
            "PolicyName": "AmazonElasticFileSystemClientReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonElasticFileSystemClientReadWriteAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elasticfilesystem:ClientMount",
                            "elasticfilesystem:ClientWrite",
                            "elasticfilesystem:DescribeMountTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4H74P6RBOF",
            "PolicyName": "AmazonElasticFileSystemClientReadWriteAccess",
            "VersionId": "v1"
        },
        "AmazonElasticFileSystemFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:DescribeAlarmsForMetric",
                            "cloudwatch:GetMetricData",
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeNetworkInterfaceAttribute",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "elasticfilesystem:CreateFileSystem",
                            "elasticfilesystem:CreateMountTarget",
                            "elasticfilesystem:CreateTags",
                            "elasticfilesystem:CreateAccessPoint",
                            "elasticfilesystem:DeleteFileSystem",
                            "elasticfilesystem:DeleteMountTarget",
                            "elasticfilesystem:DeleteTags",
                            "elasticfilesystem:DeleteAccessPoint",
                            "elasticfilesystem:DeleteFileSystemPolicy",
                            "elasticfilesystem:DescribeBackupPolicy",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticfilesystem:DescribeFileSystemPolicy",
                            "elasticfilesystem:DescribeLifecycleConfiguration",
                            "elasticfilesystem:DescribeMountTargets",
                            "elasticfilesystem:DescribeMountTargetSecurityGroups",
                            "elasticfilesystem:DescribeTags",
                            "elasticfilesystem:DescribeAccessPoints",
                            "elasticfilesystem:ModifyMountTargetSecurityGroups",
                            "elasticfilesystem:PutBackupPolicy",
                            "elasticfilesystem:PutLifecycleConfiguration",
                            "elasticfilesystem:PutFileSystemPolicy",
                            "elasticfilesystem:UpdateFileSystem",
                            "elasticfilesystem:TagResource",
                            "elasticfilesystem:UntagResource",
                            "elasticfilesystem:ListTagsForResource",
                            "elasticfilesystem:Backup",
                            "elasticfilesystem:Restore",
                            "kms:DescribeKey",
                            "kms:ListAliases"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "elasticfilesystem.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJKXTMNVQGIDNCKPBC",
            "PolicyName": "AmazonElasticFileSystemFullAccess",
            "VersionId": "v6"
        },
        "AmazonElasticFileSystemReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:DescribeAlarmsForMetric",
                            "cloudwatch:GetMetricData",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeNetworkInterfaceAttribute",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs",
                            "elasticfilesystem:DescribeBackupPolicy",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticfilesystem:DescribeFileSystemPolicy",
                            "elasticfilesystem:DescribeLifecycleConfiguration",
                            "elasticfilesystem:DescribeMountTargets",
                            "elasticfilesystem:DescribeMountTargetSecurityGroups",
                            "elasticfilesystem:DescribeTags",
                            "elasticfilesystem:DescribeAccessPoints",
                            "elasticfilesystem:ListTagsForResource",
                            "kms:ListAliases"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIPN5S4NE5JJOKVC4Y",
            "PolicyName": "AmazonElasticFileSystemReadOnlyAccess",
            "VersionId": "v5"
        },
        "AmazonElasticFileSystemServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "backup-storage:MountCapsule",
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeNetworkInterfaceAttribute",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:DescribeKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:kms:*:*:key/*"
                    },
                    {
                        "Action": [
                            "backup:CreateBackupVault",
                            "backup:PutBackupVaultAccessPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:backup:*:*:backup-vault:aws/efs/automatic-backup-vault"
                        ]
                    },
                    {
                        "Action": [
                            "backup:CreateBackupPlan",
                            "backup:CreateBackupSelection"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:backup:*:*:backup-plan:*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "backup.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "backup.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/backup.amazonaws.com/AWSServiceRoleForBackup"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FXCJYWBN7",
            "PolicyName": "AmazonElasticFileSystemServiceRolePolicy",
            "VersionId": "v3"
        },
        "AmazonElasticFileSystemsUtils": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ssm:DescribeAssociation",
                            "ssm:GetDeployablePatchSnapshotForInstance",
                            "ssm:GetDocument",
                            "ssm:DescribeDocument",
                            "ssm:GetManifest",
                            "ssm:GetParameter",
                            "ssm:GetParameters",
                            "ssm:ListAssociations",
                            "ssm:ListInstanceAssociations",
                            "ssm:PutInventory",
                            "ssm:PutComplianceItems",
                            "ssm:PutConfigurePackageResult",
                            "ssm:UpdateAssociationStatus",
                            "ssm:UpdateInstanceAssociationStatus",
                            "ssm:UpdateInstanceInformation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ssmmessages:CreateControlChannel",
                            "ssmmessages:CreateDataChannel",
                            "ssmmessages:OpenControlChannel",
                            "ssmmessages:OpenDataChannel"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2messages:AcknowledgeMessage",
                            "ec2messages:DeleteMessage",
                            "ec2messages:FailMessage",
                            "ec2messages:GetEndpoint",
                            "ec2messages:GetMessages",
                            "ec2messages:SendReply"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "elasticfilesystem:DescribeMountTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeAvailabilityZones"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams",
                            "logs:DescribeLogGroups",
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:PutRetentionPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KVOAQRKXW",
            "PolicyName": "AmazonElasticFileSystemsUtils",
            "VersionId": "v1"
        },
        "AmazonElasticMapReduceEditorsRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateSecurityGroup",
                            "ec2:DescribeSecurityGroups",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DescribeTags",
                            "ec2:DescribeInstances",
                            "ec2:DescribeSubnets",
                            "elasticmapreduce:ListInstances",
                            "elasticmapreduce:DescribeCluster"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "aws:elasticmapreduce:editor-id",
                                    "aws:elasticmapreduce:job-flow-id"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:network-interface/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIBI5CIE6OHUIGLYVG",
            "PolicyName": "AmazonElasticMapReduceEditorsRole",
            "VersionId": "v1"
        },
        "AmazonElasticMapReduceFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:*",
                            "cloudformation:CreateStack",
                            "cloudformation:DescribeStackEvents",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:CancelSpotInstanceRequests",
                            "ec2:CreateRoute",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateTags",
                            "ec2:DeleteRoute",
                            "ec2:DeleteTags",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeInstances",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSpotInstanceRequests",
                            "ec2:DescribeSpotPriceHistory",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeNetworkAcls",
                            "ec2:CreateVpcEndpoint",
                            "ec2:ModifyImageAttribute",
                            "ec2:ModifyInstanceAttribute",
                            "ec2:RequestSpotInstances",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RunInstances",
                            "ec2:TerminateInstances",
                            "elasticmapreduce:*",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:ListRoles",
                            "iam:PassRole",
                            "kms:List*",
                            "s3:*",
                            "sdb:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "elasticmapreduce.amazonaws.com",
                                    "elasticmapreduce.amazonaws.com.cn"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIZP5JFP3AMSGINBB2",
            "PolicyName": "AmazonElasticMapReduceFullAccess",
            "VersionId": "v7"
        },
        "AmazonElasticMapReducePlacementGroupPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DeletePlacementGroup",
                            "ec2:DescribePlacementGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreatePlacementGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:placement-group/EMR_*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LC2KU77YD",
            "PolicyName": "AmazonElasticMapReducePlacementGroupPolicy",
            "VersionId": "v1"
        },
        "AmazonElasticMapReduceReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elasticmapreduce:Describe*",
                            "elasticmapreduce:List*",
                            "elasticmapreduce:GetBlockPublicAccessConfiguration",
                            "elasticmapreduce:ViewEventsFromAllClustersInConsole",
                            "s3:GetObject",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "sdb:Select",
                            "cloudwatch:GetMetricStatistics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIHP6NH2S6GYFCOINC",
            "PolicyName": "AmazonElasticMapReduceReadOnlyAccess",
            "VersionId": "v3"
        },
        "AmazonElasticMapReduceRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CancelSpotInstanceRequests",
                            "ec2:CreateFleet",
                            "ec2:CreateLaunchTemplate",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateTags",
                            "ec2:DeleteLaunchTemplate",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DeleteTags",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeDhcpOptions",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstanceStatus",
                            "ec2:DescribeInstances",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeLaunchTemplates",
                            "ec2:DescribeNetworkAcls",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribePrefixLists",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSpotInstanceRequests",
                            "ec2:DescribeSpotPriceHistory",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeTags",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcEndpointServices",
                            "ec2:DescribeVpcs",
                            "ec2:DetachNetworkInterface",
                            "ec2:ModifyImageAttribute",
                            "ec2:ModifyInstanceAttribute",
                            "ec2:RequestSpotInstances",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RunInstances",
                            "ec2:TerminateInstances",
                            "ec2:DeleteVolume",
                            "ec2:DescribeVolumeStatus",
                            "ec2:DescribeVolumes",
                            "ec2:DetachVolume",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:ListInstanceProfiles",
                            "iam:ListRolePolicies",
                            "iam:PassRole",
                            "s3:CreateBucket",
                            "s3:Get*",
                            "s3:List*",
                            "sdb:BatchPutAttributes",
                            "sdb:Select",
                            "sqs:CreateQueue",
                            "sqs:Delete*",
                            "sqs:GetQueue*",
                            "sqs:PurgeQueue",
                            "sqs:ReceiveMessage",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms",
                            "application-autoscaling:RegisterScalableTarget",
                            "application-autoscaling:DeregisterScalableTarget",
                            "application-autoscaling:PutScalingPolicy",
                            "application-autoscaling:DeleteScalingPolicy",
                            "application-autoscaling:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "spot.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/spot.amazonaws.com/AWSServiceRoleForEC2Spot*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIDI2BQT2LKXZG36TW",
            "PolicyName": "AmazonElasticMapReduceRole",
            "VersionId": "v10"
        },
        "AmazonElasticMapReduceforAutoScalingRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:DescribeAlarms",
                            "elasticmapreduce:ListInstanceGroups",
                            "elasticmapreduce:ModifyInstanceGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJSVXG6QHPE6VHDZ4Q",
            "PolicyName": "AmazonElasticMapReduceforAutoScalingRole",
            "VersionId": "v1"
        },
        "AmazonElasticMapReduceforEC2Role": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:*",
                            "dynamodb:*",
                            "ec2:Describe*",
                            "elasticmapreduce:Describe*",
                            "elasticmapreduce:ListBootstrapActions",
                            "elasticmapreduce:ListClusters",
                            "elasticmapreduce:ListInstanceGroups",
                            "elasticmapreduce:ListInstances",
                            "elasticmapreduce:ListSteps",
                            "kinesis:CreateStream",
                            "kinesis:DeleteStream",
                            "kinesis:DescribeStream",
                            "kinesis:GetRecords",
                            "kinesis:GetShardIterator",
                            "kinesis:MergeShards",
                            "kinesis:PutRecord",
                            "kinesis:SplitShard",
                            "rds:Describe*",
                            "s3:*",
                            "sdb:*",
                            "sns:*",
                            "sqs:*",
                            "glue:CreateDatabase",
                            "glue:UpdateDatabase",
                            "glue:DeleteDatabase",
                            "glue:GetDatabase",
                            "glue:GetDatabases",
                            "glue:CreateTable",
                            "glue:UpdateTable",
                            "glue:DeleteTable",
                            "glue:GetTable",
                            "glue:GetTables",
                            "glue:GetTableVersions",
                            "glue:CreatePartition",
                            "glue:BatchCreatePartition",
                            "glue:UpdatePartition",
                            "glue:DeletePartition",
                            "glue:BatchDeletePartition",
                            "glue:GetPartition",
                            "glue:GetPartitions",
                            "glue:BatchGetPartition",
                            "glue:CreateUserDefinedFunction",
                            "glue:UpdateUserDefinedFunction",
                            "glue:DeleteUserDefinedFunction",
                            "glue:GetUserDefinedFunction",
                            "glue:GetUserDefinedFunctions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIGALS5RCDLZLB3PGS",
            "PolicyName": "AmazonElasticMapReduceforEC2Role",
            "VersionId": "v3"
        },
        "AmazonElasticTranscoderRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:Get*",
                            "s3:PutObject",
                            "s3:PutObjectAcl",
                            "s3:*MultipartUpload*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "1"
                    },
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "2"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJNW3WMKVXFJ2KPIQ2",
            "PolicyName": "AmazonElasticTranscoderRole",
            "VersionId": "v2"
        },
        "AmazonElasticTranscoder_FullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elastictranscoder:*",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "iam:ListRoles",
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "elastictranscoder.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAICFT6XVF3RSR4E7JG",
            "PolicyName": "AmazonElasticTranscoder_FullAccess",
            "VersionId": "v2"
        },
        "AmazonElasticTranscoder_JobsSubmitter": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elastictranscoder:Read*",
                            "elastictranscoder:List*",
                            "elastictranscoder:*Job",
                            "elastictranscoder:*Preset",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "iam:ListRoles",
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ7AUMMRQOVZRI734S",
            "PolicyName": "AmazonElasticTranscoder_JobsSubmitter",
            "VersionId": "v2"
        },
        "AmazonElasticTranscoder_ReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elastictranscoder:Read*",
                            "elastictranscoder:List*",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "iam:ListRoles",
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI3R3CR6KVEWD4DPFY",
            "PolicyName": "AmazonElasticTranscoder_ReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonElasticsearchServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "elasticloadbalancing:AddListenerCertificates",
                            "elasticloadbalancing:RemoveListenerCertificates"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "Stmt1480452973134"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJFEWZPHXKLCVHEUIC",
            "PolicyName": "AmazonElasticsearchServiceRolePolicy",
            "VersionId": "v3"
        },
        "AmazonEventBridgeFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "events:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "events.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4BUM4GCASI",
            "PolicyName": "AmazonEventBridgeFullAccess",
            "VersionId": "v1"
        },
        "AmazonEventBridgeReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "events:DescribeRule",
                            "events:DescribeEventBus",
                            "events:DescribeEventSource",
                            "events:ListEventBuses",
                            "events:ListEventSources",
                            "events:ListRuleNamesByTarget",
                            "events:ListRules",
                            "events:ListTargetsByRule",
                            "events:TestEventPattern",
                            "events:DescribeArchive",
                            "events:ListArchives",
                            "events:DescribeReplay",
                            "events:ListReplays"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4BDMP3LZME",
            "PolicyName": "AmazonEventBridgeReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonEventBridgeSchemasFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "schemas:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AmazonEventBridgeSchemasFullAccess"
                    },
                    {
                        "Action": [
                            "events:PutRule",
                            "events:PutTargets",
                            "events:EnableRule",
                            "events:DisableRule",
                            "events:DeleteRule",
                            "events:RemoveTargets",
                            "events:ListTargetsByRule"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:events:*:*:rule/*Schemas*",
                        "Sid": "AmazonEventBridgeManageRule"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/schemas.amazonaws.com/AWSServiceRoleForSchemas",
                        "Sid": "IAMCreateServiceLinkedRoleForAmazonEventBridgeSchemas"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JF3KP3V5J",
            "PolicyName": "AmazonEventBridgeSchemasFullAccess",
            "VersionId": "v1"
        },
        "AmazonEventBridgeSchemasReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "schemas:ListDiscoverers",
                            "schemas:DescribeDiscoverer",
                            "schemas:ListRegistries",
                            "schemas:DescribeRegistry",
                            "schemas:SearchSchemas",
                            "schemas:ListSchemas",
                            "schemas:ListSchemaVersions",
                            "schemas:DescribeSchema",
                            "schemas:GetDiscoveredSchema",
                            "schemas:DescribeCodeBinding",
                            "schemas:GetCodeBindingSource",
                            "schemas:ListTagsForResource",
                            "schemas:GetResourcePolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AmazonEventBridgeSchemasReadOnlyAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JK7CLVFIU",
            "PolicyName": "AmazonEventBridgeSchemasReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonEventBridgeSchemasServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "events:PutRule",
                            "events:PutTargets",
                            "events:EnableRule",
                            "events:DisableRule",
                            "events:DeleteRule",
                            "events:RemoveTargets",
                            "events:ListTargetsByRule"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:events:*:*:rule/*Schemas-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4GZI6BHNDI",
            "PolicyName": "AmazonEventBridgeSchemasServiceRolePolicy",
            "VersionId": "v1"
        },
        "AmazonFSxConsoleFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:DescribeAlarms",
                            "ds:DescribeDirectories",
                            "ec2:DescribeNetworkInterfaceAttribute",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "fsx:*",
                            "kms:ListAliases",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "fsx.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "s3.data-source.lustre.fsx.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAITDDJ23Y5UZ2WCZRQ",
            "PolicyName": "AmazonFSxConsoleFullAccess",
            "VersionId": "v3"
        },
        "AmazonFSxConsoleReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:DescribeAlarms",
                            "ds:DescribeDirectories",
                            "ec2:DescribeNetworkInterfaceAttribute",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "fsx:Describe*",
                            "fsx:ListTagsForResource",
                            "kms:DescribeKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQUISIZNHGLA6YQFM",
            "PolicyName": "AmazonFSxConsoleReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonFSxFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ds:DescribeDirectories",
                            "fsx:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "fsx.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "s3.data-source.lustre.fsx.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIEUV6Z2X4VNZRVB5I",
            "PolicyName": "AmazonFSxFullAccess",
            "VersionId": "v1"
        },
        "AmazonFSxReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "fsx:Describe*",
                            "fsx:ListTagsForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ4ICPKXR6KK32HT52",
            "PolicyName": "AmazonFSxReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonFSxServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:PutMetricData",
                            "ds:AuthorizeApplication",
                            "ds:GetAuthorizedApplicationDetails",
                            "ds:UnauthorizeApplication",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DisassociateAddress",
                            "route53:AssociateVPCWithHostedZone"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIVQ24YKVRBV5IYQ5G",
            "PolicyName": "AmazonFSxServiceRolePolicy",
            "VersionId": "v3"
        },
        "AmazonForecastFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "forecast:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "forecast.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIAKOTFNTUECQVU7C4",
            "PolicyName": "AmazonForecastFullAccess",
            "VersionId": "v1"
        },
        "AmazonFraudDetectorFullAccessPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "frauddetector:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sagemaker:ListEndpoints",
                            "sagemaker:DescribeEndpoint"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketLocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:ListRoles"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "frauddetector.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4AAPDEABT6",
            "PolicyName": "AmazonFraudDetectorFullAccessPolicy",
            "VersionId": "v1"
        },
        "AmazonFreeRTOSFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "freertos:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJAN6PSDCOH6HXG2SE",
            "PolicyName": "AmazonFreeRTOSFullAccess",
            "VersionId": "v1"
        },
        "AmazonFreeRTOSOTAUpdate": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:GetObjectVersion",
                            "s3:PutObject",
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::afr-ota*"
                    },
                    {
                        "Action": [
                            "signer:StartSigningJob",
                            "signer:DescribeSigningJob",
                            "signer:GetSigningProfile",
                            "signer:PutSigningProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:ListBucketVersions",
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketLocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iot:DeleteJob"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iot:*:*:job/AFR_OTA*"
                    },
                    {
                        "Action": [
                            "iot:DeleteStream"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iot:*:*:stream/AFR_OTA*"
                    },
                    {
                        "Action": [
                            "iot:CreateStream",
                            "iot:CreateJob"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAINC2TXHAYDOK3SWMU",
            "PolicyName": "AmazonFreeRTOSOTAUpdate",
            "VersionId": "v2"
        },
        "AmazonGlacierFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "glacier:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQSTZJWB2AXXAKHVQ",
            "PolicyName": "AmazonGlacierFullAccess",
            "VersionId": "v1"
        },
        "AmazonGlacierReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "glacier:DescribeJob",
                            "glacier:DescribeVault",
                            "glacier:GetDataRetrievalPolicy",
                            "glacier:GetJobOutput",
                            "glacier:GetVaultAccessPolicy",
                            "glacier:GetVaultLock",
                            "glacier:GetVaultNotifications",
                            "glacier:ListJobs",
                            "glacier:ListMultipartUploads",
                            "glacier:ListParts",
                            "glacier:ListTagsForVault",
                            "glacier:ListVaults"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI2D5NJKMU274MET4E",
            "PolicyName": "AmazonGlacierReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonGuardDutyFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "guardduty:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "guardduty.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIKUTKSN4KC63VDQUM",
            "PolicyName": "AmazonGuardDutyFullAccess",
            "VersionId": "v1"
        },
        "AmazonGuardDutyReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "guardduty:Get*",
                            "guardduty:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIVMCEDV336RWUSNHG",
            "PolicyName": "AmazonGuardDutyReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonGuardDutyServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeInstances",
                            "ec2:DescribeImages",
                            "organizations:ListAccounts",
                            "organizations:DescribeAccount",
                            "s3:GetBucketPublicAccessBlock",
                            "s3:GetEncryptionConfiguration",
                            "s3:GetBucketTagging",
                            "s3:GetAccountPublicAccessBlock",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketAcl",
                            "s3:GetBucketPolicy",
                            "s3:GetBucketPolicyStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIHZREZOWNSSA6FWQO",
            "PolicyName": "AmazonGuardDutyServiceRolePolicy",
            "VersionId": "v3"
        },
        "AmazonHoneycodeFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "honeycode:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ECUH6WAX6",
            "PolicyName": "AmazonHoneycodeFullAccess",
            "VersionId": "v1"
        },
        "AmazonHoneycodeReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "honeycode:List*",
                            "honeycode:Get*",
                            "honeycode:Describe*",
                            "honeycode:Query*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CRFGMHZ3B",
            "PolicyName": "AmazonHoneycodeReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonHoneycodeServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sso:GetManagedApplicationInstance"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4COQCKOKUQ",
            "PolicyName": "AmazonHoneycodeServiceRolePolicy",
            "VersionId": "v1"
        },
        "AmazonHoneycodeTeamAssociationFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "honeycode:ListTeamAssociations",
                            "honeycode:ApproveTeamAssociation",
                            "honeycode:RejectTeamAssociation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JH4KLR35J",
            "PolicyName": "AmazonHoneycodeTeamAssociationFullAccess",
            "VersionId": "v1"
        },
        "AmazonHoneycodeTeamAssociationReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "honeycode:ListTeamAssociations"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KRI4FOLPG",
            "PolicyName": "AmazonHoneycodeTeamAssociationReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonHoneycodeWorkbookFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "honeycode:GetScreenData",
                            "honeycode:InvokeScreenAutomation",
                            "honeycode:BatchCreateTableRows",
                            "honeycode:BatchDeleteTableRows",
                            "honeycode:BatchUpdateTableRows",
                            "honeycode:BatchUpsertTableRows",
                            "honeycode:DescribeTableDataImportJob",
                            "honeycode:ListTableColumns",
                            "honeycode:ListTableRows",
                            "honeycode:ListTables",
                            "honeycode:QueryTableRows",
                            "honeycode:StartTableDataImportJob"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4OQLA2WKSW",
            "PolicyName": "AmazonHoneycodeWorkbookFullAccess",
            "VersionId": "v2"
        },
        "AmazonHoneycodeWorkbookReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "honeycode:GetScreenData",
                            "honeycode:DescribeTableDataImportJob",
                            "honeycode:ListTableColumns",
                            "honeycode:ListTableRows",
                            "honeycode:ListTables",
                            "honeycode:QueryTableRows"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4GUHKYOSNH",
            "PolicyName": "AmazonHoneycodeWorkbookReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonInspectorFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "inspector:*",
                            "ec2:DescribeInstances",
                            "ec2:DescribeTags",
                            "sns:ListTopics",
                            "events:DescribeRule",
                            "events:ListRuleNamesByTarget"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "inspector.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "inspector.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/inspector.amazonaws.com/AWSServiceRoleForAmazonInspector"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI7Y6NTA27NWNA5U5E",
            "PolicyName": "AmazonInspectorFullAccess",
            "VersionId": "v5"
        },
        "AmazonInspectorReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "inspector:Describe*",
                            "inspector:Get*",
                            "inspector:List*",
                            "inspector:Preview*",
                            "ec2:DescribeInstances",
                            "ec2:DescribeTags",
                            "sns:ListTopics",
                            "events:DescribeRule",
                            "events:ListRuleNamesByTarget"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJXQNTHTEJ2JFRN2SE",
            "PolicyName": "AmazonInspectorReadOnlyAccess",
            "VersionId": "v4"
        },
        "AmazonInspectorServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "directconnect:DescribeConnections",
                            "directconnect:DescribeDirectConnectGateways",
                            "directconnect:DescribeDirectConnectGatewayAssociations",
                            "directconnect:DescribeDirectConnectGatewayAttachments",
                            "directconnect:DescribeVirtualGateways",
                            "directconnect:DescribeVirtualInterfaces",
                            "directconnect:DescribeTags",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeCustomerGateways",
                            "ec2:DescribeInstances",
                            "ec2:DescribeTags",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeNatGateways",
                            "ec2:DescribeNetworkAcls",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribePrefixLists",
                            "ec2:DescribeRegions",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcPeeringConnections",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpnConnections",
                            "ec2:DescribeVpnGateways",
                            "ec2:DescribeManagedPrefixLists",
                            "ec2:GetManagedPrefixListEntries",
                            "ec2:DescribeVpcEndpointServiceConfigurations",
                            "ec2:DescribeTransitGateways",
                            "ec2:DescribeTransitGatewayAttachments",
                            "ec2:DescribeTransitGatewayVpcAttachments",
                            "ec2:DescribeTransitGatewayRouteTables",
                            "ec2:SearchTransitGatewayRoutes",
                            "ec2:DescribeTransitGatewayPeeringAttachments",
                            "ec2:GetTransitGatewayRouteTablePropagations",
                            "elasticloadbalancing:DescribeListeners",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeLoadBalancerAttributes",
                            "elasticloadbalancing:DescribeRules",
                            "elasticloadbalancing:DescribeTags",
                            "elasticloadbalancing:DescribeTargetGroups",
                            "elasticloadbalancing:DescribeTargetHealth"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJKBMSBWLU2TGXHHUQ",
            "PolicyName": "AmazonInspectorServiceRolePolicy",
            "VersionId": "v5"
        },
        "AmazonKendraFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "kendra.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:ListRoles"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:ListKeys",
                            "kms:ListAliases",
                            "kms:DescribeKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketLocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "secretsmanager:ListSecrets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricData"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "secretsmanager:CreateSecret",
                            "secretsmanager:DescribeSecret"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:secretsmanager:*:*:secret:AmazonKendra-*"
                    },
                    {
                        "Action": "kendra:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4BK2ALV3AM",
            "PolicyName": "AmazonKendraFullAccess",
            "VersionId": "v1"
        },
        "AmazonKendraReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "kendra:Describe*",
                            "kendra:List*",
                            "kendra:Query"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4POKTT2LDN",
            "PolicyName": "AmazonKendraReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonKeyspacesFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cassandra:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "application-autoscaling:DeleteScalingPolicy",
                            "application-autoscaling:DeleteScheduledAction",
                            "application-autoscaling:DeregisterScalableTarget",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingActivities",
                            "application-autoscaling:DescribeScalingPolicies",
                            "application-autoscaling:DescribeScheduledActions",
                            "application-autoscaling:PutScheduledAction",
                            "application-autoscaling:PutScalingPolicy",
                            "application-autoscaling:RegisterScalableTarget"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:PutMetricAlarm"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "cassandra.application-autoscaling.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/cassandra.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_CassandraTable"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4HMS72N6JG",
            "PolicyName": "AmazonKeyspacesFullAccess",
            "VersionId": "v1"
        },
        "AmazonKeyspacesReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cassandra:Select"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingActivities",
                            "application-autoscaling:DescribeScalingPolicies",
                            "application-autoscaling:DescribeScheduledActions",
                            "cloudwatch:DescribeAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LHLFMFIPN",
            "PolicyName": "AmazonKeyspacesReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonKinesisAnalyticsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "kinesisanalytics:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kinesis:CreateStream",
                            "kinesis:DeleteStream",
                            "kinesis:DescribeStream",
                            "kinesis:ListStreams",
                            "kinesis:PutRecord",
                            "kinesis:PutRecords"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "firehose:DescribeDeliveryStream",
                            "firehose:ListDeliveryStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "logs:GetLogEvents",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:ListPolicyVersions",
                            "iam:ListRoles"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/service-role/kinesis-analytics*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQOSKHTXP43R7P5AC",
            "PolicyName": "AmazonKinesisAnalyticsFullAccess",
            "VersionId": "v1"
        },
        "AmazonKinesisAnalyticsReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "kinesisanalytics:Describe*",
                            "kinesisanalytics:Get*",
                            "kinesisanalytics:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kinesis:DescribeStream",
                            "kinesis:ListStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "firehose:DescribeDeliveryStream",
                            "firehose:ListDeliveryStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "logs:GetLogEvents",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:ListPolicyVersions",
                            "iam:ListRoles"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIJIEXZAFUK43U7ARK",
            "PolicyName": "AmazonKinesisAnalyticsReadOnly",
            "VersionId": "v1"
        },
        "AmazonKinesisFirehoseFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "firehose:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJMZQMTZ7FRBFHHAHI",
            "PolicyName": "AmazonKinesisFirehoseFullAccess",
            "VersionId": "v1"
        },
        "AmazonKinesisFirehoseReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "firehose:Describe*",
                            "firehose:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ36NT645INW4K24W6",
            "PolicyName": "AmazonKinesisFirehoseReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonKinesisFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "kinesis:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIVF32HAMOXCUYRAYE",
            "PolicyName": "AmazonKinesisFullAccess",
            "VersionId": "v1"
        },
        "AmazonKinesisReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "kinesis:Get*",
                            "kinesis:List*",
                            "kinesis:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIOCMTDT5RLKZ2CAJO",
            "PolicyName": "AmazonKinesisReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonKinesisVideoStreamsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "kinesisvideo:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIZAN5AK7E7UVYIAZY",
            "PolicyName": "AmazonKinesisVideoStreamsFullAccess",
            "VersionId": "v1"
        },
        "AmazonKinesisVideoStreamsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "kinesisvideo:Describe*",
                            "kinesisvideo:Get*",
                            "kinesisvideo:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJDS2DKUCYTEA7M6UA",
            "PolicyName": "AmazonKinesisVideoStreamsReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonLambdaRolePolicyForLaunchWizardSAP": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateRoute",
                            "ec2:DeleteRoute"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/LaunchWizardApplicationType": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:route-table/*"
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Condition": {
                            "ForAllValues:StringLike": {
                                "aws:TagKeys": "LaunchWizard*"
                            },
                            "StringLike": {
                                "ec2:ResourceTag/LaunchWizardApplicationType": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ssm:GetParameter"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ssm:*:*:parameter/LaunchWizard*"
                    },
                    {
                        "Action": [
                            "ssm:GetDocument",
                            "ssm:sendCommand"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ssm:*:*:document/AWS-RunShellScript"
                        ]
                    },
                    {
                        "Action": [
                            "ssm:SendCommand"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ssm:resourceTag/LaunchWizardApplicationType": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*"
                        ]
                    },
                    {
                        "Action": [
                            "ssm:ListCommands",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeInstances",
                            "ec2:DescribeTags",
                            "ec2:DescribeInstanceAttribute",
                            "ec2:ModifyInstanceAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:ListBucketVersions",
                            "s3:GetObject",
                            "s3:GetObjectVersion",
                            "s3:GetObjectVersionAcl",
                            "s3:PutObject",
                            "s3:PutObjectTagging",
                            "s3:DeleteObject",
                            "s3:DeleteObjectVersion",
                            "s3:DeleteBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::launchwizard*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NMJOHL3TN",
            "PolicyName": "AmazonLambdaRolePolicyForLaunchWizardSAP",
            "VersionId": "v5"
        },
        "AmazonLaunchWizard_Fullaccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "applicationinsights:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "resource-groups:List*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "route53:ChangeResourceRecordSets",
                            "route53:GetChange",
                            "route53:ListResourceRecordSets",
                            "route53:ListHostedZones",
                            "route53:ListHostedZonesByName"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "s3:GetBucketLocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:ListKeys",
                            "kms:ListAliases"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:List*",
                            "cloudwatch:Get*",
                            "cloudwatch:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateInternetGateway",
                            "ec2:CreateNatGateway",
                            "ec2:CreateVpc",
                            "ec2:CreateKeyPair",
                            "ec2:CreateRoute",
                            "ec2:CreateRouteTable",
                            "ec2:CreateSubnet"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:AllocateAddress",
                            "ec2:AllocateHosts",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:AssociateAddress",
                            "ec2:CreateDhcpOptions",
                            "ec2:CreateEgressOnlyInternetGateway",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateVolume",
                            "ec2:CreateVpcEndpoint",
                            "ec2:CreateTags",
                            "ec2:DeleteTags",
                            "ec2:RunInstances",
                            "ec2:StartInstances",
                            "ec2:ModifyInstanceAttribute",
                            "ec2:ModifySubnetAttribute",
                            "ec2:ModifyVolumeAttribute",
                            "ec2:ModifyVpcAttribute",
                            "ec2:AssociateDhcpOptions",
                            "ec2:AssociateSubnetCidrBlock",
                            "ec2:AttachInternetGateway",
                            "ec2:AttachNetworkInterface",
                            "ec2:AttachVolume",
                            "ec2:DeleteDhcpOptions",
                            "ec2:DeleteInternetGateway",
                            "ec2:DeleteKeyPair",
                            "ec2:DeleteNatGateway",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DeleteVolume",
                            "ec2:DeleteVpc",
                            "ec2:DetachInternetGateway",
                            "ec2:DetachVolume",
                            "ec2:DeleteSnapshot",
                            "ec2:AssociateRouteTable",
                            "ec2:AssociateVpcCidrBlock",
                            "ec2:DeleteNetworkAcl",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:DeleteRoute",
                            "ec2:DeleteRouteTable",
                            "ec2:DeleteSubnet",
                            "ec2:DetachNetworkInterface",
                            "ec2:DisassociateAddress",
                            "ec2:DisassociateVpcCidrBlock",
                            "ec2:GetLaunchTemplateData",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:ModifyVolume",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:GetConsoleOutput",
                            "ec2:GetPasswordData",
                            "ec2:ReleaseAddress",
                            "ec2:ReplaceRoute",
                            "ec2:ReplaceRouteTableAssociation",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:DisassociateIamInstanceProfile",
                            "ec2:DisassociateRouteTable",
                            "ec2:DisassociateSubnetCidrBlock",
                            "elasticfilesystem:DeleteFileSystem",
                            "elasticfilesystem:DeleteMountTarget",
                            "ds:AddIpRoutes",
                            "ds:CreateComputer",
                            "ds:CreateMicrosoftAD",
                            "ds:DeleteDirectory"
                        ],
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:CalledVia": "launchwizard.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudformation:DescribeStack*",
                            "cloudformation:Get*",
                            "cloudformation:ListStacks",
                            "cloudformation:SignalResource",
                            "cloudformation:DeleteStack"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/LaunchWizard*/*",
                            "arn:aws:cloudformation:*:*:stack/ApplicationInsights*/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:StopInstances",
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:cloudformation:stack-id": "arn:aws:cloudformation:*:*:stack/LaunchWizard-*/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateInstanceProfile",
                            "iam:DeleteInstanceProfile",
                            "iam:RemoveRoleFromInstanceProfile",
                            "iam:AddRoleToInstanceProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AmazonEC2RoleForLaunchWizard*",
                            "arn:aws:iam::*:instance-profile/LaunchWizard*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEqualsIfExists": {
                                "iam:PassedToService": [
                                    "lambda.amazonaws.com",
                                    "ec2.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AmazonEC2RoleForLaunchWizard*",
                            "arn:aws:iam::*:role/service-role/AmazonLambdaRoleForLaunchWizard*",
                            "arn:aws:iam::*:instance-profile/LaunchWizard*"
                        ]
                    },
                    {
                        "Action": [
                            "autoscaling:AttachInstances",
                            "autoscaling:CreateAutoScalingGroup",
                            "autoscaling:CreateLaunchConfiguration",
                            "autoscaling:DeleteAutoScalingGroup",
                            "autoscaling:DeleteLaunchConfiguration",
                            "autoscaling:UpdateAutoScalingGroup",
                            "logs:CreateLogStream",
                            "logs:DeleteLogGroup",
                            "logs:DeleteLogStream",
                            "logs:DescribeLog*",
                            "logs:PutLogEvents",
                            "resource-groups:CreateGroup",
                            "resource-groups:DeleteGroup",
                            "sns:ListSubscriptionsByTopic",
                            "sns:Publish",
                            "ssm:DeleteDocument",
                            "ssm:DeleteParameter*",
                            "ssm:DescribeDocument*",
                            "ssm:GetDocument",
                            "ssm:PutParameter"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:resource-groups:*:*:group/LaunchWizard*",
                            "arn:aws:sns:*:*:*",
                            "arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/LaunchWizard*",
                            "arn:aws:autoscaling:*:*:launchConfiguration:*:launchConfigurationName/LaunchWizard*",
                            "arn:aws:ssm:*:*:parameter/LaunchWizard*",
                            "arn:aws:ssm:*:*:document/LaunchWizard*",
                            "arn:aws:logs:*:*:log-group:*:*:*",
                            "arn:aws:logs:*:*:log-group:LaunchWizard*"
                        ]
                    },
                    {
                        "Action": "ssm:SendCommand",
                        "Condition": {
                            "ForAllValues:StringLike": {
                                "aws:TagKeys": "LaunchWizard*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:DeleteLogStream",
                            "logs:GetLogEvents",
                            "logs:PutLogEvents",
                            "ssm:AddTagsToResource",
                            "ssm:DescribeDocument",
                            "ssm:GetDocument",
                            "ssm:ListTagsForResource",
                            "ssm:RemoveTagsFromResource"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:*:*:*",
                            "arn:aws:logs:*:*:log-group:LaunchWizard*",
                            "arn:aws:ssm:*:*:parameter/LaunchWizard*",
                            "arn:aws:ssm:*:*:document/LaunchWizard*"
                        ]
                    },
                    {
                        "Action": [
                            "autoscaling:Describe*",
                            "cloudformation:DescribeAccountLimits",
                            "cloudformation:DescribeStackDriftDetectionStatus",
                            "cloudformation:List*",
                            "ds:Describe*",
                            "ds:ListAuthorizedApplications",
                            "ec2:Describe*",
                            "ec2:Get*",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:GetUser",
                            "iam:GetPolicyVersion",
                            "iam:GetPolicy",
                            "iam:List*",
                            "logs:CreateLogGroup",
                            "logs:GetLogDelivery",
                            "logs:GetLogRecord",
                            "logs:ListLogDeliveries",
                            "resource-groups:Get*",
                            "resource-groups:List*",
                            "servicequotas:GetServiceQuota",
                            "servicequotas:ListServiceQuotas",
                            "sns:ListSubscriptions",
                            "sns:ListTopics",
                            "ssm:CreateDocument",
                            "ssm:DescribeAutomation*",
                            "ssm:DescribeInstanceInformation",
                            "ssm:DescribeParameters",
                            "ssm:GetAutomationExecution",
                            "ssm:GetCommandInvocation",
                            "ssm:GetParameter*",
                            "ssm:GetConnectionStatus",
                            "ssm:ListCommand*",
                            "ssm:ListDocument*",
                            "ssm:ListInstanceAssociations",
                            "ssm:SendAutomationSignal",
                            "ssm:StartAutomationExecution",
                            "ssm:StopAutomationExecution",
                            "tag:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "logs:GetLog*",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:*:*:*",
                            "arn:aws:logs:*:*:log-group:LaunchWizard*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:List*",
                            "cloudformation:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/LaunchWizard*/"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "autoscaling.amazonaws.com",
                                    "application-insights.amazonaws.com",
                                    "events.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "launchwizard:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sqs:TagQueue",
                            "sqs:GetQueueUrl",
                            "sqs:AddPermission",
                            "sqs:ListQueues",
                            "sqs:DeleteQueue",
                            "sqs:GetQueueAttributes",
                            "sqs:ListQueueTags",
                            "sqs:CreateQueue",
                            "sqs:SetQueueAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sqs:*:*:LaunchWizard*"
                    },
                    {
                        "Action": [
                            "cloudwatch:PutMetricAlarm",
                            "iam:GetInstanceProfile",
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:DescribeAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudwatch:*:*:alarm:LaunchWizard*",
                            "arn:aws:iam::*:instance-profile/LaunchWizard*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "route53:ListHostedZones",
                            "ec2:CreateSecurityGroup",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticfilesystem:CreateFileSystem",
                            "elasticfilesystem:CreateMountTarget",
                            "elasticfilesystem:DescribeMountTargets",
                            "elasticfilesystem:DescribeMountTargetSecurityGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::launchwizard*",
                            "arn:aws:s3:::launchwizard*/*",
                            "arn:aws:s3:::aws-sap-data-provider/config.properties"
                        ]
                    },
                    {
                        "Action": "cloudformation:TagResource",
                        "Condition": {
                            "ForAllValues:StringLike": {
                                "aws:TagKeys": "LaunchWizard*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:PutBucketVersioning",
                            "s3:DeleteBucket",
                            "lambda:CreateFunction",
                            "lambda:DeleteFunction",
                            "lambda:GetFunction",
                            "lambda:GetFunctionConfiguration",
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:LaunchWizard*",
                            "arn:aws:s3:::launchwizard*"
                        ]
                    },
                    {
                        "Action": [
                            "dynamodb:CreateTable",
                            "dynamodb:DescribeTable",
                            "dynamodb:DeleteTable"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:dynamodb:*:*:table/LaunchWizard*"
                    },
                    {
                        "Action": [
                            "secretsmanager:CreateSecret",
                            "secretsmanager:DeleteSecret",
                            "secretsmanager:TagResource",
                            "secretsmanager:UntagResource",
                            "secretsmanager:PutResourcePolicy",
                            "secretsmanager:DeleteResourcePolicy",
                            "secretsmanager:ListSecretVersionIds"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:secretsmanager:*:*:secret:LaunchWizard*"
                    },
                    {
                        "Action": [
                            "secretsmanager:GetRandomPassword",
                            "secretsmanager:ListSecrets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ABPQ7BLC2",
            "PolicyName": "AmazonLaunchWizard_Fullaccess",
            "VersionId": "v6"
        },
        "AmazonLexBotPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "polly:SynthesizeSpeech"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "comprehend:DetectSentiment"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI6JDATUYJVRFRJYWS",
            "PolicyName": "AmazonLexBotPolicy",
            "VersionId": "v2"
        },
        "AmazonLexFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DescribeAlarmsForMetric",
                            "kms:DescribeKey",
                            "kms:ListAliases",
                            "lambda:GetPolicy",
                            "lambda:ListFunctions",
                            "lex:*",
                            "polly:DescribeVoices",
                            "polly:SynthesizeSpeech"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "kendra:ListIndices",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "lambda:AddPermission",
                            "lambda:RemovePermission"
                        ],
                        "Condition": {
                            "StringLike": {
                                "lambda:Principal": "lex.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:lambda:*:*:function:AmazonLex*"
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "iam:DeleteRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots",
                            "arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"
                        ]
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "lex.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"
                        ]
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"
                        ]
                    },
                    {
                        "Action": [
                            "iam:DetachRolePolicy"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AmazonLexBotPolicy"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"
                        ]
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "channels.lex.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"
                        ]
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": [
                                    "lex.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"
                        ]
                    },
                    {
                        "Action": [
                            "iam:DetachRolePolicy"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/LexChannelPolicy"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJVLXDHKVC23HRTKSI",
            "PolicyName": "AmazonLexFullAccess",
            "VersionId": "v6"
        },
        "AmazonLexReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "lex:GetBot",
                            "lex:GetBotAlias",
                            "lex:GetBotAliases",
                            "lex:GetBots",
                            "lex:GetBotChannelAssociation",
                            "lex:GetBotChannelAssociations",
                            "lex:GetBotVersions",
                            "lex:GetBuiltinIntent",
                            "lex:GetBuiltinIntents",
                            "lex:GetBuiltinSlotTypes",
                            "lex:GetIntent",
                            "lex:GetIntents",
                            "lex:GetIntentVersions",
                            "lex:GetSlotType",
                            "lex:GetSlotTypes",
                            "lex:GetSlotTypeVersions",
                            "lex:GetUtterancesView"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJGBI5LSMAJNDGBNAM",
            "PolicyName": "AmazonLexReadOnly",
            "VersionId": "v1"
        },
        "AmazonLexRunBotsOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "lex:PostContent",
                            "lex:PostText",
                            "lex:PutSession",
                            "lex:GetSession",
                            "lex:DeleteSession"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJVZGB5CM3N6YWJHBE",
            "PolicyName": "AmazonLexRunBotsOnly",
            "VersionId": "v2"
        },
        "AmazonMCSFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "application-autoscaling:DeleteScalingPolicy",
                            "application-autoscaling:DeregisterScalableTarget",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingActivities",
                            "application-autoscaling:DescribeScalingPolicies",
                            "application-autoscaling:PutScalingPolicy",
                            "application-autoscaling:RegisterScalableTarget",
                            "application-autoscaling:PutScheduledAction",
                            "application-autoscaling:DeleteScheduledAction",
                            "application-autoscaling:DescribeScheduledActions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cassandra:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:PutMetricAlarm"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "cassandra.application-autoscaling.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/cassandra.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_CassandraTable"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4K6JRQY7NV",
            "PolicyName": "AmazonMCSFullAccess",
            "VersionId": "v2"
        },
        "AmazonMCSReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cassandra:Select"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingActivities",
                            "application-autoscaling:DescribeScalingPolicies",
                            "application-autoscaling:DescribeScheduledActions",
                            "cloudwatch:DescribeAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4F6NKMXCNS",
            "PolicyName": "AmazonMCSReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonMQApiFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mq:*",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:DetachNetworkInterface",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeNetworkInterfacePermissions",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/amazonmq/*"
                        ]
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "mq.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI4CMO533EBV3L2GW4",
            "PolicyName": "AmazonMQApiFullAccess",
            "VersionId": "v2"
        },
        "AmazonMQApiReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mq:Describe*",
                            "mq:List*",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIKI5JRHKAFHXQJKMO",
            "PolicyName": "AmazonMQApiReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonMQFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mq:*",
                            "cloudformation:CreateStack",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:DetachNetworkInterface",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeNetworkInterfacePermissions",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:CreateSecurityGroup",
                            "ec2:AuthorizeSecurityGroupIngress"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/amazonmq/*"
                        ]
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "mq.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJLKBROJNQYDDXOOGG",
            "PolicyName": "AmazonMQFullAccess",
            "VersionId": "v5"
        },
        "AmazonMQReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mq:Describe*",
                            "mq:List*",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJFH3NKGULDUU66D5C",
            "PolicyName": "AmazonMQReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonMQServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeVpcEndpoints"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:CreateVpcEndpoint"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:vpc/*",
                            "arn:aws:ec2:*:*:subnet/*",
                            "arn:aws:ec2:*:*:security-group/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateVpcEndpoint"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:RequestTag/AMQManaged": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:vpc-endpoint/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "ec2:CreateAction": "CreateVpcEndpoint"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*"
                    },
                    {
                        "Action": [
                            "ec2:DeleteVpcEndpoints"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "ec2:ResourceTag/AMQManaged": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*"
                    },
                    {
                        "Action": [
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams",
                            "logs:DescribeLogGroups",
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/amazonmq/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LFY3JJDI6",
            "PolicyName": "AmazonMQServiceRolePolicy",
            "VersionId": "v1"
        },
        "AmazonMSKFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "kafka:*",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSecurityGroups",
                            "kms:DescribeKey",
                            "kms:CreateGrant",
                            "logs:CreateLogDelivery",
                            "logs:GetLogDelivery",
                            "logs:UpdateLogDelivery",
                            "logs:DeleteLogDelivery",
                            "logs:ListLogDeliveries",
                            "S3:GetBucketPolicy",
                            "logs:PutResourcePolicy",
                            "logs:DescribeResourcePolicies",
                            "logs:DescribeLogGroups",
                            "firehose:TagDeliveryStream"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "kafka.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/kafka.amazonaws.com/AWSServiceRoleForKafka*"
                    },
                    {
                        "Action": [
                            "iam:AttachRolePolicy",
                            "iam:PutRolePolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/kafka.amazonaws.com/AWSServiceRoleForKafka*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "delivery.logs.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/delivery.logs.amazonaws.com/AWSServiceRoleForLogDelivery*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJERQQQTWI5OMENTQE",
            "PolicyName": "AmazonMSKFullAccess",
            "VersionId": "v3"
        },
        "AmazonMSKReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "kafka:Describe*",
                            "kafka:List*",
                            "kafka:Get*",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "kms:DescribeKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJGMUI3DP2EVP3VGYO",
            "PolicyName": "AmazonMSKReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonMWAAServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:DescribeLogGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:airflow-*:*"
                    },
                    {
                        "Action": [
                            "ec2:AttachNetworkInterface",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:DescribeDhcpOptions",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcs",
                            "ec2:DetachNetworkInterface"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:CreateVpcEndpoint",
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:TagKeys": "AmazonMWAAManaged"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*"
                    },
                    {
                        "Action": [
                            "ec2:ModifyVpcEndpoint",
                            "ec2:DeleteVpcEndpoints"
                        ],
                        "Condition": {
                            "Null": {
                                "aws:ResourceTag/AmazonMWAAManaged": false
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*"
                    },
                    {
                        "Action": [
                            "ec2:CreateVpcEndpoint",
                            "ec2:ModifyVpcEndpoint"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:vpc/*",
                            "arn:aws:ec2:*:*:security-group/*",
                            "arn:aws:ec2:*:*:subnet/*"
                        ]
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:TagKeys": "AmazonMWAAManaged"
                            },
                            "StringEquals": {
                                "ec2:CreateAction": "CreateVpcEndpoint"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JU5RBMG7W",
            "PolicyName": "AmazonMWAAServiceRolePolicy",
            "VersionId": "v1"
        },
        "AmazonMachineLearningBatchPredictionsAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "machinelearning:CreateBatchPrediction",
                            "machinelearning:DeleteBatchPrediction",
                            "machinelearning:DescribeBatchPredictions",
                            "machinelearning:GetBatchPrediction",
                            "machinelearning:UpdateBatchPrediction"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAILOI4HTQSFTF3GQSC",
            "PolicyName": "AmazonMachineLearningBatchPredictionsAccess",
            "VersionId": "v1"
        },
        "AmazonMachineLearningCreateOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "machinelearning:Add*",
                            "machinelearning:Create*",
                            "machinelearning:Delete*",
                            "machinelearning:Describe*",
                            "machinelearning:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJDRUNIC2RYAMAT3CK",
            "PolicyName": "AmazonMachineLearningCreateOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonMachineLearningFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "machinelearning:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIWKW6AGSGYOQ5ERHC",
            "PolicyName": "AmazonMachineLearningFullAccess",
            "VersionId": "v1"
        },
        "AmazonMachineLearningManageRealTimeEndpointOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "machinelearning:CreateRealtimeEndpoint",
                            "machinelearning:DeleteRealtimeEndpoint"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJJL3PC3VCSVZP6OCI",
            "PolicyName": "AmazonMachineLearningManageRealTimeEndpointOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonMachineLearningReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "machinelearning:Describe*",
                            "machinelearning:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIW5VYBCGEX56JCINC",
            "PolicyName": "AmazonMachineLearningReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonMachineLearningRealTimePredictionOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "machinelearning:Predict"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIWMCNQPRWMWT36GVQ",
            "PolicyName": "AmazonMachineLearningRealTimePredictionOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonMachineLearningRoleforRedshiftDataSourceV3": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateSecurityGroup",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:RevokeSecurityGroupIngress",
                            "redshift:AuthorizeClusterSecurityGroupIngress",
                            "redshift:CreateClusterSecurityGroup",
                            "redshift:DescribeClusters",
                            "redshift:DescribeClusterSecurityGroups",
                            "redshift:ModifyCluster",
                            "redshift:RevokeClusterSecurityGroupIngress"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:PutBucketPolicy",
                            "s3:GetBucketLocation",
                            "s3:GetBucketPolicy",
                            "s3:GetObject",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::amazon-machine-learning*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4DIXIZO4E2",
            "PolicyName": "AmazonMachineLearningRoleforRedshiftDataSourceV3",
            "VersionId": "v1"
        },
        "AmazonMacieFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "macie:*",
                            "macie2:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "macie.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJJF2N5FR6S5TZN5OA",
            "PolicyName": "AmazonMacieFullAccess",
            "VersionId": "v3"
        },
        "AmazonMacieHandshakeRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "iam:AWSServiceName": "macie.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ7CVEIVL347MLOVKI",
            "PolicyName": "AmazonMacieHandshakeRole",
            "VersionId": "v1"
        },
        "AmazonMacieServiceRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:Get*",
                            "s3:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJVV7PON3FPBL2PSGC",
            "PolicyName": "AmazonMacieServiceRole",
            "VersionId": "v1"
        },
        "AmazonMacieServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetEventSelectors",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:ListTags",
                            "cloudtrail:LookupEvents",
                            "iam:ListAccountAliases",
                            "organizations:DescribeAccount",
                            "organizations:ListAccounts",
                            "s3:GetAccountPublicAccessBlock",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketAcl",
                            "s3:GetBucketLocation",
                            "s3:GetBucketLogging",
                            "s3:GetBucketPolicy",
                            "s3:GetBucketPolicyStatus",
                            "s3:GetBucketPublicAccessBlock",
                            "s3:GetBucketTagging",
                            "s3:GetBucketVersioning",
                            "s3:GetBucketWebsite",
                            "s3:GetEncryptionConfiguration",
                            "s3:GetLifecycleConfiguration",
                            "s3:GetReplicationConfiguration",
                            "s3:ListBucket",
                            "s3:GetObject",
                            "s3:GetObjectAcl",
                            "s3:GetObjectTagging"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudtrail:CreateTrail",
                            "cloudtrail:StartLogging",
                            "cloudtrail:StopLogging",
                            "cloudtrail:UpdateTrail",
                            "cloudtrail:DeleteTrail",
                            "cloudtrail:PutEventSelectors"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudtrail:*:*:trail/AWSMacieTrail-DO-NOT-EDIT"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:DeleteBucket",
                            "s3:DeleteBucketPolicy",
                            "s3:DeleteBucketWebsite",
                            "s3:DeleteObject",
                            "s3:DeleteObjectTagging",
                            "s3:DeleteObjectVersion",
                            "s3:DeleteObjectVersionTagging",
                            "s3:PutBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::awsmacie-*",
                            "arn:aws:s3:::awsmacietrail-*",
                            "arn:aws:s3:::*-awsmacietrail-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJPLHONRH2HP2H6TNQ",
            "PolicyName": "AmazonMacieServiceRolePolicy",
            "VersionId": "v4"
        },
        "AmazonMacieSetupRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetEventSelectors",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:ListTags",
                            "cloudtrail:LookupEvents",
                            "iam:ListAccountAliases",
                            "s3:GetBucket*",
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudtrail:CreateTrail",
                            "cloudtrail:StartLogging",
                            "cloudtrail:StopLogging",
                            "cloudtrail:UpdateTrail",
                            "cloudtrail:DeleteTrail",
                            "cloudtrail:PutEventSelectors"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudtrail:*:*:trail/AWSMacieTrail-DO-NOT-EDIT"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:DeleteBucket",
                            "s3:DeleteBucketPolicy",
                            "s3:DeleteBucketWebsite",
                            "s3:DeleteObject",
                            "s3:DeleteObjectTagging",
                            "s3:DeleteObjectVersion",
                            "s3:DeleteObjectVersionTagging",
                            "s3:PutBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::awsmacie-*",
                            "arn:aws:s3:::awsmacietrail-*",
                            "arn:aws:s3:::*-awsmacietrail-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ5DC6UBVKND7ADSKA",
            "PolicyName": "AmazonMacieSetupRole",
            "VersionId": "v2"
        },
        "AmazonManagedBlockchainConsoleFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "managedblockchain:*",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:CreateVpcEndpoint",
                            "kms:ListAliases",
                            "kms:DescribeKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ONVQBFILL",
            "PolicyName": "AmazonManagedBlockchainConsoleFullAccess",
            "VersionId": "v1"
        },
        "AmazonManagedBlockchainFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "managedblockchain:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CGBOJKRYD",
            "PolicyName": "AmazonManagedBlockchainFullAccess",
            "VersionId": "v1"
        },
        "AmazonManagedBlockchainReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "managedblockchain:Get*",
                            "managedblockchain:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4OIIAURVWV",
            "PolicyName": "AmazonManagedBlockchainReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonManagedBlockchainServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/managedblockchain/*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/managedblockchain/*:log-stream:*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MMO7477QN",
            "PolicyName": "AmazonManagedBlockchainServiceRolePolicy",
            "VersionId": "v1"
        },
        "AmazonMechanicalTurkFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mechanicalturk:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJDGCL5BET73H5QIQC",
            "PolicyName": "AmazonMechanicalTurkFullAccess",
            "VersionId": "v1"
        },
        "AmazonMechanicalTurkReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mechanicalturk:Get*",
                            "mechanicalturk:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIO5IY3G3WXSX5PPRM",
            "PolicyName": "AmazonMechanicalTurkReadOnly",
            "VersionId": "v3"
        },
        "AmazonMobileAnalyticsFinancialReportAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "mobileanalytics:GetReports",
                            "mobileanalytics:GetFinancialReports"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJKJHO2R27TXKCWBU4",
            "PolicyName": "AmazonMobileAnalyticsFinancialReportAccess",
            "VersionId": "v1"
        },
        "AmazonMobileAnalyticsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "mobileanalytics:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIJIKLU2IJ7WJ6DZFG",
            "PolicyName": "AmazonMobileAnalyticsFullAccess",
            "VersionId": "v1"
        },
        "AmazonMobileAnalyticsNon-financialReportAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "mobileanalytics:GetReports",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIQLKQ4RXPUBBVVRDE",
            "PolicyName": "AmazonMobileAnalyticsNon-financialReportAccess",
            "VersionId": "v1"
        },
        "AmazonMobileAnalyticsWriteOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "mobileanalytics:PutEvents",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ5TAWBBQC2FAL3G6G",
            "PolicyName": "AmazonMobileAnalyticsWriteOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonMonitronFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "monitron.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "monitron:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:ListKeys",
                            "kms:DescribeKey",
                            "kms:ListAliases"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "kms:CreateGrant",
                        "Condition": {
                            "Bool": {
                                "kms:GrantIsForAWSResource": true
                            },
                            "StringLike": {
                                "kms:ViaService": [
                                    "monitron.*.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "ds:DescribeDirectories",
                            "ds:DescribeTrusts"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AWSSSOPermissions"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MHDVZEITQ",
            "PolicyName": "AmazonMonitronFullAccess",
            "VersionId": "v1"
        },
        "AmazonPersonalizeFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "personalize:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:PutMetricData",
                            "cloudwatch:ListMetrics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:DeleteObject",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*Personalize*",
                            "arn:aws:s3:::*personalize*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "personalize.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ45XBPPZNI3MMVAUK",
            "PolicyName": "AmazonPersonalizeFullAccess",
            "VersionId": "v2"
        },
        "AmazonPollyFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "polly:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJUZOYQU6XQYPR7EWS",
            "PolicyName": "AmazonPollyFullAccess",
            "VersionId": "v1"
        },
        "AmazonPollyReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "polly:DescribeVoices",
                            "polly:GetLexicon",
                            "polly:GetSpeechSynthesisTask",
                            "polly:ListLexicons",
                            "polly:ListSpeechSynthesisTasks",
                            "polly:SynthesizeSpeech"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ5FENL3CVPL2FPDLA",
            "PolicyName": "AmazonPollyReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonQLDBConsoleFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "qldb:CreateLedger",
                            "qldb:UpdateLedger",
                            "qldb:DeleteLedger",
                            "qldb:ListLedgers",
                            "qldb:DescribeLedger",
                            "qldb:ExportJournalToS3",
                            "qldb:ListJournalS3Exports",
                            "qldb:ListJournalS3ExportsForLedger",
                            "qldb:DescribeJournalS3Export",
                            "qldb:CancelJournalKinesisStream",
                            "qldb:DescribeJournalKinesisStream",
                            "qldb:ListJournalKinesisStreamsForLedger",
                            "qldb:StreamJournalToKinesis",
                            "qldb:GetBlock",
                            "qldb:GetDigest",
                            "qldb:GetRevision",
                            "qldb:GetBlock",
                            "qldb:TagResource",
                            "qldb:UntagResource",
                            "qldb:ListTagsForResource",
                            "qldb:SendCommand",
                            "qldb:ExecuteStatement",
                            "qldb:ShowCatalog",
                            "qldb:InsertSampleData"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "dbqms:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kinesis:ListStreams",
                            "kinesis:DescribeStream"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4H2DEHAFRU",
            "PolicyName": "AmazonQLDBConsoleFullAccess",
            "VersionId": "v2"
        },
        "AmazonQLDBFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "qldb:CreateLedger",
                            "qldb:UpdateLedger",
                            "qldb:DeleteLedger",
                            "qldb:ListLedgers",
                            "qldb:DescribeLedger",
                            "qldb:ExportJournalToS3",
                            "qldb:ListJournalS3Exports",
                            "qldb:ListJournalS3ExportsForLedger",
                            "qldb:DescribeJournalS3Export",
                            "qldb:CancelJournalKinesisStream",
                            "qldb:DescribeJournalKinesisStream",
                            "qldb:ListJournalKinesisStreamsForLedger",
                            "qldb:StreamJournalToKinesis",
                            "qldb:GetBlock",
                            "qldb:GetDigest",
                            "qldb:GetRevision",
                            "qldb:GetBlock",
                            "qldb:TagResource",
                            "qldb:UntagResource",
                            "qldb:ListTagsForResource",
                            "qldb:SendCommand"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4HHBBWGE2J",
            "PolicyName": "AmazonQLDBFullAccess",
            "VersionId": "v2"
        },
        "AmazonQLDBReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "qldb:ListLedgers",
                            "qldb:DescribeLedger",
                            "qldb:ListJournalS3Exports",
                            "qldb:ListJournalS3ExportsForLedger",
                            "qldb:DescribeJournalS3Export",
                            "qldb:DescribeJournalKinesisStream",
                            "qldb:ListJournalKinesisStreamsForLedger",
                            "qldb:GetBlock",
                            "qldb:GetDigest",
                            "qldb:GetRevision",
                            "qldb:GetBlock",
                            "qldb:ListTagsForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IC74JOQJR",
            "PolicyName": "AmazonQLDBReadOnly",
            "VersionId": "v2"
        },
        "AmazonRDSBetaServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AllocateAddress",
                            "ec2:AssociateAddress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeCoipPools",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeLocalGatewayRouteTables",
                            "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
                            "ec2:DescribeLocalGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs",
                            "ec2:DisassociateAddress",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:ModifyVpcEndpoint",
                            "ec2:ReleaseAddress",
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:CreateVpcEndpoint",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DeleteVpcEndpoints"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/rds/*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:PutMetricData"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "cloudwatch:namespace": "AWS/RDS"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ36CJAE6OYAR4YEK4",
            "PolicyName": "AmazonRDSBetaServiceRolePolicy",
            "VersionId": "v5"
        },
        "AmazonRDSDataFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "secretsmanager:GetSecretValue",
                            "secretsmanager:PutResourcePolicy",
                            "secretsmanager:PutSecretValue",
                            "secretsmanager:DeleteSecret",
                            "secretsmanager:DescribeSecret",
                            "secretsmanager:TagResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:secretsmanager:*:*:secret:rds-db-credentials/*",
                        "Sid": "SecretsManagerDbCredentialsAccess"
                    },
                    {
                        "Action": [
                            "dbqms:CreateFavoriteQuery",
                            "dbqms:DescribeFavoriteQueries",
                            "dbqms:UpdateFavoriteQuery",
                            "dbqms:DeleteFavoriteQueries",
                            "dbqms:GetQueryString",
                            "dbqms:CreateQueryHistory",
                            "dbqms:DescribeQueryHistory",
                            "dbqms:UpdateQueryHistory",
                            "dbqms:DeleteQueryHistory",
                            "rds-data:ExecuteSql",
                            "rds-data:ExecuteStatement",
                            "rds-data:BatchExecuteStatement",
                            "rds-data:BeginTransaction",
                            "rds-data:CommitTransaction",
                            "rds-data:RollbackTransaction",
                            "secretsmanager:CreateSecret",
                            "secretsmanager:ListSecrets",
                            "secretsmanager:GetRandomPassword",
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "RDSDataServiceAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ5HUMNZCSW4IC74T6",
            "PolicyName": "AmazonRDSDataFullAccess",
            "VersionId": "v3"
        },
        "AmazonRDSDirectoryServiceAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ds:DescribeDirectories",
                            "ds:AuthorizeApplication",
                            "ds:UnauthorizeApplication",
                            "ds:GetAuthorizedApplicationDetails"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIL4KBY57XWMYUHKUU",
            "PolicyName": "AmazonRDSDirectoryServiceAccess",
            "VersionId": "v2"
        },
        "AmazonRDSEnhancedMonitoringRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:PutRetentionPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:RDS*"
                        ],
                        "Sid": "EnableCreationAndManagementOfRDSCloudwatchLogGroups"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:RDS*:log-stream:*"
                        ],
                        "Sid": "EnableCreationAndManagementOfRDSCloudwatchLogStreams"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJV7BS425S4PTSSVGK",
            "PolicyName": "AmazonRDSEnhancedMonitoringRole",
            "VersionId": "v1"
        },
        "AmazonRDSFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rds:*",
                            "application-autoscaling:DeleteScalingPolicy",
                            "application-autoscaling:DeregisterScalableTarget",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingActivities",
                            "application-autoscaling:DescribeScalingPolicies",
                            "application-autoscaling:PutScalingPolicy",
                            "application-autoscaling:RegisterScalableTarget",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DeleteAlarms",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeCoipPools",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeLocalGatewayRouteTables",
                            "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
                            "ec2:DescribeLocalGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs",
                            "ec2:GetCoipPoolUsage",
                            "sns:ListSubscriptions",
                            "sns:ListTopics",
                            "sns:Publish",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "outposts:GetOutpostInstanceTypes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "pi:*",
                        "Effect": "Allow",
                        "Resource": "arn:aws:pi:*:*:metrics/rds/*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "rds.amazonaws.com",
                                    "rds.application-autoscaling.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI3R4QMOG6Q5A4VWVG",
            "PolicyName": "AmazonRDSFullAccess",
            "VersionId": "v8"
        },
        "AmazonRDSPreviewServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rds:CrossRegionCommunication"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:AllocateAddress",
                            "ec2:AssociateAddress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeCoipPools",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeLocalGatewayRouteTables",
                            "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
                            "ec2:DescribeLocalGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs",
                            "ec2:DisassociateAddress",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:ReleaseAddress",
                            "ec2:RevokeSecurityGroupIngress"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/rds/*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:PutMetricData"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "cloudwatch:namespace": "AWS/RDS"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIZHJJBU3675JOUEMQ",
            "PolicyName": "AmazonRDSPreviewServiceRolePolicy",
            "VersionId": "v4"
        },
        "AmazonRDSReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rds:Describe*",
                            "rds:ListTagsForResource",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricStatistics",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJKTTTYV2IIHKLZ346",
            "PolicyName": "AmazonRDSReadOnlyAccess",
            "VersionId": "v3"
        },
        "AmazonRDSServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rds:CrossRegionCommunication"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:AllocateAddress",
                            "ec2:AssociateAddress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeCoipPools",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeLocalGatewayRouteTables",
                            "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
                            "ec2:DescribeLocalGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs",
                            "ec2:DisassociateAddress",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:ModifyVpcEndpoint",
                            "ec2:ReleaseAddress",
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:CreateVpcEndpoint",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DeleteVpcEndpoints",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:UnassignPrivateIpAddresses"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/rds/*",
                            "arn:aws:logs:*:*:log-group:/aws/docdb/*",
                            "arn:aws:logs:*:*:log-group:/aws/neptune/*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*",
                            "arn:aws:logs:*:*:log-group:/aws/docdb/*:log-stream:*",
                            "arn:aws:logs:*:*:log-group:/aws/neptune/*:log-stream:*"
                        ]
                    },
                    {
                        "Action": [
                            "kinesis:CreateStream",
                            "kinesis:PutRecord",
                            "kinesis:PutRecords",
                            "kinesis:DescribeStream",
                            "kinesis:SplitShard",
                            "kinesis:MergeShards",
                            "kinesis:DeleteStream",
                            "kinesis:UpdateShardCount"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:kinesis:*:*:stream/aws-rds-das-*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:PutMetricData"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "cloudwatch:namespace": "AWS/RDS"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIPEU5ZOBJWKWHUIBA",
            "PolicyName": "AmazonRDSServiceRolePolicy",
            "VersionId": "v9"
        },
        "AmazonRedshiftDataFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "redshift-data:ExecuteStatement",
                            "redshift-data:CancelStatement",
                            "redshift-data:ListStatements",
                            "redshift-data:GetStatementResult",
                            "redshift-data:DescribeStatement",
                            "redshift-data:ListDatabases",
                            "redshift-data:ListSchemas",
                            "redshift-data:ListTables",
                            "redshift-data:DescribeTable"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "DataAPIPermissions"
                    },
                    {
                        "Action": [
                            "secretsmanager:GetSecretValue"
                        ],
                        "Condition": {
                            "StringLike": {
                                "secretsmanager:ResourceTag/RedshiftDataFullAccess": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SecretsManagerPermissions"
                    },
                    {
                        "Action": "redshift:GetClusterCredentials",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:redshift:*:*:dbname:*/*",
                            "arn:aws:redshift:*:*:dbuser:*/redshift_data_api_user"
                        ],
                        "Sid": "GetCredentialsForAPIUser"
                    },
                    {
                        "Action": "redshift:CreateClusterUser",
                        "Effect": "Deny",
                        "Resource": [
                            "arn:aws:redshift:*:*:dbuser:*/redshift_data_api_user"
                        ],
                        "Sid": "DenyCreateAPIUser"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "redshift-data.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/redshift-data.amazonaws.com/AWSServiceRoleForRedshift",
                        "Sid": "ServiceLinkedRole"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4PX5LA5SG6",
            "PolicyName": "AmazonRedshiftDataFullAccess",
            "VersionId": "v1"
        },
        "AmazonRedshiftFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "redshift:*",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeInternetGateways",
                            "sns:CreateTopic",
                            "sns:Get*",
                            "sns:List*",
                            "cloudwatch:Describe*",
                            "cloudwatch:Get*",
                            "cloudwatch:List*",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:EnableAlarmActions",
                            "cloudwatch:DisableAlarmActions",
                            "tag:GetResources",
                            "tag:UntagResources",
                            "tag:GetTagValues",
                            "tag:GetTagKeys",
                            "tag:TagResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "redshift.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/redshift.amazonaws.com/AWSServiceRoleForRedshift"
                    },
                    {
                        "Action": [
                            "redshift-data:ExecuteStatement",
                            "redshift-data:CancelStatement",
                            "redshift-data:ListStatements",
                            "redshift-data:GetStatementResult",
                            "redshift-data:DescribeStatement",
                            "redshift-data:ListDatabases",
                            "redshift-data:ListSchemas",
                            "redshift-data:ListTables",
                            "redshift-data:DescribeTable"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "DataAPIPermissions"
                    },
                    {
                        "Action": [
                            "secretsmanager:ListSecrets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SecretsManagerListPermissions"
                    },
                    {
                        "Action": [
                            "secretsmanager:CreateSecret",
                            "secretsmanager:GetSecretValue",
                            "secretsmanager:TagResource"
                        ],
                        "Condition": {
                            "StringLike": {
                                "secretsmanager:ResourceTag/RedshiftDataFullAccess": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SecretsManagerCreateGetPermissions"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAISEKCHH4YDB46B5ZO",
            "PolicyName": "AmazonRedshiftFullAccess",
            "VersionId": "v4"
        },
        "AmazonRedshiftQueryEditor": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "redshift:GetClusterCredentials",
                            "redshift:ListSchemas",
                            "redshift:ListTables",
                            "redshift:ListDatabases",
                            "redshift:ExecuteQuery",
                            "redshift:FetchResults",
                            "redshift:CancelQuery",
                            "redshift:DescribeClusters",
                            "redshift:DescribeQuery",
                            "redshift:DescribeTable",
                            "redshift:ViewQueriesFromConsole",
                            "redshift:DescribeSavedQueries",
                            "redshift:CreateSavedQuery",
                            "redshift:DeleteSavedQueries",
                            "redshift:ModifySavedQuery"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "redshift-data:ExecuteStatement",
                            "redshift-data:CancelStatement",
                            "redshift-data:ListStatements",
                            "redshift-data:GetStatementResult",
                            "redshift-data:DescribeStatement",
                            "redshift-data:ListDatabases",
                            "redshift-data:ListSchemas",
                            "redshift-data:ListTables",
                            "redshift-data:DescribeTable"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "DataAPIPermissions"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAINVFHHP7CWVHTGBGM",
            "PolicyName": "AmazonRedshiftQueryEditor",
            "VersionId": "v3"
        },
        "AmazonRedshiftReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "redshift:Describe*",
                            "redshift:ViewQueriesInConsole",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeInternetGateways",
                            "sns:Get*",
                            "sns:List*",
                            "cloudwatch:Describe*",
                            "cloudwatch:List*",
                            "cloudwatch:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIGD46KSON64QBSEZM",
            "PolicyName": "AmazonRedshiftReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonRedshiftServiceLinkedRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeAddresses",
                            "ec2:AssociateAddress",
                            "ec2:DisassociateAddress",
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:CreateVpcEndpoint",
                            "ec2:DeleteVpcEndpoints",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:ModifyVpcEndpoint"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJPY2VXNRUYOY3SRZS",
            "PolicyName": "AmazonRedshiftServiceLinkedRolePolicy",
            "VersionId": "v3"
        },
        "AmazonRekognitionCustomLabelsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketAcl",
                            "s3:GetBucketLocation",
                            "s3:GetObject",
                            "s3:GetObjectAcl",
                            "s3:GetObjectTagging",
                            "s3:GetObjectVersion",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*custom-labels*"
                    },
                    {
                        "Action": [
                            "rekognition:CreateProject",
                            "rekognition:CreateProjectVersion",
                            "rekognition:StartProjectVersion",
                            "rekognition:StopProjectVersion",
                            "rekognition:DescribeProjects",
                            "rekognition:DescribeProjectVersions",
                            "rekognition:DetectCustomLabels",
                            "rekognition:DeleteProject",
                            "rekognition:DeleteProjectVersion"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4OJEQDEQQQ",
            "PolicyName": "AmazonRekognitionCustomLabelsFullAccess",
            "VersionId": "v2"
        },
        "AmazonRekognitionFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rekognition:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIWDAOK6AIFDVX6TT6",
            "PolicyName": "AmazonRekognitionFullAccess",
            "VersionId": "v1"
        },
        "AmazonRekognitionReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rekognition:CompareFaces",
                            "rekognition:DetectFaces",
                            "rekognition:DetectLabels",
                            "rekognition:ListCollections",
                            "rekognition:ListFaces",
                            "rekognition:SearchFaces",
                            "rekognition:SearchFacesByImage",
                            "rekognition:DetectText",
                            "rekognition:GetCelebrityInfo",
                            "rekognition:RecognizeCelebrities",
                            "rekognition:DetectModerationLabels",
                            "rekognition:GetLabelDetection",
                            "rekognition:GetFaceDetection",
                            "rekognition:GetContentModeration",
                            "rekognition:GetPersonTracking",
                            "rekognition:GetCelebrityRecognition",
                            "rekognition:GetFaceSearch",
                            "rekognition:GetTextDetection",
                            "rekognition:GetSegmentDetection",
                            "rekognition:DescribeStreamProcessor",
                            "rekognition:ListStreamProcessors",
                            "rekognition:DescribeProjects",
                            "rekognition:DescribeProjectVersions",
                            "rekognition:DetectCustomLabels",
                            "rekognition:DetectProtectiveEquipment"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAILWSUHXUY4ES43SA4",
            "PolicyName": "AmazonRekognitionReadOnlyAccess",
            "VersionId": "v6"
        },
        "AmazonRekognitionServiceRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:AmazonRekognition*"
                    },
                    {
                        "Action": [
                            "kinesis:PutRecord",
                            "kinesis:PutRecords"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:kinesis:*:*:stream/AmazonRekognition*"
                    },
                    {
                        "Action": [
                            "kinesisvideo:GetDataEndpoint",
                            "kinesisvideo:GetMedia"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJI6Q3CUQAVBJ2CTE2",
            "PolicyName": "AmazonRekognitionServiceRole",
            "VersionId": "v1"
        },
        "AmazonRoute53AutoNamingFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "route53:GetHostedZone",
                            "route53:ListHostedZonesByName",
                            "route53:CreateHostedZone",
                            "route53:DeleteHostedZone",
                            "route53:ChangeResourceRecordSets",
                            "route53:CreateHealthCheck",
                            "route53:GetHealthCheck",
                            "route53:DeleteHealthCheck",
                            "route53:UpdateHealthCheck",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeRegions",
                            "servicediscovery:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJCNJBBLMJN2ZMV62Y",
            "PolicyName": "AmazonRoute53AutoNamingFullAccess",
            "VersionId": "v1"
        },
        "AmazonRoute53AutoNamingReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "servicediscovery:Get*",
                            "servicediscovery:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJBPMV2EFBFFKJ6SI4",
            "PolicyName": "AmazonRoute53AutoNamingReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonRoute53AutoNamingRegistrantAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "route53:GetHostedZone",
                            "route53:ListHostedZonesByName",
                            "route53:ChangeResourceRecordSets",
                            "route53:CreateHealthCheck",
                            "route53:GetHealthCheck",
                            "route53:DeleteHealthCheck",
                            "route53:UpdateHealthCheck",
                            "servicediscovery:Get*",
                            "servicediscovery:List*",
                            "servicediscovery:RegisterInstance",
                            "servicediscovery:DeregisterInstance"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJKXLG7EKP2O5SVZW6",
            "PolicyName": "AmazonRoute53AutoNamingRegistrantAccess",
            "VersionId": "v1"
        },
        "AmazonRoute53DomainsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "route53:CreateHostedZone",
                            "route53domains:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIPAFBMIYUILMOKL6G",
            "PolicyName": "AmazonRoute53DomainsFullAccess",
            "VersionId": "v1"
        },
        "AmazonRoute53DomainsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "route53domains:Get*",
                            "route53domains:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIDRINP6PPTRXYVQCI",
            "PolicyName": "AmazonRoute53DomainsReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonRoute53FullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "route53:*",
                            "route53domains:*",
                            "cloudfront:ListDistributions",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticbeanstalk:DescribeEnvironments",
                            "s3:ListBucket",
                            "s3:GetBucketLocation",
                            "s3:GetBucketWebsite",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeRegions",
                            "sns:ListTopics",
                            "sns:ListSubscriptionsByTopic",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:GetMetricStatistics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "apigateway:GET",
                        "Effect": "Allow",
                        "Resource": "arn:aws:apigateway:*::/domainnames"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJWVDLG5RPST6PHQ3A",
            "PolicyName": "AmazonRoute53FullAccess",
            "VersionId": "v4"
        },
        "AmazonRoute53ReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "route53:Get*",
                            "route53:List*",
                            "route53:TestDNSAnswer"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAITOYK2ZAOQFXV2JNC",
            "PolicyName": "AmazonRoute53ReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonRoute53ResolverFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "route53resolver:*",
                            "ec2:DescribeSubnets",
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeAvailabilityZones"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MZN2MQCY3",
            "PolicyName": "AmazonRoute53ResolverFullAccess",
            "VersionId": "v2"
        },
        "AmazonRoute53ResolverReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "route53resolver:Get*",
                            "route53resolver:List*",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CARVKYCWY",
            "PolicyName": "AmazonRoute53ResolverReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonS3FullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "s3:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIFIR6V6BVTRAHWINE",
            "PolicyName": "AmazonS3FullAccess",
            "VersionId": "v1"
        },
        "AmazonS3OutpostsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "s3-outposts:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "datasync:ListTasks",
                            "datasync:ListLocations",
                            "datasync:DescribeTask",
                            "datasync:DescribeLocation*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeNetworkInterfaces"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "outposts:ListOutposts",
                            "outposts:GetOutpost"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4BKMLUXKOR",
            "PolicyName": "AmazonS3OutpostsFullAccess",
            "VersionId": "v1"
        },
        "AmazonS3OutpostsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3-outposts:Get*",
                            "s3-outposts:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "datasync:ListTasks",
                            "datasync:ListLocations",
                            "datasync:DescribeTask",
                            "datasync:DescribeLocation*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeNetworkInterfaces"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "outposts:ListOutposts",
                            "outposts:GetOutpost"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4PJ2AX4CUB",
            "PolicyName": "AmazonS3OutpostsReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonS3ReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:Get*",
                            "s3:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIZTJ4DXE7G6AGAE6M",
            "PolicyName": "AmazonS3ReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonSESFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ses:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ2P4NXCHAT7NDPNR4",
            "PolicyName": "AmazonSESFullAccess",
            "VersionId": "v1"
        },
        "AmazonSESReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ses:Get*",
                            "ses:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAINV2XPFRMWJJNSCGI",
            "PolicyName": "AmazonSESReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonSNSFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sns:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJWEKLCXXUNT2SOLSG",
            "PolicyName": "AmazonSNSFullAccess",
            "VersionId": "v1"
        },
        "AmazonSNSReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sns:GetTopicAttributes",
                            "sns:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIZGQCQTFOFPMHSB6W",
            "PolicyName": "AmazonSNSReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonSNSRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:PutMetricFilter",
                            "logs:PutRetentionPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJK5GQB7CIK7KHY2GA",
            "PolicyName": "AmazonSNSRole",
            "VersionId": "v1"
        },
        "AmazonSQSFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sqs:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI65L554VRJ33ECQS6",
            "PolicyName": "AmazonSQSFullAccess",
            "VersionId": "v1"
        },
        "AmazonSQSReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sqs:GetQueueAttributes",
                            "sqs:GetQueueUrl",
                            "sqs:ListDeadLetterSourceQueues",
                            "sqs:ListQueues"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIUGSSQY362XGCM6KW",
            "PolicyName": "AmazonSQSReadOnlyAccess",
            "VersionId": "v2"
        },
        "AmazonSSMAutomationApproverAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ssm:DescribeAutomationExecutions",
                            "ssm:GetAutomationExecution",
                            "ssm:SendAutomationSignal"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIDSSXIRWBSLWWIORC",
            "PolicyName": "AmazonSSMAutomationApproverAccess",
            "VersionId": "v1"
        },
        "AmazonSSMAutomationRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:Automation*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateImage",
                            "ec2:CopyImage",
                            "ec2:DeregisterImage",
                            "ec2:DescribeImages",
                            "ec2:DeleteSnapshot",
                            "ec2:StartInstances",
                            "ec2:RunInstances",
                            "ec2:StopInstances",
                            "ec2:TerminateInstances",
                            "ec2:DescribeInstanceStatus",
                            "ec2:CreateTags",
                            "ec2:DeleteTags",
                            "ec2:DescribeTags",
                            "cloudformation:CreateStack",
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStacks",
                            "cloudformation:UpdateStack",
                            "cloudformation:DeleteStack"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ssm:*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sns:*:*:Automation*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJIBQCTBCXD2XRNB6W",
            "PolicyName": "AmazonSSMAutomationRole",
            "VersionId": "v5"
        },
        "AmazonSSMDirectoryServiceAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ds:CreateComputer",
                            "ds:DescribeDirectories"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ7OJQH3CZU674ERII",
            "PolicyName": "AmazonSSMDirectoryServiceAccess",
            "VersionId": "v1"
        },
        "AmazonSSMFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:PutMetricData",
                            "ds:CreateComputer",
                            "ds:DescribeDirectories",
                            "ec2:DescribeInstanceStatus",
                            "logs:*",
                            "ssm:*",
                            "ec2messages:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "ssm.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/ssm.amazonaws.com/AWSServiceRoleForAmazonSSM*"
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/ssm.amazonaws.com/AWSServiceRoleForAmazonSSM*"
                    },
                    {
                        "Action": [
                            "ssmmessages:CreateControlChannel",
                            "ssmmessages:CreateDataChannel",
                            "ssmmessages:OpenControlChannel",
                            "ssmmessages:OpenDataChannel"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJA7V6HI4ISQFMDYAG",
            "PolicyName": "AmazonSSMFullAccess",
            "VersionId": "v4"
        },
        "AmazonSSMMaintenanceWindowRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ssm:GetAutomationExecution",
                            "ssm:GetParameters",
                            "ssm:ListCommands",
                            "ssm:SendCommand",
                            "ssm:StartAutomationExecution"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:SSM*",
                            "arn:aws:lambda:*:*:function:*:SSM*"
                        ]
                    },
                    {
                        "Action": [
                            "states:DescribeExecution",
                            "states:StartExecution"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:states:*:*:stateMachine:SSM*",
                            "arn:aws:states:*:*:execution:SSM*"
                        ]
                    },
                    {
                        "Action": [
                            "resource-groups:ListGroups",
                            "resource-groups:ListGroupResources"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJV3JNYSTZ47VOXYME",
            "PolicyName": "AmazonSSMMaintenanceWindowRole",
            "VersionId": "v3"
        },
        "AmazonSSMManagedInstanceCore": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ssm:DescribeAssociation",
                            "ssm:GetDeployablePatchSnapshotForInstance",
                            "ssm:GetDocument",
                            "ssm:DescribeDocument",
                            "ssm:GetManifest",
                            "ssm:GetParameter",
                            "ssm:GetParameters",
                            "ssm:ListAssociations",
                            "ssm:ListInstanceAssociations",
                            "ssm:PutInventory",
                            "ssm:PutComplianceItems",
                            "ssm:PutConfigurePackageResult",
                            "ssm:UpdateAssociationStatus",
                            "ssm:UpdateInstanceAssociationStatus",
                            "ssm:UpdateInstanceInformation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ssmmessages:CreateControlChannel",
                            "ssmmessages:CreateDataChannel",
                            "ssmmessages:OpenControlChannel",
                            "ssmmessages:OpenDataChannel"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2messages:AcknowledgeMessage",
                            "ec2messages:DeleteMessage",
                            "ec2messages:FailMessage",
                            "ec2messages:GetEndpoint",
                            "ec2messages:GetMessages",
                            "ec2messages:SendReply"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIXSHM2BNB2D3AXXRU",
            "PolicyName": "AmazonSSMManagedInstanceCore",
            "VersionId": "v2"
        },
        "AmazonSSMPatchAssociation": {
            "Document": {
                "Statement": [
                    {
                        "Action": "ssm:DescribeEffectivePatchesForPatchBaseline",
                        "Effect": "Allow",
                        "Resource": "arn:aws:ssm:*:*:patchbaseline/*"
                    },
                    {
                        "Action": "ssm:GetPatchBaseline",
                        "Effect": "Allow",
                        "Resource": "arn:aws:ssm:*:*:patchbaseline/*"
                    },
                    {
                        "Action": "tag:GetResources",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ssm:DescribePatchBaselines",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4EWLEL5ZX7",
            "PolicyName": "AmazonSSMPatchAssociation",
            "VersionId": "v1"
        },
        "AmazonSSMReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ssm:Describe*",
                            "ssm:Get*",
                            "ssm:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJODSKQGGJTHRYZ5FC",
            "PolicyName": "AmazonSSMReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonSSMServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ssm:CancelCommand",
                            "ssm:GetCommandInvocation",
                            "ssm:ListCommandInvocations",
                            "ssm:ListCommands",
                            "ssm:SendCommand",
                            "ssm:GetAutomationExecution",
                            "ssm:GetParameters",
                            "ssm:StartAutomationExecution",
                            "ssm:ListTagsForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:DescribeInstanceAttribute",
                            "ec2:DescribeInstanceStatus",
                            "ec2:DescribeInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:SSM*",
                            "arn:aws:lambda:*:*:function:*:SSM*"
                        ]
                    },
                    {
                        "Action": [
                            "states:DescribeExecution",
                            "states:StartExecution"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:states:*:*:stateMachine:SSM*",
                            "arn:aws:states:*:*:execution:SSM*"
                        ]
                    },
                    {
                        "Action": [
                            "resource-groups:ListGroups",
                            "resource-groups:ListGroupResources",
                            "resource-groups:GetGroupQuery"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListStackResources"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "config:SelectResourceConfig"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "compute-optimizer:GetEC2InstanceRecommendations"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "support:DescribeTrustedAdvisorChecks",
                            "support:DescribeTrustedAdvisorCheckSummaries",
                            "support:DescribeTrustedAdvisorCheckResult",
                            "support:DescribeCases"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "config:DescribeComplianceByConfigRule",
                            "config:DescribeComplianceByResource",
                            "config:DescribeRemediationConfigurations"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "ssm.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIXJ26NUGBA3TCV7EC",
            "PolicyName": "AmazonSSMServiceRolePolicy",
            "VersionId": "v9"
        },
        "AmazonSageMakerAdmin-ServiceCatalogProductsServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "apigateway:GET",
                            "apigateway:POST",
                            "apigateway:PUT",
                            "apigateway:PATCH",
                            "apigateway:DELETE"
                        ],
                        "Condition": {
                            "StringLike": {
                                "aws:ResourceTag/sagemaker:launch-source": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "apigateway:POST"
                        ],
                        "Condition": {
                            "ForAnyValue:StringLike": {
                                "aws:TagKeys": [
                                    "sagemaker:launch-source"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "apigateway:PATCH"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:apigateway:*::/account"
                        ]
                    },
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:UpdateStack",
                            "cloudformation:DeleteStack"
                        ],
                        "Condition": {
                            "ArnLikeIfExists": {
                                "cloudformation:RoleArn": [
                                    "arn:aws:sts::*:assumed-role/AmazonSageMakerServiceCatalog*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/SC-*"
                    },
                    {
                        "Action": [
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStacks"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/SC-*"
                    },
                    {
                        "Action": [
                            "cloudformation:GetTemplateSummary",
                            "cloudformation:ValidateTemplate"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "codebuild:CreateProject",
                            "codebuild:DeleteProject",
                            "codebuild:UpdateProject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:codebuild:*:*:project/sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "codecommit:CreateCommit",
                            "codecommit:CreateRepository",
                            "codecommit:DeleteRepository",
                            "codecommit:GetRepository",
                            "codecommit:TagResource"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:codecommit:*:*:sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "codecommit:ListRepositories"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "codepipeline:CreatePipeline",
                            "codepipeline:DeletePipeline",
                            "codepipeline:GetPipeline",
                            "codepipeline:GetPipelineState",
                            "codepipeline:StartPipelineExecution",
                            "codepipeline:TagResource",
                            "codepipeline:UpdatePipeline"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:codepipeline:*:*:sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "cognito-idp:CreateUserPool"
                        ],
                        "Condition": {
                            "ForAnyValue:StringLike": {
                                "aws:TagKeys": [
                                    "sagemaker:launch-source"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cognito-idp:CreateGroup",
                            "cognito-idp:CreateUserPoolDomain",
                            "cognito-idp:CreateUserPoolClient",
                            "cognito-idp:DeleteGroup",
                            "cognito-idp:DeleteUserPool",
                            "cognito-idp:DeleteUserPoolClient",
                            "cognito-idp:DeleteUserPoolDomain",
                            "cognito-idp:DescribeUserPool",
                            "cognito-idp:DescribeUserPoolClient",
                            "cognito-idp:UpdateUserPool",
                            "cognito-idp:UpdateUserPoolClient"
                        ],
                        "Condition": {
                            "StringLike": {
                                "aws:ResourceTag/sagemaker:launch-source": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ecr:CreateRepository",
                            "ecr:DeleteRepository"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ecr:*:*:repository/sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "events:DescribeRule",
                            "events:DeleteRule",
                            "events:DisableRule",
                            "events:EnableRule",
                            "events:PutRule",
                            "events:PutTargets",
                            "events:RemoveTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:events:*:*:rule/sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "firehose:CreateDeliveryStream",
                            "firehose:DeleteDeliveryStream",
                            "firehose:DescribeDeliveryStream",
                            "firehose:StartDeliveryStreamEncryption",
                            "firehose:StopDeliveryStreamEncryption",
                            "firehose:UpdateDestination"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:firehose:*:*:deliverystream/sagemaker-*"
                    },
                    {
                        "Action": [
                            "glue:CreateDatabase",
                            "glue:DeleteDatabase"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/sagemaker-*",
                            "arn:aws:glue:*:*:table/sagemaker-*",
                            "arn:aws:glue:*:*:userDefinedFunction/sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "glue:CreateClassifier",
                            "glue:DeleteClassifier",
                            "glue:DeleteCrawler",
                            "glue:DeleteJob",
                            "glue:DeleteTrigger",
                            "glue:DeleteWorkflow",
                            "glue:StopCrawler"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "glue:CreateWorkflow"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:glue:*:*:workflow/sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "glue:CreateJob"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:glue:*:*:job/sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "glue:CreateCrawler",
                            "glue:GetCrawler"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:glue:*:*:crawler/sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "glue:CreateTrigger",
                            "glue:GetTrigger"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:glue:*:*:trigger/sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalog*"
                        ]
                    },
                    {
                        "Action": [
                            "lambda:AddPermission",
                            "lambda:CreateFunction",
                            "lambda:DeleteFunction",
                            "lambda:GetFunction",
                            "lambda:GetFunctionConfiguration",
                            "lambda:InvokeFunction",
                            "lambda:RemovePermission"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DeleteLogGroup",
                            "logs:DeleteLogStream",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:PutRetentionPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/apigateway/AccessLogs/*",
                            "arn:aws:logs:*:*:log-group::log-stream:*"
                        ]
                    },
                    {
                        "Action": "s3:GetObject",
                        "Condition": {
                            "StringEquals": {
                                "s3:ExistingObjectTag/servicecatalog:provisioning": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "s3:GetObject",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:DeleteBucket",
                            "s3:DeleteBucketPolicy",
                            "s3:GetBucketPolicy",
                            "s3:PutBucketAcl",
                            "s3:PutBucketNotification",
                            "s3:PutBucketPolicy",
                            "s3:PutBucketPublicAccessBlock",
                            "s3:PutBucketLogging",
                            "s3:PutEncryptionConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::sagemaker-*"
                    },
                    {
                        "Action": [
                            "sagemaker:CreateEndpoint",
                            "sagemaker:CreateEndpointConfig",
                            "sagemaker:CreateModel",
                            "sagemaker:CreateWorkteam",
                            "sagemaker:DeleteEndpoint",
                            "sagemaker:DeleteEndpointConfig",
                            "sagemaker:DeleteModel",
                            "sagemaker:DeleteWorkteam",
                            "sagemaker:DescribeModel",
                            "sagemaker:DescribeEndpointConfig",
                            "sagemaker:DescribeEndpoint",
                            "sagemaker:DescribeWorkteam"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sagemaker:*:*:*"
                        ]
                    },
                    {
                        "Action": [
                            "states:CreateStateMachine",
                            "states:DeleteStateMachine",
                            "states:UpdateStateMachine"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:states:*:*:stateMachine:sagemaker-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NAOSKQH4V",
            "PolicyName": "AmazonSageMakerAdmin-ServiceCatalogProductsServiceRolePolicy",
            "VersionId": "v1"
        },
        "AmazonSageMakerFeatureStoreAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:PutObject",
                            "s3:GetBucketAcl"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*SageMaker*",
                            "arn:aws:s3:::*Sagemaker*",
                            "arn:aws:s3:::*sagemaker*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FO5MQNGJU",
            "PolicyName": "AmazonSageMakerFeatureStoreAccess",
            "VersionId": "v1"
        },
        "AmazonSageMakerFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sagemaker:*"
                        ],
                        "Effect": "Allow",
                        "NotResource": [
                            "arn:aws:sagemaker:*:*:domain/*",
                            "arn:aws:sagemaker:*:*:user-profile/*",
                            "arn:aws:sagemaker:*:*:app/*",
                            "arn:aws:sagemaker:*:*:flow-definition/*"
                        ]
                    },
                    {
                        "Action": [
                            "sagemaker:CreatePresignedDomainUrl",
                            "sagemaker:DescribeDomain",
                            "sagemaker:ListDomains",
                            "sagemaker:DescribeUserProfile",
                            "sagemaker:ListUserProfiles",
                            "sagemaker:*App",
                            "sagemaker:ListApps"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "sagemaker:*",
                        "Condition": {
                            "StringEqualsIfExists": {
                                "sagemaker:WorkteamType": [
                                    "private-crowd",
                                    "vendor-crowd"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sagemaker:*:*:flow-definition/*"
                        ]
                    },
                    {
                        "Action": [
                            "application-autoscaling:DeleteScalingPolicy",
                            "application-autoscaling:DeleteScheduledAction",
                            "application-autoscaling:DeregisterScalableTarget",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingActivities",
                            "application-autoscaling:DescribeScalingPolicies",
                            "application-autoscaling:DescribeScheduledActions",
                            "application-autoscaling:PutScalingPolicy",
                            "application-autoscaling:PutScheduledAction",
                            "application-autoscaling:RegisterScalableTarget",
                            "aws-marketplace:ViewSubscriptions",
                            "cloudformation:GetTemplateSummary",
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:GetMetricData",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:PutMetricData",
                            "codecommit:BatchGetRepositories",
                            "codecommit:CreateRepository",
                            "codecommit:GetRepository",
                            "codecommit:List*",
                            "cognito-idp:AdminAddUserToGroup",
                            "cognito-idp:AdminCreateUser",
                            "cognito-idp:AdminDeleteUser",
                            "cognito-idp:AdminDisableUser",
                            "cognito-idp:AdminEnableUser",
                            "cognito-idp:AdminRemoveUserFromGroup",
                            "cognito-idp:CreateGroup",
                            "cognito-idp:CreateUserPool",
                            "cognito-idp:CreateUserPoolClient",
                            "cognito-idp:CreateUserPoolDomain",
                            "cognito-idp:DescribeUserPool",
                            "cognito-idp:DescribeUserPoolClient",
                            "cognito-idp:List*",
                            "cognito-idp:UpdateUserPool",
                            "cognito-idp:UpdateUserPoolClient",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:CreateVpcEndpoint",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:DescribeDhcpOptions",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcs",
                            "ecr:BatchCheckLayerAvailability",
                            "ecr:BatchGetImage",
                            "ecr:CreateRepository",
                            "ecr:Describe*",
                            "ecr:GetAuthorizationToken",
                            "ecr:GetDownloadUrlForLayer",
                            "ecr:StartImageScan",
                            "elastic-inference:Connect",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticfilesystem:DescribeMountTargets",
                            "fsx:DescribeFileSystems",
                            "glue:CreateJob",
                            "glue:DeleteJob",
                            "glue:GetJob*",
                            "glue:GetTable*",
                            "glue:GetWorkflowRun",
                            "glue:ResetJobBookmark",
                            "glue:StartJobRun",
                            "glue:StartWorkflowRun",
                            "glue:UpdateJob",
                            "groundtruthlabeling:*",
                            "iam:ListRoles",
                            "kms:DescribeKey",
                            "kms:ListAliases",
                            "lambda:ListFunctions",
                            "logs:CreateLogDelivery",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DeleteLogDelivery",
                            "logs:Describe*",
                            "logs:GetLogDelivery",
                            "logs:GetLogEvents",
                            "logs:ListLogDeliveries",
                            "logs:PutLogEvents",
                            "logs:PutResourcePolicy",
                            "logs:UpdateLogDelivery",
                            "robomaker:CreateSimulationApplication",
                            "robomaker:DescribeSimulationApplication",
                            "robomaker:DeleteSimulationApplication",
                            "robomaker:CreateSimulationJob",
                            "robomaker:DescribeSimulationJob",
                            "robomaker:CancelSimulationJob",
                            "secretsmanager:ListSecrets",
                            "servicecatalog:Describe*",
                            "servicecatalog:List*",
                            "servicecatalog:ScanProvisionedProducts",
                            "servicecatalog:SearchProducts",
                            "servicecatalog:SearchProvisionedProducts",
                            "sns:ListTopics",
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ecr:SetRepositoryPolicy",
                            "ecr:CompleteLayerUpload",
                            "ecr:BatchDeleteImage",
                            "ecr:UploadLayerPart",
                            "ecr:DeleteRepositoryPolicy",
                            "ecr:InitiateLayerUpload",
                            "ecr:DeleteRepository",
                            "ecr:PutImage"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ecr:*:*:repository/*sagemaker*"
                        ]
                    },
                    {
                        "Action": [
                            "codecommit:GitPull",
                            "codecommit:GitPush"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:codecommit:*:*:*sagemaker*",
                            "arn:aws:codecommit:*:*:*SageMaker*",
                            "arn:aws:codecommit:*:*:*Sagemaker*"
                        ]
                    },
                    {
                        "Action": [
                            "codebuild:BatchGetBuilds",
                            "codebuild:StartBuild"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:codebuild:*:*:project/sagemaker*",
                            "arn:aws:codebuild:*:*:build/*"
                        ]
                    },
                    {
                        "Action": [
                            "states:DescribeExecution",
                            "states:GetExecutionHistory",
                            "states:StartExecution",
                            "states:StopExecution",
                            "states:UpdateStateMachine"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:states:*:*:statemachine:*sagemaker*",
                            "arn:aws:states:*:*:execution:*sagemaker*:*"
                        ]
                    },
                    {
                        "Action": [
                            "secretsmanager:DescribeSecret",
                            "secretsmanager:GetSecretValue",
                            "secretsmanager:CreateSecret"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:secretsmanager:*:*:secret:AmazonSageMaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "secretsmanager:DescribeSecret",
                            "secretsmanager:GetSecretValue"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "secretsmanager:ResourceTag/SageMaker": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "servicecatalog:ProvisionProduct"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "servicecatalog:TerminateProvisionedProduct",
                            "servicecatalog:UpdateProvisionedProduct"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "servicecatalog:userLevel": "self"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:DeleteObject",
                            "s3:AbortMultipartUpload"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*SageMaker*",
                            "arn:aws:s3:::*Sagemaker*",
                            "arn:aws:s3:::*sagemaker*",
                            "arn:aws:s3:::*aws-glue*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "s3:ExistingObjectTag/SageMaker": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "s3:ExistingObjectTag/servicecatalog:provisioning": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:GetBucketLocation",
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketCors",
                            "s3:PutBucketCors"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:*SageMaker*",
                            "arn:aws:lambda:*:*:function:*sagemaker*",
                            "arn:aws:lambda:*:*:function:*Sagemaker*",
                            "arn:aws:lambda:*:*:function:*LabelingFunction*"
                        ]
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "sagemaker.application-autoscaling.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "robomaker.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sns:Subscribe",
                            "sns:CreateTopic"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sns:*:*:*SageMaker*",
                            "arn:aws:sns:*:*:*Sagemaker*",
                            "arn:aws:sns:*:*:*sagemaker*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "sagemaker.amazonaws.com",
                                    "glue.amazonaws.com",
                                    "robomaker.amazonaws.com",
                                    "states.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/*"
                    },
                    {
                        "Action": [
                            "athena:ListDataCatalogs",
                            "athena:ListDatabases",
                            "athena:ListTableMetadata",
                            "athena:GetQueryExecution",
                            "athena:GetQueryResults",
                            "athena:StartQueryExecution",
                            "athena:StopQueryExecution"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "glue:CreateTable"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:glue:*:*:table/*/sagemaker_tmp_*",
                            "arn:aws:glue:*:*:table/sagemaker_featurestore/*",
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/*"
                        ]
                    },
                    {
                        "Action": [
                            "glue:DeleteTable"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:glue:*:*:table/*/sagemaker_tmp_*",
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/*"
                        ]
                    },
                    {
                        "Action": [
                            "glue:GetDatabases",
                            "glue:GetTable",
                            "glue:GetTables"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:glue:*:*:table/*",
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/*"
                        ]
                    },
                    {
                        "Action": [
                            "glue:CreateDatabase",
                            "glue:GetDatabase"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/sagemaker_featurestore",
                            "arn:aws:glue:*:*:database/sagemaker_processing",
                            "arn:aws:glue:*:*:database/default",
                            "arn:aws:glue:*:*:database/sagemaker_data_wrangler"
                        ]
                    },
                    {
                        "Action": [
                            "redshift-data:ExecuteStatement",
                            "redshift-data:DescribeStatement",
                            "redshift-data:CancelStatement",
                            "redshift-data:GetStatementResult",
                            "redshift-data:ListSchemas",
                            "redshift-data:ListTables"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "redshift:GetClusterCredentials"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:redshift:*:*:dbuser:*/sagemaker_access*",
                            "arn:aws:redshift:*:*:dbname:*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJZ5IWYMXO5QDB4QOG",
            "PolicyName": "AmazonSageMakerFullAccess",
            "VersionId": "v18"
        },
        "AmazonSageMakerGroundTruthExecution": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:*GtRecipe*",
                            "arn:aws:lambda:*:*:function:*LabelingFunction*",
                            "arn:aws:lambda:*:*:function:*SageMaker*",
                            "arn:aws:lambda:*:*:function:*sagemaker*",
                            "arn:aws:lambda:*:*:function:*Sagemaker*"
                        ],
                        "Sid": "CustomLabelingJobs"
                    },
                    {
                        "Action": [
                            "s3:AbortMultipartUpload",
                            "s3:GetObject",
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*GroundTruth*",
                            "arn:aws:s3:::*Groundtruth*",
                            "arn:aws:s3:::*groundtruth*",
                            "arn:aws:s3:::*SageMaker*",
                            "arn:aws:s3:::*Sagemaker*",
                            "arn:aws:s3:::*sagemaker*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "s3:ExistingObjectTag/SageMaker": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetBucketLocation",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:PutMetricData",
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:DescribeLogStreams",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudWatch"
                    },
                    {
                        "Action": [
                            "sqs:CreateQueue",
                            "sqs:DeleteMessage",
                            "sqs:GetQueueAttributes",
                            "sqs:GetQueueUrl",
                            "sqs:ReceiveMessage",
                            "sqs:SendMessage",
                            "sqs:SendMessageBatch",
                            "sqs:SetQueueAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sqs:*:*:*GroundTruth*",
                        "Sid": "StreamingQueue"
                    },
                    {
                        "Action": "sns:Subscribe",
                        "Condition": {
                            "StringEquals": {
                                "sns:Protocol": "sqs"
                            },
                            "StringLike": {
                                "sns:Endpoint": "arn:aws:sqs:*:*:*GroundTruth*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sns:*:*:*GroundTruth*",
                            "arn:aws:sns:*:*:*Groundtruth*",
                            "arn:aws:sns:*:*:*groundTruth*",
                            "arn:aws:sns:*:*:*groundtruth*",
                            "arn:aws:sns:*:*:*SageMaker*",
                            "arn:aws:sns:*:*:*Sagemaker*",
                            "arn:aws:sns:*:*:*sageMaker*",
                            "arn:aws:sns:*:*:*sagemaker*"
                        ],
                        "Sid": "StreamingTopicSubscribe"
                    },
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:sns:*:*:*GroundTruth*",
                            "arn:aws:sns:*:*:*Groundtruth*",
                            "arn:aws:sns:*:*:*groundTruth*",
                            "arn:aws:sns:*:*:*groundtruth*",
                            "arn:aws:sns:*:*:*SageMaker*",
                            "arn:aws:sns:*:*:*Sagemaker*",
                            "arn:aws:sns:*:*:*sageMaker*",
                            "arn:aws:sns:*:*:*sagemaker*"
                        ],
                        "Sid": "StreamingTopic"
                    },
                    {
                        "Action": [
                            "sns:Unsubscribe"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "StreamingTopicUnsubscribe"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FYNFSJXO3",
            "PolicyName": "AmazonSageMakerGroundTruthExecution",
            "VersionId": "v1"
        },
        "AmazonSageMakerMechanicalTurkAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sagemaker:*FlowDefinition",
                            "sagemaker:*FlowDefinitions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4AYDBKMMDV",
            "PolicyName": "AmazonSageMakerMechanicalTurkAccess",
            "VersionId": "v1"
        },
        "AmazonSageMakerNotebooksServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": "elasticfilesystem:CreateFileSystem",
                        "Condition": {
                            "StringLike": {
                                "aws:RequestTag/ManagedByAmazonSageMakerResource": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "elasticfilesystem:CreateMountTarget",
                            "elasticfilesystem:DeleteFileSystem",
                            "elasticfilesystem:DeleteMountTarget"
                        ],
                        "Condition": {
                            "StringLike": {
                                "aws:ResourceTag/ManagedByAmazonSageMakerResource": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticfilesystem:DescribeMountTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:network-interface/*",
                            "arn:aws:ec2:*:*:security-group/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeDhcpOptions",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:ModifyNetworkInterfaceAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:DeleteSecurityGroup",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RevokeSecurityGroupIngress"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/ManagedByAmazonSageMakerResource": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sso:CreateManagedApplicationInstance",
                            "sso:DeleteManagedApplicationInstance",
                            "sso:GetManagedApplicationInstance"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sagemaker:CreateUserProfile",
                            "sagemaker:DescribeUserProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MYB7OEJED",
            "PolicyName": "AmazonSageMakerNotebooksServiceRolePolicy",
            "VersionId": "v5"
        },
        "AmazonSageMakerReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sagemaker:Describe*",
                            "sagemaker:List*",
                            "sagemaker:BatchGetMetrics",
                            "sagemaker:GetSearchSuggestions",
                            "sagemaker:GetRecord",
                            "sagemaker:Search"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingActivities",
                            "application-autoscaling:DescribeScalingPolicies",
                            "application-autoscaling:DescribeScheduledActions",
                            "aws-marketplace:ViewSubscriptions",
                            "cloudwatch:DescribeAlarms",
                            "cognito-idp:DescribeUserPool",
                            "cognito-idp:DescribeUserPoolClient",
                            "cognito-idp:ListGroups",
                            "cognito-idp:ListIdentityProviders",
                            "cognito-idp:ListUserPoolClients",
                            "cognito-idp:ListUserPools",
                            "cognito-idp:ListUsers",
                            "cognito-idp:ListUsersInGroup",
                            "ecr:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJTZ2FTFCQ6CFLQA2O",
            "PolicyName": "AmazonSageMakerReadOnly",
            "VersionId": "v8"
        },
        "AmazonSumerianFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sumerian:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJMGUENPB56MXVVGBE",
            "PolicyName": "AmazonSumerianFullAccess",
            "VersionId": "v1"
        },
        "AmazonTextractFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "textract:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIQDD47A7H3GBVPWOQ",
            "PolicyName": "AmazonTextractFullAccess",
            "VersionId": "v1"
        },
        "AmazonTextractServiceRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:AmazonTextract*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJBDSAWESWLL34WASG",
            "PolicyName": "AmazonTextractServiceRole",
            "VersionId": "v1"
        },
        "AmazonTimestreamConsoleFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "timestream:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:DescribeKey",
                            "kms:ListKeys",
                            "kms:ListAliases"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:CreateGrant"
                        ],
                        "Condition": {
                            "Bool": {
                                "kms:GrantIsForAWSResource": true
                            },
                            "ForAnyValue:StringEquals": {
                                "kms:EncryptionContextKeys": "aws:timestream:database-name"
                            },
                            "StringLike": {
                                "kms:ViaService": "timestream.*.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "dbqms:CreateFavoriteQuery",
                            "dbqms:DescribeFavoriteQueries",
                            "dbqms:UpdateFavoriteQuery",
                            "dbqms:DeleteFavoriteQueries",
                            "dbqms:GetQueryString",
                            "dbqms:CreateQueryHistory",
                            "dbqms:DescribeQueryHistory",
                            "dbqms:UpdateQueryHistory",
                            "dbqms:DeleteQueryHistory",
                            "dbqms:DescribeQueryHistory"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4AZJLUKMAZ",
            "PolicyName": "AmazonTimestreamConsoleFullAccess",
            "VersionId": "v1"
        },
        "AmazonTimestreamFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "timestream:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:DescribeKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:CreateGrant"
                        ],
                        "Condition": {
                            "Bool": {
                                "kms:GrantIsForAWSResource": true
                            },
                            "ForAnyValue:StringEquals": {
                                "kms:EncryptionContextKeys": "aws:timestream:database-name"
                            },
                            "StringLike": {
                                "kms:ViaService": "timestream.*.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CGYUJBH4V",
            "PolicyName": "AmazonTimestreamFullAccess",
            "VersionId": "v1"
        },
        "AmazonTimestreamReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "timestream:CancelQuery",
                            "timestream:DescribeDatabase",
                            "timestream:DescribeEndpoints",
                            "timestream:DescribeTable",
                            "timestream:ListDatabases",
                            "timestream:ListMeasures",
                            "timestream:ListTables",
                            "timestream:ListTagsForResource",
                            "timestream:Select",
                            "timestream:SelectValues"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4I7VUQXAEJ",
            "PolicyName": "AmazonTimestreamReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonTranscribeFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "transcribe:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*transcribe*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAINAV45F5NT5RMFO7K",
            "PolicyName": "AmazonTranscribeFullAccess",
            "VersionId": "v1"
        },
        "AmazonTranscribeReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "transcribe:Get*",
                            "transcribe:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJM6JONISXCAZKFCAO",
            "PolicyName": "AmazonTranscribeReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonVPCCrossAccountNetworkInterfaceOperations": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeRouteTables",
                            "ec2:CreateRoute",
                            "ec2:DeleteRoute",
                            "ec2:ReplaceRoute"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:DescribeNetworkInterfacePermissions",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DescribeNetworkInterfaceAttribute",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeRegions",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:UnassignPrivateIpAddresses"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ53Y4ZY5OHP4CNRJC",
            "PolicyName": "AmazonVPCCrossAccountNetworkInterfaceOperations",
            "VersionId": "v4"
        },
        "AmazonVPCFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AcceptVpcPeeringConnection",
                            "ec2:AcceptVpcEndpointConnections",
                            "ec2:AllocateAddress",
                            "ec2:AssignIpv6Addresses",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:AssociateAddress",
                            "ec2:AssociateDhcpOptions",
                            "ec2:AssociateRouteTable",
                            "ec2:AssociateSubnetCidrBlock",
                            "ec2:AssociateVpcCidrBlock",
                            "ec2:AttachClassicLinkVpc",
                            "ec2:AttachInternetGateway",
                            "ec2:AttachNetworkInterface",
                            "ec2:AttachVpnGateway",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateCustomerGateway",
                            "ec2:CreateDefaultSubnet",
                            "ec2:CreateDefaultVpc",
                            "ec2:CreateDhcpOptions",
                            "ec2:CreateEgressOnlyInternetGateway",
                            "ec2:CreateFlowLogs",
                            "ec2:CreateInternetGateway",
                            "ec2:CreateNatGateway",
                            "ec2:CreateNetworkAcl",
                            "ec2:CreateNetworkAcl",
                            "ec2:CreateNetworkAclEntry",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:CreateRoute",
                            "ec2:CreateRouteTable",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSubnet",
                            "ec2:CreateTags",
                            "ec2:CreateVpc",
                            "ec2:CreateVpcEndpoint",
                            "ec2:CreateVpcEndpointConnectionNotification",
                            "ec2:CreateVpcEndpointServiceConfiguration",
                            "ec2:CreateVpcPeeringConnection",
                            "ec2:CreateVpnConnection",
                            "ec2:CreateVpnConnectionRoute",
                            "ec2:CreateVpnGateway",
                            "ec2:DeleteCustomerGateway",
                            "ec2:DeleteDhcpOptions",
                            "ec2:DeleteEgressOnlyInternetGateway",
                            "ec2:DeleteFlowLogs",
                            "ec2:DeleteInternetGateway",
                            "ec2:DeleteNatGateway",
                            "ec2:DeleteNetworkAcl",
                            "ec2:DeleteNetworkAclEntry",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:DeleteRoute",
                            "ec2:DeleteRouteTable",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DeleteSubnet",
                            "ec2:DeleteTags",
                            "ec2:DeleteVpc",
                            "ec2:DeleteVpcEndpoints",
                            "ec2:DeleteVpcEndpointConnectionNotifications",
                            "ec2:DeleteVpcEndpointServiceConfigurations",
                            "ec2:DeleteVpcPeeringConnection",
                            "ec2:DeleteVpnConnection",
                            "ec2:DeleteVpnConnectionRoute",
                            "ec2:DeleteVpnGateway",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeClassicLinkInstances",
                            "ec2:DescribeCustomerGateways",
                            "ec2:DescribeDhcpOptions",
                            "ec2:DescribeEgressOnlyInternetGateways",
                            "ec2:DescribeFlowLogs",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeMovingAddresses",
                            "ec2:DescribeNatGateways",
                            "ec2:DescribeNetworkAcls",
                            "ec2:DescribeNetworkInterfaceAttribute",
                            "ec2:DescribeNetworkInterfacePermissions",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribePrefixLists",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroupReferences",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeStaleSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeTags",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcClassicLink",
                            "ec2:DescribeVpcClassicLinkDnsSupport",
                            "ec2:DescribeVpcEndpointConnectionNotifications",
                            "ec2:DescribeVpcEndpointConnections",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcEndpointServiceConfigurations",
                            "ec2:DescribeVpcEndpointServicePermissions",
                            "ec2:DescribeVpcEndpointServices",
                            "ec2:DescribeVpcPeeringConnections",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpnConnections",
                            "ec2:DescribeVpnGateways",
                            "ec2:DetachClassicLinkVpc",
                            "ec2:DetachInternetGateway",
                            "ec2:DetachNetworkInterface",
                            "ec2:DetachVpnGateway",
                            "ec2:DisableVgwRoutePropagation",
                            "ec2:DisableVpcClassicLink",
                            "ec2:DisableVpcClassicLinkDnsSupport",
                            "ec2:DisassociateAddress",
                            "ec2:DisassociateRouteTable",
                            "ec2:DisassociateSubnetCidrBlock",
                            "ec2:DisassociateVpcCidrBlock",
                            "ec2:EnableVgwRoutePropagation",
                            "ec2:EnableVpcClassicLink",
                            "ec2:EnableVpcClassicLinkDnsSupport",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:ModifySubnetAttribute",
                            "ec2:ModifyVpcAttribute",
                            "ec2:ModifyVpcEndpoint",
                            "ec2:ModifyVpcEndpointConnectionNotification",
                            "ec2:ModifyVpcEndpointServiceConfiguration",
                            "ec2:ModifyVpcEndpointServicePermissions",
                            "ec2:ModifyVpcPeeringConnectionOptions",
                            "ec2:ModifyVpcTenancy",
                            "ec2:MoveAddressToVpc",
                            "ec2:RejectVpcEndpointConnections",
                            "ec2:RejectVpcPeeringConnection",
                            "ec2:ReleaseAddress",
                            "ec2:ReplaceNetworkAclAssociation",
                            "ec2:ReplaceNetworkAclEntry",
                            "ec2:ReplaceRoute",
                            "ec2:ReplaceRouteTableAssociation",
                            "ec2:ResetNetworkInterfaceAttribute",
                            "ec2:RestoreAddressToClassic",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:UnassignIpv6Addresses",
                            "ec2:UnassignPrivateIpAddresses",
                            "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                            "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJBWPGNOVKZD3JI2P2",
            "PolicyName": "AmazonVPCFullAccess",
            "VersionId": "v7"
        },
        "AmazonVPCReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeClassicLinkInstances",
                            "ec2:DescribeCustomerGateways",
                            "ec2:DescribeDhcpOptions",
                            "ec2:DescribeEgressOnlyInternetGateways",
                            "ec2:DescribeFlowLogs",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeMovingAddresses",
                            "ec2:DescribeNatGateways",
                            "ec2:DescribeNetworkAcls",
                            "ec2:DescribeNetworkInterfaceAttribute",
                            "ec2:DescribeNetworkInterfacePermissions",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribePrefixLists",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroupReferences",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeStaleSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeTags",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcClassicLink",
                            "ec2:DescribeVpcClassicLinkDnsSupport",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcEndpointConnectionNotifications",
                            "ec2:DescribeVpcEndpointConnections",
                            "ec2:DescribeVpcEndpointServiceConfigurations",
                            "ec2:DescribeVpcEndpointServicePermissions",
                            "ec2:DescribeVpcEndpointServices",
                            "ec2:DescribeVpcPeeringConnections",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpnConnections",
                            "ec2:DescribeVpnGateways"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIICZJNOJN36GTG6CM",
            "PolicyName": "AmazonVPCReadOnlyAccess",
            "VersionId": "v6"
        },
        "AmazonWorkDocsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "workdocs:*",
                            "ds:DescribeDirectories",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4GTERAZYCR",
            "PolicyName": "AmazonWorkDocsFullAccess",
            "VersionId": "v1"
        },
        "AmazonWorkDocsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "workdocs:Describe*",
                            "ds:DescribeDirectories",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4EDG6WGO5A",
            "PolicyName": "AmazonWorkDocsReadOnlyAccess",
            "VersionId": "v1"
        },
        "AmazonWorkLinkFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "worklink:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:worklink:*:*:*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJM4ITL7TEVURHCQSY",
            "PolicyName": "AmazonWorkLinkFullAccess",
            "VersionId": "v2"
        },
        "AmazonWorkLinkReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "worklink:Describe*",
                            "worklink:List*",
                            "worklink:Search*"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:worklink:*:*:*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIANQMFGU4EUUZKFQ4",
            "PolicyName": "AmazonWorkLinkReadOnly",
            "VersionId": "v3"
        },
        "AmazonWorkLinkServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DeleteNetworkInterface"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kinesis:PutRecord",
                            "kinesis:PutRecords"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:kinesis:*:*:stream/AmazonWorkLink-*"
                    },
                    {
                        "Action": [
                            "elasticloadbalancing:ModifyListener",
                            "elasticloadbalancing:AddListenerCertificates",
                            "elasticloadbalancing:RemoveListenerCertificates"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAINJJP6CO7ATFCV4CU",
            "PolicyName": "AmazonWorkLinkServiceRolePolicy",
            "VersionId": "v2"
        },
        "AmazonWorkMailEventsServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JG5LNO3U7",
            "PolicyName": "AmazonWorkMailEventsServiceRolePolicy",
            "VersionId": "v1"
        },
        "AmazonWorkMailFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ds:AuthorizeApplication",
                            "ds:CheckAlias",
                            "ds:CreateAlias",
                            "ds:CreateDirectory",
                            "ds:CreateIdentityPoolDirectory",
                            "ds:DeleteDirectory",
                            "ds:DescribeDirectories",
                            "ds:GetDirectoryLimits",
                            "ds:ListAuthorizedApplications",
                            "ds:UnauthorizeApplication",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSubnet",
                            "ec2:CreateTags",
                            "ec2:CreateVpc",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DeleteSubnet",
                            "ec2:DeleteVpc",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RevokeSecurityGroupIngress",
                            "kms:DescribeKey",
                            "kms:ListAliases",
                            "lambda:ListFunctions",
                            "route53:ChangeResourceRecordSets",
                            "route53:ListHostedZones",
                            "route53:ListResourceRecordSets",
                            "route53domains:CheckDomainAvailability",
                            "route53domains:ListDomains",
                            "ses:*",
                            "workmail:*",
                            "iam:ListRoles",
                            "logs:DescribeLogGroups",
                            "logs:CreateLogGroup",
                            "logs:PutRetentionPolicy",
                            "cloudwatch:GetMetricData"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "events.workmail.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/events.workmail.amazonaws.com/AWSServiceRoleForAmazonWorkMailEvents*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "events.workmail.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/*workmail*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQVKNMT7SVATQ4AUY",
            "PolicyName": "AmazonWorkMailFullAccess",
            "VersionId": "v9"
        },
        "AmazonWorkMailReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ses:Describe*",
                            "ses:Get*",
                            "workmail:Describe*",
                            "workmail:Get*",
                            "workmail:List*",
                            "workmail:Search*",
                            "lambda:ListFunctions",
                            "iam:ListRoles",
                            "logs:DescribeLogGroups",
                            "cloudwatch:GetMetricData"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJHF7J65E2QFKCWAJM",
            "PolicyName": "AmazonWorkMailReadOnlyAccess",
            "VersionId": "v4"
        },
        "AmazonWorkSpacesAdmin": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "workspaces:CreateWorkspaces",
                            "workspaces:DescribeWorkspaces",
                            "workspaces:RebootWorkspaces",
                            "workspaces:RebuildWorkspaces",
                            "workspaces:TerminateWorkspaces",
                            "workspaces:DescribeWorkspaceDirectories",
                            "workspaces:DescribeWorkspaceBundles",
                            "workspaces:ModifyWorkspaceProperties",
                            "workspaces:StopWorkspaces",
                            "workspaces:StartWorkspaces",
                            "workspaces:DescribeWorkspacesConnectionStatus",
                            "workspaces:CreateTags",
                            "workspaces:DeleteTags",
                            "workspaces:DescribeTags",
                            "kms:ListKeys",
                            "kms:ListAliases",
                            "kms:DescribeKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ26AU6ATUQCT5KVJU",
            "PolicyName": "AmazonWorkSpacesAdmin",
            "VersionId": "v2"
        },
        "AmazonWorkSpacesApplicationManagerAdminAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "wam:AuthenticatePackager",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJPRL4KYETIH7XGTSS",
            "PolicyName": "AmazonWorkSpacesApplicationManagerAdminAccess",
            "VersionId": "v1"
        },
        "AmazonWorkSpacesSelfServiceAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "workspaces:RebootWorkspaces",
                            "workspaces:RebuildWorkspaces",
                            "workspaces:ModifyWorkspaceProperties"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MLHUSTJAF",
            "PolicyName": "AmazonWorkSpacesSelfServiceAccess",
            "VersionId": "v1"
        },
        "AmazonWorkSpacesServiceAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeNetworkInterfaces"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4KRXBM753F",
            "PolicyName": "AmazonWorkSpacesServiceAccess",
            "VersionId": "v2"
        },
        "AmazonZocaloFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "zocalo:*",
                            "ds:*",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSubnet",
                            "ec2:CreateTags",
                            "ec2:CreateVpc",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteSecurityGroup",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RevokeSecurityGroupIngress"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJLCDXYRINDMUXEVL6",
            "PolicyName": "AmazonZocaloFullAccess",
            "VersionId": "v1"
        },
        "AmazonZocaloReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "zocalo:Describe*",
                            "ds:DescribeDirectories",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAISRCSSJNS3QPKZJPM",
            "PolicyName": "AmazonZocaloReadOnlyAccess",
            "VersionId": "v1"
        },
        "ApplicationAutoScalingForAmazonAppStreamAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "appstream:UpdateFleet",
                            "appstream:DescribeFleets"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:DescribeAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIEL3HJCCWFVHA6KPG",
            "PolicyName": "ApplicationAutoScalingForAmazonAppStreamAccess",
            "VersionId": "v1"
        },
        "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "glue:CreateDatabase",
                            "glue:UpdateDatabase",
                            "glue:CreateTable",
                            "glue:UpdateTable",
                            "firehose:CreateDeliveryStream",
                            "firehose:DescribeDeliveryStream",
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "firehose:DeleteDeliveryStream",
                            "firehose:PutRecord",
                            "firehose:PutRecordBatch",
                            "firehose:UpdateDestination"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:firehose:*:*:deliverystream/aws-application-discovery-service*"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:ListBucket",
                            "s3:PutBucketLogging",
                            "s3:PutEncryptionConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::aws-application-discovery-service*"
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::aws-application-discovery-service*/*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutRetentionPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/application-discovery-service/firehose*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "firehose.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/AWSApplicationDiscoveryServiceFirehose"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "firehose.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/service-role/AWSApplicationDiscoveryServiceFirehose"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJMGMY3P6OEWOELRFE",
            "PolicyName": "ApplicationDiscoveryServiceContinuousExportServiceRolePolicy",
            "VersionId": "v2"
        },
        "AutoScalingConsoleFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateKeyPair",
                            "ec2:CreateSecurityGroup",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstanceAttribute",
                            "ec2:DescribeInstances",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeLaunchTemplateVersions",
                            "ec2:DescribePlacementGroups",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSpotInstanceRequests",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpcClassicLink",
                            "ec2:ImportKeyPair"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "elasticloadbalancing:Describe*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:ListMetrics",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "autoscaling:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sns:ListSubscriptions",
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:ListRoles",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "autoscaling.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIYEN6FJGYYWJFFCZW",
            "PolicyName": "AutoScalingConsoleFullAccess",
            "VersionId": "v2"
        },
        "AutoScalingConsoleReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpcClassicLink",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeSubnets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "elasticloadbalancing:Describe*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:ListMetrics",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "autoscaling:Describe*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sns:ListSubscriptions",
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI3A7GDXOYQV3VUQMK",
            "PolicyName": "AutoScalingConsoleReadOnlyAccess",
            "VersionId": "v1"
        },
        "AutoScalingFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "autoscaling:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "cloudwatch:PutMetricAlarm",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstanceAttribute",
                            "ec2:DescribeInstances",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeLaunchTemplateVersions",
                            "ec2:DescribePlacementGroups",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSpotInstanceRequests",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcClassicLink"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeTargetGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "autoscaling.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIAWRCSJDDXDXGPCFU",
            "PolicyName": "AutoScalingFullAccess",
            "VersionId": "v2"
        },
        "AutoScalingNotificationAccessRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sqs:SendMessage",
                            "sqs:GetQueueUrl",
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIO2VMUPGDC5PZVXVA",
            "PolicyName": "AutoScalingNotificationAccessRole",
            "VersionId": "v1"
        },
        "AutoScalingReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "autoscaling:Describe*",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIAFWUVLC2LPLSFTFG",
            "PolicyName": "AutoScalingReadOnlyAccess",
            "VersionId": "v1"
        },
        "AutoScalingServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AttachClassicLinkVpc",
                            "ec2:CancelSpotInstanceRequests",
                            "ec2:CreateFleet",
                            "ec2:CreateTags",
                            "ec2:DeleteTags",
                            "ec2:Describe*",
                            "ec2:DetachClassicLinkVpc",
                            "ec2:ModifyInstanceAttribute",
                            "ec2:RequestSpotInstances",
                            "ec2:RunInstances",
                            "ec2:TerminateInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "EC2InstanceManagement"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:PassedToService": "ec2.amazonaws.com*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "EC2InstanceProfileManagement"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "spot.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "EC2SpotManagement"
                    },
                    {
                        "Action": [
                            "elasticloadbalancing:Register*",
                            "elasticloadbalancing:Deregister*",
                            "elasticloadbalancing:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ELBManagement"
                    },
                    {
                        "Action": [
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:PutMetricAlarm"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CWManagement"
                    },
                    {
                        "Action": [
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "SNSManagement"
                    },
                    {
                        "Action": [
                            "events:PutRule",
                            "events:PutTargets",
                            "events:RemoveTargets",
                            "events:DeleteRule",
                            "events:DescribeRule"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "events:ManagedBy": "autoscaling.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "EventBridgeRuleManagement"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIC5D2V7MRWBMHGD7G",
            "PolicyName": "AutoScalingServiceRolePolicy",
            "VersionId": "v3"
        },
        "AwsGlueDataBrewFullAccessPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "databrew:*",
                            "glue:GetDatabases",
                            "glue:GetPartitions",
                            "glue:GetTable",
                            "glue:GetTables",
                            "glue:GetDataCatalogEncryptionSettings",
                            "dataexchange:ListDataSets",
                            "dataexchange:ListDataSetRevisions",
                            "dataexchange:ListRevisionAssets",
                            "dataexchange:CreateJob",
                            "dataexchange:StartJob",
                            "dataexchange:GetJob",
                            "kms:DescribeKey",
                            "kms:ListKeys",
                            "kms:ListAliases",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketCORS",
                            "s3:GetBucketLocation",
                            "s3:GetEncryptionConfiguration",
                            "sts:GetCallerIdentity",
                            "cloudtrail:LookupEvents",
                            "iam:ListRoles",
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::databrew-public-datasets-*"
                        ]
                    },
                    {
                        "Action": [
                            "kms:GenerateDataKey"
                        ],
                        "Condition": {
                            "StringLike": {
                                "kms:ViaService": "s3.*.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "databrew.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ACNRIK7M3",
            "PolicyName": "AwsGlueDataBrewFullAccessPolicy",
            "VersionId": "v2"
        },
        "Billing": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "aws-portal:*Billing",
                            "aws-portal:*Usage",
                            "aws-portal:*PaymentMethods",
                            "budgets:ViewBudget",
                            "budgets:ModifyBudget",
                            "ce:UpdatePreferences",
                            "ce:CreateReport",
                            "ce:UpdateReport",
                            "ce:DeleteReport",
                            "ce:CreateNotificationSubscription",
                            "ce:UpdateNotificationSubscription",
                            "ce:DeleteNotificationSubscription",
                            "cur:DescribeReportDefinitions",
                            "cur:PutReportDefinition",
                            "cur:ModifyReportDefinition",
                            "cur:DeleteReportDefinition",
                            "purchase-orders:*PurchaseOrders"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIFTHXT6FFMIRT7ZEA",
            "PolicyName": "Billing",
            "VersionId": "v5"
        },
        "CertificateManagerServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm-pca:IssueCertificate",
                            "acm-pca:GetCertificate"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4G2T4BX7CL",
            "PolicyName": "CertificateManagerServiceRolePolicy",
            "VersionId": "v1"
        },
        "ClientVPNServiceConnectionsRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:lambda:*:*:function:AWSClientVPN-*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4PG4VWZTEZ",
            "PolicyName": "ClientVPNServiceConnectionsRolePolicy",
            "VersionId": "v1"
        },
        "ClientVPNServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeInternetGateways",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeAccountAttributes",
                            "ds:AuthorizeApplication",
                            "ds:DescribeDirectories",
                            "ds:GetDirectoryLimits",
                            "ds:UnauthorizeApplication",
                            "logs:DescribeLogStreams",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogGroups",
                            "acm:GetCertificate",
                            "acm:DescribeCertificate",
                            "iam:GetSAMLProvider",
                            "lambda:GetFunctionConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI2SV25KUCYQYS5N74",
            "PolicyName": "ClientVPNServiceRolePolicy",
            "VersionId": "v5"
        },
        "CloudFormationStackSetsOrgAdminServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "organizations:List*",
                            "organizations:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "AllowsAWSOrganizationsReadAPIs"
                    },
                    {
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/stacksets-exec-*",
                        "Sid": "AllowAssumeRoleInMemberAccounts"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JEQ3CDBDV",
            "PolicyName": "CloudFormationStackSetsOrgAdminServiceRolePolicy",
            "VersionId": "v1"
        },
        "CloudFormationStackSetsOrgMemberServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:CreateRole",
                            "iam:DeleteRole",
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/stacksets-exec-*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:DetachRolePolicy",
                            "iam:AttachRolePolicy"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PolicyARN": "arn:aws:iam::aws:policy/AdministratorAccess"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/stacksets-exec-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LHV6H6QDU",
            "PolicyName": "CloudFormationStackSetsOrgMemberServiceRolePolicy",
            "VersionId": "v1"
        },
        "CloudFrontFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::*"
                    },
                    {
                        "Action": [
                            "acm:ListCertificates",
                            "cloudfront:*",
                            "iam:ListServerCertificates",
                            "waf:ListWebACLs",
                            "waf:GetWebACL",
                            "wafv2:ListWebACLs",
                            "wafv2:GetWebACL",
                            "kinesis:ListStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kinesis:DescribeStream"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:kinesis:*:*:*"
                    },
                    {
                        "Action": [
                            "iam:ListRoles"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIPRV52SH6HDCCFY6U",
            "PolicyName": "CloudFrontFullAccess",
            "VersionId": "v6"
        },
        "CloudFrontReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm:ListCertificates",
                            "cloudfront:Get*",
                            "cloudfront:List*",
                            "iam:ListServerCertificates",
                            "route53:List*",
                            "waf:ListWebACLs",
                            "waf:GetWebACL",
                            "wafv2:ListWebACLs",
                            "wafv2:GetWebACL"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJJZMNYOTZCNQP36LG",
            "PolicyName": "CloudFrontReadOnlyAccess",
            "VersionId": "v4"
        },
        "CloudHSMServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJILYY7JP6JLMQG56I",
            "PolicyName": "CloudHSMServiceRolePolicy",
            "VersionId": "v1"
        },
        "CloudSearchFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudsearch:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIM6OOWKQ7L7VBOZOC",
            "PolicyName": "CloudSearchFullAccess",
            "VersionId": "v1"
        },
        "CloudSearchReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudsearch:Describe*",
                            "cloudsearch:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJWPLX7N7BCC3RZLHW",
            "PolicyName": "CloudSearchReadOnlyAccess",
            "VersionId": "v1"
        },
        "CloudTrailServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudtrail:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudTrailFullAccess"
                    },
                    {
                        "Action": [
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "organizations:ListAccounts",
                            "organizations:ListAWSServiceAccessForOrganization"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AwsOrgsAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJXQJ45EGU6U7NQBW4",
            "PolicyName": "CloudTrailServiceRolePolicy",
            "VersionId": "v1"
        },
        "CloudWatch-CrossAccountAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sts:AssumeRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/CloudWatch-CrossAccountSharing*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4OV6AFDA5J",
            "PolicyName": "CloudWatch-CrossAccountAccess",
            "VersionId": "v1"
        },
        "CloudWatchActionsEC2Access": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:Describe*",
                            "ec2:Describe*",
                            "ec2:RebootInstances",
                            "ec2:StopInstances",
                            "ec2:TerminateInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIOWD4E3FVSORSZTGU",
            "PolicyName": "CloudWatchActionsEC2Access",
            "VersionId": "v1"
        },
        "CloudWatchAgentAdminPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:PutMetricData",
                            "ec2:DescribeTags",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams",
                            "logs:DescribeLogGroups",
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ssm:GetParameter",
                            "ssm:PutParameter"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ssm:*:*:parameter/AmazonCloudWatch-*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAICMXPKT7EBAF6KR3O",
            "PolicyName": "CloudWatchAgentAdminPolicy",
            "VersionId": "v1"
        },
        "CloudWatchAgentServerPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:PutMetricData",
                            "ec2:DescribeVolumes",
                            "ec2:DescribeTags",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams",
                            "logs:DescribeLogGroups",
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ssm:GetParameter"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ssm:*:*:parameter/AmazonCloudWatch-*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIGOPKN7KRDAKTLG4I",
            "PolicyName": "CloudWatchAgentServerPolicy",
            "VersionId": "v2"
        },
        "CloudWatchApplicationInsightsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "applicationinsights:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "application-insights.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/application-insights.amazonaws.com/AWSServiceRoleForApplicationInsights"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MSQN23AKX",
            "PolicyName": "CloudWatchApplicationInsightsFullAccess",
            "VersionId": "v1"
        },
        "CloudWatchApplicationInsightsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "applicationinsights:Describe*",
                            "applicationinsights:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4AX4TJYLSI",
            "PolicyName": "CloudWatchApplicationInsightsReadOnlyAccess",
            "VersionId": "v1"
        },
        "CloudWatchAutomaticDashboardsAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "autoscaling:DescribeAutoScalingGroups",
                            "cloudfront:GetDistribution",
                            "cloudfront:ListDistributions",
                            "dynamodb:DescribeTable",
                            "dynamodb:ListTables",
                            "ec2:DescribeInstances",
                            "ec2:DescribeVolumes",
                            "ecs:DescribeClusters",
                            "ecs:DescribeContainerInstances",
                            "ecs:ListClusters",
                            "ecs:ListContainerInstances",
                            "ecs:ListServices",
                            "elasticache:DescribeCacheClusters",
                            "elasticbeanstalk:DescribeEnvironments",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "kinesis:DescribeStream",
                            "kinesis:ListStreams",
                            "lambda:GetFunction",
                            "lambda:ListFunctions",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBInstances",
                            "resource-groups:ListGroupResources",
                            "resource-groups:ListGroups",
                            "route53:GetHealthCheck",
                            "route53:ListHealthChecks",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "sns:ListTopics",
                            "sqs:GetQueueAttributes",
                            "sqs:GetQueueUrl",
                            "sqs:ListQueues",
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "apigateway:GET"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:apigateway:us-east-1::/restapis/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JFCXGSE2Q",
            "PolicyName": "CloudWatchAutomaticDashboardsAccess",
            "VersionId": "v2"
        },
        "CloudWatchEventsBuiltInTargetExecutionAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:Describe*",
                            "ec2:RebootInstances",
                            "ec2:StopInstances",
                            "ec2:TerminateInstances",
                            "ec2:CreateSnapshot"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudWatchEventsBuiltInTargetExecutionAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIC5AQ5DATYSNF4AUM",
            "PolicyName": "CloudWatchEventsBuiltInTargetExecutionAccess",
            "VersionId": "v1"
        },
        "CloudWatchEventsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "events:*",
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudWatchEventsFullAccess"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/AWS_Events_Invoke_Targets",
                        "Sid": "IAMPassRoleForCloudWatchEvents"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJZLOYLNHESMYOJAFU",
            "PolicyName": "CloudWatchEventsFullAccess",
            "VersionId": "v1"
        },
        "CloudWatchEventsInvocationAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "kinesis:PutRecord"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudWatchEventsInvocationAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJJXD6JKJLK2WDLZNO",
            "PolicyName": "CloudWatchEventsInvocationAccess",
            "VersionId": "v1"
        },
        "CloudWatchEventsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "events:DescribeRule",
                            "events:ListRuleNamesByTarget",
                            "events:ListRules",
                            "events:ListTargetsByRule",
                            "events:TestEventPattern",
                            "events:DescribeEventBus"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudWatchEventsReadOnlyAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIILJPXXA6F7GYLYBS",
            "PolicyName": "CloudWatchEventsReadOnlyAccess",
            "VersionId": "v2"
        },
        "CloudWatchEventsServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:DescribeAlarms",
                            "ec2:DescribeInstanceStatus",
                            "ec2:DescribeInstances",
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeVolumeStatus",
                            "ec2:DescribeVolumes",
                            "ec2:RebootInstances",
                            "ec2:StopInstances",
                            "ec2:TerminateInstances",
                            "ec2:CreateSnapshot"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJNVASSNSIDZIP4X7I",
            "PolicyName": "CloudWatchEventsServiceRolePolicy",
            "VersionId": "v1"
        },
        "CloudWatchFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "autoscaling:Describe*",
                            "cloudwatch:*",
                            "logs:*",
                            "sns:*",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "events.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIKEABORKUXN6DEAZU",
            "PolicyName": "CloudWatchFullAccess",
            "VersionId": "v3"
        },
        "CloudWatchLambdaInsightsExecutionRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": "logs:CreateLogGroup",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda-insights:*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4EDWWYYDS6",
            "PolicyName": "CloudWatchLambdaInsightsExecutionRolePolicy",
            "VersionId": "v1"
        },
        "CloudWatchLogsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ3ZGNWK2R5HW5BQFO",
            "PolicyName": "CloudWatchLogsFullAccess",
            "VersionId": "v1"
        },
        "CloudWatchLogsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:Describe*",
                            "logs:Get*",
                            "logs:List*",
                            "logs:StartQuery",
                            "logs:StopQuery",
                            "logs:TestMetricFilter",
                            "logs:FilterLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ2YIYDYSNNEHK3VKW",
            "PolicyName": "CloudWatchLogsReadOnlyAccess",
            "VersionId": "v4"
        },
        "CloudWatchReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "autoscaling:Describe*",
                            "cloudwatch:Describe*",
                            "cloudwatch:Get*",
                            "cloudwatch:List*",
                            "logs:Get*",
                            "logs:List*",
                            "logs:StartQuery",
                            "logs:StopQuery",
                            "logs:Describe*",
                            "logs:TestMetricFilter",
                            "logs:FilterLogEvents",
                            "sns:Get*",
                            "sns:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJN23PDQP7SZQAE3QE",
            "PolicyName": "CloudWatchReadOnlyAccess",
            "VersionId": "v4"
        },
        "CloudWatchSyntheticsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "synthetics:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:PutBucketEncryption",
                            "s3:PutEncryptionConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::cw-syn-results-*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:ListRoles",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketLocation",
                            "xray:GetTraceSummaries",
                            "xray:BatchGetTraces"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject",
                            "s3:ListBucket"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::cw-syn-*"
                    },
                    {
                        "Action": [
                            "s3:GetObjectVersion"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::aws-synthetics-library-*"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "lambda.amazonaws.com",
                                    "synthetics.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/CloudWatchSyntheticsRole*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/CloudWatchSyntheticsRole*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricData",
                            "cloudwatch:GetMetricStatistics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudwatch:*:*:alarm:Synthetics-*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:DescribeAlarms"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudwatch:*:*:alarm:*"
                        ]
                    },
                    {
                        "Action": [
                            "lambda:CreateFunction",
                            "lambda:AddPermission",
                            "lambda:PublishVersion",
                            "lambda:UpdateFunctionConfiguration",
                            "lambda:GetFunctionConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:cwsyn-*"
                        ]
                    },
                    {
                        "Action": [
                            "lambda:GetLayerVersionByArn",
                            "lambda:GetLayerVersion",
                            "lambda:PublishLayerVersion"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:lambda:*:*:layer:cwsyn-*",
                            "arn:aws:lambda:*:*:layer:Synthetics:*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "sns:ListTopics"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "sns:CreateTopic",
                            "sns:Subscribe",
                            "sns:ListSubscriptionsByTopic"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:*:sns:*:*:Synthetics-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MAGQWEZP4",
            "PolicyName": "CloudWatchSyntheticsFullAccess",
            "VersionId": "v4"
        },
        "CloudWatchSyntheticsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "synthetics:Describe*",
                            "synthetics:Get*",
                            "synthetics:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4C7XDT2FFB",
            "PolicyName": "CloudWatchSyntheticsReadOnlyAccess",
            "VersionId": "v2"
        },
        "CloudwatchApplicationInsightsServiceLinkedRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:DescribeAlarmHistory",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:GetMetricData",
                            "cloudwatch:ListMetrics",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:PutAnomalyDetector",
                            "cloudwatch:DeleteAnomalyDetector",
                            "cloudwatch:DescribeAnomalyDetectors"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:FilterLogEvents",
                            "logs:GetLogEvents",
                            "logs:DescribeLogStreams",
                            "logs:DescribeLogGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "events:DescribeRule"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudFormation:CreateStack",
                            "cloudFormation:UpdateStack",
                            "cloudFormation:DeleteStack",
                            "cloudFormation:DescribeStackResources"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:cloudformation:*:*:stack/ApplicationInsights-*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudFormation:DescribeStacks",
                            "cloudFormation:ListStackResources"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "resource-groups:ListGroupResources",
                            "resource-groups:GetGroupQuery",
                            "resource-groups:GetGroup"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeTargetGroups",
                            "elasticloadbalancing:DescribeTargetHealth"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "autoscaling:DescribeAutoScalingGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ssm:PutParameter",
                            "ssm:DeleteParameter",
                            "ssm:AddTagsToResource",
                            "ssm:RemoveTagsFromResource",
                            "ssm:GetParameters"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:ssm:*:*:parameter/AmazonCloudWatch-ApplicationInsights-*"
                    },
                    {
                        "Action": [
                            "ssm:CreateAssociation",
                            "ssm:UpdateAssociation",
                            "ssm:DeleteAssociation",
                            "ssm:DescribeAssociation"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*",
                            "arn:aws:ssm:*:*:association/*",
                            "arn:aws:ssm:*:*:managed-instance/*",
                            "arn:aws:ssm:*:*:document/AWSEC2-ApplicationInsightsCloudwatchAgentInstallAndConfigure",
                            "arn:aws:ssm:*:*:document/AWS-ConfigureAWSPackage",
                            "arn:aws:ssm:*:*:document/AmazonCloudWatch-ManageAgent"
                        ]
                    },
                    {
                        "Action": [
                            "ssm:GetOpsItem",
                            "ssm:CreateOpsItem",
                            "ssm:DescribeOpsItems",
                            "ssm:UpdateOpsItem",
                            "ssm:DescribeInstanceInformation"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ssm:ListCommandInvocations"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "ssm:SendCommand",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*",
                            "arn:aws:ssm:*:*:document/AWSEC2-CheckPerformanceCounterSets",
                            "arn:aws:ssm:*:*:document/AWSEC2-DetectWorkload"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:DescribeInstances",
                            "ec2:DescribeVolumes",
                            "ec2:DescribeVolumeStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBClusters"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "lambda:GetFunctionConfiguration",
                            "lambda:ListEventSourceMappings"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "events:PutRule",
                            "events:PutTargets",
                            "events:RemoveTargets",
                            "events:DeleteRule"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:events:*:*:rule/AmazonCloudWatch-ApplicationInsights-*"
                        ]
                    },
                    {
                        "Action": [
                            "xray:GetServiceGraph",
                            "xray:GetTraceSummaries",
                            "xray:GetTimeSeriesServiceStatistics",
                            "xray:GetTraceGraph"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "dynamodb:DescribeTable",
                            "dynamodb:DescribeContributorInsights",
                            "dynamodb:DescribeTimeToLive"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "application-autoscaling:DescribeScalableTargets"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetMetricsConfiguration",
                            "s3:GetReplicationConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "states:DescribeExecution",
                            "states:DescribeStateMachine",
                            "states:GetExecutionHistory"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "apigateway:GET"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJH3SHQERZRQMQOQ44",
            "PolicyName": "CloudwatchApplicationInsightsServiceLinkedRolePolicy",
            "VersionId": "v11"
        },
        "ComprehendDataAccessRolePolicy": {
            "Document": {
                "Statement": {
                    "Action": [
                        "s3:GetObject",
                        "s3:ListBucket",
                        "s3:PutObject"
                    ],
                    "Effect": "Allow",
                    "Resource": [
                        "arn:aws:s3:::*Comprehend*",
                        "arn:aws:s3:::*comprehend*"
                    ]
                },
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJHSDRRKS2Z3MYUPQY",
            "PolicyName": "ComprehendDataAccessRolePolicy",
            "VersionId": "v1"
        },
        "ComprehendFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "comprehend:*",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "s3:GetBucketLocation",
                            "iam:ListRoles",
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAITBM2PMWNG2P7RZEQ",
            "PolicyName": "ComprehendFullAccess",
            "VersionId": "v2"
        },
        "ComprehendMedicalFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "comprehendmedical:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJR5SUEX6PPJ3K4RAO",
            "PolicyName": "ComprehendMedicalFullAccess",
            "VersionId": "v1"
        },
        "ComprehendReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "comprehend:DetectDominantLanguage",
                            "comprehend:BatchDetectDominantLanguage",
                            "comprehend:DetectEntities",
                            "comprehend:BatchDetectEntities",
                            "comprehend:DetectKeyPhrases",
                            "comprehend:BatchDetectKeyPhrases",
                            "comprehend:DetectPiiEntities",
                            "comprehend:DetectSentiment",
                            "comprehend:BatchDetectSentiment",
                            "comprehend:DetectSyntax",
                            "comprehend:BatchDetectSyntax",
                            "comprehend:ClassifyDocument",
                            "comprehend:DescribeTopicsDetectionJob",
                            "comprehend:ListTopicsDetectionJobs",
                            "comprehend:DescribeDominantLanguageDetectionJob",
                            "comprehend:ListDominantLanguageDetectionJobs",
                            "comprehend:DescribeEntitiesDetectionJob",
                            "comprehend:ListEntitiesDetectionJobs",
                            "comprehend:DescribeKeyPhrasesDetectionJob",
                            "comprehend:ListKeyPhrasesDetectionJobs",
                            "comprehend:DescribePiiEntitiesDetectionJob",
                            "comprehend:ListPiiEntitiesDetectionJobs",
                            "comprehend:DescribeSentimentDetectionJob",
                            "comprehend:ListSentimentDetectionJobs",
                            "comprehend:DescribeDocumentClassifier",
                            "comprehend:ListDocumentClassifiers",
                            "comprehend:DescribeDocumentClassificationJob",
                            "comprehend:ListDocumentClassificationJobs",
                            "comprehend:DescribeEntityRecognizer",
                            "comprehend:ListEntityRecognizers",
                            "comprehend:ListTagsForResource",
                            "comprehend:DescribeEndpoint",
                            "comprehend:ListEndpoints"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJIUV5K2YCHQBBAH7G",
            "PolicyName": "ComprehendReadOnly",
            "VersionId": "v7"
        },
        "ComputeOptimizerReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "compute-optimizer:DescribeRecommendationExportJobs",
                            "compute-optimizer:GetEnrollmentStatus",
                            "compute-optimizer:GetRecommendationSummaries",
                            "compute-optimizer:GetEC2InstanceRecommendations",
                            "compute-optimizer:GetEC2RecommendationProjectedMetrics",
                            "compute-optimizer:GetAutoScalingGroupRecommendations",
                            "ec2:DescribeInstances",
                            "autoscaling:DescribeAutoScalingGroups",
                            "cloudwatch:GetMetricData",
                            "organizations:ListAccounts",
                            "organizations:DescribeOrganization",
                            "organizations:DescribeAccount"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FI27MEARJ",
            "PolicyName": "ComputeOptimizerReadOnlyAccess",
            "VersionId": "v2"
        },
        "ComputeOptimizerServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "compute-optimizer:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ComputeOptimizerFullAccess"
                    },
                    {
                        "Action": [
                            "organizations:DescribeOrganization",
                            "organizations:ListAccounts",
                            "organizations:ListAWSServiceAccessForOrganization"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AwsOrgsAccess"
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricData"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudWatchAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4HPOQZNRNJ",
            "PolicyName": "ComputeOptimizerServiceRolePolicy",
            "VersionId": "v1"
        },
        "ConfigConformsServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "config:PutConfigRule",
                            "config:DeleteConfigRule",
                            "config:DescribeConfigRules"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/config-conforms.amazonaws.com*"
                    },
                    {
                        "Action": [
                            "config:DescribeRemediationConfigurations",
                            "config:DeleteRemediationConfiguration",
                            "config:PutRemediationConfigurations"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:config:*:*:remediation-configuration/aws-service-remediation-configuration/config-conforms.amazonaws.com*"
                    },
                    {
                        "Action": [
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/*"
                    },
                    {
                        "Action": [
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/remediation.config.amazonaws.com/AWSServiceRoleForConfigRemediation"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "remediation.config.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/remediation.config.amazonaws.com/AWSServiceRoleForConfigRemediation"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "ssm.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ssm:DescribeDocument",
                            "ssm:GetDocument"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:PutObject",
                            "s3:PutObjectAcl",
                            "s3:GetObject",
                            "s3:GetBucketAcl"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::awsconfigconforms*"
                    },
                    {
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStackResource",
                            "cloudformation:DescribeStackResources",
                            "cloudformation:DescribeStacks",
                            "cloudformation:GetStackPolicy",
                            "cloudformation:SetStackPolicy",
                            "cloudformation:UpdateStack",
                            "cloudformation:UpdateTerminationProtection",
                            "cloudformation:ValidateTemplate",
                            "cloudformation:ListStackResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/awsconfigconforms-*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4BCH3IIJPN",
            "PolicyName": "ConfigConformsServiceRolePolicy",
            "VersionId": "v4"
        },
        "DAXServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:RevokeSecurityGroupIngress"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJQWMGC67G4DWMREGM",
            "PolicyName": "DAXServiceRolePolicy",
            "VersionId": "v1"
        },
        "DataScientist": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "autoscaling:*",
                            "cloudwatch:*",
                            "cloudformation:CreateStack",
                            "cloudformation:DescribeStackEvents",
                            "datapipeline:Describe*",
                            "datapipeline:ListPipelines",
                            "datapipeline:GetPipelineDefinition",
                            "datapipeline:QueryObjects",
                            "dynamodb:*",
                            "ec2:CancelSpotInstanceRequests",
                            "ec2:CancelSpotFleetRequests",
                            "ec2:CreateTags",
                            "ec2:DeleteTags",
                            "ec2:Describe*",
                            "ec2:ModifyImageAttribute",
                            "ec2:ModifyInstanceAttribute",
                            "ec2:ModifySpotFleetRequest",
                            "ec2:RequestSpotInstances",
                            "ec2:RequestSpotFleet",
                            "elasticfilesystem:*",
                            "elasticmapreduce:*",
                            "es:*",
                            "firehose:*",
                            "fsx:DescribeFileSystems",
                            "iam:GetInstanceProfile",
                            "iam:GetRole",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:ListRoles",
                            "kinesis:*",
                            "kms:List*",
                            "lambda:Create*",
                            "lambda:Delete*",
                            "lambda:Get*",
                            "lambda:InvokeFunction",
                            "lambda:PublishVersion",
                            "lambda:Update*",
                            "lambda:List*",
                            "machinelearning:*",
                            "sdb:*",
                            "rds:*",
                            "sns:ListSubscriptions",
                            "sns:ListTopics",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "redshift:*",
                            "s3:CreateBucket",
                            "sns:CreateTopic",
                            "sns:Get*",
                            "sns:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:Abort*",
                            "s3:DeleteObject",
                            "s3:Get*",
                            "s3:List*",
                            "s3:PutAccelerateConfiguration",
                            "s3:PutBucketCors",
                            "s3:PutBucketLogging",
                            "s3:PutBucketNotification",
                            "s3:PutBucketTagging",
                            "s3:PutObject",
                            "s3:Replicate*",
                            "s3:RestoreObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:RunInstances",
                            "ec2:TerminateInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/DataPipelineDefaultRole",
                            "arn:aws:iam::*:role/DataPipelineDefaultResourceRole",
                            "arn:aws:iam::*:role/EMR_EC2_DefaultRole",
                            "arn:aws:iam::*:role/EMR_DefaultRole",
                            "arn:aws:iam::*:role/kinesis-*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "sagemaker.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sagemaker:*"
                        ],
                        "Effect": "Allow",
                        "NotResource": [
                            "arn:aws:sagemaker:*:*:domain/*",
                            "arn:aws:sagemaker:*:*:user-profile/*",
                            "arn:aws:sagemaker:*:*:app/*",
                            "arn:aws:sagemaker:*:*:flow-definition/*"
                        ]
                    },
                    {
                        "Action": [
                            "sagemaker:CreatePresignedDomainUrl",
                            "sagemaker:DescribeDomain",
                            "sagemaker:ListDomains",
                            "sagemaker:DescribeUserProfile",
                            "sagemaker:ListUserProfiles",
                            "sagemaker:*App",
                            "sagemaker:ListApps"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sagemaker:*FlowDefinition",
                            "sagemaker:*FlowDefinitions"
                        ],
                        "Condition": {
                            "StringEqualsIfExists": {
                                "sagemaker:WorkteamType": [
                                    "private-crowd",
                                    "vendor-crowd"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ5YHI2BQW7EQFYDXS",
            "PolicyName": "DataScientist",
            "VersionId": "v5"
        },
        "DatabaseAdministrator": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:Describe*",
                            "cloudwatch:DisableAlarmActions",
                            "cloudwatch:EnableAlarmActions",
                            "cloudwatch:Get*",
                            "cloudwatch:List*",
                            "cloudwatch:PutMetricAlarm",
                            "datapipeline:ActivatePipeline",
                            "datapipeline:CreatePipeline",
                            "datapipeline:DeletePipeline",
                            "datapipeline:DescribeObjects",
                            "datapipeline:DescribePipelines",
                            "datapipeline:GetPipelineDefinition",
                            "datapipeline:ListPipelines",
                            "datapipeline:PutPipelineDefinition",
                            "datapipeline:QueryObjects",
                            "dynamodb:*",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "elasticache:*",
                            "iam:ListRoles",
                            "iam:GetRole",
                            "kms:ListKeys",
                            "lambda:CreateEventSourceMapping",
                            "lambda:CreateFunction",
                            "lambda:DeleteEventSourceMapping",
                            "lambda:DeleteFunction",
                            "lambda:GetFunctionConfiguration",
                            "lambda:ListEventSourceMappings",
                            "lambda:ListFunctions",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:FilterLogEvents",
                            "logs:GetLogEvents",
                            "logs:Create*",
                            "logs:PutLogEvents",
                            "logs:PutMetricFilter",
                            "rds:*",
                            "redshift:*",
                            "s3:CreateBucket",
                            "sns:CreateTopic",
                            "sns:DeleteTopic",
                            "sns:Get*",
                            "sns:List*",
                            "sns:SetTopicAttributes",
                            "sns:Subscribe",
                            "sns:Unsubscribe"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:AbortMultipartUpload",
                            "s3:DeleteObject*",
                            "s3:Get*",
                            "s3:List*",
                            "s3:PutAccelerateConfiguration",
                            "s3:PutBucketTagging",
                            "s3:PutBucketVersioning",
                            "s3:PutBucketWebsite",
                            "s3:PutLifecycleConfiguration",
                            "s3:PutReplicationConfiguration",
                            "s3:PutObject*",
                            "s3:Replicate*",
                            "s3:RestoreObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/rds-monitoring-role",
                            "arn:aws:iam::*:role/rdbms-lambda-access",
                            "arn:aws:iam::*:role/lambda_exec_role",
                            "arn:aws:iam::*:role/lambda-dynamodb-*",
                            "arn:aws:iam::*:role/lambda-vpc-execution-role",
                            "arn:aws:iam::*:role/DataPipelineDefaultRole",
                            "arn:aws:iam::*:role/DataPipelineDefaultResourceRole"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIGBMAW4VUQKOQNVT6",
            "PolicyName": "DatabaseAdministrator",
            "VersionId": "v2"
        },
        "DynamoDBCloudWatchContributorInsightsServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudwatch:DeleteInsightRules",
                            "cloudwatch:PutInsightRule"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"
                    },
                    {
                        "Action": [
                            "cloudwatch:DescribeInsightRules"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4G4VWJTRGV",
            "PolicyName": "DynamoDBCloudWatchContributorInsightsServiceRolePolicy",
            "VersionId": "v1"
        },
        "DynamoDBKinesisReplicationServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": "kms:GenerateDataKey",
                        "Condition": {
                            "StringLike": {
                                "kms:ViaService": "kinesis.*.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kinesis:PutRecord",
                            "kinesis:PutRecords",
                            "kinesis:DescribeStream"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4A745YPIYL",
            "PolicyName": "DynamoDBKinesisReplicationServiceRolePolicy",
            "VersionId": "v1"
        },
        "DynamoDBReplicationServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "dynamodb:GetItem",
                            "dynamodb:PutItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:DescribeTable",
                            "dynamodb:UpdateTable",
                            "dynamodb:Scan",
                            "dynamodb:DescribeStream",
                            "dynamodb:GetRecords",
                            "dynamodb:GetShardIterator",
                            "dynamodb:DescribeTimeToLive",
                            "dynamodb:UpdateTimeToLive",
                            "dynamodb:DescribeLimits",
                            "application-autoscaling:RegisterScalableTarget",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:PutScalingPolicy",
                            "application-autoscaling:DescribeScalingPolicies"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "dynamodb.application-autoscaling.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJCUNRXL4BWASNJED2",
            "PolicyName": "DynamoDBReplicationServiceRolePolicy",
            "VersionId": "v6"
        },
        "EC2FleetTimeShiftableServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeImages",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeInstances",
                            "ec2:RunInstances",
                            "ec2:CreateFleet"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "ec2.amazonaws.com",
                                    "ec2.amazonaws.com.cn"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*",
                            "arn:aws:ec2:*:*:spot-instances-request/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:ec2:fleet-id": "*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IU3TFNWBH",
            "PolicyName": "EC2FleetTimeShiftableServiceRolePolicy",
            "VersionId": "v1"
        },
        "EC2InstanceConnect": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeInstances",
                            "ec2-instance-connect:SendSSHPublicKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "EC2InstanceConnect"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4PBRCMEYY5",
            "PolicyName": "EC2InstanceConnect",
            "VersionId": "v1"
        },
        "EC2InstanceProfileForImageBuilder": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "imagebuilder:GetComponent"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:Decrypt"
                        ],
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:CalledVia": [
                                    "imagebuilder.amazonaws.com"
                                ],
                                "kms:EncryptionContextKeys": "aws:imagebuilder:arn"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::ec2imagebuilder*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:PutLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/imagebuilder/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4EJC2UPLYL",
            "PolicyName": "EC2InstanceProfileForImageBuilder",
            "VersionId": "v3"
        },
        "ECRReplicationServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ecr:CreateRepository",
                            "ecr:ReplicateImage"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NS3XDKIDR",
            "PolicyName": "ECRReplicationServiceRolePolicy",
            "VersionId": "v1"
        },
        "Ec2ImageBuilderCrossAccountDistributionAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "ec2:CreateTags",
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*::image/*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeImages",
                            "ec2:CopyImage",
                            "ec2:ModifyImageAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4PHZOLIXKT",
            "PolicyName": "Ec2ImageBuilderCrossAccountDistributionAccess",
            "VersionId": "v1"
        },
        "ElastiCacheServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:RevokeSecurityGroupIngress",
                            "cloudwatch:PutMetricData",
                            "outposts:GetOutpost",
                            "outposts:GetOutpostInstanceTypes",
                            "outposts:ListOutposts",
                            "outposts:ListSites"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIML5LIBUZBVCSF7PI",
            "PolicyName": "ElastiCacheServiceRolePolicy",
            "VersionId": "v3"
        },
        "ElasticLoadBalancingFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": "elasticloadbalancing:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpcClassicLink",
                            "ec2:DescribeInstances",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeClassicLinkInstances",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeCoipPools",
                            "ec2:GetCoipPoolUsage",
                            "cognito-idp:DescribeUserPoolClient"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIDPMLA3IUIOQCISJ4",
            "PolicyName": "ElasticLoadBalancingFullAccess",
            "VersionId": "v5"
        },
        "ElasticLoadBalancingReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": "elasticloadbalancing:Describe*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeInstances",
                            "ec2:DescribeClassicLinkInstances",
                            "ec2:DescribeSecurityGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJMO7B7SNFLQ6HH736",
            "PolicyName": "ElasticLoadBalancingReadOnly",
            "VersionId": "v1"
        },
        "ElementalActivationsDownloadSoftwareAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elemental-activations:Get*",
                            "elemental-activations:Download*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IQVGBB6WY",
            "PolicyName": "ElementalActivationsDownloadSoftwareAccess",
            "VersionId": "v1"
        },
        "ElementalActivationsFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elemental-activations:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IYX6A6CKJ",
            "PolicyName": "ElementalActivationsFullAccess",
            "VersionId": "v1"
        },
        "ElementalActivationsGenerateLicenses": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elemental-activations:Get*",
                            "elemental-activations:GenerateLicenses",
                            "elemental-activations:StartFileUpload",
                            "elemental-activations:CompleteFileUpload"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LVMPXPYYJ",
            "PolicyName": "ElementalActivationsGenerateLicenses",
            "VersionId": "v1"
        },
        "ElementalActivationsReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elemental-activations:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JBRIPMTYG",
            "PolicyName": "ElementalActivationsReadOnlyAccess",
            "VersionId": "v1"
        },
        "ElementalAppliancesSoftwareFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elemental-appliances-software:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4DHARJPIR5",
            "PolicyName": "ElementalAppliancesSoftwareFullAccess",
            "VersionId": "v3"
        },
        "ElementalAppliancesSoftwareReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elemental-appliances-software:List*",
                            "elemental-appliances-software:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CLKYU5WOM",
            "PolicyName": "ElementalAppliancesSoftwareReadOnlyAccess",
            "VersionId": "v1"
        },
        "ElementalSupportCenterFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "elemental-support-cases:*",
                            "elemental-support-content:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ECPR57WVQ",
            "PolicyName": "ElementalSupportCenterFullAccess",
            "VersionId": "v1"
        },
        "FMSServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "waf:UpdateWebACL",
                            "waf:DeleteWebACL",
                            "waf:GetWebACL",
                            "waf:GetRuleGroup",
                            "waf:ListSubscribedRuleGroups",
                            "waf-regional:UpdateWebACL",
                            "waf-regional:DeleteWebACL",
                            "waf-regional:GetWebACL",
                            "waf-regional:GetRuleGroup",
                            "waf-regional:ListSubscribedRuleGroups",
                            "waf-regional:ListResourcesForWebACL",
                            "waf-regional:AssociateWebACL",
                            "waf-regional:DisassociateWebACL",
                            "elasticloadbalancing:SetWebACL",
                            "apigateway:SetWebACL",
                            "elasticloadbalancing:SetSecurityGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:waf:*:*:webacl/*",
                            "arn:aws:waf-regional:*:*:webacl/*",
                            "arn:aws:waf:*:*:rulegroup/*",
                            "arn:aws:waf-regional:*:*:rulegroup/*",
                            "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*",
                            "arn:aws:apigateway:*::/restapis/*/stages/*"
                        ]
                    },
                    {
                        "Action": [
                            "wafv2:PutLoggingConfiguration",
                            "wafv2:GetLoggingConfiguration",
                            "wafv2:ListLoggingConfigurations",
                            "wafv2:DeleteLoggingConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:wafv2:*:*:regional/webacl/*",
                            "arn:aws:wafv2:*:*:global/webacl/*"
                        ]
                    },
                    {
                        "Action": [
                            "waf:CreateWebACL",
                            "waf-regional:CreateWebACL",
                            "waf:GetChangeToken",
                            "waf-regional:GetChangeToken"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:waf:*",
                            "arn:aws:waf-regional:*"
                        ]
                    },
                    {
                        "Action": [
                            "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "waf:PutPermissionPolicy",
                            "waf:GetPermissionPolicy",
                            "waf:DeletePermissionPolicy",
                            "waf-regional:PutPermissionPolicy",
                            "waf-regional:GetPermissionPolicy",
                            "waf-regional:DeletePermissionPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:waf:*:*:webacl/*",
                            "arn:aws:waf:*:*:rulegroup/*",
                            "arn:aws:waf-regional:*:*:webacl/*",
                            "arn:aws:waf-regional:*:*:rulegroup/*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudfront:GetDistribution",
                            "cloudfront:UpdateDistribution",
                            "cloudfront:ListDistributionsByWebACLId",
                            "cloudfront:ListDistributions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "config:DeleteConfigRule",
                            "config:DescribeComplianceByConfigRule",
                            "config:DescribeConfigRuleEvaluationStatus",
                            "config:DescribeConfigRules",
                            "config:GetComplianceDetailsByConfigRule",
                            "config:PutConfigRule",
                            "config:StartConfigRulesEvaluation"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:config:*:*:config-rule/aws-service-rule/fms.amazonaws.com/*"
                    },
                    {
                        "Action": [
                            "config:DescribeConfigurationRecorders",
                            "config:DescribeConfigurationRecorderStatus",
                            "config:PutConfigurationRecorder",
                            "config:StartConfigurationRecorder",
                            "config:PutDeliveryChannel",
                            "config:DescribeDeliveryChannels",
                            "config:DescribeDeliveryChannelStatus",
                            "config:GetComplianceSummaryByConfigRule",
                            "config:GetDiscoveredResourceCounts",
                            "config:PutEvaluations",
                            "config:SelectResourceConfig"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/fms.amazonaws.com/AWSServiceRoleForFMS"
                        ]
                    },
                    {
                        "Action": [
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "organizations:ListAccounts",
                            "organizations:DescribeOrganizationalUnit",
                            "organizations:ListChildren",
                            "organizations:ListRoots",
                            "organizations:ListParents",
                            "organizations:ListOrganizationalUnitsForParent",
                            "organizations:ListAWSServiceAccessForOrganization"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "shield:CreateProtection",
                            "shield:DeleteProtection",
                            "shield:DescribeProtection",
                            "shield:ListProtections",
                            "shield:ListAttacks",
                            "shield:CreateSubscription",
                            "shield:DescribeSubscription",
                            "shield:GetSubscriptionState",
                            "shield:DescribeDRTAccess",
                            "shield:DescribeEmergencyContactSettings",
                            "shield:UpdateEmergencyContactSettings",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "ec2:DescribeAddresses"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:DeleteSecurityGroup",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                            "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
                            "ec2:DescribeNetworkInterfaceAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:network-interface/*",
                            "arn:aws:ec2:*:*:security-group/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:security-group/*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:CreateSecurityGroup",
                            "ec2:DescribeSecurityGroupReferences",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeStaleSecurityGroups",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpcPeeringConnections"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "wafv2:TagResource",
                            "wafv2:ListResourcesForWebACL",
                            "wafv2:AssociateWebACL",
                            "wafv2:ListTagsForResource",
                            "wafv2:UntagResource",
                            "wafv2:GetWebACL",
                            "wafv2:DisassociateFirewallManager",
                            "wafv2:DeleteWebACL",
                            "wafv2:DisassociateWebACL"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:wafv2:*:*:global/webacl/*",
                            "arn:aws:wafv2:*:*:regional/webacl/*"
                        ]
                    },
                    {
                        "Action": [
                            "wafv2:UpdateWebACL",
                            "wafv2:CreateWebACL",
                            "wafv2:DeleteFirewallManagerRuleGroups",
                            "wafv2:PutFirewallManagerRuleGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:wafv2:*:*:global/webacl/*",
                            "arn:aws:wafv2:*:*:regional/webacl/*",
                            "arn:aws:wafv2:*:*:global/rulegroup/*",
                            "arn:aws:wafv2:*:*:regional/rulegroup/*",
                            "arn:aws:wafv2:*:*:global/managedruleset/*",
                            "arn:aws:wafv2:*:*:regional/managedruleset/*",
                            "arn:aws:wafv2:*:*:global/ipset/*",
                            "arn:aws:wafv2:*:*:regional/ipset/*",
                            "arn:aws:wafv2:*:*:global/regexpatternset/*",
                            "arn:aws:wafv2:*:*:regional/regexpatternset/*"
                        ]
                    },
                    {
                        "Action": [
                            "wafv2:PutPermissionPolicy",
                            "wafv2:GetPermissionPolicy",
                            "wafv2:DeletePermissionPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:wafv2:*:*:global/rulegroup/*",
                            "arn:aws:wafv2:*:*:regional/rulegroup/*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudfront:ListTagsForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "wafv2:GetWebACLForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:wafv2:*:*:regional/webacl/*"
                        ]
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "Name",
                                    "FMManaged"
                                ]
                            },
                            "StringEquals": {
                                "ec2:CreateAction": "CreateRouteTable"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:route-table/*"
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "Name",
                                    "FMManaged"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:subnet/*"
                        ]
                    },
                    {
                        "Action": "ec2:DeleteRouteTable",
                        "Condition": {
                            "StringEquals": {
                                "ec2:ResourceTag/FMManaged": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:route-table/*"
                    },
                    {
                        "Action": [
                            "ec2:AssociateRouteTable",
                            "ec2:CreateSubnet",
                            "ec2:CreateRouteTable",
                            "ec2:DeleteSubnet",
                            "ec2:DisassociateRouteTable",
                            "ec2:ReplaceRouteTableAssociation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeTags",
                            "ec2:DescribeVpcEndpoints"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ram:TagResource"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "Name",
                                    "FMManaged"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ram:*:*:resource-share/*"
                        ]
                    },
                    {
                        "Action": [
                            "ram:AssociateResourceShare",
                            "ram:UpdateResourceShare",
                            "ram:DeleteResourceShare"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/FMManaged": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ram:*:*:resource-share/*"
                    },
                    {
                        "Action": "ram:CreateResourceShare",
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "Name",
                                    "FMManaged"
                                ]
                            },
                            "StringEquals": {
                                "aws:RequestTag/FMManaged": [
                                    "true"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ram:GetResourceShareAssociations",
                            "ram:GetResourceShares"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ram"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "network-firewall.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:GetRole",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "network-firewall:TagResource"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "Name",
                                    "FMManaged"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "network-firewall:AssociateSubnets",
                            "network-firewall:CreateFirewall",
                            "network-firewall:CreateFirewallPolicy",
                            "network-firewall:DisassociateSubnets",
                            "network-firewall:UpdateFirewallDeleteProtection",
                            "network-firewall:UpdateFirewallPolicy",
                            "network-firewall:UpdateFirewallPolicyChangeProtection",
                            "network-firewall:UpdateSubnetChangeProtection",
                            "network-firewall:AssociateFirewallPolicy",
                            "network-firewall:DescribeFirewall",
                            "network-firewall:DescribeFirewallPolicy",
                            "network-firewall:DescribeRuleGroup",
                            "network-firewall:ListFirewallPolicies",
                            "network-firewall:ListFirewalls",
                            "network-firewall:ListRuleGroups",
                            "network-firewall:PutResourcePolicy",
                            "network-firewall:DescribeResourcePolicy",
                            "network-firewall:DeleteResourcePolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "network-firewall:DeleteFirewallPolicy",
                            "network-firewall:DeleteFirewall"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/FMManaged": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:ListLogDeliveries"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI62NTGYJB446ACUEA",
            "PolicyName": "FMSServiceRolePolicy",
            "VersionId": "v17"
        },
        "FSxDeleteServiceLinkedRoleAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus",
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:*:iam::*:role/aws-service-role/s3.data-source.lustre.fsx.amazonaws.com/AWSServiceRoleForFSxS3Access_*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ6IRP2YV2YPKWPPNQ",
            "PolicyName": "FSxDeleteServiceLinkedRoleAccess",
            "VersionId": "v1"
        },
        "GameLiftGameServerGroupPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": "ec2:TerminateInstances",
                        "Condition": {
                            "StringEquals": {
                                "ec2:ResourceTag/GameLift": "GameServerGroups"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "autoscaling:CompleteLifecycleAction",
                            "autoscaling:ResumeProcesses",
                            "autoscaling:EnterStandby",
                            "autoscaling:SetInstanceProtection",
                            "autoscaling:UpdateAutoScalingGroup",
                            "autoscaling:SuspendProcesses",
                            "autoscaling:DetachInstances"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/GameLift": "GameServerGroups"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeImages",
                            "ec2:DescribeInstances",
                            "autoscaling:DescribeAutoScalingGroups",
                            "ec2:DescribeLaunchTemplateVersions",
                            "ec2:DescribeSubnets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "sns:Publish",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:*:sns:*:*:ActivatingLifecycleHookTopic-*",
                            "arn:*:sns:*:*:TerminatingLifecycleHookTopic-*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:PutMetricData"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "cloudwatch:namespace": "AWS/GameLift"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JTX4JYBF6",
            "PolicyName": "GameLiftGameServerGroupPolicy",
            "VersionId": "v3"
        },
        "GlobalAcceleratorFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "globalaccelerator:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "elasticloadbalancing:DescribeLoadBalancers",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeAddresses",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeRegions",
                            "ec2:DescribeSubnets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "globalaccelerator.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/globalaccelerator.amazonaws.com/AWSServiceRoleForGlobalAccelerator*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ3NSRQKPB42BCNRT6",
            "PolicyName": "GlobalAcceleratorFullAccess",
            "VersionId": "v6"
        },
        "GlobalAcceleratorReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "globalaccelerator:Describe*",
                            "globalaccelerator:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJYXHGCVENJKQZRNGU",
            "PolicyName": "GlobalAcceleratorReadOnlyAccess",
            "VersionId": "v1"
        },
        "GreengrassOTAUpdateArtifactAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*-greengrass-updates/*"
                        ],
                        "Sid": "AllowsIotToAccessGreengrassOTAUpdateArtifacts"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIFGE66SKIK3GW5UC2",
            "PolicyName": "GreengrassOTAUpdateArtifactAccess",
            "VersionId": "v2"
        },
        "Health_OrganizationsServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": "organizations:ListAccounts",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "organizations:ListAWSServiceAccessForOrganization",
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "ListAWSServiceAccessForOrganization0"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4EZKGOJYHQ",
            "PolicyName": "Health_OrganizationsServiceRolePolicy",
            "VersionId": "v2"
        },
        "IAMAccessAdvisorReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:ListRoles",
                            "iam:ListUsers",
                            "iam:ListGroups",
                            "iam:ListPolicies",
                            "iam:ListPoliciesGrantingServiceAccess",
                            "iam:GenerateServiceLastAccessedDetails",
                            "iam:GenerateOrganizationsAccessReport",
                            "iam:GenerateCredentialReport",
                            "iam:GetRole",
                            "iam:GetPolicy",
                            "iam:GetServiceLastAccessedDetails",
                            "iam:GetServiceLastAccessedDetailsWithEntities",
                            "iam:GetOrganizationsAccessReport",
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "organizations:DescribeOrganizationalUnit",
                            "organizations:DescribePolicy",
                            "organizations:ListChildren",
                            "organizations:ListParents",
                            "organizations:ListPoliciesForTarget",
                            "organizations:ListRoots",
                            "organizations:ListPolicies",
                            "organizations:ListTargetsForPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FNDX5PG6Z",
            "PolicyName": "IAMAccessAdvisorReadOnly",
            "VersionId": "v1"
        },
        "IAMAccessAnalyzerFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "access-analyzer:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "access-analyzer.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "organizations:DescribeOrganizationalUnit",
                            "organizations:ListAccounts",
                            "organizations:ListAccountsForParent",
                            "organizations:ListAWSServiceAccessForOrganization",
                            "organizations:ListChildren",
                            "organizations:ListDelegatedAdministrators",
                            "organizations:ListOrganizationalUnitsForParent",
                            "organizations:ListParents",
                            "organizations:ListRoots"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4MAZGHIYZN",
            "PolicyName": "IAMAccessAnalyzerFullAccess",
            "VersionId": "v1"
        },
        "IAMAccessAnalyzerReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "access-analyzer:Get*",
                            "access-analyzer:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4GY4R3GAPM",
            "PolicyName": "IAMAccessAnalyzerReadOnlyAccess",
            "VersionId": "v1"
        },
        "IAMFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:*",
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "organizations:DescribeOrganizationalUnit",
                            "organizations:DescribePolicy",
                            "organizations:ListChildren",
                            "organizations:ListParents",
                            "organizations:ListPoliciesForTarget",
                            "organizations:ListRoots",
                            "organizations:ListPolicies",
                            "organizations:ListTargetsForPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI7XKCFMBPM3QQRRVQ",
            "PolicyName": "IAMFullAccess",
            "VersionId": "v2"
        },
        "IAMReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:GenerateCredentialReport",
                            "iam:GenerateServiceLastAccessedDetails",
                            "iam:Get*",
                            "iam:List*",
                            "iam:SimulateCustomPolicy",
                            "iam:SimulatePrincipalPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJKSO7NDY4T57MWDSQ",
            "PolicyName": "IAMReadOnlyAccess",
            "VersionId": "v4"
        },
        "IAMSelfManageServiceSpecificCredentials": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:CreateServiceSpecificCredential",
                            "iam:ListServiceSpecificCredentials",
                            "iam:UpdateServiceSpecificCredential",
                            "iam:DeleteServiceSpecificCredential",
                            "iam:ResetServiceSpecificCredential"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:user/${aws:username}"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI4VT74EMXK2PMQJM2",
            "PolicyName": "IAMSelfManageServiceSpecificCredentials",
            "VersionId": "v1"
        },
        "IAMUserChangePassword": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:ChangePassword"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:user/${aws:username}"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetAccountPasswordPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ4L4MM2A7QIEB56MS",
            "PolicyName": "IAMUserChangePassword",
            "VersionId": "v2"
        },
        "IAMUserSSHKeys": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:DeleteSSHPublicKey",
                            "iam:GetSSHPublicKey",
                            "iam:ListSSHPublicKeys",
                            "iam:UpdateSSHPublicKey",
                            "iam:UploadSSHPublicKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:user/${aws:username}"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJTSHUA4UXGXU7ANUA",
            "PolicyName": "IAMUserSSHKeys",
            "VersionId": "v1"
        },
        "IVSRecordToS3": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:PutObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::AWSIVS_*/ivs/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4M65NGVKOJ",
            "PolicyName": "IVSRecordToS3",
            "VersionId": "v1"
        },
        "IsengardControllerPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:AddUserToGroup",
                            "iam:AttachGroupPolicy",
                            "iam:AttachRolePolicy",
                            "iam:AttachUserPolicy",
                            "iam:CreateAccessKey",
                            "iam:CreateAccountAlias",
                            "iam:CreateGroup",
                            "iam:CreateLoginProfile",
                            "iam:CreatePolicy",
                            "iam:CreatePolicyVersion",
                            "iam:CreateRole",
                            "iam:CreateUser",
                            "iam:DeleteAccessKey",
                            "iam:DeleteAccountAlias",
                            "iam:DeleteGroup",
                            "iam:DeleteGroupPolicy",
                            "iam:DeleteLoginProfile",
                            "iam:DeletePolicy",
                            "iam:DeletePolicyVersion",
                            "iam:DeleteRole",
                            "iam:DeleteRolePolicy",
                            "iam:DeleteUser",
                            "iam:DeleteUserPolicy",
                            "iam:DetachGroupPolicy",
                            "iam:DetachRolePolicy",
                            "iam:DetachUserPolicy",
                            "iam:GenerateCredentialReport",
                            "iam:GenerateServiceLastAccessedDetails",
                            "iam:GetAccessKeyLastUsed",
                            "iam:GetAccountAuthorizationDetails",
                            "iam:GetAccountPasswordPolicy",
                            "iam:GetAccountSummary",
                            "iam:GetCredentialReport",
                            "iam:GetGroup",
                            "iam:GetGroupPolicy",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:GetRole",
                            "iam:GetRolePolicy",
                            "iam:GetServiceLastAccessedDetails",
                            "iam:GetServiceLastAccessedDetailsWithEntities",
                            "iam:GetUser",
                            "iam:GetUserPolicy",
                            "iam:ListAccessKeys",
                            "iam:ListAccountAliases",
                            "iam:ListAttachedGroupPolicies",
                            "iam:ListAttachedRolePolicies",
                            "iam:ListAttachedUserPolicies",
                            "iam:ListEntitiesForPolicy",
                            "iam:ListGroupPolicies",
                            "iam:ListGroups",
                            "iam:ListGroupsForUser",
                            "iam:ListPolicies",
                            "iam:ListPoliciesGrantingServiceAccess",
                            "iam:ListPolicyVersions",
                            "iam:ListRolePolicies",
                            "iam:ListRoles",
                            "iam:ListUserPolicies",
                            "iam:ListUsers",
                            "iam:PutGroupPolicy",
                            "iam:PutRolePolicy",
                            "iam:PutUserPolicy",
                            "iam:RemoveUserFromGroup",
                            "iam:UpdateAccessKey",
                            "iam:UpdateAssumeRolePolicy",
                            "iam:UpdateGroup",
                            "iam:UpdateUser",
                            "iam:UpdateRole",
                            "sts:AssumeRole",
                            "sts:GetSessionToken",
                            "s3:GetAccountPublicAccessBlock",
                            "s3:PutAccountPublicAccessBlock"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIRRTBA6SMZSYUY762",
            "PolicyName": "IsengardControllerPolicy",
            "VersionId": "v4"
        },
        "KafkaServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:AttachNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DetachNetworkInterface",
                            "acm-pca:GetCertificateAuthorityCertificate",
                            "secretsmanager:ListSecrets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "secretsmanager:GetResourcePolicy",
                            "secretsmanager:PutResourcePolicy",
                            "secretsmanager:DeleteResourcePolicy",
                            "secretsmanager:DescribeSecret"
                        ],
                        "Condition": {
                            "ArnLike": {
                                "secretsmanager:SecretId": "arn:*:secretsmanager:*:*:secret:AmazonMSK_*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJUXPRZ76MAP2EVQJU",
            "PolicyName": "KafkaServiceRolePolicy",
            "VersionId": "v3"
        },
        "LakeFormationDataAccessServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4N342E3KHW",
            "PolicyName": "LakeFormationDataAccessServiceRolePolicy",
            "VersionId": "v1"
        },
        "LexBotPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "polly:SynthesizeSpeech"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "comprehend:DetectSentiment"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJJ3NZRBBQKSESXXJC",
            "PolicyName": "LexBotPolicy",
            "VersionId": "v2"
        },
        "LexChannelPolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "lex:PostText"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJKYEISPO63JTBJWPY",
            "PolicyName": "LexChannelPolicy",
            "VersionId": "v1"
        },
        "LightsailExportAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/lightsail.amazonaws.com/AWSServiceRoleForLightsail*"
                    },
                    {
                        "Action": [
                            "ec2:CopySnapshot",
                            "ec2:DescribeSnapshots",
                            "ec2:CopyImage",
                            "ec2:DescribeImages"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ4LZGPQLZWMVR4WMQ",
            "PolicyName": "LightsailExportAccess",
            "VersionId": "v1"
        },
        "MediaPackageServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": "logs:PutLogEvents",
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/MediaPackage/*:log-stream:*"
                    },
                    {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/MediaPackage/*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4GXH4HDK6N",
            "PolicyName": "MediaPackageServiceRolePolicy",
            "VersionId": "v1"
        },
        "MigrationHubDMSAccessServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": "mgh:CreateProgressUpdateStream",
                        "Effect": "Allow",
                        "Resource": "arn:aws:mgh:*:*:progressUpdateStream/DMS"
                    },
                    {
                        "Action": [
                            "mgh:DescribeMigrationTask",
                            "mgh:AssociateDiscoveredResource",
                            "mgh:ListDiscoveredResources",
                            "mgh:ImportMigrationTask",
                            "mgh:ListCreatedArtifacts",
                            "mgh:DisassociateDiscoveredResource",
                            "mgh:AssociateCreatedArtifact",
                            "mgh:NotifyMigrationTaskState",
                            "mgh:DisassociateCreatedArtifact",
                            "mgh:PutResourceAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:mgh:*:*:progressUpdateStream/DMS/migrationTask/*"
                    },
                    {
                        "Action": [
                            "mgh:ListMigrationTasks",
                            "mgh:NotifyApplicationState",
                            "mgh:DescribeApplicationState",
                            "mgh:GetHomeRegion"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IV7DIZ555",
            "PolicyName": "MigrationHubDMSAccessServiceRolePolicy",
            "VersionId": "v2"
        },
        "MigrationHubSMSAccessServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": "mgh:CreateProgressUpdateStream",
                        "Effect": "Allow",
                        "Resource": "arn:aws:mgh:*:*:progressUpdateStream/SMS"
                    },
                    {
                        "Action": [
                            "mgh:DescribeMigrationTask",
                            "mgh:AssociateDiscoveredResource",
                            "mgh:ListDiscoveredResources",
                            "mgh:ImportMigrationTask",
                            "mgh:ListCreatedArtifacts",
                            "mgh:DisassociateDiscoveredResource",
                            "mgh:AssociateCreatedArtifact",
                            "mgh:NotifyMigrationTaskState",
                            "mgh:DisassociateCreatedArtifact",
                            "mgh:PutResourceAttributes"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:mgh:*:*:progressUpdateStream/SMS/migrationTask/*"
                    },
                    {
                        "Action": [
                            "mgh:ListMigrationTasks",
                            "mgh:NotifyApplicationState",
                            "mgh:DescribeApplicationState",
                            "mgh:GetHomeRegion"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4JCW2B2IGB",
            "PolicyName": "MigrationHubSMSAccessServiceRolePolicy",
            "VersionId": "v2"
        },
        "MigrationHubServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "discovery:ListConfigurations",
                            "discovery:DescribeConfigurations"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": "aws:migrationhub:source-id"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ec2:*:*:instance/*",
                            "arn:aws:ec2:*:*:image/*",
                            "arn:aws:ec2:*:*:volume/*"
                        ]
                    },
                    {
                        "Action": "dms:AddTagsToResource",
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": "aws:migrationhub:source-id"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:dms:*:*:endpoint:*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:DescribeInstanceAttribute"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NWLJ3LLW3",
            "PolicyName": "MigrationHubServiceRolePolicy",
            "VersionId": "v3"
        },
        "NeptuneConsoleFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rds:CreateDBCluster",
                            "rds:CreateDBInstance"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "rds:DatabaseEngine": [
                                    "graphdb",
                                    "neptune"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:rds:*:*:*"
                        ]
                    },
                    {
                        "Action": [
                            "rds:AddRoleToDBCluster",
                            "rds:AddSourceIdentifierToSubscription",
                            "rds:AddTagsToResource",
                            "rds:ApplyPendingMaintenanceAction",
                            "rds:CopyDBClusterParameterGroup",
                            "rds:CopyDBClusterSnapshot",
                            "rds:CopyDBParameterGroup",
                            "rds:CreateDBClusterParameterGroup",
                            "rds:CreateDBClusterSnapshot",
                            "rds:CreateDBParameterGroup",
                            "rds:CreateDBSubnetGroup",
                            "rds:CreateEventSubscription",
                            "rds:DeleteDBCluster",
                            "rds:DeleteDBClusterParameterGroup",
                            "rds:DeleteDBClusterSnapshot",
                            "rds:DeleteDBInstance",
                            "rds:DeleteDBParameterGroup",
                            "rds:DeleteDBSubnetGroup",
                            "rds:DeleteEventSubscription",
                            "rds:DescribeAccountAttributes",
                            "rds:DescribeCertificates",
                            "rds:DescribeDBClusterParameterGroups",
                            "rds:DescribeDBClusterParameters",
                            "rds:DescribeDBClusterSnapshotAttributes",
                            "rds:DescribeDBClusterSnapshots",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBEngineVersions",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBLogFiles",
                            "rds:DescribeDBParameterGroups",
                            "rds:DescribeDBParameters",
                            "rds:DescribeDBSecurityGroups",
                            "rds:DescribeDBSubnetGroups",
                            "rds:DescribeEngineDefaultClusterParameters",
                            "rds:DescribeEngineDefaultParameters",
                            "rds:DescribeEventCategories",
                            "rds:DescribeEventSubscriptions",
                            "rds:DescribeEvents",
                            "rds:DescribeOptionGroups",
                            "rds:DescribeOrderableDBInstanceOptions",
                            "rds:DescribePendingMaintenanceActions",
                            "rds:DescribeValidDBInstanceModifications",
                            "rds:DownloadDBLogFilePortion",
                            "rds:FailoverDBCluster",
                            "rds:ListTagsForResource",
                            "rds:ModifyDBCluster",
                            "rds:ModifyDBClusterParameterGroup",
                            "rds:ModifyDBClusterSnapshotAttribute",
                            "rds:ModifyDBInstance",
                            "rds:ModifyDBParameterGroup",
                            "rds:ModifyDBSubnetGroup",
                            "rds:ModifyEventSubscription",
                            "rds:PromoteReadReplicaDBCluster",
                            "rds:RebootDBInstance",
                            "rds:RemoveRoleFromDBCluster",
                            "rds:RemoveSourceIdentifierFromSubscription",
                            "rds:RemoveTagsFromResource",
                            "rds:ResetDBClusterParameterGroup",
                            "rds:ResetDBParameterGroup",
                            "rds:RestoreDBClusterFromSnapshot",
                            "rds:RestoreDBClusterToPointInTime"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "ec2:AllocateAddress",
                            "ec2:AssignIpv6Addresses",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:AssociateAddress",
                            "ec2:AssociateRouteTable",
                            "ec2:AssociateSubnetCidrBlock",
                            "ec2:AssociateVpcCidrBlock",
                            "ec2:AttachInternetGateway",
                            "ec2:AttachNetworkInterface",
                            "ec2:CreateCustomerGateway",
                            "ec2:CreateDefaultSubnet",
                            "ec2:CreateDefaultVpc",
                            "ec2:CreateInternetGateway",
                            "ec2:CreateNatGateway",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateRoute",
                            "ec2:CreateRouteTable",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSubnet",
                            "ec2:CreateVpc",
                            "ec2:CreateVpcEndpoint",
                            "ec2:CreateVpcEndpoint",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeCustomerGateways",
                            "ec2:DescribeInstances",
                            "ec2:DescribeNatGateways",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribePrefixLists",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroupReferences",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpcs",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:ModifySubnetAttribute",
                            "ec2:ModifyVpcAttribute",
                            "ec2:ModifyVpcEndpoint",
                            "iam:ListRoles",
                            "kms:ListAliases",
                            "kms:ListKeyPolicies",
                            "kms:ListKeys",
                            "kms:ListRetirableGrants",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "sns:ListSubscriptions",
                            "sns:ListTopics",
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:passedToService": "rds.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "rds.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJWTD4ELX2KRNICUVQ",
            "PolicyName": "NeptuneConsoleFullAccess",
            "VersionId": "v4"
        },
        "NeptuneFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rds:CreateDBCluster",
                            "rds:CreateDBInstance"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "rds:DatabaseEngine": [
                                    "graphdb",
                                    "neptune"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:rds:*:*:*"
                        ]
                    },
                    {
                        "Action": [
                            "rds:AddRoleToDBCluster",
                            "rds:AddSourceIdentifierToSubscription",
                            "rds:AddTagsToResource",
                            "rds:ApplyPendingMaintenanceAction",
                            "rds:CopyDBClusterParameterGroup",
                            "rds:CopyDBClusterSnapshot",
                            "rds:CopyDBParameterGroup",
                            "rds:CreateDBClusterParameterGroup",
                            "rds:CreateDBClusterSnapshot",
                            "rds:CreateDBParameterGroup",
                            "rds:CreateDBSubnetGroup",
                            "rds:CreateEventSubscription",
                            "rds:DeleteDBCluster",
                            "rds:DeleteDBClusterParameterGroup",
                            "rds:DeleteDBClusterSnapshot",
                            "rds:DeleteDBInstance",
                            "rds:DeleteDBParameterGroup",
                            "rds:DeleteDBSubnetGroup",
                            "rds:DeleteEventSubscription",
                            "rds:DescribeAccountAttributes",
                            "rds:DescribeCertificates",
                            "rds:DescribeDBClusterParameterGroups",
                            "rds:DescribeDBClusterParameters",
                            "rds:DescribeDBClusterSnapshotAttributes",
                            "rds:DescribeDBClusterSnapshots",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBEngineVersions",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBLogFiles",
                            "rds:DescribeDBParameterGroups",
                            "rds:DescribeDBParameters",
                            "rds:DescribeDBSecurityGroups",
                            "rds:DescribeDBSubnetGroups",
                            "rds:DescribeEngineDefaultClusterParameters",
                            "rds:DescribeEngineDefaultParameters",
                            "rds:DescribeEventCategories",
                            "rds:DescribeEventSubscriptions",
                            "rds:DescribeEvents",
                            "rds:DescribeOptionGroups",
                            "rds:DescribeOrderableDBInstanceOptions",
                            "rds:DescribePendingMaintenanceActions",
                            "rds:DescribeValidDBInstanceModifications",
                            "rds:DownloadDBLogFilePortion",
                            "rds:FailoverDBCluster",
                            "rds:ListTagsForResource",
                            "rds:ModifyDBCluster",
                            "rds:ModifyDBClusterParameterGroup",
                            "rds:ModifyDBClusterSnapshotAttribute",
                            "rds:ModifyDBInstance",
                            "rds:ModifyDBParameterGroup",
                            "rds:ModifyDBSubnetGroup",
                            "rds:ModifyEventSubscription",
                            "rds:PromoteReadReplicaDBCluster",
                            "rds:RebootDBInstance",
                            "rds:RemoveRoleFromDBCluster",
                            "rds:RemoveSourceIdentifierFromSubscription",
                            "rds:RemoveTagsFromResource",
                            "rds:ResetDBClusterParameterGroup",
                            "rds:ResetDBParameterGroup",
                            "rds:RestoreDBClusterFromSnapshot",
                            "rds:RestoreDBClusterToPointInTime"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs",
                            "kms:ListAliases",
                            "kms:ListKeyPolicies",
                            "kms:ListKeys",
                            "kms:ListRetirableGrants",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "sns:ListSubscriptions",
                            "sns:ListTopics",
                            "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:passedToService": "rds.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "rds.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIXSDEYRCNJRC6ITFK",
            "PolicyName": "NeptuneFullAccess",
            "VersionId": "v5"
        },
        "NeptuneReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "rds:DescribeAccountAttributes",
                            "rds:DescribeCertificates",
                            "rds:DescribeDBClusterParameterGroups",
                            "rds:DescribeDBClusterParameters",
                            "rds:DescribeDBClusterSnapshotAttributes",
                            "rds:DescribeDBClusterSnapshots",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBEngineVersions",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBLogFiles",
                            "rds:DescribeDBParameterGroups",
                            "rds:DescribeDBParameters",
                            "rds:DescribeDBSubnetGroups",
                            "rds:DescribeEventCategories",
                            "rds:DescribeEventSubscriptions",
                            "rds:DescribeEvents",
                            "rds:DescribeOrderableDBInstanceOptions",
                            "rds:DescribePendingMaintenanceActions",
                            "rds:DownloadDBLogFilePortion",
                            "rds:ListTagsForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kms:ListKeys",
                            "kms:ListRetirableGrants",
                            "kms:ListAliases",
                            "kms:ListKeyPolicies"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*",
                            "arn:aws:logs:*:*:log-group:/aws/neptune/*:log-stream:*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJS5OQ5RXULC66WTGQ",
            "PolicyName": "NeptuneReadOnlyAccess",
            "VersionId": "v1"
        },
        "NetworkAdministrator": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "autoscaling:Describe*",
                            "ec2:AcceptVpcEndpointConnections",
                            "ec2:AllocateAddress",
                            "ec2:AssignIpv6Addresses",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:AssociateAddress",
                            "ec2:AssociateDhcpOptions",
                            "ec2:AssociateRouteTable",
                            "ec2:AssociateSubnetCidrBlock",
                            "ec2:AssociateVpcCidrBlock",
                            "ec2:AttachInternetGateway",
                            "ec2:AttachNetworkInterface",
                            "ec2:AttachVpnGateway",
                            "ec2:CreateCarrierGateway",
                            "ec2:DeleteCarrierGateway",
                            "ec2:DescribeCarrierGateways",
                            "ec2:CreateCustomerGateway",
                            "ec2:CreateDefaultSubnet",
                            "ec2:CreateDefaultVpc",
                            "ec2:CreateDhcpOptions",
                            "ec2:CreateEgressOnlyInternetGateway",
                            "ec2:CreateFlowLogs",
                            "ec2:CreateInternetGateway",
                            "ec2:CreateNatGateway",
                            "ec2:CreateNetworkAcl",
                            "ec2:CreateNetworkAclEntry",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:CreatePlacementGroup",
                            "ec2:CreateRoute",
                            "ec2:CreateRouteTable",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSubnet",
                            "ec2:CreateTags",
                            "ec2:CreateVpc",
                            "ec2:CreateVpcEndpoint",
                            "ec2:CreateVpcEndpointConnectionNotification",
                            "ec2:CreateVpcEndpointServiceConfiguration",
                            "ec2:CreateVpnConnection",
                            "ec2:CreateVpnConnectionRoute",
                            "ec2:CreateVpnGateway",
                            "ec2:DeleteEgressOnlyInternetGateway",
                            "ec2:DeleteFlowLogs",
                            "ec2:DeleteNatGateway",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:DeletePlacementGroup",
                            "ec2:DeleteSubnet",
                            "ec2:DeleteTags",
                            "ec2:DeleteVpc",
                            "ec2:DeleteVpcEndpointConnectionNotifications",
                            "ec2:DeleteVpcEndpoints",
                            "ec2:DeleteVpcEndpointServiceConfigurations",
                            "ec2:DeleteVpnConnection",
                            "ec2:DeleteVpnConnectionRoute",
                            "ec2:DeleteVpnGateway",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeClassicLinkInstances",
                            "ec2:DescribeCustomerGateways",
                            "ec2:DescribeDhcpOptions",
                            "ec2:DescribeEgressOnlyInternetGateways",
                            "ec2:DescribeFlowLogs",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeMovingAddresses",
                            "ec2:DescribeNatGateways",
                            "ec2:DescribeNetworkAcls",
                            "ec2:DescribeNetworkInterfaceAttribute",
                            "ec2:DescribeNetworkInterfacePermissions",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribePlacementGroups",
                            "ec2:DescribePrefixLists",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroupReferences",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeStaleSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeTags",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcClassicLink",
                            "ec2:DescribeVpcClassicLinkDnsSupport",
                            "ec2:DescribeVpcEndpointConnectionNotifications",
                            "ec2:DescribeVpcEndpointConnections",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcEndpointServiceConfigurations",
                            "ec2:DescribeVpcEndpointServicePermissions",
                            "ec2:DescribeVpcEndpointServices",
                            "ec2:DescribeVpcPeeringConnections",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpnConnections",
                            "ec2:DescribeVpnGateways",
                            "ec2:DetachInternetGateway",
                            "ec2:DetachNetworkInterface",
                            "ec2:DetachVpnGateway",
                            "ec2:DisableVgwRoutePropagation",
                            "ec2:DisableVpcClassicLinkDnsSupport",
                            "ec2:DisassociateAddress",
                            "ec2:DisassociateRouteTable",
                            "ec2:DisassociateSubnetCidrBlock",
                            "ec2:DisassociateVpcCidrBlock",
                            "ec2:EnableVgwRoutePropagation",
                            "ec2:EnableVpcClassicLinkDnsSupport",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:ModifySubnetAttribute",
                            "ec2:ModifyVpcAttribute",
                            "ec2:ModifyVpcEndpoint",
                            "ec2:ModifyVpcEndpointConnectionNotification",
                            "ec2:ModifyVpcEndpointServiceConfiguration",
                            "ec2:ModifyVpcEndpointServicePermissions",
                            "ec2:ModifyVpcPeeringConnectionOptions",
                            "ec2:ModifyVpcTenancy",
                            "ec2:MoveAddressToVpc",
                            "ec2:RejectVpcEndpointConnections",
                            "ec2:ReleaseAddress",
                            "ec2:ReplaceNetworkAclAssociation",
                            "ec2:ReplaceNetworkAclEntry",
                            "ec2:ReplaceRoute",
                            "ec2:ReplaceRouteTableAssociation",
                            "ec2:ResetNetworkInterfaceAttribute",
                            "ec2:RestoreAddressToClassic",
                            "ec2:UnassignIpv6Addresses",
                            "ec2:UnassignPrivateIpAddresses",
                            "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                            "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
                            "directconnect:*",
                            "route53:*",
                            "route53domains:*",
                            "cloudfront:ListDistributions",
                            "elasticloadbalancing:*",
                            "elasticbeanstalk:Describe*",
                            "elasticbeanstalk:List*",
                            "elasticbeanstalk:RetrieveEnvironmentInfo",
                            "elasticbeanstalk:RequestEnvironmentInfo",
                            "sns:ListTopics",
                            "sns:ListSubscriptionsByTopic",
                            "sns:CreateTopic",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:GetMetricStatistics",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:AcceptVpcPeeringConnection",
                            "ec2:AttachClassicLinkVpc",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateVpcPeeringConnection",
                            "ec2:DeleteCustomerGateway",
                            "ec2:DeleteDhcpOptions",
                            "ec2:DeleteInternetGateway",
                            "ec2:DeleteNetworkAcl",
                            "ec2:DeleteNetworkAclEntry",
                            "ec2:DeleteRoute",
                            "ec2:DeleteRouteTable",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DeleteVolume",
                            "ec2:DeleteVpcPeeringConnection",
                            "ec2:DetachClassicLinkVpc",
                            "ec2:DisableVpcClassicLink",
                            "ec2:EnableVpcClassicLink",
                            "ec2:GetConsoleScreenshot",
                            "ec2:RejectVpcPeeringConnection",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RevokeSecurityGroupIngress"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:GetBucketLocation",
                            "s3:GetBucketWebsite"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "iam:ListRoles",
                            "iam:PassRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/flow-logs-*"
                    },
                    {
                        "Action": [
                            "networkmanager:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:AcceptTransitGatewayVpcAttachment",
                            "ec2:AssociateTransitGatewayRouteTable",
                            "ec2:CreateTransitGateway",
                            "ec2:CreateTransitGatewayRoute",
                            "ec2:CreateTransitGatewayRouteTable",
                            "ec2:CreateTransitGatewayVpcAttachment",
                            "ec2:DeleteTransitGateway",
                            "ec2:DeleteTransitGatewayRoute",
                            "ec2:DeleteTransitGatewayRouteTable",
                            "ec2:DeleteTransitGatewayVpcAttachment",
                            "ec2:DescribeTransitGatewayAttachments",
                            "ec2:DescribeTransitGatewayRouteTables",
                            "ec2:DescribeTransitGatewayVpcAttachments",
                            "ec2:DescribeTransitGateways",
                            "ec2:DisableTransitGatewayRouteTablePropagation",
                            "ec2:DisassociateTransitGatewayRouteTable",
                            "ec2:EnableTransitGatewayRouteTablePropagation",
                            "ec2:ExportTransitGatewayRoutes",
                            "ec2:GetTransitGatewayAttachmentPropagations",
                            "ec2:GetTransitGatewayRouteTableAssociations",
                            "ec2:GetTransitGatewayRouteTablePropagations",
                            "ec2:ModifyTransitGatewayVpcAttachment",
                            "ec2:RejectTransitGatewayVpcAttachment",
                            "ec2:ReplaceTransitGatewayRoute",
                            "ec2:SearchTransitGatewayRoutes"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "transitgateway.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJPNMADZFJCVPJVZA2",
            "PolicyName": "NetworkAdministrator",
            "VersionId": "v8"
        },
        "PowerUserAccess": {
            "Document": {
                "Statement": [
                    {
                        "Effect": "Allow",
                        "NotAction": [
                            "iam:*",
                            "organizations:*",
                            "account:*"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole",
                            "iam:DeleteServiceLinkedRole",
                            "iam:ListRoles",
                            "organizations:DescribeOrganization",
                            "account:ListRegions"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJYRXTHIB4FOVS3ZXS",
            "PolicyName": "PowerUserAccess",
            "VersionId": "v4"
        },
        "QuickSightAccessForS3StorageManagementAnalyticsReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::s3-analytics-export-shared-*"
                        ]
                    },
                    {
                        "Action": [
                            "s3:GetAnalyticsConfiguration",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketLocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIFWG3L3WDMR4I7ZJW",
            "PolicyName": "QuickSightAccessForS3StorageManagementAnalyticsReadOnly",
            "VersionId": "v4"
        },
        "RDSCloudHsmAuthorizationRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudhsm:CreateLunaClient",
                            "cloudhsm:DeleteLunaClient",
                            "cloudhsm:DescribeHapg",
                            "cloudhsm:DescribeLunaClient",
                            "cloudhsm:GetConfig",
                            "cloudhsm:ModifyHapg",
                            "cloudhsm:ModifyLunaClient"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIWKFXRLQG2ROKKXLE",
            "PolicyName": "RDSCloudHsmAuthorizationRole",
            "VersionId": "v2"
        },
        "ReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "a4b:Get*",
                            "a4b:List*",
                            "a4b:Search*",
                            "access-analyzer:GetAnalyzedResource",
                            "access-analyzer:GetAnalyzer",
                            "access-analyzer:GetArchiveRule",
                            "access-analyzer:GetFinding",
                            "access-analyzer:ListAnalyzedResources",
                            "access-analyzer:ListAnalyzers",
                            "access-analyzer:ListArchiveRules",
                            "access-analyzer:ListFindings",
                            "access-analyzer:ListTagsForResource",
                            "acm:Describe*",
                            "acm:Get*",
                            "acm:List*",
                            "acm-pca:Describe*",
                            "acm-pca:Get*",
                            "acm-pca:List*",
                            "amplify:GetApp",
                            "amplify:GetBranch",
                            "amplify:GetJob",
                            "amplify:GetDomainAssociation",
                            "amplify:ListApps",
                            "amplify:ListBranches",
                            "amplify:ListDomainAssociations",
                            "amplify:ListJobs",
                            "apigateway:GET",
                            "application-autoscaling:Describe*",
                            "applicationinsights:Describe*",
                            "applicationinsights:List*",
                            "appmesh:Describe*",
                            "appmesh:List*",
                            "appstream:Describe*",
                            "appstream:Get*",
                            "appstream:List*",
                            "appsync:Get*",
                            "appsync:List*",
                            "autoscaling:Describe*",
                            "autoscaling-plans:Describe*",
                            "autoscaling-plans:GetScalingPlanResourceForecastData",
                            "athena:List*",
                            "athena:Batch*",
                            "athena:Get*",
                            "aws-portal:View*",
                            "backup:Describe*",
                            "backup:Get*",
                            "backup:List*",
                            "batch:List*",
                            "batch:Describe*",
                            "budgets:Describe*",
                            "budgets:View*",
                            "cassandra:Select",
                            "chatbot:Describe*",
                            "chatbot:Get*",
                            "chime:Get*",
                            "chime:List*",
                            "chime:Retrieve*",
                            "chime:Search*",
                            "chime:Validate*",
                            "cloud9:Describe*",
                            "cloud9:List*",
                            "clouddirectory:List*",
                            "clouddirectory:BatchRead",
                            "clouddirectory:Get*",
                            "clouddirectory:LookupPolicy",
                            "cloudformation:Describe*",
                            "cloudformation:Detect*",
                            "cloudformation:Get*",
                            "cloudformation:List*",
                            "cloudformation:Estimate*",
                            "cloudfront:Get*",
                            "cloudfront:List*",
                            "cloudhsm:List*",
                            "cloudhsm:Describe*",
                            "cloudhsm:Get*",
                            "cloudsearch:Describe*",
                            "cloudsearch:List*",
                            "cloudtrail:Describe*",
                            "cloudtrail:Get*",
                            "cloudtrail:List*",
                            "cloudtrail:LookupEvents",
                            "cloudwatch:Describe*",
                            "cloudwatch:Get*",
                            "cloudwatch:List*",
                            "codeartifact:DescribeDomain",
                            "codeartifact:DescribePackageVersion",
                            "codeartifact:DescribeRepository",
                            "codeartifact:GetAuthorizationToken",
                            "codeartifact:GetDomainPermissionsPolicy",
                            "codeartifact:GetPackageVersionAsset",
                            "codeartifact:GetPackageVersionReadme",
                            "codeartifact:GetRepositoryEndpoint",
                            "codeartifact:GetRepositoryPermissionsPolicy",
                            "codeartifact:ListDomains",
                            "codeartifact:ListPackages",
                            "codeartifact:ListPackageVersionAssets",
                            "codeartifact:ListPackageVersionDependencies",
                            "codeartifact:ListPackageVersions",
                            "codeartifact:ListRepositories",
                            "codeartifact:ListRepositoriesInDomain",
                            "codebuild:BatchGet*",
                            "codebuild:DescribeCodeCoverages",
                            "codebuild:DescribeTestCases",
                            "codebuild:List*",
                            "codecommit:BatchGet*",
                            "codecommit:Describe*",
                            "codecommit:Get*",
                            "codecommit:GitPull",
                            "codecommit:List*",
                            "codedeploy:BatchGet*",
                            "codedeploy:Get*",
                            "codedeploy:List*",
                            "codeguru-profiler:Describe*",
                            "codeguru-profiler:Get*",
                            "codeguru-profiler:List*",
                            "codeguru-reviewer:Describe*",
                            "codeguru-reviewer:Get*",
                            "codeguru-reviewer:List*",
                            "codepipeline:List*",
                            "codepipeline:Get*",
                            "codestar:List*",
                            "codestar:Describe*",
                            "codestar:Get*",
                            "codestar:Verify*",
                            "codestar-notifications:describeNotificationRule",
                            "codestar-notifications:listEventTypes",
                            "codestar-notifications:listNotificationRules",
                            "codestar-notifications:listTagsForResource",
                            "codestar-notifications:ListTargets",
                            "compute-optimizer:DescribeRecommendationExportJobs",
                            "compute-optimizer:GetAutoScalingGroupRecommendations",
                            "compute-optimizer:GetEC2InstanceRecommendations",
                            "compute-optimizer:GetEC2RecommendationProjectedMetrics",
                            "compute-optimizer:GetEnrollmentStatus",
                            "compute-optimizer:GetRecommendationSummaries",
                            "cognito-identity:Describe*",
                            "cognito-identity:GetCredentialsForIdentity",
                            "cognito-identity:GetIdentityPoolRoles",
                            "cognito-identity:GetOpenIdToken",
                            "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
                            "cognito-identity:List*",
                            "cognito-identity:Lookup*",
                            "cognito-sync:List*",
                            "cognito-sync:Describe*",
                            "cognito-sync:Get*",
                            "cognito-sync:QueryRecords",
                            "cognito-idp:AdminGet*",
                            "cognito-idp:AdminList*",
                            "cognito-idp:List*",
                            "cognito-idp:Describe*",
                            "cognito-idp:Get*",
                            "config:Deliver*",
                            "config:Describe*",
                            "config:Get*",
                            "config:List*",
                            "config:SelectResourceConfig",
                            "connect:List*",
                            "connect:Describe*",
                            "connect:GetFederationToken",
                            "dataexchange:Get*",
                            "dataexchange:List*",
                            "datasync:Describe*",
                            "datasync:List*",
                            "datapipeline:Describe*",
                            "datapipeline:EvaluateExpression",
                            "datapipeline:Get*",
                            "datapipeline:List*",
                            "datapipeline:QueryObjects",
                            "datapipeline:Validate*",
                            "dax:BatchGetItem",
                            "dax:Describe*",
                            "dax:GetItem",
                            "dax:ListTags",
                            "dax:Query",
                            "dax:Scan",
                            "deepcomposer:GetComposition",
                            "deepcomposer:GetModel",
                            "deepcomposer:GetSampleModel",
                            "deepcomposer:ListCompositions",
                            "deepcomposer:ListModels",
                            "deepcomposer:ListSampleModels",
                            "deepcomposer:ListTrainingTopics",
                            "detective:Get*",
                            "detective:List*",
                            "devicefarm:List*",
                            "devicefarm:Get*",
                            "directconnect:Describe*",
                            "discovery:Describe*",
                            "discovery:List*",
                            "discovery:Get*",
                            "dlm:Get*",
                            "dms:Describe*",
                            "dms:List*",
                            "dms:Test*",
                            "ds:Check*",
                            "ds:Describe*",
                            "ds:Get*",
                            "ds:List*",
                            "ds:Verify*",
                            "dynamodb:BatchGet*",
                            "dynamodb:Describe*",
                            "dynamodb:Get*",
                            "dynamodb:List*",
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "ec2:Describe*",
                            "ec2:Get*",
                            "ec2:SearchTransitGatewayRoutes",
                            "ec2messages:Get*",
                            "ecr:BatchCheck*",
                            "ecr:BatchGet*",
                            "ecr:Describe*",
                            "ecr:Get*",
                            "ecr:List*",
                            "ecs:Describe*",
                            "ecs:List*",
                            "eks:DescribeCluster",
                            "eks:DescribeUpdate",
                            "eks:Describe*",
                            "eks:ListClusters",
                            "eks:ListUpdates",
                            "eks:List*",
                            "elasticache:Describe*",
                            "elasticache:List*",
                            "elasticbeanstalk:Check*",
                            "elasticbeanstalk:Describe*",
                            "elasticbeanstalk:List*",
                            "elasticbeanstalk:Request*",
                            "elasticbeanstalk:Retrieve*",
                            "elasticbeanstalk:Validate*",
                            "elasticfilesystem:Describe*",
                            "elasticloadbalancing:Describe*",
                            "elasticmapreduce:Describe*",
                            "elasticmapreduce:GetBlockPublicAccessConfiguration",
                            "elasticmapreduce:List*",
                            "elasticmapreduce:View*",
                            "elastictranscoder:List*",
                            "elastictranscoder:Read*",
                            "elemental-appliances-software:Get*",
                            "elemental-appliances-software:List*",
                            "es:Describe*",
                            "es:List*",
                            "es:Get*",
                            "es:ESHttpGet",
                            "es:ESHttpHead",
                            "events:Describe*",
                            "events:List*",
                            "events:Test*",
                            "firehose:Describe*",
                            "firehose:List*",
                            "fsx:Describe*",
                            "fsx:List*",
                            "freertos:Describe*",
                            "freertos:List*",
                            "gamelift:List*",
                            "gamelift:Get*",
                            "gamelift:Describe*",
                            "gamelift:RequestUploadCredentials",
                            "gamelift:ResolveAlias",
                            "gamelift:Search*",
                            "glacier:List*",
                            "glacier:Describe*",
                            "glacier:Get*",
                            "globalaccelerator:Describe*",
                            "globalaccelerator:List*",
                            "glue:BatchGetDevEndpoints",
                            "glue:BatchGetJobs",
                            "glue:BatchGetPartition",
                            "glue:BatchGetTriggers",
                            "glue:BatchGetWorkflows",
                            "glue:GetCatalogImportStatus",
                            "glue:GetClassifier",
                            "glue:GetClassifiers",
                            "glue:GetCrawler",
                            "glue:GetCrawlers",
                            "glue:GetCrawlerMetrics",
                            "glue:GetDatabase",
                            "glue:GetDatabases",
                            "glue:GetDataCatalogEncryptionSettings",
                            "glue:GetDataflowGraph",
                            "glue:GetDevEndpoint",
                            "glue:GetDevEndpoints",
                            "glue:GetJob",
                            "glue:GetJobBookmark",
                            "glue:GetJobs",
                            "glue:GetJobRun",
                            "glue:GetJobRuns",
                            "glue:GetMapping",
                            "glue:GetMLTaskRun",
                            "glue:GetMLTaskRuns",
                            "glue:GetMLTransform",
                            "glue:GetMLTransforms",
                            "glue:GetPartition",
                            "glue:GetPartitions",
                            "glue:GetPlan",
                            "glue:GetResourcePolicy",
                            "glue:GetSecurityConfiguration",
                            "glue:GetSecurityConfigurations",
                            "glue:GetTable",
                            "glue:GetTables",
                            "glue:GetTableVersion",
                            "glue:GetTableVersions",
                            "glue:GetTags",
                            "glue:GetTrigger",
                            "glue:GetTriggers",
                            "glue:GetUserDefinedFunction",
                            "glue:GetUserDefinedFunctions",
                            "glue:GetWorkflow",
                            "glue:GetWorkflowRun",
                            "glue:GetWorkflowRunProperties",
                            "glue:GetWorkflowRuns",
                            "glue:ListCrawlers",
                            "glue:ListDevEndpoints",
                            "glue:ListJobs",
                            "glue:ListMLTransforms",
                            "glue:ListTriggers",
                            "glue:ListWorkflows",
                            "greengrass:Get*",
                            "greengrass:List*",
                            "guardduty:Get*",
                            "guardduty:List*",
                            "health:Describe*",
                            "health:List*",
                            "iam:Generate*",
                            "iam:Get*",
                            "iam:List*",
                            "iam:Simulate*",
                            "imagebuilder:Get*",
                            "imagebuilder:List*",
                            "importexport:Get*",
                            "importexport:List*",
                            "inspector:Describe*",
                            "inspector:Get*",
                            "inspector:List*",
                            "inspector:Preview*",
                            "iot:Describe*",
                            "iot:Get*",
                            "iot:List*",
                            "iotanalytics:Describe*",
                            "iotanalytics:List*",
                            "iotanalytics:Get*",
                            "iotanalytics:SampleChannelData",
                            "iotsitewise:Describe*",
                            "iotsitewise:Get*",
                            "iotsitewise:List*",
                            "kafka:Describe*",
                            "kafka:List*",
                            "kafka:Get*",
                            "kinesisanalytics:Describe*",
                            "kinesisanalytics:Discover*",
                            "kinesisanalytics:Get*",
                            "kinesisanalytics:List*",
                            "kinesisvideo:Describe*",
                            "kinesisvideo:Get*",
                            "kinesisvideo:List*",
                            "kinesis:Describe*",
                            "kinesis:Get*",
                            "kinesis:List*",
                            "kms:Describe*",
                            "kms:Get*",
                            "kms:List*",
                            "lambda:List*",
                            "lambda:Get*",
                            "lex:Get*",
                            "license-manager:Get*",
                            "license-manager:List*",
                            "lightsail:GetActiveNames",
                            "lightsail:GetBlueprints",
                            "lightsail:GetBundles",
                            "lightsail:GetCloudFormationStackRecords",
                            "lightsail:GetDisk",
                            "lightsail:GetDisks",
                            "lightsail:GetDiskSnapshot",
                            "lightsail:GetDiskSnapshots",
                            "lightsail:GetDomain",
                            "lightsail:GetDomains",
                            "lightsail:GetExportSnapshotRecords",
                            "lightsail:GetInstance",
                            "lightsail:GetInstanceMetricData",
                            "lightsail:GetInstancePortStates",
                            "lightsail:GetInstances",
                            "lightsail:GetInstanceSnapshot",
                            "lightsail:GetInstanceSnapshots",
                            "lightsail:GetInstanceState",
                            "lightsail:GetKeyPair",
                            "lightsail:GetKeyPairs",
                            "lightsail:GetLoadBalancer",
                            "lightsail:GetLoadBalancerMetricData",
                            "lightsail:GetLoadBalancers",
                            "lightsail:GetLoadBalancerTlsCertificates",
                            "lightsail:GetOperation",
                            "lightsail:GetOperations",
                            "lightsail:GetOperationsForResource",
                            "lightsail:GetRegions",
                            "lightsail:GetRelationalDatabase",
                            "lightsail:GetRelationalDatabaseBlueprints",
                            "lightsail:GetRelationalDatabaseBundles",
                            "lightsail:GetRelationalDatabaseEvents",
                            "lightsail:GetRelationalDatabaseLogEvents",
                            "lightsail:GetRelationalDatabaseLogStreams",
                            "lightsail:GetRelationalDatabaseMetricData",
                            "lightsail:GetRelationalDatabaseParameters",
                            "lightsail:GetRelationalDatabases",
                            "lightsail:GetRelationalDatabaseSnapshot",
                            "lightsail:GetRelationalDatabaseSnapshots",
                            "lightsail:GetStaticIp",
                            "lightsail:GetStaticIps",
                            "lightsail:Is*",
                            "logs:Describe*",
                            "logs:Get*",
                            "logs:FilterLogEvents",
                            "logs:ListTagsLogGroup",
                            "logs:StartQuery",
                            "logs:StopQuery",
                            "logs:TestMetricFilter",
                            "machinelearning:Describe*",
                            "machinelearning:Get*",
                            "mediaconvert:DescribeEndpoints",
                            "mediaconvert:Get*",
                            "mediaconvert:List*",
                            "mediapackage:List*",
                            "mediapackage:Describe*",
                            "mgh:Describe*",
                            "mgh:GetHomeRegion",
                            "mgh:List*",
                            "mobileanalytics:Get*",
                            "mobilehub:Describe*",
                            "mobilehub:Export*",
                            "mobilehub:Generate*",
                            "mobilehub:Get*",
                            "mobilehub:List*",
                            "mobilehub:Validate*",
                            "mobilehub:Verify*",
                            "mobiletargeting:Get*",
                            "mobiletargeting:List*",
                            "mq:Describe*",
                            "mq:List*",
                            "opsworks:Describe*",
                            "opsworks:Get*",
                            "opsworks-cm:List*",
                            "opsworks-cm:Describe*",
                            "organizations:Describe*",
                            "organizations:List*",
                            "outposts:Get*",
                            "outposts:List*",
                            "personalize:Describe*",
                            "personalize:Get*",
                            "personalize:List*",
                            "pi:DescribeDimensionKeys",
                            "pi:GetResourceMetrics",
                            "polly:Describe*",
                            "polly:Get*",
                            "polly:List*",
                            "polly:SynthesizeSpeech",
                            "qldb:ListLedgers",
                            "qldb:DescribeLedger",
                            "qldb:ListJournalS3Exports",
                            "qldb:ListJournalS3ExportsForLedger",
                            "qldb:DescribeJournalS3Export",
                            "qldb:GetBlock",
                            "qldb:GetDigest",
                            "qldb:GetRevision",
                            "qldb:GetBlock",
                            "qldb:ListTagsForResource",
                            "ram:Get*",
                            "ram:List*",
                            "rekognition:CompareFaces",
                            "rekognition:Detect*",
                            "rekognition:List*",
                            "rekognition:Search*",
                            "rds:Describe*",
                            "rds:List*",
                            "rds:Download*",
                            "redshift:Describe*",
                            "redshift:GetReservedNodeExchangeOfferings",
                            "redshift:View*",
                            "resource-groups:Get*",
                            "resource-groups:List*",
                            "resource-groups:Search*",
                            "robomaker:BatchDescribe*",
                            "robomaker:Describe*",
                            "robomaker:Get*",
                            "robomaker:List*",
                            "route53:Get*",
                            "route53:List*",
                            "route53:Test*",
                            "route53domains:Check*",
                            "route53domains:Get*",
                            "route53domains:List*",
                            "route53domains:View*",
                            "route53resolver:Get*",
                            "route53resolver:List*",
                            "s3:Get*",
                            "s3:List*",
                            "sagemaker:Describe*",
                            "sagemaker:GetSearchSuggestions",
                            "sagemaker:List*",
                            "sagemaker:Search",
                            "schemas:Describe*",
                            "schemas:Get*",
                            "schemas:List*",
                            "schemas:Search*",
                            "sdb:Get*",
                            "sdb:List*",
                            "sdb:Select*",
                            "secretsmanager:List*",
                            "secretsmanager:Describe*",
                            "secretsmanager:GetResourcePolicy",
                            "securityhub:Describe*",
                            "securityhub:Get*",
                            "securityhub:List*",
                            "serverlessrepo:List*",
                            "serverlessrepo:Get*",
                            "serverlessrepo:SearchApplications",
                            "servicecatalog:List*",
                            "servicecatalog:Scan*",
                            "servicecatalog:Search*",
                            "servicecatalog:Describe*",
                            "servicediscovery:Get*",
                            "servicediscovery:List*",
                            "servicequotas:GetAssociationForServiceQuotaTemplate",
                            "servicequotas:GetAWSDefaultServiceQuota",
                            "servicequotas:GetRequestedServiceQuotaChange",
                            "servicequotas:GetServiceQuota",
                            "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
                            "servicequotas:ListAWSDefaultServiceQuotas",
                            "servicequotas:ListRequestedServiceQuotaChangeHistory",
                            "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
                            "servicequotas:ListServices",
                            "servicequotas:ListServiceQuotas",
                            "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
                            "ses:Get*",
                            "ses:List*",
                            "ses:Describe*",
                            "shield:Describe*",
                            "shield:Get*",
                            "shield:List*",
                            "signer:DescribeSigningJob",
                            "signer:GetSigningPlatform",
                            "signer:GetSigningProfile",
                            "signer:ListSigningJobs",
                            "signer:ListSigningPlatforms",
                            "signer:ListSigningProfiles",
                            "signer:ListTagsForResource",
                            "snowball:Get*",
                            "snowball:Describe*",
                            "snowball:List*",
                            "sns:Get*",
                            "sns:List*",
                            "sns:Check*",
                            "sqs:Get*",
                            "sqs:List*",
                            "sqs:Receive*",
                            "ssm:Describe*",
                            "ssm:Get*",
                            "ssm:List*",
                            "sso:Get*",
                            "sso:Describe*",
                            "sso:List*",
                            "sso:Search*",
                            "sso-directory:Describe*",
                            "sso-directory:List*",
                            "sso-directory:Search*",
                            "states:List*",
                            "states:Describe*",
                            "states:GetExecutionHistory",
                            "storagegateway:Describe*",
                            "storagegateway:List*",
                            "sts:GetAccessKeyInfo",
                            "sts:GetCallerIdentity",
                            "sts:GetSessionToken",
                            "swf:Count*",
                            "swf:Describe*",
                            "swf:Get*",
                            "swf:List*",
                            "synthetics:Describe*",
                            "synthetics:Get*",
                            "synthetics:List*",
                            "tag:Get*",
                            "transfer:Describe*",
                            "transfer:List*",
                            "transfer:TestIdentityProvider",
                            "transcribe:Get*",
                            "transcribe:List*",
                            "trustedadvisor:Describe*",
                            "waf:Get*",
                            "waf:List*",
                            "wafv2:CheckCapacity",
                            "wafv2:Describe*",
                            "wafv2:Get*",
                            "wafv2:List*",
                            "waf-regional:List*",
                            "waf-regional:Get*",
                            "workdocs:Describe*",
                            "workdocs:Get*",
                            "workdocs:CheckAlias",
                            "worklink:Describe*",
                            "worklink:List*",
                            "workmail:Describe*",
                            "workmail:Get*",
                            "workmail:List*",
                            "workmail:Search*",
                            "workspaces:Describe*",
                            "xray:BatchGet*",
                            "xray:Get*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAILL3HVNFSB6DCOWYQ",
            "PolicyName": "ReadOnlyAccess",
            "VersionId": "v68"
        },
        "ResourceGroupsandTagEditorFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "tag:getResources",
                            "tag:getTagKeys",
                            "tag:getTagValues",
                            "tag:TagResources",
                            "tag:UntagResources",
                            "resource-groups:*",
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListStackResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJNOS54ZFXN4T2Y34A",
            "PolicyName": "ResourceGroupsandTagEditorFullAccess",
            "VersionId": "v5"
        },
        "ResourceGroupsandTagEditorReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "tag:getResources",
                            "tag:getTagKeys",
                            "tag:getTagValues",
                            "resource-groups:Get*",
                            "resource-groups:List*",
                            "resource-groups:Search*",
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListStackResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJHXQTPI5I5JKAIU74",
            "PolicyName": "ResourceGroupsandTagEditorReadOnlyAccess",
            "VersionId": "v2"
        },
        "Route53ResolverServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "logs:CreateLogDelivery",
                            "logs:GetLogDelivery",
                            "logs:UpdateLogDelivery",
                            "logs:DeleteLogDelivery",
                            "logs:ListLogDeliveries",
                            "logs:DescribeResourcePolicies",
                            "logs:DescribeLogGroups",
                            "s3:GetBucketPolicy"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4AEMJZANMJ",
            "PolicyName": "Route53ResolverServiceRolePolicy",
            "VersionId": "v1"
        },
        "S3StorageLensServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "organizations:DescribeOrganization",
                            "organizations:ListAccounts",
                            "organizations:ListAWSServiceAccessForOrganization",
                            "organizations:ListDelegatedAdministrators"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ],
                        "Sid": "AwsOrgsAccess"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IHOVJESMS",
            "PolicyName": "S3StorageLensServiceRolePolicy",
            "VersionId": "v1"
        },
        "SecretsManagerReadWrite": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "secretsmanager:*",
                            "cloudformation:CreateChangeSet",
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:DescribeStackResource",
                            "cloudformation:DescribeStacks",
                            "cloudformation:ExecuteChangeSet",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "kms:DescribeKey",
                            "kms:ListAliases",
                            "kms:ListKeys",
                            "lambda:ListFunctions",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBInstances",
                            "redshift:DescribeClusters",
                            "tag:GetResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "lambda:AddPermission",
                            "lambda:CreateFunction",
                            "lambda:GetFunction",
                            "lambda:InvokeFunction",
                            "lambda:UpdateFunctionConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:lambda:*:*:function:SecretsManager*"
                    },
                    {
                        "Action": [
                            "serverlessrepo:CreateCloudFormationChangeSet",
                            "serverlessrepo:GetApplication"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:serverlessrepo:*:*:applications/SecretsManager*"
                    },
                    {
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::awsserverlessrepo-changesets*",
                            "arn:aws:s3:::secrets-manager-rotation-apps-*/*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI3VG7CI5BIQZQ6G2E",
            "PolicyName": "SecretsManagerReadWrite",
            "VersionId": "v3"
        },
        "SecurityAudit": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "access-analyzer:GetAnalyzedResource",
                            "access-analyzer:GetAnalyzer",
                            "access-analyzer:GetArchiveRule",
                            "access-analyzer:GetFinding",
                            "access-analyzer:ListAnalyzedResources",
                            "access-analyzer:ListAnalyzers",
                            "access-analyzer:ListArchiveRules",
                            "access-analyzer:ListFindings",
                            "access-analyzer:ListTagsForResource",
                            "acm:Describe*",
                            "acm:List*",
                            "application-autoscaling:Describe*",
                            "appmesh:Describe*",
                            "appmesh:List*",
                            "appsync:List*",
                            "athena:GetWorkGroup",
                            "athena:List*",
                            "autoscaling:Describe*",
                            "batch:DescribeComputeEnvironments",
                            "batch:DescribeJobDefinitions",
                            "chime:List*",
                            "cloud9:Describe*",
                            "cloud9:ListEnvironments",
                            "clouddirectory:ListDirectories",
                            "cloudformation:DescribeStack*",
                            "cloudformation:GetTemplate",
                            "cloudformation:ListStack*",
                            "cloudformation:GetStackPolicy",
                            "cloudfront:Get*",
                            "cloudfront:List*",
                            "cloudhsm:ListHapgs",
                            "cloudhsm:ListHsms",
                            "cloudhsm:ListLunaClients",
                            "cloudsearch:DescribeDomains",
                            "cloudsearch:DescribeServiceAccessPolicies",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetEventSelectors",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:ListTags",
                            "cloudtrail:LookupEvents",
                            "cloudwatch:Describe*",
                            "codebuild:ListProjects",
                            "codecommit:BatchGetRepositories",
                            "codecommit:GetBranch",
                            "codecommit:GetObjectIdentifier",
                            "codecommit:GetRepository",
                            "codecommit:List*",
                            "codedeploy:Batch*",
                            "codedeploy:Get*",
                            "codedeploy:List*",
                            "codepipeline:ListPipelines",
                            "codestar:Describe*",
                            "codestar:List*",
                            "cognito-identity:ListIdentityPools",
                            "cognito-idp:ListUserPools",
                            "cognito-sync:Describe*",
                            "cognito-sync:List*",
                            "comprehend:Describe*",
                            "comprehend:List*",
                            "config:BatchGetAggregateResourceConfig",
                            "config:BatchGetResourceConfig",
                            "config:Deliver*",
                            "config:Describe*",
                            "config:Get*",
                            "config:List*",
                            "datapipeline:DescribeObjects",
                            "datapipeline:DescribePipelines",
                            "datapipeline:EvaluateExpression",
                            "datapipeline:GetPipelineDefinition",
                            "datapipeline:ListPipelines",
                            "datapipeline:QueryObjects",
                            "datapipeline:ValidatePipelineDefinition",
                            "datasync:Describe*",
                            "datasync:List*",
                            "dax:Describe*",
                            "dax:ListTags",
                            "directconnect:Describe*",
                            "dms:Describe*",
                            "dms:ListTagsForResource",
                            "ds:DescribeDirectories",
                            "dynamodb:DescribeContinuousBackups",
                            "dynamodb:DescribeGlobalTable",
                            "dynamodb:DescribeTable",
                            "dynamodb:DescribeTimeToLive",
                            "dynamodb:ListBackups",
                            "dynamodb:ListGlobalTables",
                            "dynamodb:ListStreams",
                            "dynamodb:ListTables",
                            "ec2:Describe*",
                            "ecr:DescribeRepositories",
                            "ecr:GetRepositoryPolicy",
                            "ecs:Describe*",
                            "ecs:List*",
                            "eks:DescribeCluster",
                            "eks:ListClusters",
                            "elasticache:Describe*",
                            "elasticbeanstalk:Describe*",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticfilesystem:DescribeMountTargetSecurityGroups",
                            "elasticfilesystem:DescribeMountTargets",
                            "elasticloadbalancing:Describe*",
                            "elasticmapreduce:Describe*",
                            "elasticmapreduce:ListClusters",
                            "elasticmapreduce:ListInstances",
                            "es:Describe*",
                            "es:ListDomainNames",
                            "events:Describe*",
                            "events:List*",
                            "firehose:Describe*",
                            "firehose:List*",
                            "fms:ListComplianceStatus",
                            "fms:ListPolicies",
                            "fsx:Describe*",
                            "fsx:List*",
                            "gamelift:ListBuilds",
                            "gamelift:ListFleets",
                            "glacier:DescribeVault",
                            "glacier:GetVaultAccessPolicy",
                            "glacier:ListVaults",
                            "globalaccelerator:Describe*",
                            "globalaccelerator:List*",
                            "greengrass:List*",
                            "guardduty:Get*",
                            "guardduty:List*",
                            "iam:GenerateCredentialReport",
                            "iam:GenerateServiceLastAccessedDetails",
                            "iam:Get*",
                            "iam:List*",
                            "iam:SimulateCustomPolicy",
                            "iam:SimulatePrincipalPolicy",
                            "inspector:Describe*",
                            "inspector:Get*",
                            "inspector:List*",
                            "inspector:Preview*",
                            "iot:Describe*",
                            "iot:GetPolicy",
                            "iot:GetPolicyVersion",
                            "iot:List*",
                            "kinesis:DescribeStream",
                            "kinesis:ListStreams",
                            "kinesis:ListTagsForStream",
                            "kinesisanalytics:ListApplications",
                            "kms:Describe*",
                            "kms:Get*",
                            "kms:List*",
                            "lambda:GetAccountSettings",
                            "lambda:GetFunctionConfiguration",
                            "lambda:GetLayerVersionPolicy",
                            "lambda:GetPolicy",
                            "lambda:List*",
                            "license-manager:List*",
                            "lightsail:GetInstances",
                            "lightsail:GetLoadBalancers",
                            "logs:Describe*",
                            "logs:ListTagsLogGroup",
                            "machinelearning:DescribeMLModels",
                            "mediaconnect:Describe*",
                            "mediaconnect:List*",
                            "mediastore:GetContainerPolicy",
                            "mediastore:ListContainers",
                            "opsworks:DescribeStacks",
                            "opsworks-cm:DescribeServers",
                            "organizations:List*",
                            "organizations:Describe*",
                            "quicksight:Describe*",
                            "quicksight:List*",
                            "ram:List*",
                            "rds:Describe*",
                            "rds:DownloadDBLogFilePortion",
                            "rds:ListTagsForResource",
                            "redshift:Describe*",
                            "rekognition:Describe*",
                            "rekognition:List*",
                            "robomaker:Describe*",
                            "robomaker:List*",
                            "route53:Get*",
                            "route53:List*",
                            "route53domains:GetDomainDetail",
                            "route53domains:GetOperationDetail",
                            "route53domains:ListDomains",
                            "route53domains:ListOperations",
                            "route53domains:ListTagsForDomain",
                            "route53resolver:List*",
                            "route53resolver:Get*",
                            "s3:GetAccelerateConfiguration",
                            "s3:GetAccessPoint",
                            "s3:GetAccessPointPolicy",
                            "s3:GetAccessPointPolicyStatus",
                            "s3:GetAccountPublicAccessBlock",
                            "s3:GetAnalyticsConfiguration",
                            "s3:GetBucket*",
                            "s3:GetEncryptionConfiguration",
                            "s3:GetInventoryConfiguration",
                            "s3:GetLifecycleConfiguration",
                            "s3:GetMetricsConfiguration",
                            "s3:GetObjectAcl",
                            "s3:GetObjectVersionAcl",
                            "s3:GetReplicationConfiguration",
                            "s3:ListAccessPoints",
                            "s3:ListAllMyBuckets",
                            "sagemaker:Describe*",
                            "sagemaker:List*",
                            "sdb:DomainMetadata",
                            "sdb:ListDomains",
                            "secretsmanager:GetResourcePolicy",
                            "secretsmanager:ListSecrets",
                            "secretsmanager:ListSecretVersionIds",
                            "securityhub:Describe*",
                            "securityhub:Get*",
                            "securityhub:List*",
                            "serverlessrepo:GetApplicationPolicy",
                            "serverlessrepo:List*",
                            "ses:GetIdentityDkimAttributes",
                            "ses:GetIdentityPolicies",
                            "ses:GetIdentityVerificationAttributes",
                            "ses:ListIdentities",
                            "ses:ListIdentityPolicies",
                            "ses:ListVerifiedEmailAddresses",
                            "shield:Describe*",
                            "shield:List*",
                            "snowball:ListClusters",
                            "snowball:ListJobs",
                            "sns:GetTopicAttributes",
                            "sns:ListSubscriptionsByTopic",
                            "sns:ListTopics",
                            "sqs:GetQueueAttributes",
                            "sqs:ListDeadLetterSourceQueues",
                            "sqs:ListQueues",
                            "sqs:ListQueueTags",
                            "ssm:Describe*",
                            "ssm:GetAutomationExecution",
                            "ssm:ListDocuments",
                            "sso:DescribePermissionsPolicies",
                            "sso:List*",
                            "states:ListStateMachines",
                            "storagegateway:DescribeBandwidthRateLimit",
                            "storagegateway:DescribeCache",
                            "storagegateway:DescribeCachediSCSIVolumes",
                            "storagegateway:DescribeGatewayInformation",
                            "storagegateway:DescribeMaintenanceStartTime",
                            "storagegateway:DescribeNFSFileShares",
                            "storagegateway:DescribeSnapshotSchedule",
                            "storagegateway:DescribeStorediSCSIVolumes",
                            "storagegateway:DescribeTapeArchives",
                            "storagegateway:DescribeTapeRecoveryPoints",
                            "storagegateway:DescribeTapes",
                            "storagegateway:DescribeUploadBuffer",
                            "storagegateway:DescribeVTLDevices",
                            "storagegateway:DescribeWorkingStorage",
                            "storagegateway:List*",
                            "tag:GetResources",
                            "tag:GetTagKeys",
                            "transfer:Describe*",
                            "transfer:List*",
                            "translate:List*",
                            "trustedadvisor:Describe*",
                            "waf:ListWebACLs",
                            "waf-regional:ListWebACLs",
                            "workspaces:Describe*",
                            "cloudsearch:DescribeDomainEndpointOptions",
                            "cloudwatch:ListTagsForResource",
                            "detective:ListGraphs",
                            "detective:ListMembers",
                            "dynamodb:ListTagsOfResource",
                            "ec2:DescribeTransitGatewayAttachments",
                            "ec2:DescribeTransitGatewayMulticastDomains",
                            "ec2:DescribeTransitGatewayPeeringAttachments",
                            "ec2:DescribeTransitGatewayRouteTables",
                            "ec2:DescribeTransitGateways",
                            "ec2:DescribeTransitGatewayVpcAttachments",
                            "eks:DescribeNodeGroup",
                            "eks:ListNodeGroups",
                            "elasticache:ListTagsForResource",
                            "elasticbeanstalk:DescribeApplications",
                            "elasticbeanstalk:ListTagsForResource",
                            "elasticmapreduce:GetBlockPublicAccessConfiguration",
                            "es:ListElasticsearchInstanceTypeDetails",
                            "es:ListElasticsearchVersions",
                            "es:ListTags",
                            "events:TestEventPattern",
                            "glue:GetDataCatalogEncryptionSettings",
                            "glue:GetDevEndpoints",
                            "guardduty:DescribePublishingDestination",
                            "secretsmanager:DescribeSecret",
                            "ssm:ListTagsForResource"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "apigateway:GET"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:apigateway:*::/apis",
                            "arn:aws:apigateway:*::/apis/*/stages",
                            "arn:aws:apigateway:*::/apis/*/stages/*",
                            "arn:aws:apigateway:*::/apis/*/routes",
                            "arn:aws:apigateway:*::/restapis",
                            "arn:aws:apigateway:*::/restapis/*/authorizers",
                            "arn:aws:apigateway:*::/restapis/*/authorizers/*",
                            "arn:aws:apigateway:*::/restapis/*/documentation/versions",
                            "arn:aws:apigateway:*::/restapis/*/resources",
                            "arn:aws:apigateway:*::/restapis/*/resources/*",
                            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
                            "arn:aws:apigateway:*::/restapis/*/stages",
                            "arn:aws:apigateway:*::/restapis/*/stages/*",
                            "arn:aws:apigateway:*::/vpclinks"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIX2T3QCXHR2OGGCTO",
            "PolicyName": "SecurityAudit",
            "VersionId": "v33"
        },
        "ServerMigrationConnector": {
            "Document": {
                "Statement": [
                    {
                        "Action": "iam:GetUser",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "sms:SendMessage",
                            "sms:GetMessages"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:DeleteBucket",
                            "s3:DeleteObject",
                            "s3:GetBucketLocation",
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:PutObject",
                            "s3:PutObjectAcl",
                            "s3:PutLifecycleConfiguration",
                            "s3:AbortMultipartUpload",
                            "s3:ListBucketMultipartUploads",
                            "s3:ListMultipartUploadParts"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::sms-b-*",
                            "arn:aws:s3:::import-to-ec2-*",
                            "arn:aws:s3:::server-migration-service-upgrade",
                            "arn:aws:s3:::server-migration-service-upgrade/*",
                            "arn:aws:s3:::connector-platform-upgrade-info/*",
                            "arn:aws:s3:::connector-platform-upgrade-info",
                            "arn:aws:s3:::connector-platform-upgrade-bundles/*",
                            "arn:aws:s3:::connector-platform-upgrade-bundles",
                            "arn:aws:s3:::connector-platform-release-notes/*",
                            "arn:aws:s3:::connector-platform-release-notes"
                        ]
                    },
                    {
                        "Action": "awsconnector:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "SNS:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:sns:*:*:metrics-sns-topic-for-*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJKZRWXIPK5HSG3QDQ",
            "PolicyName": "ServerMigrationConnector",
            "VersionId": "v1"
        },
        "ServerMigrationServiceConsoleFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "sms:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudformation:ListStacks",
                            "cloudformation:DescribeStacks",
                            "cloudformation:DescribeStackResources"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "s3:ListAllMyBuckets",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "s3:GetObject",
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::sms-app-*/*"
                    },
                    {
                        "Action": [
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:ListRoles"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "sms.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:GetInstanceProfile",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4IIEMRGEYB",
            "PolicyName": "ServerMigrationServiceConsoleFullAccess",
            "VersionId": "v2"
        },
        "ServerMigrationServiceLaunchRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:ModifyInstanceAttribute",
                            "ec2:StopInstances",
                            "ec2:StartInstances",
                            "ec2:TerminateInstances"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:cloudformation:stack-id": "arn:aws:cloudformation:*:*:stack/sms-app-*/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": [
                            "ec2:DisassociateIamInstanceProfile",
                            "ec2:AssociateIamInstanceProfile",
                            "ec2:ReplaceIamInstanceProfileAssociation"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:cloudformation:stack-id": "arn:aws:cloudformation:*:*:stack/sms-app-*/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "ec2.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:RunInstances",
                            "ec2:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "applicationinsights:Describe*",
                            "applicationinsights:List*",
                            "cloudformation:ListStackResources",
                            "cloudformation:DescribeStacks"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "applicationinsights:CreateApplication",
                            "applicationinsights:CreateComponent",
                            "applicationinsights:UpdateApplication",
                            "applicationinsights:DeleteApplication",
                            "applicationinsights:UpdateComponentConfiguration",
                            "applicationinsights:DeleteComponent"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:applicationinsights:*:*:application/resource-group/sms-app-*"
                    },
                    {
                        "Action": [
                            "resource-groups:CreateGroup",
                            "resource-groups:GetGroup",
                            "resource-groups:UpdateGroup",
                            "resource-groups:DeleteGroup"
                        ],
                        "Condition": {
                            "StringLike": {
                                "aws:ResourceTag/aws:cloudformation:stack-id": "arn:aws:cloudformation:*:*:stack/sms-app-*/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:resource-groups:*:*:group/sms-app-*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "application-insights.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/application-insights.amazonaws.com/AWSServiceRoleForApplicationInsights"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIIIAAMVUCBR2OLXZO",
            "PolicyName": "ServerMigrationServiceLaunchRole",
            "VersionId": "v4"
        },
        "ServerMigrationServiceRoleForInstanceValidation": {
            "Document": {
                "Statement": [
                    {
                        "Action": "s3:GetObject",
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::sms-app-*/*"
                    },
                    {
                        "Action": "sms:NotifyAppValidationOutput",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4LJMOLEWUV",
            "PolicyName": "ServerMigrationServiceRoleForInstanceValidation",
            "VersionId": "v1"
        },
        "ServerMigration_ServiceRole": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:CreateChangeSet",
                            "cloudformation:CreateStack"
                        ],
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "cloudformation:ResourceTypes": [
                                    "AWS::EC2::Instance",
                                    "AWS::ApplicationInsights::Application",
                                    "AWS::ResourceGroups::Group"
                                ]
                            },
                            "Null": {
                                "cloudformation:ResourceTypes": "false"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/sms-app-*/*"
                    },
                    {
                        "Action": [
                            "cloudformation:DeleteStack",
                            "cloudformation:ExecuteChangeSet",
                            "cloudformation:DeleteChangeSet",
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:DescribeStacks",
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStackResource",
                            "cloudformation:DescribeStackResources",
                            "cloudformation:GetTemplate"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudformation:*:*:stack/sms-app-*/*"
                    },
                    {
                        "Action": [
                            "cloudformation:ValidateTemplate",
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "s3:CreateBucket",
                            "s3:DeleteBucket",
                            "s3:DeleteObject",
                            "s3:GetBucketAcl",
                            "s3:GetBucketLocation",
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:PutObject",
                            "s3:PutObjectAcl",
                            "s3:PutLifecycleConfiguration"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::sms-app-*"
                    },
                    {
                        "Action": [
                            "sms:CreateReplicationJob",
                            "sms:DeleteReplicationJob",
                            "sms:GetReplicationJobs",
                            "sms:GetReplicationRuns",
                            "sms:GetServers",
                            "sms:ImportServerCatalog",
                            "sms:StartOnDemandReplicationRun",
                            "sms:UpdateReplicationJob"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ssm:SendCommand",
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:ssm:*::document/AWS-RunRemoteScript",
                            "arn:aws:s3:::sms-app-*"
                        ]
                    },
                    {
                        "Action": "ssm:SendCommand",
                        "Condition": {
                            "StringEquals": {
                                "ssm:resourceTag/UseForSMSApplicationValidation": [
                                    "true"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": [
                            "ssm:CancelCommand",
                            "ssm:GetCommandInvocation"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "ec2:CreateTags",
                        "Condition": {
                            "StringEquals": {
                                "ec2:CreateAction": "CopySnapshot"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:snapshot/*"
                    },
                    {
                        "Action": "ec2:CopySnapshot",
                        "Condition": {
                            "StringLike": {
                                "aws:RequestTag/SMSJobId": [
                                    "sms-*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:snapshot/*"
                    },
                    {
                        "Action": [
                            "ec2:ModifySnapshotAttribute",
                            "ec2:DeleteSnapshot"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/SMSJobId": [
                                    "sms-*"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:snapshot/*"
                    },
                    {
                        "Action": [
                            "ec2:CopyImage",
                            "ec2:DescribeImages",
                            "ec2:DescribeInstances",
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeSnapshotAttribute",
                            "ec2:DeregisterImage",
                            "ec2:ImportImage",
                            "ec2:DescribeImportImageTasks",
                            "ec2:GetEbsEncryptionByDefault"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "iam:GetInstanceProfile"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:DisassociateIamInstanceProfile",
                            "ec2:AssociateIamInstanceProfile",
                            "ec2:ReplaceIamInstanceProfileAssociation"
                        ],
                        "Condition": {
                            "StringLike": {
                                "ec2:ResourceTag/aws:cloudformation:stack-id": "arn:aws:cloudformation:*:*:stack/sms-app-*/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "arn:aws:ec2:*:*:instance/*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "ec2.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": "iam:PassRole",
                        "Condition": {
                            "StringEqualsIfExists": {
                                "iam:PassedToService": "cloudformation.amazonaws.com"
                            },
                            "StringLike": {
                                "iam:AssociatedResourceArn": "arn:aws:cloudformation:*:*:stack/sms-app-*/*"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4NKLZNDFDI",
            "PolicyName": "ServerMigration_ServiceRole",
            "VersionId": "v2"
        },
        "ServiceQuotasFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "autoscaling:DescribeAccountLimits",
                            "cloudformation:DescribeAccountLimits",
                            "cloudwatch:DescribeAlarmsForMetric",
                            "cloudwatch:GetMetricData",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:PutMetricAlarm",
                            "dynamodb:DescribeLimits",
                            "elasticloadbalancing:DescribeAccountLimits",
                            "iam:GetAccountSummary",
                            "kinesis:DescribeLimits",
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "organizations:ListAWSServiceAccessForOrganization",
                            "rds:DescribeAccountAttributes",
                            "route53:GetAccountLimit",
                            "servicequotas:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Condition": {
                            "Null": {
                                "cloudwatch:ResourceTag/ServiceQuotaMonitor": "false"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "organizations:EnableAWSServiceAccess"
                        ],
                        "Condition": {
                            "StringLike": {
                                "organizations:ServicePrincipal": [
                                    "servicequotas.amazonaws.com"
                                ]
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "servicequotas.amazonaws.com"
                            }
                        },
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4CGHQWENW3",
            "PolicyName": "ServiceQuotasFullAccess",
            "VersionId": "v2"
        },
        "ServiceQuotasReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "autoscaling:DescribeAccountLimits",
                            "cloudformation:DescribeAccountLimits",
                            "cloudwatch:DescribeAlarmsForMetric",
                            "cloudwatch:GetMetricData",
                            "cloudwatch:GetMetricStatistics",
                            "dynamodb:DescribeLimits",
                            "elasticloadbalancing:DescribeAccountLimits",
                            "iam:GetAccountSummary",
                            "kinesis:DescribeLimits",
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "organizations:ListAWSServiceAccessForOrganization",
                            "rds:DescribeAccountAttributes",
                            "route53:GetAccountLimit",
                            "servicequotas:GetAssociationForServiceQuotaTemplate",
                            "servicequotas:GetAWSDefaultServiceQuota",
                            "servicequotas:GetRequestedServiceQuotaChange",
                            "servicequotas:GetServiceQuota",
                            "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
                            "servicequotas:ListAWSDefaultServiceQuotas",
                            "servicequotas:ListRequestedServiceQuotaChangeHistory",
                            "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
                            "servicequotas:ListServices",
                            "servicequotas:ListServiceQuotas",
                            "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4ITU2HGGUJ",
            "PolicyName": "ServiceQuotasReadOnlyAccess",
            "VersionId": "v1"
        },
        "ServiceQuotasServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "support:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4FCG7EVJIR",
            "PolicyName": "ServiceQuotasServiceRolePolicy",
            "VersionId": "v2"
        },
        "SimpleWorkflowFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "swf:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIFE3AV6VE7EANYBVM",
            "PolicyName": "SimpleWorkflowFullAccess",
            "VersionId": "v1"
        },
        "SupportUser": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "support:*",
                            "acm:DescribeCertificate",
                            "acm:GetCertificate",
                            "acm:List*",
                            "apigateway:GET",
                            "appstream:Get*",
                            "autoscaling:Describe*",
                            "aws-marketplace:ViewSubscriptions",
                            "cloudformation:Describe*",
                            "cloudformation:Get*",
                            "cloudformation:List*",
                            "cloudformation:EstimateTemplateCost",
                            "cloudfront:Get*",
                            "cloudfront:List*",
                            "cloudsearch:Describe*",
                            "cloudsearch:List*",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:LookupEvents",
                            "cloudtrail:ListTags",
                            "cloudtrail:ListPublicKeys",
                            "cloudwatch:Describe*",
                            "cloudwatch:Get*",
                            "cloudwatch:List*",
                            "codecommit:BatchGetRepositories",
                            "codecommit:Get*",
                            "codecommit:List*",
                            "codedeploy:Batch*",
                            "codedeploy:Get*",
                            "codedeploy:List*",
                            "codepipeline:AcknowledgeJob",
                            "codepipeline:AcknowledgeThirdPartyJob",
                            "codepipeline:ListActionTypes",
                            "codepipeline:ListPipelines",
                            "codepipeline:PollForJobs",
                            "codepipeline:PollForThirdPartyJobs",
                            "codepipeline:GetPipelineState",
                            "codepipeline:GetPipeline",
                            "cognito-identity:List*",
                            "cognito-identity:LookupDeveloperIdentity",
                            "cognito-identity:Describe*",
                            "cognito-idp:Describe*",
                            "cognito-idp:List*",
                            "cognito-sync:Describe*",
                            "cognito-sync:GetBulkPublishDetails",
                            "cognito-sync:GetCognitoEvents",
                            "cognito-sync:GetIdentityPoolConfiguration",
                            "cognito-sync:List*",
                            "config:DescribeConfigurationRecorders",
                            "config:DescribeConfigurationRecorderStatus",
                            "config:DescribeConfigRuleEvaluationStatus",
                            "config:DescribeConfigRules",
                            "config:DescribeDeliveryChannels",
                            "config:DescribeDeliveryChannelStatus",
                            "config:GetResourceConfigHistory",
                            "config:ListDiscoveredResources",
                            "datapipeline:DescribeObjects",
                            "datapipeline:DescribePipelines",
                            "datapipeline:GetPipelineDefinition",
                            "datapipeline:ListPipelines",
                            "datapipeline:QueryObjects",
                            "datapipeline:ReportTaskProgress",
                            "datapipeline:ReportTaskRunnerHeartbeat",
                            "devicefarm:List*",
                            "devicefarm:Get*",
                            "directconnect:Describe*",
                            "discovery:Describe*",
                            "discovery:ListConfigurations",
                            "dms:Describe*",
                            "dms:List*",
                            "ds:DescribeDirectories",
                            "ds:DescribeSnapshots",
                            "ds:GetDirectoryLimits",
                            "ds:GetSnapshotLimits",
                            "ds:ListAuthorizedApplications",
                            "dynamodb:DescribeLimits",
                            "dynamodb:DescribeTable",
                            "dynamodb:ListTables",
                            "ec2:Describe*",
                            "ec2:DescribeHosts",
                            "ec2:describeIdentityIdFormat",
                            "ec2:DescribeIdFormat",
                            "ec2:DescribeInstanceAttribute",
                            "ec2:DescribeNatGateways",
                            "ec2:DescribeReservedInstancesModifications",
                            "ec2:DescribeTags",
                            "ecr:GetRepositoryPolicy",
                            "ecr:BatchCheckLayerAvailability",
                            "ecr:DescribeRepositories",
                            "ecr:ListImages",
                            "ecs:Describe*",
                            "ecs:List*",
                            "elasticache:Describe*",
                            "elasticache:List*",
                            "elasticbeanstalk:Check*",
                            "elasticbeanstalk:Describe*",
                            "elasticbeanstalk:List*",
                            "elasticbeanstalk:RequestEnvironmentInfo",
                            "elasticbeanstalk:RetrieveEnvironmentInfo",
                            "elasticbeanstalk:ValidateConfigurationSettings",
                            "elasticfilesystem:Describe*",
                            "elasticloadbalancing:Describe*",
                            "elasticmapreduce:Describe*",
                            "elasticmapreduce:List*",
                            "elastictranscoder:List*",
                            "elastictranscoder:ReadJob",
                            "elasticfilesystem:DescribeFileSystems",
                            "es:Describe*",
                            "es:List*",
                            "es:ESHttpGet",
                            "es:ESHttpHead",
                            "events:DescribeRule",
                            "events:List*",
                            "events:TestEventPattern",
                            "firehose:Describe*",
                            "firehose:List*",
                            "gamelift:List*",
                            "gamelift:Describe*",
                            "glacier:ListVaults",
                            "glacier:DescribeVault",
                            "glacier:DescribeJob",
                            "glacier:Get*",
                            "glacier:List*",
                            "iam:GenerateCredentialReport",
                            "iam:GenerateServiceLastAccessedDetails",
                            "iam:Get*",
                            "iam:List*",
                            "importexport:GetStatus",
                            "importexport:ListJobs",
                            "inspector:Describe*",
                            "inspector:List*",
                            "iot:Describe*",
                            "iot:Get*",
                            "iot:List*",
                            "kinesisanalytics:DescribeApplication",
                            "kinesisanalytics:DiscoverInputSchema",
                            "kinesisanalytics:GetApplicationState",
                            "kinesisanalytics:ListApplications",
                            "kinesis:Describe*",
                            "kinesis:Get*",
                            "kinesis:List*",
                            "kms:Describe*",
                            "kms:Get*",
                            "kms:List*",
                            "lambda:List*",
                            "lambda:Get*",
                            "logs:Describe*",
                            "logs:TestMetricFilter",
                            "machinelearning:Describe*",
                            "machinelearning:Get*",
                            "mobilehub:GetProject",
                            "mobilehub:List*",
                            "mobilehub:ValidateProject",
                            "mobilehub:VerifyServiceRole",
                            "opsworks:Describe*",
                            "rds:Describe*",
                            "rds:ListTagsForResource",
                            "redshift:Describe*",
                            "route53:Get*",
                            "route53:List*",
                            "route53domains:CheckDomainAvailability",
                            "route53domains:GetDomainDetail",
                            "route53domains:GetOperationDetail",
                            "route53domains:List*",
                            "s3:List*",
                            "sdb:GetAttributes",
                            "sdb:List*",
                            "sdb:Select*",
                            "servicecatalog:SearchProducts",
                            "servicecatalog:DescribeProduct",
                            "servicecatalog:DescribeProductView",
                            "servicecatalog:ListLaunchPaths",
                            "servicecatalog:DescribeProvisioningParameters",
                            "servicecatalog:ListRecordHistory",
                            "servicecatalog:DescribeRecord",
                            "servicecatalog:ScanProvisionedProducts",
                            "ses:Get*",
                            "ses:List*",
                            "sns:Get*",
                            "sns:List*",
                            "sqs:GetQueueAttributes",
                            "sqs:GetQueueUrl",
                            "sqs:ListQueues",
                            "sqs:ReceiveMessage",
                            "ssm:List*",
                            "ssm:Describe*",
                            "storagegateway:Describe*",
                            "storagegateway:List*",
                            "swf:Count*",
                            "swf:Describe*",
                            "swf:Get*",
                            "swf:List*",
                            "waf:Get*",
                            "waf:List*",
                            "workspaces:Describe*",
                            "workdocs:Describe*",
                            "workmail:Describe*",
                            "workmail:Get*",
                            "workspaces:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAI3V4GSSN5SJY3P2RO",
            "PolicyName": "SupportUser",
            "VersionId": "v4"
        },
        "SystemAdministrator": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm:Describe*",
                            "acm:Get*",
                            "acm:List*",
                            "acm:Request*",
                            "acm:Resend*",
                            "autoscaling:*",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:ListPublicKeys",
                            "cloudtrail:ListTags",
                            "cloudtrail:LookupEvents",
                            "cloudtrail:StartLogging",
                            "cloudtrail:StopLogging",
                            "cloudwatch:*",
                            "codecommit:BatchGetRepositories",
                            "codecommit:CreateBranch",
                            "codecommit:CreateRepository",
                            "codecommit:Get*",
                            "codecommit:GitPull",
                            "codecommit:GitPush",
                            "codecommit:List*",
                            "codecommit:Put*",
                            "codecommit:Test*",
                            "codecommit:Update*",
                            "codedeploy:*",
                            "codepipeline:*",
                            "config:*",
                            "ds:*",
                            "ec2:Allocate*",
                            "ec2:AssignPrivateIpAddresses*",
                            "ec2:Associate*",
                            "ec2:Allocate*",
                            "ec2:AttachInternetGateway",
                            "ec2:AttachNetworkInterface",
                            "ec2:AttachVpnGateway",
                            "ec2:Bundle*",
                            "ec2:Cancel*",
                            "ec2:Copy*",
                            "ec2:CreateCustomerGateway",
                            "ec2:CreateDhcpOptions",
                            "ec2:CreateFlowLogs",
                            "ec2:CreateImage",
                            "ec2:CreateInstanceExportTask",
                            "ec2:CreateInternetGateway",
                            "ec2:CreateKeyPair",
                            "ec2:CreateLaunchTemplate",
                            "ec2:CreateLaunchTemplateVersion",
                            "ec2:CreateNatGateway",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreatePlacementGroup",
                            "ec2:CreateReservedInstancesListing",
                            "ec2:CreateRoute",
                            "ec2:CreateRouteTable",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSnapshot",
                            "ec2:CreateSpotDatafeedSubscription",
                            "ec2:CreateSubnet",
                            "ec2:CreateTags",
                            "ec2:CreateVolume",
                            "ec2:CreateVpc",
                            "ec2:CreateVpcEndpoint",
                            "ec2:CreateVpnConnection",
                            "ec2:CreateVpnConnectionRoute",
                            "ec2:CreateVpnGateway",
                            "ec2:DeleteFlowLogs",
                            "ec2:DeleteKeyPair",
                            "ec2:DeleteLaunchTemplate",
                            "ec2:DeleteLaunchTemplateVersions",
                            "ec2:DeleteNatGateway",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeletePlacementGroup",
                            "ec2:DeleteSnapshot",
                            "ec2:DeleteSpotDatafeedSubscription",
                            "ec2:DeleteSubnet",
                            "ec2:DeleteTags",
                            "ec2:DeleteVpc",
                            "ec2:DeleteVpcEndpoints",
                            "ec2:DeleteVpnConnection",
                            "ec2:DeleteVpnConnectionRoute",
                            "ec2:DeleteVpnGateway",
                            "ec2:DeregisterImage",
                            "ec2:Describe*",
                            "ec2:DetachInternetGateway",
                            "ec2:DetachNetworkInterface",
                            "ec2:DetachVpnGateway",
                            "ec2:DisableVgwRoutePropagation",
                            "ec2:DisableVpcClassicLinkDnsSupport",
                            "ec2:DisassociateAddress",
                            "ec2:DisassociateRouteTable",
                            "ec2:EnableVgwRoutePropagation",
                            "ec2:EnableVolumeIO",
                            "ec2:EnableVpcClassicLinkDnsSupport",
                            "ec2:GetConsoleOutput",
                            "ec2:GetHostReservationPurchasePreview",
                            "ec2:GetLaunchTemplateData",
                            "ec2:GetPasswordData",
                            "ec2:Import*",
                            "ec2:Modify*",
                            "ec2:MonitorInstances",
                            "ec2:MoveAddressToVpc",
                            "ec2:Purchase*",
                            "ec2:RegisterImage",
                            "ec2:Release*",
                            "ec2:Replace*",
                            "ec2:ReportInstanceStatus",
                            "ec2:Request*",
                            "ec2:Reset*",
                            "ec2:RestoreAddressToClassic",
                            "ec2:RunScheduledInstances",
                            "ec2:UnassignPrivateIpAddresses",
                            "ec2:UnmonitorInstances",
                            "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                            "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
                            "elasticloadbalancing:*",
                            "events:*",
                            "iam:GetAccount*",
                            "iam:GetContextKeys*",
                            "iam:GetCredentialReport",
                            "iam:ListAccountAliases",
                            "iam:ListGroups",
                            "iam:ListOpenIDConnectProviders",
                            "iam:ListPolicies",
                            "iam:ListPoliciesGrantingServiceAccess",
                            "iam:ListRoles",
                            "iam:ListSAMLProviders",
                            "iam:ListServerCertificates",
                            "iam:Simulate*",
                            "iam:UpdateServerCertificate",
                            "iam:UpdateSigningCertificate",
                            "kinesis:ListStreams",
                            "kinesis:PutRecord",
                            "kms:CreateAlias",
                            "kms:CreateKey",
                            "kms:DeleteAlias",
                            "kms:Describe*",
                            "kms:GenerateRandom",
                            "kms:Get*",
                            "kms:List*",
                            "kms:Encrypt",
                            "kms:ReEncrypt*",
                            "lambda:Create*",
                            "lambda:Delete*",
                            "lambda:Get*",
                            "lambda:InvokeFunction",
                            "lambda:List*",
                            "lambda:PublishVersion",
                            "lambda:Update*",
                            "logs:*",
                            "rds:Describe*",
                            "rds:ListTagsForResource",
                            "route53:*",
                            "route53domains:*",
                            "ses:*",
                            "sns:*",
                            "sqs:*",
                            "trustedadvisor:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:AcceptVpcPeeringConnection",
                            "ec2:AttachClassicLinkVpc",
                            "ec2:AttachVolume",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateVpcPeeringConnection",
                            "ec2:DeleteCustomerGateway",
                            "ec2:DeleteDhcpOptions",
                            "ec2:DeleteInternetGateway",
                            "ec2:DeleteNetworkAcl*",
                            "ec2:DeleteRoute",
                            "ec2:DeleteRouteTable",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DeleteVolume",
                            "ec2:DeleteVpcPeeringConnection",
                            "ec2:DetachClassicLinkVpc",
                            "ec2:DetachVolume",
                            "ec2:DisableVpcClassicLink",
                            "ec2:EnableVpcClassicLink",
                            "ec2:GetConsoleScreenshot",
                            "ec2:RebootInstances",
                            "ec2:RejectVpcPeeringConnection",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:RunInstances",
                            "ec2:StartInstances",
                            "ec2:StopInstances",
                            "ec2:TerminateInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "s3:*",
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetAccessKeyLastUsed",
                            "iam:GetGroup*",
                            "iam:GetInstanceProfile",
                            "iam:GetLoginProfile",
                            "iam:GetOpenIDConnectProvider",
                            "iam:GetPolicy*",
                            "iam:GetRole*",
                            "iam:GetSAMLProvider",
                            "iam:GetSSHPublicKey",
                            "iam:GetServerCertificate",
                            "iam:GetServiceLastAccessed*",
                            "iam:GetUser*",
                            "iam:ListAccessKeys",
                            "iam:ListAttached*",
                            "iam:ListEntitiesForPolicy",
                            "iam:ListGroupPolicies",
                            "iam:ListGroupsForUser",
                            "iam:ListInstanceProfiles*",
                            "iam:ListMFADevices",
                            "iam:ListPolicyVersions",
                            "iam:ListRolePolicies",
                            "iam:ListSSHPublicKeys",
                            "iam:ListSigningCertificates",
                            "iam:ListUserPolicies",
                            "iam:Upload*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "iam:ListRoles",
                            "iam:PassRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/rds-monitoring-role",
                            "arn:aws:iam::*:role/ec2-sysadmin-*",
                            "arn:aws:iam::*:role/ecr-sysadmin-*",
                            "arn:aws:iam::*:role/lambda-sysadmin-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAITJPEZXCYCBXANDSW",
            "PolicyName": "SystemAdministrator",
            "VersionId": "v6"
        },
        "TranslateFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "translate:*",
                            "comprehend:DetectDominantLanguage",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "s3:GetBucketLocation",
                            "iam:ListRoles",
                            "iam:GetRole"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIAPOAEI2VFQYUK5RY",
            "PolicyName": "TranslateFullAccess",
            "VersionId": "v2"
        },
        "TranslateReadOnly": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "translate:TranslateText",
                            "translate:GetTerminology",
                            "translate:ListTerminologies",
                            "translate:ListTextTranslationJobs",
                            "translate:DescribeTextTranslationJob",
                            "translate:GetParallelData",
                            "translate:ListParallelData",
                            "comprehend:DetectDominantLanguage",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJYAMZMTQNWUDJKY2E",
            "PolicyName": "TranslateReadOnly",
            "VersionId": "v6"
        },
        "VMImportExportRoleForAWSConnector": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "s3:ListBucket",
                            "s3:GetBucketLocation",
                            "s3:GetObject"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:s3:::import-to-ec2-*"
                        ]
                    },
                    {
                        "Action": [
                            "ec2:ModifySnapshotAttribute",
                            "ec2:CopySnapshot",
                            "ec2:RegisterImage",
                            "ec2:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJFLQOOJ6F5XNX4LAW",
            "PolicyName": "VMImportExportRoleForAWSConnector",
            "VersionId": "v1"
        },
        "ViewOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "acm:ListCertificates",
                            "athena:List*",
                            "aws-marketplace:ViewSubscriptions",
                            "autoscaling:Describe*",
                            "batch:ListJobs",
                            "clouddirectory:ListAppliedSchemaArns",
                            "clouddirectory:ListDevelopmentSchemaArns",
                            "clouddirectory:ListDirectories",
                            "clouddirectory:ListPublishedSchemaArns",
                            "cloudformation:List*",
                            "cloudformation:DescribeStacks",
                            "cloudfront:List*",
                            "cloudhsm:ListAvailableZones",
                            "cloudhsm:ListLunaClients",
                            "cloudhsm:ListHapgs",
                            "cloudhsm:ListHsms",
                            "cloudsearch:List*",
                            "cloudsearch:DescribeDomains",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:LookupEvents",
                            "cloudwatch:List*",
                            "cloudwatch:Get*",
                            "codebuild:ListBuilds*",
                            "codebuild:ListProjects",
                            "codecommit:List*",
                            "codedeploy:List*",
                            "codedeploy:Get*",
                            "codepipeline:ListPipelines",
                            "codestar:List*",
                            "codestar:Verify*",
                            "cognito-idp:List*",
                            "cognito-identity:ListIdentities",
                            "cognito-identity:ListIdentityPools",
                            "cognito-sync:ListDatasets",
                            "connect:List*",
                            "config:List*",
                            "config:Describe*",
                            "datapipeline:ListPipelines",
                            "datapipeline:DescribePipelines",
                            "datapipeline:GetAccountLimits",
                            "dax:DescribeClusters",
                            "dax:DescribeDefaultParameters",
                            "dax:DescribeEvents",
                            "dax:DescribeParameterGroups",
                            "dax:DescribeParameters",
                            "dax:DescribeSubnetGroups",
                            "dax:ListTags",
                            "devicefarm:List*",
                            "directconnect:Describe*",
                            "discovery:List*",
                            "dms:List*",
                            "ds:DescribeDirectories",
                            "dynamodb:DescribeBackup",
                            "dynamodb:DescribeContinuousBackups",
                            "dynamodb:DescribeGlobalTable",
                            "dynamodb:DescribeGlobalTableSettings",
                            "dynamodb:DescribeLimits",
                            "dynamodb:DescribeReservedCapacity",
                            "dynamodb:DescribeReservedCapacityOfferings",
                            "dynamodb:DescribeStream",
                            "dynamodb:DescribeTable",
                            "dynamodb:DescribeTimeToLive",
                            "dynamodb:ListBackups",
                            "dynamodb:ListGlobalTables",
                            "dynamodb:ListStreams",
                            "dynamodb:ListTables",
                            "dynamodb:ListTagsOfResource",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeBundleTasks",
                            "ec2:DescribeClassicLinkInstances",
                            "ec2:DescribeConversionTasks",
                            "ec2:DescribeCustomerGateways",
                            "ec2:DescribeDhcpOptions",
                            "ec2:DescribeExportTasks",
                            "ec2:DescribeFlowLogs",
                            "ec2:DescribeHost*",
                            "ec2:DescribeIdentityIdFormat",
                            "ec2:DescribeIdFormat",
                            "ec2:DescribeImage*",
                            "ec2:DescribeImport*",
                            "ec2:DescribeInstance*",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeMovingAddresses",
                            "ec2:DescribeNatGateways",
                            "ec2:DescribeNetwork*",
                            "ec2:DescribePlacementGroups",
                            "ec2:DescribePrefixLists",
                            "ec2:DescribeRegions",
                            "ec2:DescribeReserved*",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSnapshot*",
                            "ec2:DescribeSpot*",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeTags",
                            "ec2:DescribeVolume*",
                            "ec2:DescribeVpc*",
                            "ec2:DescribeVpnGateways",
                            "ecr:DescribeRepositories",
                            "ecr:ListImages",
                            "ecs:List*",
                            "ecs:Describe*",
                            "elasticache:Describe*",
                            "elasticbeanstalk:DescribeApplicationVersions",
                            "elasticbeanstalk:DescribeApplications",
                            "elasticbeanstalk:DescribeEnvironments",
                            "elasticbeanstalk:ListAvailableSolutionStacks",
                            "elasticloadbalancing:DescribeListeners",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeTargetGroups",
                            "elasticloadbalancing:DescribeTargetHealth",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticloadbalancing:DescribeInstanceHealth",
                            "elasticloadbalancing:DescribeTargetHealth",
                            "elasticmapreduce:List*",
                            "elastictranscoder:List*",
                            "es:DescribeElasticsearchDomain",
                            "es:DescribeElasticsearchDomains",
                            "es:ListDomainNames",
                            "events:ListRuleNamesByTarget",
                            "events:ListRules",
                            "events:ListTargetsByRule",
                            "firehose:List*",
                            "firehose:DescribeDeliveryStream",
                            "gamelift:List*",
                            "glacier:List*",
                            "greengrass:List*",
                            "iam:List*",
                            "iam:GetAccountSummary",
                            "iam:GetLoginProfile",
                            "importexport:ListJobs",
                            "inspector:List*",
                            "iot:List*",
                            "kinesis:ListStreams",
                            "kinesisanalytics:ListApplications",
                            "kms:ListKeys",
                            "lambda:List*",
                            "lex:GetBotAliases",
                            "lex:GetBotChannelAssociations",
                            "lex:GetBots",
                            "lex:GetBotVersions",
                            "lex:GetIntents",
                            "lex:GetIntentVersions",
                            "lex:GetSlotTypes",
                            "lex:GetSlotTypeVersions",
                            "lex:GetUtterancesView",
                            "lightsail:GetBlueprints",
                            "lightsail:GetBundles",
                            "lightsail:GetInstances",
                            "lightsail:GetInstanceSnapshots",
                            "lightsail:GetKeyPair",
                            "lightsail:GetRegions",
                            "lightsail:GetStaticIps",
                            "lightsail:IsVpcPeered",
                            "logs:Describe*",
                            "machinelearning:Describe*",
                            "mobilehub:ListAvailableFeatures",
                            "mobilehub:ListAvailableRegions",
                            "mobilehub:ListProjects",
                            "opsworks:Describe*",
                            "opsworks-cm:Describe*",
                            "organizations:List*",
                            "mobiletargeting:GetApplicationSettings",
                            "mobiletargeting:GetCampaigns",
                            "mobiletargeting:GetImportJobs",
                            "mobiletargeting:GetSegments",
                            "polly:Describe*",
                            "polly:List*",
                            "rds:Describe*",
                            "redshift:DescribeClusters",
                            "redshift:DescribeEvents",
                            "redshift:ViewQueriesInConsole",
                            "route53:List*",
                            "route53:Get*",
                            "route53domains:List*",
                            "route53resolver:Get*",
                            "route53resolver:List*",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "sagemaker:Describe*",
                            "sagemaker:List*",
                            "sdb:List*",
                            "servicecatalog:List*",
                            "ses:List*",
                            "shield:List*",
                            "states:ListActivities",
                            "states:ListStateMachines",
                            "sns:List*",
                            "sqs:ListQueues",
                            "ssm:ListAssociations",
                            "ssm:ListDocuments",
                            "storagegateway:ListGateways",
                            "storagegateway:ListLocalDisks",
                            "storagegateway:ListVolumeRecoveryPoints",
                            "storagegateway:ListVolumes",
                            "swf:List*",
                            "trustedadvisor:Describe*",
                            "waf:List*",
                            "waf-regional:List*",
                            "wafv2:List*",
                            "workdocs:DescribeAvailableDirectories",
                            "workdocs:DescribeInstances",
                            "workmail:Describe*",
                            "workspaces:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAID22R6XPJATWOFDK6",
            "PolicyName": "ViewOnlyAccess",
            "VersionId": "v10"
        },
        "WAFLoggingServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "firehose:PutRecord",
                            "firehose:PutRecordBatch"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:firehose:*:*:deliverystream/aws-waf-logs-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJZ7N545GUNUHNTYOM",
            "PolicyName": "WAFLoggingServiceRolePolicy",
            "VersionId": "v1"
        },
        "WAFRegionalLoggingServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "firehose:PutRecord",
                            "firehose:PutRecordBatch"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:firehose:*:*:deliverystream/aws-waf-logs-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJE43HAZMEH4CI6SU2",
            "PolicyName": "WAFRegionalLoggingServiceRolePolicy",
            "VersionId": "v1"
        },
        "WAFV2LoggingServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "firehose:PutRecord",
                            "firehose:PutRecordBatch"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:firehose:*:*:deliverystream/aws-waf-logs-*"
                        ]
                    },
                    {
                        "Action": "organizations:DescribeOrganization",
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAZKAPJZG4AHQ3ASNCX",
            "PolicyName": "WAFV2LoggingServiceRolePolicy",
            "VersionId": "v2"
        },
        "WellArchitectedConsoleFullAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "wellarchitected:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIH6HSBHM3VSYC5SKA",
            "PolicyName": "WellArchitectedConsoleFullAccess",
            "VersionId": "v1"
        },
        "WellArchitectedConsoleReadOnlyAccess": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "wellarchitected:Get*",
                            "wellarchitected:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAIUTK35NDTYF6T2GFY",
            "PolicyName": "WellArchitectedConsoleReadOnlyAccess",
            "VersionId": "v1"
        },
        "WorkLinkServiceRolePolicy": {
            "Document": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DeleteNetworkInterface"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "kinesis:PutRecord",
                            "kinesis:PutRecords"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:kinesis:*:*:stream/AmazonWorkLink-*"
                    }
                ],
                "Version": "2012-10-17"
            },
            "PolicyId": "ANPAJ6JTE3DI5JOULLNLS",
            "PolicyName": "WorkLinkServiceRolePolicy",
            "VersionId": "v1"
        }
    }
}